#!/bin/bash
1.分组匹配
sed -n 's/\(qian\)/\1 hello world /gp' data.data

'''1###########################################选项##################################'''
-e '把后面参数解析为sed的编辑命令，只有使用多个编辑命令时该参数才有用，当只有一个编辑命令时可以不用'





















'''2#######################################定位文本行##################################'''

$ '匹配文档的最后一行'
first~step 'first为开始的行，step为步长，从first开始，每隔step行匹配一次，如：1~2 ：匹配所有的奇数行
            3~5 :匹配第3 8 13 等行'
addr1,+N '匹配addr1和该行下面的N行,如3,+2 匹配3,4,5三行'
addr1,~N '从addr1行开始匹配，直到匹配的行号是N的倍数为止，如3,~2 匹配3,4因为4是2的倍数，所以从第3行开始匹配到
          第4行便终止'


'''3#######################################动作操作##################################'''
= '打印当前的行号'
a '在匹配行的后面添加新的内容，内容会添加到匹配行下面新的一行'

i '在匹配行的前面添加新的内容，内容会添加到匹配行前面新的一行'

q '立即退出sed脚本，不在执行任何输入'

r filename '在匹配行的下面添加文本内容，该文本内容从文件中读取'

R filename '在匹配的行下面添加新的行，所添加的新行内容从文件中依次读取'
c text '用新的文本内容替换指定的行'
d '删除匹配的行'
n '对匹配行的下一行进行动作操作，'/test/{ n; s/aa/bb/; }' 表示当匹配到test行的下一行中的aa用bb来替换;n 读取下
   一行到缓存空间'
{ } 'sed中大括号的使用，把多个指令放在大括号中称为指令快
    {
    command1
    command2
    command3
    }
    或者
    {command1
     command2
     command3
    }
    格式如上，左大括号可以与第一个指令在同一行，右大括号必须单独的在一行，否则会出错，一般在对当匹配到某个行需要
    进行多个指令操作时使用大括号'
s/regexp/replacement/ '替换是常用的操作，
                       s/old/new/ 默认会把每行的第一个匹配到的字符串old替换为new
		       s/old/new/n n为整数，指定替换为每行的第几个匹配到的字符串s/old/new/1 为仅替换第一个匹配到
		                   的字符串，s/old/new/3 为替换每行的第三个
        	       s/old/new/g 替换所有的
		       s/old/new/p 把替换后的行打印出来'


   



























