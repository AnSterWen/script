#!/bin/bash
'##############################awk工作原理#############################'
awk '$3 > 0 { print $1, $2 * $3 }' emp.data
'awk的程序在单引号''内，一定是单引号；程序结构为：模式-动作，模式用来匹配配输入的行，当模式匹配时便执行后面的动作，动作会在大括号{}内'








'#########################awk内置变量###################################'
ARGC '命令行参数的个数'
ARGV '命令行参数的数组，数组的索引从0 到 ARGC - 1 ，ARGV[0],ARGV[1],ARGV[ARGC-1]'
FILENAME '当前输入文件的名字'
FNR '当前正处理的行是当前文件的总共处理的行数'
NR '到当前为止输入行的总数，也即是当前的行号,当有多个输入文件时该值会累加'
NF '当前行的被分割的域的总数'
FS '行记录的字段分隔符，默认为空格,相当于在命令行中使用-F选项指定分隔符'
OFS '输出的域分隔符，默认是空格'
ORS '输出的记录分隔符，默认是换行符'
RS '输入的记录分隔符，默认是换行符'


'#########################格式化输出###################################'
print是打印输出；printf格式化输出










'#########################awk内置函数###################################'
split(s, a [, r [, seps] ]) '把字符串s根据r作为分隔符进行分割，并将分割后的结果保存到数组a中，数组的下标从1开始'


'#########################awk控制流###################################'
if (condition) statement [ else statement ] '条件condition要放在小括号()里，else分支可以省略'

while (condition) statement

for (expr1; expr2; expr3) statement

for (var in array) statement






'#########################awk内置函数###################################'
'#########################awk内置函数###################################'
'#########################awk内置函数###################################'






























