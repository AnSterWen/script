#!/usr/bin/expect

set names {
        online1 127.0.0.1
        online2 127.0.0.1
        online3 127.0.0.1
        online4 127.0.0.1
        db1 127.0.0.1
        db2 127.0.0.1
        db3 127.0.0.1
        db4 127.0.0.1
}

set onlines {
    127.0.0.1 {online1 online2 online3}
    127.0.0.1 {online4}
}
set dbs {
    127.0.0.1 {db1 db2 db3}
    127.0.0.1 {db4}
}


proc scp {user ip password file} {
    set timeout 10
    spawn scp -rp $file $user@$ip:~/lush 
    expect {
        "(yes/no)?" {send "yes\n";exp_continue}
        "*password" {send "$password\n"}
    }
    expect eof

}
proc cmd {user ip password command} {
    spawn ssh  $user@$ip "$command" 
    expect {
        "(yes/no)?" {send "yes\n";exp_continue}
        "*password" {send "$password\n"}
    }
    expect eof
}
dict for {key value} $onlines {
    puts "$key...$value"
    scp  root $key "123456" ActivityCentre.xml
    foreach ip $value {
        cmd root $key "123456" "ifconfig eth0" 
    }

}

#if {$file == conf} {
#    dict for {key value} $onlines {
#        scp  root $key "123456" conf
#        foreach ip $value {
#            cmd root $key "123456" "ls /tmp"
#        }
#}  

#dict for {key value} [dict filter $names key  online*] {
#    puts "$key...$value"
#    scp  root  $value "123456" ActivityCentre.xml
#}

#set name [lindex $argv 0]
#if {$name == "-h"} {
#     dict for {key value} $names {
#         puts "$key =====>> $value"
#     }
#     exit
#} elseif {[regexp {[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*} $name]} {
#    set ip $name
#} elseif {[dict exists $names $name]} {
#      set ip [dict get $names $name]
#} elseif {[dict size [dict filter $names key $name*]]} {
#     dict for {key value} [dict filter $names key $name*] {
#         puts "$key =====>> $value"
#     }
#         exit
#} else {
#    dict for {key value} $names {
#     puts "$key =====>> $value"
#    }
#    exit
#}
#login root  $ip "T)rL&,y!F#"
#set ip [lindex $argv 0]
#set file [lindex $argv 1]
#scp  root  $ip "123456" $file













