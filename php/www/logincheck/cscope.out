cscope 15 $HOME/platform/www/logincheck               0001582788
	@/usr/include/dbser/Cbig_cache.h

20 #i‚de‡ 
CBIG_CACHE_INC


21 
	#CBIG_CACHE_INC


	)

22 
	~<libèomì++/utûs/t˝ù.h
>

23 
	~<libèomì++/utûs/°rögs.hµ
>

24 
	~"¥Ÿo_hódî.h
"

26 
	#BIG_CACHE_VERSION
 0x01

	)

27 
	#BIG_CACHE_NO_CACHE_ERR
 3

	)

28 
	#BIG_CACHE_CLEAN_BY_TRANSACTION
 500

	)

29 
ölöe
 
	$gë_db_îr
(
îr
 ){

30 i‡–
îr
>0 &&Érr<100 ){

31 
	`DEBUG_LOG
("ˇchêªtu∫Éº:%d",
îr
 );

32  
DB_ERR
;

33 }  
îr
;

34 
	}
}

36 
	#PH_LEN
–
_buf
 ) (((
¥Ÿo_hód_t
*)_bu‡)->
Àn
)

	)

37 
	#PH_RET
–
_buf
 ) (((
¥Ÿo_hód_t
*)_bu‡)->
îr
 )

	)

38 
	#PH_ROW
–
_buf
 ) (((
¥Ÿo_hód_t
*)_bu‡)->
row
)

	)

39 
	s¥Ÿo_hód_t
 {

40 
uöt32_t
 
	mÀn
;

41 
uöt16_t
 
	mvî
;

42 
uöt16_t
 
	mcmd
;

43 
uöt32_t
 
	mkey
;

44 
uöt32_t
 
	mîr
;

45 
uöt32_t
 
	mrow
;

46 }
__©åibuã__
((
∑cked
));

47 ˛as†
	cCbig_ˇche
:
public
 
Ct˝
{

48 
¥iv©e
 :

49 
buf
[1024*32+100];

50 
boﬁ
 
	mu£_ˇche
;

51 
	$execsql
–c⁄° 
uöt32_t
 
key
, c⁄° * 
sql
, ** 
µ_ªsu…_buf
 ){

52 
Àn
;

53 
¥Ÿo_hód_t
 *
ph
’rŸo_hód_t*Ë
buf
;

54 
sql_Àn
=
	`°æí
(
sql
);

55 
	`DEBUG_LOG
("sql:%s;",
sql
 );

57 
ph
->
Àn
=
sql_Àn
+(
¥Ÿo_hód_t
 );

58 i‡(
g_db_ˇche_°©e
.
å™ß˘i⁄_›í_Êag
){

59 
ph
->
cmd
=2;

61 
ph
->
cmd
=1;

63 
ph
->
key
=key;

64 
ph
->
vî
=
BIG_CACHE_VERSION
;

65 
ph
->
row
=0;

66 
ph
->
îr
=0;

69 
	`mem˝y
(
buf
+(
¥Ÿo_hód_t
 ),
sql
,
sql_Àn
+1 );

72 
ªt
=
this
->
	`do_√t_io
(
buf
,
ph
->
Àn
,
µ_ªsu…_buf
, &len);

73 i‡(
ªt
==
SUCC
){

75 
this
->
	`ªc⁄√˘
();

76 
	`DEBUG_LOG
("O ERROR %d",
ªt
 );

78  
ªt
;

81 
public
:

83 
	$Cbig_ˇche
(c⁄° * 
ho°_p‹t
 ):
	`Ct˝
(ho°_p‹t,(
uöt32_t
)5 ){

85 
this
->
u£_ˇche
=
åue
;

86 i‡(
ho°_p‹t
==
NULL
){

87 
this
->
u£_ˇche
=
Ál£
;

89 i‡(
ho°_p‹t
[0]=='\0'){

90 
this
->
u£_ˇche
=
Ál£
;

93 i‡(
this
->
u£_ˇche
){

94 
	`DEBUG_LOG
("Cbig_ˇche: USE_CACHE:%s",
ho°_p‹t
 );

96 
	`DEBUG_LOG
("Cbig_ˇche: NO USE CACHE,%s", 
ho°_p‹t
);

98 
	}
}

99 
ölöe
 
boﬁ
 
	$is_u£_ˇche
(){

100  
this
->
u£_ˇche
;

101 
	}
}

103 
	$exec_upd©e_sql
(c⁄° 
uöt32_t
 
key
, c⁄° * 
sql
,*
p_af„˘ed_rows
 ){

104 * 
p_ªsu…_buf
;

105 
ªt
=
this
->
	`execsql
(
key
, 
sql
, &
p_ªsu…_buf
);

106 i‡(
ªt
!=
SUCC
) Ñet;

109 i‡(!(
	`PH_LEN
(
p_ªsu…_buf
)==(
¥Ÿo_hód_t
) ||

111 
	`PH_LEN
(
p_ªsu…_buf
)==(
¥Ÿo_hód_t
)+4

113 
	`ERROR_LOG
("big cachêpkgÀ¿îr:sql[%s] %d,[%s]\n",
sql
, 
	`PH_LEN
(
p_ªsu…_buf
),

114 
	`bö2hex
(
NULL
,
p_ªsu…_buf
 ,
	`PH_LEN
(p_result_buf) ) );

115  
DB_ERR
;

118 i‡(
	`PH_RET
(
p_ªsu…_buf
)!=
SUCC
)  PH_RET(p_result_buf);

121 i‡(
g_db_ˇche_°©e
.
å™ß˘i⁄_›í_Êag
){

122  
BIG_CACHE_CLEAN_BY_TRANSACTION
;

125 *
p_af„˘ed_rows
=
	`PH_ROW
(
p_ªsu…_buf
);

126 
	`INFO_LOG
("C[%d][%s;]",*
p_af„˘ed_rows
 , 
sql
);

127  
SUCC
;

128 
	}
}

129 
	$exec_ö£π_sql_gë_auto_ö¸emít_id
(c⁄° 
uöt32_t
 
key
, c⁄° * 
sql
,*
p_af„˘ed_rows
, uöt32_à*
p_ö¸emít_id
 ){

130 * 
p_ªsu…_buf
;

131 
ªt
=
this
->
	`execsql
(
key
, 
sql
, &
p_ªsu…_buf
);

132 i‡(
ªt
!=
SUCC
) Ñet;

133  
	`PH_LEN
(
p_ªsu…_buf
) )

135 (
¥Ÿo_hód_t
) :

136 i‡(
g_db_ˇche_°©e
.
å™ß˘i⁄_›í_Êag
){

137  
BIG_CACHE_CLEAN_BY_TRANSACTION
;

139  
	`PH_RET
(
p_ªsu…_buf
);

141 (
¥Ÿo_hód_t
)+4 :

142 *
p_af„˘ed_rows
=
	`PH_ROW
(
p_ªsu…_buf
);

143 *
p_ö¸emít_id
=*(
uöt32_t
*)(
p_ªsu…_buf
+(
¥Ÿo_hód_t
));

144 
	`INFO_LOG
("C[%d][%s;]",*
p_af„˘ed_rows
 , 
sql
);

145  
SUCC
;

148 
	`ERROR_LOG
("big cacheÖkglenÉrr: %d\n",

149 
	`PH_LEN
(
p_ªsu…_buf
) );

150  
DB_ERR
;

154 
	}
}

155 
ölöe
 
	$exec_quîy_sql
 ( c⁄° 
uöt32_t
 
key
, c⁄° * 
sql
, ** 
µ_ª¶ut
 )

157  
this
->
	`execsql
(
key
, 
sql
, 
µ_ª¶ut
);

158 
	}
}

	@/usr/include/dbser/Ccmdmap_private_checklen.h

23 #i‚de‡ 
CCMDMAP_CHECKLEN_INC


24 
	#CCMDMAP_CHECKLEN_INC


	)

26 
	~<°döt.h
>

27 
	~<time.h
>

33 
	echeck_Àn_ty≥
 {
	mMUST_EQ
=0 ,
	mMUST_GE
=1 };

34 
	s°ru_exec_cmd_limô
{

35 
uöt32_t
 
	m°¨t_time
;

36 
uöt32_t
 
	mcur_cou¡
;

37 
uöt32_t
 
	mlimô_max_cou¡_≥r_mö
;

38 
ölöe
 
boﬁ
 
add_cou¡
(){

39 i‡(
	mlimô_max_cou¡_≥r_mö
==0 )  
åue
;

40 
uöt32_t
 
	mt
=
time
(
NULL
);

41 i‡(
	mt
>
	m°¨t_time
+60 ){

42 
	m°¨t_time
=
t
;

43 
	mcur_cou¡
=0;

45 
	mcur_cou¡
++;

46 i‡(
	mcur_cou¡
<=
limô_max_cou¡_≥r_mö
){

47  
åue
;

49  
	mÁl£
;

54 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

55 
	s¥i_°ru_check_Àn
 {

57 
check_Àn_ty≥
 
	mcheck_ty≥
;

59 
uöt32_t
 
	m¥edeföe_Àn
;

61 
_Tp
 
	mp_dól_fun
;

63 
°ru_exec_cmd_limô
 
	mexec_cmd_limô
;

65 
ölöe
 
boﬁ
 
check_¥Ÿo_size
–
uöt32_t
 
Àn
 ){

66 i‡(
	mcheck_ty≥
==
MUST_EQ
 ) {

67 if(
Àn
==
¥edeföe_Àn
 )  
åue
;

68  
	mÁl£
;

69 } i‡(
	mcheck_ty≥
==
MUST_GE
 ) {

70 if(
Àn
>=
¥edeföe_Àn
Ë 
åue
;

71  
	mÁl£
;

73  
	mÁl£
;

	@/usr/include/dbser/Ccmdmaplist.h

19 #i‚de‡ 
CCMDMAPLIST_INC


20 
	#CCMDMAPLIST_INC


	)

21 
	~<ve˘‹
>

22 
	~<io°ªam
>

23 
	~<Æg‹ôhm
>

24 
	~<°rög.h
>

26 
	~<libèomì/log.h
>

29 
usög
 
«me•a˚
 
°d
;

34 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

35 ˛as†
	cCcmdm≠
 {

36 
	mpublic
:

37 
_Tp
 
	tT_PRI_STRU
 ;

39 
uöt16_t
 
	mcmd_id
;

41 
_Tp
 
	m¥i_°ru
;

42 
ölöe
 
	$£t
(
Ccmdm≠
 & 
am≠
 ) {

43 
	`mem˝y
–
this
, &
am≠
,–
Ccmdm≠
 ) );

45 
ölöe
 
	$£t_cmdid
(
uöt16_t
 
cmdid
 ) {

46 
this
->
cmd_id
=
cmdid
;

47 
	}
}

49 
ölöe
 
uöt16_t
 
	$gë_cmd_id
(){

50  
this
->
cmd_id
;

51 
	}
}

52 
ölöe
 
_Tp
* 
	$gë_¥i_°ru
(){

53  &(
this
->
¥i_°ru
 );

54 
	}
}

55 
ölöe
 
boﬁ
 
	g›î©‹
 ==(c⁄° 
Ccmdm≠
 & 
Ÿhî
 ) {

56 i‡(
this
->
cmd_id
==
Ÿhî
.cmd_id )

57  
åue
;

58  
	gÁl£
;

60 
ölöe
 
boﬁ
 
	g›î©‹
 <(c⁄° 
	gCcmdm≠
 & 
	gŸhî
 ) const {

61 i‡(
	gcmd_id
 < 
	gŸhî
.cmd_id )

62  
	gåue
;

63  
	gÁl£
;

65 
ölöe
 
boﬁ
 
	g›î©‹
 >(c⁄° 
	gCcmdm≠
 & 
	gŸhî
 ) const {

66 i‡(
	gthis
->
	gcmd_id
 > 
	gŸhî
.cmd_id )

67  
	gåue
;

68  
	gÁl£
;

78 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

79 ˛as†
	cCcmdm≠li°
 {

80 
	mpublic
:

81 
_Tp
 
	tT_ITEM
 ;

82 
	mve˘‹
< 
	mT_ITEM
 > 
	mv_cmdm≠
 ;

83 
	m¥iv©e
:

84 
public
:

85 
ty≥«me
 
	tve˘‹
<
	tT_ITEM
 >::
	tôî©‹
 iterator;

86 
	$Ccmdm≠li°
()

88 
this
->
v_cmdm≠
.
	`ª£rve
(65536);

89 
	`mem£t
(&(
this
->
v_cmdm≠
[0]),0, (this->v_cmdmap[0])*65536 );

92 
ölöe
 
ty≥«me
 
T_ITEM
::
T_PRI_STRU
 * 
	$gëôem
(
uöt16_t
 
cmdid
){

93 i‡(
this
->
v_cmdm≠
[
cmdid
].
cmd_id
!=0 ){

94  
this
->
v_cmdm≠
[
cmdid
].
	`gë_¥i_°ru
();

96  
NULL
;

98 
	}
}

100 
ölöe
 
	$show_ôem
(){

101 
ty≥«me
 
Ccmdm≠li°
::
ôî©‹
 
ô
;

102 
i
=0;i<65536;i++){

103 
	`DEBUG_LOG
("[%d][%04X]",
i
,
this
->
v_cmdm≠
[i].
cmd_id
 );

105 
	}
}

	@/usr/include/dbser/Cfunc_route_base.h

19 #i‚de‡ 
CFUNC_ROUTE_BASE_INC


20 
	#CFUNC_ROUTE_BASE_INC


	)

21 
	~"mysql_iÁ˚.h
"

22 
	~"Csync_u£r_d©a.h
"

23 
	~"Cfunc_rouã_cmd.h
"

31 ˛as†
	cCfunc_rouã_ba£
:
public
 
Cfunc_rouã_cmd


33 
¥Ÿe˘ed
:

34 
boﬁ
 
sync_u£r_d©a_Êag
;

35 
	mªt
;

37 
mysql_öãrÁ˚
 *
	mdb
;

39 
Csync_u£r_d©a
 
	msync_u£r_d©a
;

40 
	mpublic
:

41 
ölöe
 
	$Cfunc_rouã_ba£
(
mysql_öãrÁ˚
 * 
db
 ):

42 
	`db
(
db
), 
	`sync_u£r_d©a
(db,

43 
	`c⁄fig_gë_°rvÆ
("SYNC_USER_DATA_DB_OLD_IP"),

44 
	`c⁄fig_gë_ötvÆ
("SYNC_USER_DATA_DB_OLD_PORT",0) )

46 
this
->
db
=db;

47 
this
->
sync_u£r_d©a_Êag
=
	`c⁄fig_gë_ötvÆ
("SYNC_USER_DATA_FLAG",0);

51 
ölöe
 
vútuÆ
 
	$dól
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

53 
PRI_STRU
 * 
p_¥i_°ru
;

54 
uöt16_t
 
cmdid
=((
PROTO_HEADER
*)
ªcvbuf
)->
cmd_id
;

55 
u£rid_t
 
u£rid
=((
PROTO_HEADER
*)
ªcvbuf
)->
id
;

56 if((
p_¥i_°ru
 =
this
->
cmdm≠li°
.
	`gëôem
(
cmdid
))!=
NULL
){

57 
	`KDEBUG_LOG
(
u£rid
, "I:%04X", 
cmdid
 );

59 i‡(! 
p_¥i_°ru
->
exec_cmd_limô
.
	`add_cou¡
() ){

60 
	`KDEBUG_LOG
(
u£rid
,"cmd maxÉrr:cmdid %u, max_count:%u ",

61 
cmdid
,
p_¥i_°ru
->
exec_cmd_limô
.
limô_max_cou¡_≥r_mö
);

63  
CMD_EXEC_MAX_PER_MINUTE_ERR
;

68 i‡(! 
p_¥i_°ru
->
	`check_¥Ÿo_size
(
rcvÀn
 - 
PROTO_HEADER_SIZE
) ){

69 
	`KDEBUG_LOG
(
u£rid
,"lenÉrrÖre [%u] send [%d]",

70 
	`uöt32_t
 (
p_¥i_°ru
->
¥edeföe_Àn
+
PROTO_HEADER_SIZE
 ),
rcvÀn
 );

71  
PROTO_LEN_ERR
;

75 i‡(
this
->
sync_u£r_d©a_Êag
 ){

76 
ªt
=
this
->
	`do_sync_d©a
(
u£rid
,
cmdid
);

77 i‡(
ªt
!=
SUCC
) Ñet;

80 
this
->
ªt
=9999;

82 
this
->
ªt
=(((
Crouã_func
*Èhis)->*(
p_¥i_°ru
->
p_dól_fun
))(
ªcvbuf
, 
£ndbuf
, 
¢dÀn
 );

84 i‡(
	`mysql_commô
(&(
this
->
db
->
h™dÀ
))!=
DB_SUCC
){

85 
this
->
db
->
	`show_îr‹_log
("db:COMMIT:err");

88  
this
->
ªt
;

90 
	`KDEBUG_LOG
(
u£rid
,"DB CMDÇÿdeföê cmdid[%04X]",
cmdid
 );

91  
CMDID_NODEFINE_ERR
;

93 
	}
}

95 
vútuÆ
 
	$do_sync_d©a
(
uöt32_t
 
u£rid
, 
uöt16_t
 
cmdid
Ë{  
SUCC
; 
	}
}

96 
	gvútuÆ
 ~
	$Cfunc_rouã_ba£
 (){ 
	}
}

	@/usr/include/dbser/Cfunc_route_cmd.h

19 #i‚de‡ 
CFUNC_ROUTE_cmd_INC


20 
	#CFUNC_ROUTE_cmd_INC


	)

21 
	~"Ccmdm≠li°.h
"

22 
	~<as£π.h
>

23 
	~"Ccmdm≠_¥iv©e_checkÀn.h
"

24 
	~"¥Ÿo_hódî.h
"

25 
	~"db_îr‹_ba£.h
"

28 
	#DEAL_FUN_ARG
 *
ªcvbuf
, **
£ndbuf
, *
¢dÀn


	)

29 
˛ass
 
	gCrouã_func
;

31 (
	gCrouã_func
::*
	tP_DEALFUN_T
)(
	tDEAL_FUN_ARG
 );

32 
	g¥i_°ru_check_Àn
<
	tP_DEALFUN_T
 > 
	tPRI_STRU
 ;

33 
	gCcmdm≠
 < 
	tPRI_STRU
 > 
	tCMD_MAP
 ;

36 
	#FILL_CMD_WITH_PRI_IN_EX
–
ty≥
 , 
cmd_max_limô
 ) \

37 { 
ty≥
##
_cmd
,{
MUST_EQ
,–ty≥##
_ö
),&
Crouã_func
::ty≥,{0,0,
cmd_max_limô
 } }}

	)

39 
	#FILL_CMD_WITHOUT_PRI_IN_EX
–
ty≥
, 
cmd_max_limô
 ) \

40 { 
ty≥
##
_cmd
,{
MUST_EQ
,0,&
Crouã_func
::ty≥,{0,0,
cmd_max_limô
 } }}

	)

42 
	#FILL_CMD_WITH_PRI_IN_GE_EX
–
ty≥
,
cmd_max_limô
 ) \

43 { 
ty≥
##
_cmd
,{
MUST_GE
 ,–ty≥##
_ö_hódî
), &
Crouã_func
::ty≥,{0,0,
cmd_max_limô
 } }}

	)

46 
	#FILL_CMD_WITH_PRI_IN
–
ty≥
 ) 
	`FILL_CMD_WITH_PRI_IN_EX
—y≥, 0)

	)

48 
	#FILL_CMD_WITHOUT_PRI_IN
–
ty≥
 ) 
	`FILL_CMD_WITHOUT_PRI_IN_EX
 (ty≥,0)

	)

50 
	#FILL_CMD_WITH_PRI_IN_GE
–
ty≥
 ) 
	`FILL_CMD_WITH_PRI_IN_GE_EX
—y≥,0)

	)

53 
	#SET_SNDBUF
(
¥iv©e_Àn
) \

54 i‡(!(
	`£t_°d_ªtu∫
 (
£ndbuf
,
¢dÀn
, (
PROTO_HEADER
*)
ªcvbuf
, 
SUCC
, (
¥iv©e_Àn
)))){ \

55 
	`DEBUG_LOG
("£t_°d_ªtu∫:¥iv©êsizêî∏[%d]",(
¥iv©e_Àn
));\

56  
SYS_ERR
;\

57 }

	)

60 
	#STD_RETURN
(
ªt
) {\

61 i‡(
ªt
==
SUCC
){ \

62 
	`SET_SNDBUF
(0);\

64  
ªt
;\

65 }

	)

68 
	#CHECK_PRI_IN_LEN_WITHOUT_HEADER
(
¥i_Àn
) {\

69 i‡–
PRI_IN_LEN
 !((*
p_ö
)+(
¥i_Àn
)) ){\

70 
	`DEBUG_LOG
("check sizêî∏[%u][%u]", 
	`uöt32_t
 (
PRI_IN_LEN
) ,\

71 
	`uöt32_t
 ((*
p_ö
)+(
¥i_Àn
)) );\

72  
PROTO_LEN_ERR
; \

74 }

	)

77 
	#CHECK_PRI_IN_LEN_WITHOUT_HEADER_EX
(
¥i_Àn
, 
max_Àn
){\

78 i‡–
PRI_IN_LEN
>((*
p_ö
)+
max_Àn
Ë|| PRI_IN_LEN !((*p_ö)+(
¥i_Àn
)) ){\

79 
	`DEBUG_LOG
("check sizêî∏ in[%u]Çìd [%u] max [%d] ", 
	`uöt32_t
 (
PRI_IN_LEN
) ,\

80 
	`uöt32_t
 (((*
p_ö
)+(
¥i_Àn
))Ë, 
max_Àn
 );\

81  
PROTO_LEN_ERR
; \

83 }

	)

87 
	#STD_RETURN_WITH_BUF
(
ªt
,
_buf
,
_cou¡
 ) { \

88 i‡(
ªt
==
SUCC
){ \

89 
	`SET_SNDBUF
–(
_cou¡
) ); \

90 
	`mem˝y
(
SNDBUF_PRIVATE_POS
, (*)(
_buf
Ë, (
_cou¡
) ); \

92  
ªt
; \

93 }

	)

95 
	#STD_RETURN_WITH_TWO_BUF
(
ªt
,
_buf1
,
_buf1_Àn
,
_buf2
,
_buf2_Àn
) { \

96 i‡(
ªt
==
SUCC
){ \

97 
	`SET_SNDBUF
–(
_buf1_Àn
)+(
_buf2_Àn
) ); \

98 
	`mem˝y
(
SNDBUF_PRIVATE_POS
, (*)(
_buf1
Ë, (
_buf1_Àn
) ); \

99 
	`mem˝y
(
SNDBUF_PRIVATE_POS
+
_buf1_Àn
, (*)(
_buf2
Ë, (
_buf2_Àn
) ); \

101  
ªt
; \

102 }

	)

106 
	#STD_RETURN_WITH_STRUCT_AND_BUF
(
ªt
,
°ru
,
_buf
,
_buf_Àn
 ) 
	`STD_RETURN_WITH_TWO_BUF
 (ªt,((*)&°ru), (°ru),_buf,_buf_À¿)

	)

111 
	#STD_RETURN_WITH_STRUCT
(
ªt
,
°ru
 ) 
	`STD_RETURN_WITH_BUF
 (ªt,((*)&°ru), (°ruË)

	)

116 #i‚de‡
DB_GET_LIST_NO_MALLOC


123 
	#STD_RETURN_WITH_STRUCT_LIST
(
ªt
,
°ru_hódî
,
p°ru_ôem
 ,
ôemcou¡
) \

124 i‡(
ªt
==
DB_SUCC
){ \

125 
uöt32_t
 
°ru_hódî_size
=(
°ru_hódî
 );\

126 
uöt32_t
 
out_li°_size
(*
p°ru_ôem
 ) * (
ôemcou¡
);\

127 
	`SET_SNDBUF
(
°ru_hódî_size
 + 
out_li°_size
);\

128 
	`mem˝y
(
SNDBUF_PRIVATE_POS
,&
°ru_hódî
,
°ru_hódî_size
);\

129 
	`mem˝y
(
SNDBUF_PRIVATE_POS
+
°ru_hódî_size
,
p°ru_ôem
, 
out_li°_size
 );\

130 
	`‰ì
(
p°ru_ôem
);\

131  
SUCC
;\

133  
ªt
;\

134 }

	)

139 
	#STD_RETURN_WITH_STRUCT_LIST
(
ªt
,
°ru_hódî
,
p°ru_ôem
 ,
ôemcou¡
) \

140 i‡(
ªt
==
DB_SUCC
){ \

141 
uöt32_t
 
°ru_hódî_size
=(
°ru_hódî
 );\

142 
uöt32_t
 
out_li°_size
(*
p°ru_ôem
 ) * (
ôemcou¡
);\

143 
	`SET_SNDBUF
(
°ru_hódî_size
 + 
out_li°_size
);\

144 
	`mem˝y
(
SNDBUF_PRIVATE_POS
,&
°ru_hódî
,
°ru_hódî_size
);\

145 
	`mem˝y
(
SNDBUF_PRIVATE_POS
+
°ru_hódî_size
,
p°ru_ôem
, 
out_li°_size
 );\

146  
SUCC
;\

148  
ªt
;\

149 }

	)

161 ˛as†
	cCfunc_rouã_cmd


163 
	m¥Ÿe˘ed
:

164 
ªt
;

166 
	mCcmdm≠li°
<
	mCMD_MAP
> 
	mcmdm≠li°
;

171 
ölöe
 
	$öôli°
(
CMD_MAP
 * 
dól_fun
, 
cou¡
 ){

172 
i
=0;i<
cou¡
;i++ ){

173 
	`as£π
–
this
->
cmdm≠li°
.
v_cmdm≠
[ (*(
dól_fun
+
i
)).
cmd_id
].cmd_id==0 );

174 
this
->
cmdm≠li°
.
v_cmdm≠
[ (*(
dól_fun
+
i
)).
cmd_id
]=*(deal_fun+i);

177 
public
:

178 
ölöe
 
	$Cfunc_rouã_cmd
() {

179 
	}
}

181 
ölöe
 
boﬁ
 
	$£t_cmd_max_limô_≥r_möuã
(
uöt16_t
 
cmdid
 ,
uöt32_t
 
max_limô
 )

183 
PRI_STRU
 * 
p_¥i_°ru
;

184 if((
p_¥i_°ru
 =
this
->
cmdm≠li°
.
	`gëôem
(
cmdid
))!=
NULL
){

185 
p_¥i_°ru
->
exec_cmd_limô
.
limô_max_cou¡_≥r_mö
=
max_limô
;

186  
åue
;

188  
Ál£
;

190 
	}
}

192 
vútuÆ
 
	$dól
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

194 
PRI_STRU
 * 
p_¥i_°ru
;

195 
uöt16_t
 
cmdid
=((
PROTO_HEADER
*)
ªcvbuf
)->
cmd_id
;

196 
u£rid_t
 
u£rid
=((
PROTO_HEADER
*)
ªcvbuf
)->
id
;

197 if((
p_¥i_°ru
 =
this
->
cmdm≠li°
.
	`gëôem
(
cmdid
))!=
NULL
){

198 
	`KDEBUG_LOG
(
u£rid
,"I:%04X:%d", 
cmdid
, userid );

200 i‡(! 
p_¥i_°ru
->
exec_cmd_limô
.
	`add_cou¡
() ){

201 
	`KDEBUG_LOG
(
u£rid
,"cmd maxÉrr:cmdid %u, max_count:%u ",

202 
cmdid
,
p_¥i_°ru
->
exec_cmd_limô
.
limô_max_cou¡_≥r_mö
);

204  
CMD_EXEC_MAX_PER_MINUTE_ERR
;

208 i‡(! 
p_¥i_°ru
->
	`check_¥Ÿo_size
(
rcvÀn
 - 
PROTO_HEADER_SIZE
) ){

209 
	`KDEBUG_LOG
(
u£rid
,"lenÉrrÖre [%u] send [%d]",

210 
	`uöt32_t
 (
p_¥i_°ru
->
¥edeföe_Àn
+
PROTO_HEADER_SIZE
Ë,
rcvÀn
 );

211  
PROTO_LEN_ERR
;

214 
this
->
ªt
=9999;

216 
this
->
ªt
=(((
Crouã_func
*Èhis)->*(
p_¥i_°ru
->
p_dól_fun
))(
ªcvbuf
, 
£ndbuf
, 
¢dÀn
 );

217  
this
->
ªt
;

219 
	`KDEBUG_LOG
(
u£rid
,"cmdÇÿdeföê cmdid[%04X]",
cmdid
 );

220  
CMDID_NODEFINE_ERR
;

222 
	}
}

223 
	gvútuÆ
 ~
	$Cfunc_rouã_cmd
 (){ 
	}
}

	@/usr/include/dbser/Cfunc_route_cmd_v2.h

19 #i‚de‡ 
CFUNC_ROUTE_cmd_v2_INC


20 
	#CFUNC_ROUTE_cmd_v2_INC


	)

22 
	~<as£π.h
>

24 
	~<libèomì/log.h
>

26 
	~"¥Ÿo_hódî.h
"

27 
	~"libèomì++/¥Ÿo/¥Ÿo_ba£.h
"

28 
	~"db_îr‹_ba£.h
"

29 
	~<libèomì++/utûs/°rögs.hµ
>

30 
	~<£t
>

31 
	#BIND_PROTO_CMD
(
cmdid
,
cmd_«me
,
°ru˘_ö
,
°ru˘_out
,
md5_èg
,
böd_bôm≠
 ) \

32 {
cmdid
, 
√w
 
	`°ru˘_ö
(),√w 
	`°ru˘_out
 (), 
md5_èg
,&
Crouã_func
::
cmd_«me
 },

	)

33 
	#P_OUT
 
dy«mic_ˇ°
<
ty≥of
 
p_out
>(
c_out
);

	)

34 
	#P_IN
 
dy«mic_ˇ°
<
ty≥of
 
p_ö
>(
c_ö
);

	)

35 
	#DEAL_FUNC_ARG
 
u£rid_t
 
u£rid
, 
Cmesßge
 * 
c_ö
, Cmesßgê* 
c_out


	)

39 
˛ass
 
	gCrouã_func
;

41 (
	gCrouã_func
::*
	tP_DEALFUN_T
)(
	tDEAL_FUNC_ARG
);

42 
	s°ru_cmd_ôem
{

43 
uöt16_t
 
	mcmdid
;

44 
Cmesßge
 * 
	mmsg_ö
;

45 
Cmesßge
 * 
	mmsg_out
;

46 
uöt32_t
 
	mmd5_èg
;

47 
P_DEALFUN_T
 
	mp_dól_func
;

48 } 
	t°ru_cmd_ôem_t
;

50 ˛as†
	ccﬁÀ˘_cmd_ôem_t
{

51 
	mpublic
:

52 
uöt16_t
 
cmdid
;

53 
öt32_t
 
	mªsu…
;

54 
Cmesßge
 * 
	mmsg
;

57 ˛as†
	ccﬁÀ˘_¥Ÿo_t
{

58 
	mpublic
:

59 
uöt32_t
 
cﬁÀ˘_£q
;

60 
öt32_t
 
	mªsu…
;

61 
uöt16_t
 
	mîr_cmdid
;

62 
	m°d
::
ve˘‹
 <
cﬁÀ˘_cmd_ôem_t
> 
cﬁÀ˘_cmd_li°
;

65 ˛as†
	ccﬁÀ˘_¥Ÿo_hódî_t
{

66 
	mpublic
:

67 
uöt32_t
 
cﬁÀ˘_£q
;

68 
öt32_t
 
	mªsu…
;

69 
uöt16_t
 
	mîr_cmdid
;

70 } 
__©åibuã__
((
∑cked
)) ;

84 ˛as†
	cCfunc_rouã_cmd_v2


86 
	m¥iv©e
:

87 
°ru_cmd_ôem_t
 *
p_cmd_li°
;

88 
	m¥Ÿe˘ed
:

89 
boﬁ
 
is_check_¥Ÿo_md5
;

90 
boﬁ
 
	mis_log_hex_pkg
 ;

91 
	mªt
;

92 
byã_¨øy_t
 
	mba_ö
;

93 
byã_¨øy_t
 
	mba_out
;

94 
cﬁÀ˘_¥Ÿo_t
 
	mcﬁÀ˘_¥Ÿo
;

97 
	m°d
::
£t
<
uöt16_t
> 
cﬁÀ˘_cmd_£t
;

104 
ölöe
 
	$£t_cmd_li°
(
°ru_cmd_ôem_t
 * 
p_li°
, 
cou¡
 ){

105 
i
=0;i<
cou¡
;i++ ){

106 
uöt16_t
 
cmdid
=
p_li°
[
i
].cmdid;

107 
	`as£π
–
this
->
p_cmd_li°
[
cmdid
].cmdid==0 );

108 
this
->
p_cmd_li°
[
cmdid
]=
p_li°
[
i
];

112 
ölöe
 
°ru_cmd_ôem_t
 * 
	$gë_cmd_ôem
(
uöt16_t
 
cmdid
){

113 i‡(
this
->
p_cmd_li°
[
cmdid
].cmdid!=0 )  & (this->p_cmd_list[cmdid]);

114  
NULL
;

115 
	}
}

116 
ölöe
 
	$add_cﬁÀ˘_cmd
(
uöt16_t
 
cmdid
){

117 
this
->
cﬁÀ˘_cmd_£t
.
	`ö£π
(
cmdid
);

118 
	}
}

120 
	gpublic
:

121 
ölöe
 
	$Cfunc_rouã_cmd_v2
() {

123 
uöt32_t
 
mÆloc_size
=(
°ru_cmd_ôem_t
 )*64*1024;

124 
this
->
is_check_¥Ÿo_md5
=
Ál£
;

125 
this
->
is_log_hex_pkg
=
Ál£
;

126 
this
->
p_cmd_li°
=(
°ru_cmd_ôem_t
* ) 
	`mÆloc
 (
mÆloc_size
 );

127 
	`mem£t
(
this
->
p_cmd_li°
,0, 
mÆloc_size
);

128 
	}
}

130 
ölöe
 
	$£t_is_check_¥Ÿo_md5
(
boﬁ
 
vÆue
 ) {

131 
this
->
is_check_¥Ÿo_md5
=
vÆue
;

132 
	}
}

134 
ölöe
 
	$£t_is_log_hex_pkg
(
boﬁ
 
vÆue
 ) {

135 
this
->
is_log_hex_pkg
=
vÆue
;

136 
	}
}

138 
	$do_cﬁÀ˘_cmd_li°
 (*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

146 
uöt16_t
 
cmdid
=((
PROTO_HEADER
*)
ªcvbuf
)->
cmd_id
;

147 
u£rid_t
 
u£rid
=((
PROTO_HEADER
*)
ªcvbuf
)->
id
;

149 
byã_¨øy_t
 
ba
;

152 
this
->
ba_ö
.
	`öô_ªad_mode
(
RCVBUF_PRIVATE_POS
,

153 
RECVLEN_FROM_RECVBUF
-
PROTO_HEADER_SIZE
 );

155 if–! 
this
->
ba_ö
.
	`ªad_uöt32
—his->
cﬁÀ˘_¥Ÿo
.
cﬁÀ˘_£q
 ) )  
PROTO_LEN_ERR
;

156 if–! 
this
->
ba_ö
.
	`ªad_öt32
—his->
cﬁÀ˘_¥Ÿo
.
ªsu…
ËË 
PROTO_LEN_ERR
;

157 if–! 
this
->
ba_ö
.
	`ªad_uöt16
—his->
cﬁÀ˘_¥Ÿo
.
îr_cmdid
ËË 
PROTO_LEN_ERR
;

159 
uöt32_t
 
cmd_cou¡
;

161 
°ru_cmd_ôem_t
 * 
p_cmd_ôem
;

162 
cﬁÀ˘_cmd_ôem_t
 
ôem
;

163 if–! 
this
->
ba_ö
.
	`ªad_uöt32
(
cmd_cou¡
ËË 
PROTO_LEN_ERR
;

165 
this
->
ba_out
.
	`öô_po°i⁄
();

166 if–! 
this
->
ba_out
.
	`wrôe_uöt32
—his->
cﬁÀ˘_¥Ÿo
.
cﬁÀ˘_£q
 ) )  
SYS_ERR
;

167 if–! 
this
->
ba_out
.
	`wrôe_öt32
(0ËË 
SYS_ERR
;

168 if–! 
this
->
ba_out
.
	`wrôe_uöt16
(0ËË 
SYS_ERR
;

169 if–! 
this
->
ba_out
.
	`wrôe_uöt32
(
cmd_cou¡
ËË 
SYS_ERR
;

171 
uöt32_t
 
i
=0 ; i<
cmd_cou¡
 ; i++ ){

172 if–! 
this
->
ba_ö
.
	`ªad_uöt16
(
ôem
.
cmdid
ËË 
PROTO_LEN_ERR
;

173 if–! 
this
->
ba_ö
.
	`ªad_öt32
(
ôem
.
ªsu…
ËË 
PROTO_LEN_ERR
;

175 if((
p_cmd_ôem
 =
this
->
	`gë_cmd_ôem
(
ôem
.
cmdid
 ))!=
NULL
){

176 
	`KDEBUG_LOG
 ( 
u£rid
 ,"I:%04X", 
ôem
.
cmdid
 );

177 i‡(
this
->
is_check_¥Ÿo_md5
 ){

179 
uöt32_t
 
md5_vÆue
=((
PROTO_HEADER
*)
ªcvbuf
)->
ªsu…
;

180 i‡(
md5_vÆue
!=0 ){

181 i‡(
p_cmd_ôem
->
md5_èg
!=
md5_vÆue
){

182 
	`KDEBUG_LOG
(
u£rid
,"CMD_MD5_TAG_ERR:DB:%u,client:%u",

183 
p_cmd_ôem
->
md5_èg
 ,
md5_vÆue
);

184  
CMD_MD5_TAG_ERR
;

191 
this
->
ba_ö
.
	`öô_ªad_mode
(
RCVBUF_PRIVATE_POS
,

192 
RECVLEN_FROM_RECVBUF
-
PROTO_HEADER_SIZE
 );

194 
p_cmd_ôem
->
msg_ö
->
	`öô
();

195 
p_cmd_ôem
->
msg_out
->
	`öô
();

197 i‡(!
p_cmd_ôem
->
msg_ö
->
	`ªad_‰om_buf
–
this
->
ba_ö
)) {

198 
	`KDEBUG_LOG
(
u£rid
,"ËøòÂéüÂØπË±°Â§±Ë¥•");

199  
PROTO_LEN_ERR
;

203 
this
->
ªt
Òhis->
	`dól_func
(
cmdid
,
u£rid
,

204 
p_cmd_ôem
->
msg_ö
,p_cmd_ôem->
msg_out
 ,

205 
p_cmd_ôem
->
p_dól_func
,
Ál£
 );

207 i‡(
this
->
ªt
==
SUCC
){

209 i‡(!
this
->
ba_out
.
	`wrôe_uöt16
(
ôem
.
cmdid
)Ë 
SYS_ERR
;

210 i‡(!
this
->
ba_out
.
	`wrôe_öt32
(0)Ë 
SYS_ERR
;

212 i‡(!
p_cmd_ôem
->
msg_out
->
	`wrôe_to_buf
(
this
->
ba_out
)) {

213 
	`KDEBUG_LOG
(
u£rid
,"p_cmd_item->msg_out->write_to_buf :SYS_ERR" );

214  
SYS_ERR
;

218 
this
->
	`do_rﬁlback
();

219 
cﬁÀ˘_¥Ÿo_hódî_t
 
˝h
;

220 
˝h
.
cﬁÀ˘_£q
=
this
->
cﬁÀ˘_¥Ÿo
.collect_seq;

221 
˝h
.
îr_cmdid
=
ôem
.
cmdid
;

222 
˝h
.
ªsu…
=
this
->
ªt
;

224 i‡(!(
	`£t_°d_ªtu∫
 (
£ndbuf
,
¢dÀn
,

225 (
PROTO_HEADER
*)
ªcvbuf
, 
SUCC
,

226 (
˝h
)+ 
PROTO_HEADER_SIZE
 ))){

227  
SYS_ERR
;

229 
	`mem˝y
(
SNDBUF_PRIVATE_POS
, (*)(&
˝h
) , ((cph) ) );

230  
SUCC
;

233 
	`KDEBUG_LOG
(
u£rid
,"cmdÇÿdeföê cmdid[%04X]",
cmdid
 );

234  
CMDID_NODEFINE_ERR
;

240 i‡(!
this
->
ba_ö
.
	`is_íd
()) {

241 
	`KDEBUG_LOG
(
u£rid
,"client ËøáÂ§öÊä•Êñá");

242  
PROTO_LEN_ERR
;

246 i‡(!
	`£t_°d_ªtu∫
–
£ndbuf
, 
¢dÀn
,(
PROTO_HEADER
*)
ªcvbuf
 ,

247 
SUCC
,
this
->
ba_out
.
	`gë_po°i⁄
() ))

249 
	`KDEBUG_LOG
(
u£rid
,"set_std_return:SYS_ERR: %u",

250 
this
->
ba_out
.
	`gë_po°i⁄
() );

251  
SYS_ERR
;

253 
	`mem˝y
(
SNDBUF_PRIVATE_POS
,
this
->
ba_out
.
	`gë_buf
(),

254 
this
->
ba_out
.
	`gë_po°i⁄
() );

255  
SUCC
;

258 
	}
}

260 
vútuÆ
 
	$dól_func
(
uöt16_t
 
cmdid
, 
u£rid_t
 
u£rid
, 
Cmesßge
 * 
c_ö
, Cmesßgê* 
c_out
 ,
P_DEALFUN_T
 
p_func
 ,
boﬁ
 
is_commô
 )

263 
this
->
ªt
=9999;

264  (((
Crouã_func
*)
this
)->*(
p_func
))(

265 
u£rid
,
c_ö
 ,
c_out
);

266 
	}
}

267 
vútuÆ
 
	$do_rﬁlback
( )

270 
	}
}

274 
	$dól
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

276 
uöt16_t
 
cmdid
=((
PROTO_HEADER
*)
ªcvbuf
)->
cmd_id
;

277 
uöt32_t
 
u£rid
=((
PROTO_HEADER
*)
ªcvbuf
)->
id
;

278 i‡(!
this
->
is_log_hex_pkg
){

279 
	`KDEBUG_LOG
 ( 
u£rid
 ,"I:%04X", 
cmdid
 );

281 
outbuf
[13000];

282 
	`bö2hex
(
outbuf
,(*)
ªcvbuf
,
rcvÀn
,500);

283 
	`KDEBUG_LOG
 ( 
u£rid
 ,"I:%04X:[%s]", 
cmdid
,
outbuf
 );

286 if(
this
->
cﬁÀ˘_cmd_£t
.
	`föd
(
cmdid
)!Òhis->cﬁÀ˘_cmd_£t.
	`íd
()){

288  
	`do_cﬁÀ˘_cmd_li°
(
ªcvbuf
, 
rcvÀn
, 
£ndbuf
, 
¢dÀn
 );

291 
ªt
=
	`dól_⁄e_cmd
(
ªcvbuf
, 
rcvÀn
, 
£ndbuf
, 
¢dÀn
 );

292 i‡(
ªt
==
SUCC
 && 
this
->
is_log_hex_pkg
){

293 
outbuf
[13000];

294 
	`bö2hex
(
outbuf
,(*)*
£ndbuf
,*
¢dÀn
 ,500);

295 
	`KDEBUG_LOG
 ( 
u£rid
 ,"O:%04X:[%s]", 
cmdid
,
outbuf
 );

297 
	`KDEBUG_LOG
 ( 
u£rid
 ,"O:%04X:%d", 
cmdid
,
ªt
 );

299  
ªt
;

304 
	}
}

307 
	$dól_⁄e_cmd
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

309 
°ru_cmd_ôem_t
 * 
p_cmd_ôem
;

310 
uöt16_t
 
cmdid
=((
PROTO_HEADER
*)
ªcvbuf
)->
cmd_id
;

311 
u£rid_t
 
u£rid
=((
PROTO_HEADER
*)
ªcvbuf
)->
id
;

313 if((
p_cmd_ôem
 =
this
->
	`gë_cmd_ôem
(
cmdid
))!=
NULL
){

314 i‡(
this
->
is_check_¥Ÿo_md5
) {

316 
uöt32_t
 
md5_vÆue
=((
PROTO_HEADER
*)
ªcvbuf
)->
ªsu…
;

317 i‡(
md5_vÆue
!=0 ){

318 i‡(
p_cmd_ôem
->
md5_èg
!=
md5_vÆue
){

319 
	`KDEBUG_LOG
(
u£rid
,"CMD_MD5_TAG_ERR:DB:%u,client:%u",

320 
p_cmd_ôem
->
md5_èg
 ,
md5_vÆue
);

321  
CMD_MD5_TAG_ERR
;

328 
this
->
ba_ö
.
	`öô_ªad_mode
(
RCVBUF_PRIVATE_POS
,

329 
RECVLEN_FROM_RECVBUF
-
PROTO_HEADER_SIZE
 );

331 
p_cmd_ôem
->
msg_ö
->
	`öô
();

332 
p_cmd_ôem
->
msg_out
->
	`öô
();

334 i‡(!
p_cmd_ôem
->
msg_ö
->
	`ªad_‰om_buf
–
this
->
ba_ö
)) {

335 
	`KDEBUG_LOG
(
u£rid
,"ËøòÂéüÂØπË±°Â§±Ë¥•");

336  
PROTO_LEN_ERR
;

339 i‡(!
this
->
ba_ö
.
	`is_íd
()) {

340 
	`KDEBUG_LOG
(
u£rid
,"client ËøáÂ§öÊä•Êñá");

341  
PROTO_LEN_ERR
;

346 
this
->
ªt
Òhis->
	`dól_func
(
cmdid
,
u£rid
,

347 
p_cmd_ôem
->
msg_ö
,p_cmd_ôem->
msg_out
 ,

348 
p_cmd_ôem
->
p_dól_func
, 
åue
);

350 i‡(
this
->
ªt
==
SUCC
){

351 
this
->
ba_out
.
	`öô_po°i⁄
();

352 i‡(!
p_cmd_ôem
->
msg_out
->
	`wrôe_to_buf
(
this
->
ba_out
)) {

353 
	`KDEBUG_LOG
(
u£rid
,"p_cmd_item->msg_out->write_to_buf :SYS_ERR" );

354  
SYS_ERR
;

357 i‡(!
	`£t_°d_ªtu∫
–
£ndbuf
, 
¢dÀn
,(
PROTO_HEADER
*)
ªcvbuf
 ,

358 
SUCC
,
this
->
ba_out
.
	`gë_po°i⁄
() ))

360 
	`KDEBUG_LOG
(
u£rid
,"set_std_return:SYS_ERR: %u",

361 
this
->
ba_out
.
	`gë_po°i⁄
() );

362  
SYS_ERR
;

364 
	`mem˝y
(
SNDBUF_PRIVATE_POS
,
this
->
ba_out
.
	`gë_buf
(),

365 
this
->
ba_out
.
	`gë_po°i⁄
() );

366  
SUCC
;

368  
ªt
;

371 
	`KDEBUG_LOG
(
u£rid
,"cmdÇÿdeföê cmdid[%04X]",
cmdid
 );

372  
CMDID_NODEFINE_ERR
;

374 
	}
}

375 
	gvútuÆ
 ~
	$Cfunc_rouã_cmd_v2
 (){ 
	}
}

	@/usr/include/dbser/Cfunc_route_db_v2.h

19 #i‚de‡ 
CFUNC_ROUTE_DB_V2_INC


20 
	#CFUNC_ROUTE_DB_V2_INC


	)

21 
	~"mysql_iÁ˚.h
"

22 
	~"Csync_u£r_d©a.h
"

23 
	~"Cfunc_rouã_cmd_v2.h
"

24 
	~<m≠
>

25 
	~<libèomì++/utûs/t˝ù.h
>

32 
	s°ru_db_«me
 {

33 
	mdb_«me
[128];

35 
	s°ru_cmd_db_«me
 {

36 
uöt16_t
 
	mcmdid
;

37 
°ru_db_«me
 
	mdb
;

40 ˛as†
	cCfunc_rouã_db_v2
:
public
 
Cfunc_rouã_cmd_v2


42 
¥Ÿe˘ed
:

43 
boﬁ
 
sync_u£r_d©a_Êag
;

44 
	mªt
;

47 
boﬁ
 
	mis_ã°_ív
;

49 
boﬁ
 
	mis_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
;

51 
mysql_öãrÁ˚
 *
	mdb
;

53 
Csync_u£r_d©a
 
	msync_u£r_d©a
;

55 
	m°d
::
m≠
<
uöt32_t
, 
	m°ru_db_«me
 > 
	mcmd_db_m≠
;

56 
	mpublic
:

57 
ölöe
 
	$Cfunc_rouã_db_v2
(
mysql_öãrÁ˚
 * 
db
 ):

58 
	`db
(
db
), 
	`sync_u£r_d©a
(db,

59 
	`c⁄fig_gë_°rvÆ
("SYNC_USER_DATA_DB_OLD_IP"),

60 
	`c⁄fig_gë_ötvÆ
("SYNC_USER_DATA_DB_OLD_PORT",0) )

62 
this
->
db
=db;

63 
this
->
sync_u£r_d©a_Êag
=
	`c⁄fig_gë_ötvÆ
("SYNC_USER_DATA_FLAG",0);

64 c⁄° *
ù

	`gë_ù_ex
(0x01);

65 i‡–
	`°∫cmp
–
ù
,"10.",3 )==0 ) {

66 
this
->
is_ã°_ív
=
åue
;

67 
	`DEBUG_LOG
("EVN: TEST ");

69 
this
->
is_ã°_ív
=
Ál£
;

70 
	`DEBUG_LOG
("EVN: PRODUCTION ");

72 
this
->
db
->
	`£t_is_ã°_ív
—his->
is_ã°_ív
 );

77 
ölöe
 
	$öô_cmd_db_m≠
(
°ru_cmd_db_«me
 *
p_°ru_cmd_db
,
uöt32_t
 
size
 ){

78 
uöt32_t
 
i
=0;i<
size
;i++ ){

79 
this
->
cmd_db_m≠
.
	`ö£π
(
°d
::
∑ú
<
uöt32_t
, 
°ru_db_«me
 > (

80 
	`GET_ROUTE
–(
p_°ru_cmd_db
+
i
)->
cmdid
) ,

81 (
p_°ru_cmd_db
+
i
)->
db


84 
	}
}

87 
vútuÆ
 
	$dól_func
(
uöt16_t
 
cmdid
, 
u£rid_t
 
u£rid
, 
Cmesßge
 * 
c_ö
, Cmesßgê* 
c_out
 ,
P_DEALFUN_T
 
p_func
 ,
boﬁ
 
is_commô
 )

90 
uöt32_t
 
rouã_db_id
=
	`GET_ROUTE
(
cmdid
);

92 
°d
::
m≠
<
uöt32_t
, 
°ru_db_«me
>::
ôî©‹
 
cmd_db_ô
;

93 
cmd_db_ô
=
this
->
cmd_db_m≠
.
	`föd
(
rouã_db_id
);

95 i‡–
this
->
is_ã°_ív
 ){

96 if–
cmd_db_ô
!=
this
->
cmd_db_m≠
.
	`íd
()) {

97 
this
->
db
->
	`£t_£À˘_db_°r_fix
(
cmd_db_ô
->
£c⁄d
.
db_«me
 );

99 i‡(
this
->
cmd_db_m≠
.
	`em±y
() ){

100 
this
->
db
->
	`£t_£À˘_db_°r_fix
("");

102 
	`DEBUG_LOG
(" NO FIND :db_«mê:cmdid=%04X,Çìdádd g_cmd_db_li° ",(
uöt32_t
 )
cmdid
 );

103  
NO_DEFINE_ERR
;

109 i‡(
this
->
sync_u£r_d©a_Êag
 ){

110 
ªt
=
this
->
	`do_sync_d©a
(
u£rid
,
cmdid
);

111 i‡(
ªt
!=
SUCC
) Ñet;

116 
this
->
db
->
	`£t_œ°_mysql_î∫o
(0);

117 
this
->
ªt
=9999;

118 
this
->
ªt
=(((
Crouã_func
*Èhis)->*(
p_func
))(

119 
u£rid
,
c_ö
 ,
c_out
);

121 i‡(
this
->
is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr


122 && 
this
->
ªt
==
DB_ERR


123 && (
this
->
db
->
	`gë_œ°_mysql_î∫o
()==2003 ||this->db->get_last_mysql_errno()==2006 )

125 
this
->
ªt
=501;

128 i‡(
this
->
is_ã°_ív
 && !this->
db
->
	`gë_is_£À˘_db_succ
() ){

130 
	`DEBUG_LOG
("ERROR: use fail dbÇame");

131  
NO_DEFINE_ERR
;

134 i‡(
is_commô
){

136 i‡(
	`mysql_commô
(&(
this
->
db
->
h™dÀ
))!=
DB_SUCC
){

137 
this
->
db
->
	`show_îr‹_log
("db:COMMIT:err");

140  
this
->
ªt
;

141 
	}
}

143 
vútuÆ
 
	$do_rﬁlback
( )

145 i‡(
	`mysql_rﬁlback
(&(
this
->
db
->
h™dÀ
))!=
DB_SUCC
){

146 
this
->
db
->
	`show_îr‹_log
("db:ROLLBACK :err");

149 
	}
}

151 
ölöe
 
	$£t_is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
(
boﬁ
 
vÆue
 ){

152 
this
->
is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
=
vÆue
;

153 
	}
}

157 
vútuÆ
 
	$do_sync_d©a
(
uöt32_t
 
u£rid
, 
uöt16_t
 
cmdid
Ë{  
SUCC
; 
	}
}

158 
	gvútuÆ
 ~
	$Cfunc_rouã_db_v2
 (){ 
	}
}

	@/usr/include/dbser/Citem_change_log.h

18 #i‚de‡ 
CITEM_CHANGE_LOG_INC


19 
	#CITEM_CHANGE_LOG_INC


	)

21 
	~"CèbÀRouã.h
"

24 
	eôem_ch™ge_log_›t_ty≥
 {

27 
	môem_ch™ge_log_›t_ty≥_dñ
 = 0 ,

29 
	môem_ch™ge_log_›t_ty≥_add
 = 1,

31 
	môem_ch™ge_log_›t_ty≥_vù_add
 = 2,

34 ˛as†
	cCôem_ch™ge_log
 : 
public
 
CèbÀRouã


37 
¥Ÿe˘ed
:

39 
ö£π
(
uöt32_t
 
logtime
, uöt32_à
›t_ty≥
,

40 
uöt32_t
 
£rvî_id
 ,

41 
uöt32_t
 
u£rid
, uöt32_à
rﬁe_id
,

42 
uöt32_t
 
ôemid
, uöt32_à
cou¡
 ) ;

44 
¸óã_èbÀ
–
uöt32_t
 
u£rid
,uöt32_à
logtime
);

45 
¸óã_èbÀ_ex
–
uöt32_t
 
u£rid
,uöt32_à
logtime
);

47 
ö£π
(
uöt32_t
 
logtime
, uöt32_à
›t_ty≥
, uöt32_à
u£rid
,

48 
uöt32_t
 
ôemid
, uöt32_à
cou¡
 ) ;

50 
	mpublic
:

51 
Côem_ch™ge_log
(
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db_«me
 ,

52 c⁄° * 
èbÀ_«me
="t_item_change_log" );

56 
add
(
uöt32_t
 
logtime
, 
boﬁ
 
is_vù_›t
, uöt32_à
u£rid
,

57 
uöt32_t
 
ôemid
, 
cou¡
 ) ;

59 
add
(
uöt32_t
 
logtime
, 
ôem_ch™ge_log_›t_ty≥
 
›t_ty≥
, uöt32_à
u£rid
,

60 
uöt32_t
 
ôemid
, uöt32_à
cou¡
 ) ;

65 
add
(
uöt32_t
 
logtime
, 
boﬁ
 
is_vù_›t
, uöt32_à
£rvî_id
 ,

66 
uöt32_t
 
u£rid
, uöt32_à
rﬁe_id
,

67 
uöt32_t
 
ôemid
, 
cou¡
 ) ;

69 * 
gë_èbÀ_«me
(
uöt32_t
 
u£rid
 ,uöt32_à
logtime
);

	@/usr/include/dbser/Croute_func_pb.h

19 #i‚de‡ 
CROUTE_FUNC_PB_INC


20 
	#CROUTE_FUNC_PB_INC


	)

21 
	~<¥Ÿo_hódî.h
>

23 
	~<as£π.h
>

25 
	~<libèomì/log.h
>

27 
	~<libèomì++/utûs/°rögs.hµ
>

28 
	~<°rög
>

29 
	~<m≠
>

30 
	~<googÀ/¥Ÿobuf/des¸ùt‹.h
>

31 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

32 
	~<¥Ÿo_ba£.pb.h
>

33 
usög
 
googÀ
::
¥Ÿobuf
::
Mesßge
;

34 
usög
 
«me•a˚
 
	g¥Ÿo_ba£
;

36 
	#BIND_ALL
–
¥Ÿo_«me
 )\

37 
	`BIND_PROTO_CMD
–
¥Ÿo_«me
,ÖrŸo_«me##
_ö
,¥Ÿo_«me##
_out
 )

	)

38 
	#BIND_ONLY_IN
–
¥Ÿo_«me
 )\

39 
	`BIND_PROTO_CMD
–
¥Ÿo_«me
,ÖrŸo_«me##
_ö
,
mesßge_nuŒ
)

	)

40 
	#BIND_ONLY_OUT
–
¥Ÿo_«me
 )\

41 
	`BIND_PROTO_CMD
–
¥Ÿo_«me
, 
mesßge_nuŒ
,¥Ÿo_«me##
_out
 )

	)

42 
	#BIND_NULL
–
¥Ÿo_«me
 )\

43 
	`BIND_PROTO_CMD
–
¥Ÿo_«me
, 
mesßge_nuŒ
,mesßge_nuŒ )

	)

46 
	#BIND_PROTO_CMD
(
cmd_«me
,
°ru˘_ö
,
°ru˘_out
 ) \

47 {#cmd_«me, 
√w
 
	`°ru˘_ö
(),√w 
	`°ru˘_out
 (), &
Crouã_func
::
cmd_«me
 },

	)

48 
	#P_OUT
 
dy«mic_ˇ°
<
ty≥of
 
p_out
>(
c_out
);

	)

49 
	#P_IN
 
dy«mic_ˇ°
<
ty≥of
 
p_ö
>(
c_ö
);

	)

50 
	#PB_DEAL_FUNC_ARG
 
u£rid_t
 
u£rid
, 
Mesßge
 * 
c_ö
, Mesßgê* 
c_out


	)

52 
˛ass
 
	gCrouã_func
;

54 (
	gCrouã_func
::*
	tP_PB_DEALFUN_T
)(
	tPB_DEAL_FUNC_ARG
);

56 
	s°ru_pb_cmd_ôem
{

57 
	mcmd_«me
[256];

58 
Mesßge
 * 
	mmsg_ö
;

59 
Mesßge
 * 
	mmsg_out
;

60 
P_PB_DEALFUN_T
 
	mp_dól_func
;

61 } 
	t°ru_pb_cmd_ôem_t
;

71 ˛as†
	cCrouã_func_pb


73 
	m¥iv©e
:

74 
°d
::
m≠
<°d::
°rög
,
	m°ru_pb_cmd_ôem
 > 
	mcmd_m≠
;

75 
	m¥Ÿe˘ed
:

76 
boﬁ
 
is_log_hex_pkg
 ;

77 
boﬁ
 
	mis_sögÀ_cmd
;

78 
	mªt
;

79 
comm_¥Ÿo_hódî
 
	m¥Ÿo_hódî
;

84 
ölöe
 
	$£t_cmd_li°
(
°ru_pb_cmd_ôem_t
 * 
p_li°
, 
cou¡
 ){

85 
i
=0;i<
cou¡
;i++ ){

86 *
cmd_«me
=
p_li°
[
i
].cmd_name;

88 
this
->
cmd_m≠
[
cmd_«me
]=
p_li°
[
i
];

92 
ölöe
 
°ru_pb_cmd_ôem_t
 * 
	`gë_cmd_ôem
(
°d
::
°rög
 
cmd_«me
 ){

93 
°d
::
m≠
<°d::
°rög
,
°ru_pb_cmd_ôem_t
> ::
ôî©‹
 
ô
;

94 
ô
=
this
->
cmd_m≠
.
	`föd
(
cmd_«me
);

95 if(
ô
!=
this
->
cmd_m≠
.
	`íd
()){

96  &(
ô
->
£c⁄d
);

98  
NULL
;

100 
	}
}

102 
	$li°_cuºít_cmd_ôem
() {

103 
°d
::
m≠
<°d::
°rög
,
°ru_pb_cmd_ôem_t
> ::
ôî©‹
 
ô
 = 
this
->
cmd_m≠
.
	`begö
();

104 
	`DEBUG_LOG
("list_current_cmd_item_start");

105 
ô
 !
this
->
cmd_m≠
.
	`íd
()) {

106 
	`DEBUG_LOG
("%s", 
ô
->
fú°
.
	`c_°r
());

107 ++
ô
;

109 
	`DEBUG_LOG
("list_current_cmd_item_end");

110 
	}
}

112 
	gpublic
:

113 
ölöe
 
	$Crouã_func_pb
() {

114 
this
->
is_log_hex_pkg
=
Ál£
;

115 
this
->
is_sögÀ_cmd
=
Ál£
;

116 
	`SëLogH™dÀr
(
Crouã_func_pb
::
pb_log_h™dÀr
);

117 
	}
}

119 
ölöe
 
	$£t_is_log_hex_pkg
(
boﬁ
 
vÆue
 ) {

120 
this
->
is_log_hex_pkg
=
vÆue
;

121 
	}
}

123 
ölöe
 
	$£t_is_sögÀ_cmd
(
boﬁ
 
vÆue
 ) {

124 
this
->
is_sögÀ_cmd
=
vÆue
;

125 
	}
}

128 
vútuÆ
 
	$dól_func
–
Mesßge
 * 
c_ö
, Mesßgê* 
c_out
 ,
P_PB_DEALFUN_T
 
p_func
 ,
boﬁ
 
is_commô
 )

131 
this
->
ªt
=9999;

132  (((
Crouã_func
*)
this
)->*(
p_func
))(

133 
this
->
¥Ÿo_hódî
.
	`u£rid
(Ë,
c_ö
 ,
c_out
);

134 
	}
}

136 
	$£t_£nd_buf
–
Mesßge
 *
msg_out
, ** 
£nd_buf
,*
¢dÀn
 ){

137 
°d
::
°rög
 
£nd°r
;

138 
öt32_t
 
hódÀn
 = 
	`ht⁄l
(4 + 
this
->
¥Ÿo_hódî
.
	`ByãSize
());

139 
öt32_t
 
tŸÆ_Àn
 = 4 + 4 + 
this
->
¥Ÿo_hódî
.
	`ByãSize
() ;

140 i‡(
msg_out
 ){

141 
tŸÆ_Àn
 +
msg_out
->
	`ByãSize
();

143 
tŸÆ_Àn
 =
	`ht⁄l
(total_len );

145 
£nd°r
.
	`˛ór
();

146 
£nd°r
.
	`≠≥nd
((*)(&
tŸÆ_Àn
), (total_len));

147 
£nd°r
.
	`≠≥nd
((*)(&
hódÀn
), (headlen));

148 
boﬁ
 
succ
 = 
this
->
¥Ÿo_hódî
.
	`AµídToSåög
(&
£nd°r
);

149 i‡(!
succ
) {

150 
	`DEBUG_LOG
("Error: failedÉncode msghead for cmd_name=%s",

151 
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
().
	`c_°r
());

153 i‡(
msg_out
 ){

154 
succ
 = 
msg_out
->
	`AµídToSåög
(&
£nd°r
);

155 i‡(!
succ
) {

156 
	`DEBUG_LOG
("Error: failedÉncode msg for cmd_name=%s",

157 
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
().
	`c_°r
());

161 *
¢dÀn
=
£nd°r
.
	`size
();

162 *
£nd_buf
=(*)
	`mÆloc
(*
¢dÀn
 );

163 
	`mem˝y
(*
£nd_buf
 ,
£nd°r
.
	`c_°r
(),*
¢dÀn
 );

165 
	}
}

167 
	$dól
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

170 
ªt
=
	`dól_⁄e_cmd
(
ªcvbuf
, 
rcvÀn
, 
£ndbuf
, 
¢dÀn
 );

172 
°d
::
°rög
 
£nd_°r
;

173 i‡(
ªt
==
SUCC
 ){

174 if(
this
->
is_log_hex_pkg
){

175 
outbuf
[13000];

176 
	`bö2hex
(
outbuf
,(*)*
£ndbuf
,*
¢dÀn
 ,1000);

177 
	`KDEBUG_LOG
 ( 
this
->
¥Ÿo_hódî
.
	`u£rid
() ,"O:%s:[%s]",

178 
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
().
	`c_°r
(),
outbuf
 );

181 if(
ªt
!=-1 ){

182 
this
->
¥Ÿo_hódî
.
	`£t_ªsu…
(
ªt
);

183 
	`KDEBUG_LOG
 ( 
this
->
¥Ÿo_hódî
.
	`u£rid
(Ë,"O:%s:%d",Åhis->¥Ÿo_hódî.
	`msg_ty≥_«me
().
	`c_°r
(Ë,
ªt
 );

185 
this
->
¥Ÿo_hódî
.
	`£t_msg_ty≥_«me
("proto headerÉrror");

186 
this
->
¥Ÿo_hódî
.
	`£t_ªsu…
(
PROTO_LEN_ERR
);

188 
	`£t_£nd_buf
(
NULL
, 
£ndbuf
,
¢dÀn
 );

191  
ªt
;

192 
	}
}

195 
	$dól_⁄e_cmd
(*
ªcvbuf
, 
rcvÀn
, **
£ndbuf
, *
¢dÀn
 )

199 
uöt32_t
 
ªcv_Àn
=
	`¡ohl
–*((uöt32_à*)
ªcvbuf
));

200 
uöt32_t
 
hódî_Àn
=
	`¡ohl
–*((uöt32_à*)(
ªcvbuf
+4))) ;

201 i‡–
hódî_Àn
+4 >
ªcv_Àn
 ) {

202 
	`DEBUG_LOG
("dó»hódîÜíÉº :PROTO_LEN_ERR: hódî_Àn(%u)+4 >ªcv_Àn(%uË", 
hódî_Àn
, 
ªcv_Àn
 );

206 
this
->
¥Ÿo_hódî
.
	`CÀ¨
();

208 i‡(!
this
->
¥Ÿo_hódî
.
	`P¨£FromAºay
(
ªcvbuf
+8 , 
hódî_Àn
-4)) {

209 
	`DEBUG_LOG
("dó»hódîÉº :PROTO_LEN_ERR:ÖrŸÿhódîÜí =%u",
hódî_Àn
-4 );

214 
uöt32_t
 
u£rid
=
this
->
¥Ÿo_hódî
.
	`u£rid
();

215 
°d
::
°rög
 
ty≥_«me
 = 
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
();

216 
size_t
 
pos1
 = 
ty≥_«me
.
	`rföd
(".");

217 
size_t
 
pos2
 = 
ty≥_«me
.
	`rföd
("_in");

219 
°d
::
°rög
 
cmd_«me_°r
 ;

220 c⁄° *
cmd_«me
 = 0;

222 i‡–! 
this
->
is_sögÀ_cmd
){

223 i‡(
pos1
 !
°d
::
°rög
::
≈os
) {

224 i‡(
pos2
 !
°d
::
°rög
::
≈os
) {

225 
cmd_«me_°r
 = 
ty≥_«me
.
	`sub°r
(
pos1
+1, 
pos2
-pos1-1);

227 
cmd_«me_°r
 = 
ty≥_«me
.
	`sub°r
(
pos1
+1);

229 
cmd_«me
=
cmd_«me_°r
.
	`c_°r
();

231 
this
->
¥Ÿo_hódî
.
	`£t_msg_ty≥_«me
(
ty≥_«me
.
	`sub°r
(0,ty≥_«me.
	`Àngth
()-3 )+"_out" );

232 
	`DEBUG_LOG
("RESET OUT NAME=%†cmd_«me=%s",
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
().
	`c_°r
(),
cmd_«me
 );

234 
cmd_«me
 = 
ty≥_«me
.
	`c_°r
();

239 
cmd_«me
 = 
ty≥_«me
.
	`c_°r
();

242 i‡(!
this
->
is_log_hex_pkg
){

243 
	`KDEBUG_LOG
 ( 
u£rid
 ,"pid=%d I:%s", 
	`gëpid
(), 
cmd_«me
);

245 
outbuf
[13000];

246 
	`bö2hex
(
outbuf
,(*)
ªcvbuf
,
rcvÀn
,1000);

247 
	`KDEBUG_LOG
 ( 
u£rid
,"pid=%d I:%s:[%s]",
	`gëpid
(), 
cmd_«me
,
outbuf
 );

249 
°ru_pb_cmd_ôem_t
 *
p_cmd_ôem
;

251 
p_cmd_ôem
 = 
this
->
	`gë_cmd_ôem
(
cmd_«me
);

252 i‡(
p_cmd_ôem
 =
NULL
) {

253 
	`KDEBUG_LOG
(
u£rid
,"cmdÇÿdeföê cmd[%s]", 
cmd_«me
 );

254  
CMDID_NODEFINE_ERR
;

257 
p_cmd_ôem
->
msg_ö
->
	`CÀ¨
();

258 
p_cmd_ôem
->
msg_out
->
	`CÀ¨
();

260 i‡(!
p_cmd_ôem
->
msg_ö
->
	`P¨£FromAºay
(
ªcvbuf
+
hódî_Àn
+4,
ªcv_Àn
-(header_len+4) )) {

261 
	`KDEBUG_LOG
–
u£rid
,"dó»%†¥i_ö objÉº,¥i_öÜí%u " ,
cmd_«me
,
ªcv_Àn
-(
hódî_Àn
+4) );

262  
PROTO_LEN_ERR
;

266 
this
->
ªt
Òhis->
	`dól_func
–
p_cmd_ôem
->
msg_ö
,p_cmd_ôem->
msg_out
 ,

267 
p_cmd_ôem
->
p_dól_func
, 
åue
);

270 i‡(
this
->
ªt
 !
SUCC
) {

271  
ªt
;

275 
this
->
¥Ÿo_hódî
.
	`£t_ªsu…
(
SUCC
);

276 
	`£t_£nd_buf
(
p_cmd_ôem
->
msg_out
, 
£ndbuf
, 
¢dÀn
);

277 
	`TRACE_LOG
("£ndbuf----> msg[%s]: msg_out: %s", 
this
->
¥Ÿo_hódî
.
	`msg_ty≥_«me
().
	`c_°r
(), 
p_cmd_ôem
->
msg_out
->
	`Utf8DebugSåög
().c_str());

278  
SUCC
;

279 
	}
}

280 
pb_log_h™dÀr
(
googÀ
::
¥Ÿobuf
::
LogLevñ
 
Àvñ
,

281 c⁄° *
fûíame
, 
löe
, c⁄° 
°d
::
°rög
 &
mesßge
)

283 c⁄° *
Àvñ_«mes
[] = { "INFO", "WARNING", "ERROR", "FATAL" };

284 
TRACE_TLOG
("[%s %s:%d] %s",

285 
Àvñ_«mes
[
Àvñ
], 
fûíame
, 
löe
, 
mesßge
.
c_°r
());

287 
	gvútuÆ
 ~
	$Crouã_func_pb
 (){ 
	}
}

	@/usr/include/dbser/Croute_func_pb_db.h

19 #i‚de‡ 
CROUTE_FUNC_PB_DB_INC


20 
	#CROUTE_FUNC_PB_DB_INC


	)

21 
	~"mysql_iÁ˚.h
"

22 
	~"Crouã_func_pb.h
"

23 
	~<m≠
>

31 ˛as†
	cCrouã_func_pb_db
 :
public
 
Crouã_func_pb


33 
¥Ÿe˘ed
:

34 
boﬁ
 
is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
;

36 
mysql_öãrÁ˚
 *
	mdb
;

37 
	mpublic
:

38 
ölöe
 
	$Crouã_func_pb_db
(
mysql_öãrÁ˚
 * 
db
 ):

39 
	$db
(
db
)

41 
this
->
db
=db;

44 
vútuÆ
 
	$dól_func
(
Mesßge
 * 
c_ö
, Mesßgê* 
c_out
 ,
P_PB_DEALFUN_T
 
p_func
 ,
boﬁ
 
is_commô
 )

47 
this
->
db
->
	`£t_œ°_mysql_î∫o
(0);

48 
this
->
ªt
=9999;

49 
this
->
ªt
=(((
Crouã_func
*Èhis)->*(
p_func
))(

50 
this
->
¥Ÿo_hódî
.
	`u£rid
(Ë,
c_ö
 ,
c_out
);

51 i‡(
this
->
is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr


52 && 
this
->
ªt
==
DB_ERR


53 && (
this
->
db
->
	`gë_œ°_mysql_î∫o
()==2003 ||this->db->get_last_mysql_errno()==2006 )

55 
this
->
ªt
=501;

58 i‡(
is_commô
){

60 i‡(
	`mysql_commô
(&(
this
->
db
->
h™dÀ
))!=
DB_SUCC
){

61 
this
->
db
->
	`show_îr‹_log
("db:COMMIT:err");

64  
this
->
ªt
;

65 
	}
}

67 
ölöe
 
	$£t_is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
(
boﬁ
 
vÆue
 ){

68 
this
->
is_ˇn_nŸi_¥oxy_u£_Ÿhî_£rvî_⁄_mysql_îr
=
vÆue
;

69 
	}
}

71 
	gvútuÆ
 ~
	$Crouã_func_pb_db
 (){ 
	}
}

	@/usr/include/dbser/Csync_user_data.h

19 #i‚de‡ 
Csync_u£r_d©a_INCL


20 
	#Csync_u£r_d©a_INCL


	)

21 
	~"libèomì++/utûs/t˝ù.h
"

22 
	~"CèbÀ.h
"

23 
	s°ru_°r_wôh_Àn
{

24 
uöt32_t
 
	mÀn
;

25 
	m°r
[];

26 }
__©åibuã__
((
∑cked
));

29 
	eíum_db_èbÀ_ty≥
{

30 
	mty≥_100x10
=1,

31 
	mty≥_100x100


34 ˛as†
	cCsync_u£r_d©a
 {

35 
	m¥Ÿe˘ed
:

36 
sql_°r
[8192];

37 
mysql_öãrÁ˚
 * 
	mdb
;

38 
	mpublic
:

39 
Csync_u£r_d©a
(
mysql_öãrÁ˚
 * 
db
, * 
db_ﬁd_ù
,
db_ﬁd_p‹t
 );

46 
sync_d©a
(c⁄° 
uöt32_t
 
u£rid
,
uöt16_t
 
gë_sql_d©e_cmdid
,

47 c⁄° * 
db«me_¥e
,c⁄° * 
èbÀ«me_¥e
 ,

48 
íum_db_èbÀ_ty≥
 
db_èbÀ_ty≥
=
ty≥_100x10
,

49 c⁄° * 
u£rid«me
="userid" );

50 
	mvútuÆ
 ~
	$Csync_u£r_d©a
(){}

51 
¥iv©e
:

52 
Ct˝
 
t˝
;

53 
CèbÀ
 
u£r_èbÀ
;

54 
	}
};

	@/usr/include/dbser/Ctable.h

19 #i‚de‡ 
CTABLE_INCL


20 
	#CTABLE_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"mysql_iÁ˚.h
"

25 
	~"bích≠i.h
"

27 
	~<db_ma¸o.h
>

28 
	~<¥Ÿo_hódî.h
>

29 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

30 #ifde‡
USE_PROTOBUF


31 
	~<googÀ/¥Ÿobuf/des¸ùt‹.h
>

32 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

33 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_utû.h
>

34 
	~<googÀ/¥Ÿobuf/ª≥©ed_fõld.h
>

35 
	~<googÀ/¥Ÿobuf/exãnsi⁄_£t.h
>

36 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_ªÊe˘i⁄.h
>

38 
usög
 
	ggoogÀ
::
¥Ÿobuf
::
Mesßge
;

41 
	#GEN_SQLSTR
(
sql°r
,...Ë
	`¢¥ötf
–sql°r, (sql°r),
__VA_ARGS__
 )

	)

42 ˛as†
	cCèbÀ
 {

43 
	m¥Ÿe˘ed
:

44 
sql°r
[1024*100];

45 
mysql_öãrÁ˚
 * 
	mdb
;

46 
	mdb_«me
[50];

47 
	mèbÀ_«me
[50];

49 
	mdb_èbÀ_«me
[100];

50 
	mdb£r_ªtu∫_buf
[
PROTO_MAX_SIZE
];

52 
uöt32_t
 
	mid
;

53 
boﬁ
 
	mu£_ˇche
;

54 
	mpublic
:

55 
vútuÆ
 * 
gë_èbÀ_«me
();

56 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

59 
	m°d
::
°rög
 
gë_mysql_°r
–c⁄° 
°d
::°rög &
§c
 );

60 
ölöe
 
	m°d
::
°rög
 
	$gë_mysql_°r
–c⁄° * 
°r
, 
°r_Àn
 ){

61 
°d
::
°rög
 
	`s
(
°r
,
°r_Àn
);

62  
this
->
	`gë_mysql_°r
(
s
);

64 #ifde‡
USE_PROTOBUF


65 
ölöe
 
°d
::
°rög
 
	$gë_mysql_°r_‰om_pb_obj
–
Mesßge
 & 
msg
 ){

66 
°d
::
°rög
 
ªt
;

67 
msg
.
	`AµídToSåög
(&
ªt
);

68  
this
->
	`gë_mysql_°r
–
ªt
);

69 
	}
}

72 
	g°d
::
°rög
 
	$gë_mysql_°r_‰om_cmesßge
–
Cmesßge
 & 
msg
 ){

73 
°d
::
°rög
 
ªt
=
msg
.
	`wrôe_to_buf_ex
();

74  
this
->
	`gë_mysql_°r
(
ªt
);

75 
	}
}

77 
£À˘_d©a
–*&
_p_ªsu…
, 
uöt32_t
 &
_pkg_Àn
, 
MYSQL_RES
* &
ªs
 , uöt32_à* 
p_cou¡
);

79 
ªc‹d_is_exi°ed
(* 
sql_°r
, 
boﬁ
 * 
p_exi°ed
);

80 
ªc‹d_is_exi°ed
(* 
sql_°r
, 
noföd_îr
);

82 
exec_upd©e_sql
(* 
sql_°r
, 
noföd_îr
 );

83 
exec_ö£π_sql
(* 
sql_°r
, 
exi°ed_îr
 );

84 
exec_dñëe_sql
(* 
sql_°r
, 
noföd_îr
 );

85 
exec_ö£π_sql_gë_auto_ö¸emít_id
(* 
sql_°r
, 
exi°ed_îr
,

86 
uöt32_t
 *
p_ö¸emít_id
 );

88 
exec_ö£π_sql_gë_auto_ö¸emít_id
(* 
sql_°r
, 
exi°ed_îr
,

89 
uöt64_t
 *
p_ö¸emít_id
 );

93 
exec_upd©e_li°_sql
(* 
sql_°r
, 
noföd_îr
 );

95 
CèbÀ
(
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db«me
,c⁄° * 
èbÀ«me
 );

96 
CèbÀ
(
mysql_öãrÁ˚
 * 
db
);

98 
	gvútuÆ
 ~
	$CèbÀ
(){
	}
}

	@/usr/include/dbser/CtableDate.h

19 #i‚de‡ 
CTABLEDATE_INCL


20 
	#CTABLEDATE_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀD©e
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
public
:

30 
vútuÆ
 * 
gë_èbÀ_«me
(
time_t
 
logtime
 );

31 
CèbÀD©e
(
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db_«me_¥e
,

32 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ) ;

34 
	mvútuÆ
 ~
	$CèbÀD©e
(){}

35 
	}
};

	@/usr/include/dbser/CtableDate_100.h

19 #i‚de‡ 
CèbÀD©e_100_INCL


20 
	#CèbÀD©e_100_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"¥Ÿo_hódî.h
"

25 
	~"CèbÀRouã.h
"

28 ˛as†
	cCèbÀD©e_100
 : 
public
 
CèbÀRouã
 {

29 
¥iv©e
:

30 
public
:

31 * 
gë_èbÀ_«me
(
uöt32_t
 
id
, 
time_t
 
logtime
 );

32 
	m¥Ÿe˘ed
:

33 
CèbÀD©e_100
(
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db_«me_¥e
,

34 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ) ;

36 
	mvútuÆ
 ~
	$CèbÀD©e_100
(){}

37 
	}
};

	@/usr/include/dbser/CtableMonth.h

19 #i‚de‡ 
CTABLEMONTH_INCL


20 
	#CTABLEMONTH_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀM⁄th
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
public
:

30 
vútuÆ
 * 
gë_èbÀ_«me
();

32 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

33 
CèbÀM⁄th
(
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db_«me_¥e
,

34 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ) ;

35 
	mvútuÆ
 ~
	$CèbÀM⁄th
(){}

36 
	}
};

	@/usr/include/dbser/CtableRoute.h

19 #i‚de‡ 
CTABLEROUTE_INCL


20 
	#CTABLEROUTE_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀ.h
"

25 
	~<°rög
>

29 ˛as†
	cCèbÀRouã
 : 
public
 
CèbÀ
 {

30 
¥Ÿe˘ed
:

31 
èbÀ_«me_¥e
[40];

32 
	mdb_«me_¥e
[40];

33 
	mid_«me
[20];

34 
	mkey2_«me
[20];

38 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

39 
	mpublic
:

41 
vútuÆ
 
id_is_exi°ed
(
uöt32_t
 
id
, 
boﬁ
 * 
exi°ed
);

42 
vútuÆ
 
id_is_exi°ed
(
uöt32_t
 
id
, uöt32_à
key2
, 
boﬁ
 * 
exi°ed
);

45 
CèbÀRouã
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

46 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ,c⁄° * 
key2_«me
="") ;

52 
£t_öt_vÆue
(
u£rid_t
 
u£rid
 ,c⁄° * 
fõld_ty≥
 , 
uöt32_t
 
vÆue
);

54 
gë_öt_vÆue
(
u£rid_t
 
u£rid
 ,c⁄° * 
fõld_ty≥
 , 
uöt32_t
 * 
p_vÆue
);

56 
£t_öt_vÆue_bô
(
uöt32_t
 
u£rid
 ,

57 c⁄° * 
fõld_ty≥
 ,
uöt32_t
 
bôid
 ,uöt32_à
vÆue
);

65 
ch™ge_öt_vÆue
(
u£rid_t
 
u£rid
 ,c⁄° * 
fõld_ty≥
 ,

66 
öt32_t
 
ch™gevÆue
, 
uöt32_t
 
max_vÆue
 , uöt32_à*
p_cur_vÆue
=
NULL
,

67 
öt32_t
 *
p_ªÆ_ch™ge_vÆue
=
NULL
, 
boﬁ
 
is_ch™ge_to_max_mö
=
Ál£
);

73 
£t_öt_vÆue
(
u£rid_t
 
u£rid
 ,
uöt32_t
 
key2
 ,c⁄° * 
fõld_ty≥
 , uöt32_à
vÆue
);

74 
gë_öt_vÆue
(
u£rid_t
 
u£rid
,
uöt32_t
 
key2
 ,c⁄° * 
fõld_ty≥
 , uöt32_à* 
p_vÆue
);

75 
£t_öt_vÆue_bô
(
uöt32_t
 
u£rid
 ,uöt32_à
key2
,

76 c⁄° * 
fõld_ty≥
 ,
uöt32_t
 
bôid
 ,uöt32_à
vÆue
);

79 
ch™ge_öt_vÆue
(
u£rid_t
 
u£rid
 ,
uöt32_t
 
key2
 ,c⁄° * 
fõld_ty≥
 ,

80 
öt32_t
 
ch™gevÆue
, 
uöt32_t
 
max_vÆue
 , uöt32_à*
p_cur_vÆue
=
NULL
,

81 
öt32_t
 *
p_ªÆ_ch™ge_vÆue
=
NULL
, 
boﬁ
 
is_ch™ge_to_max_mö
=
Ál£
);

82 
	mvútuÆ
 ~
	$CèbÀRouã
(){}

84 
	`gë_ö£π_sql_by_u£rid
–
u£rid_t
 
u£rid
, 
°d
::
°rög
 & 
sql_°r
,

85 c⁄° * 
u£rid_fõld_«me
="u£rid" ,
uöt32_t
 
obj_u£rid
=0);

86 
	}
};

	@/usr/include/dbser/CtableRoute10.h

19 #i‚de‡ 
CTABLEROUTE10_INCL


20 
	#CTABLEROUTE10_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀRouã10
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

30 
	mpublic
:

31 
vútuÆ
 ~
	$CèbÀRouã10
(){}

32 
	`CèbÀRouã10
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

33 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
,c⁄° * 
key2_«me
="" );

34 
	}
};

	@/usr/include/dbser/CtableRoute100.h

19 #i‚de‡ 
CTABLEROUTE100_INCL


20 
	#CTABLEROUTE100_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀRouã100
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

30 
	mpublic
:

31 
vútuÆ
 ~
	$CèbÀRouã100
(){}

32 
	`CèbÀRouã100
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

33 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
,c⁄° * 
key2_«me
="" );

34 
	}
};

	@/usr/include/dbser/CtableRoute100x1.h

1 #i‚de‡
_CTABLEROUTE100X1_INC_


2 
	#_CTABLEROUTE100X1_INC_


	)

4 
	~"CèbÀRouã.h
"

6 ˛as†
	cCèbÀRouã100x1
 : 
public
 
CèbÀRouã


8 
¥Ÿe˘ed
:

9 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

10 
	mpublic
:

11 
vútuÆ
 ~
	$CèbÀRouã100x1
(){}

12 
	`CèbÀRouã100x1
(
mysql_öãrÁ˚
* 
db
, c⁄° * 
db_«me_¥e
,c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
,c⁄° *
key2_«me
="");

13 
	}
};

	@/usr/include/dbser/CtableRoute100x10.h

19 #i‚de‡ 
CTABLEROUTE100x10_INCL


20 
	#CTABLEROUTE100x10_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀRouã100x10
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

30 
	mpublic
:

31 
vútuÆ
 ~
	$CèbÀRouã100x10
(){}

32 
	`CèbÀRouã100x10
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

33 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ,c⁄° * 
key2_«me
="" );

36 
	}
};

	@/usr/include/dbser/CtableRoute10x10.h

19 #i‚de‡ 
CTABLEROUTE10x10_INCL


20 
	#CTABLEROUTE10x10_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀRouã10x10
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

30 
	mpublic
:

31 
vútuÆ
 ~
	$CèbÀRouã10x10
(){};

32 
	`CèbÀRouã10x10
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

33 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ,c⁄° * 
key2_«me
="" );

34 
	}
};

	@/usr/include/dbser/CtableRoute1x1.h

19 #i‚de‡ 
CTABLEROUTE1x1_INCL


20 
	#CTABLEROUTE1x1_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀRouã.h
"

27 ˛as†
	cCèbÀRouã1x1
 : 
public
 
CèbÀRouã
 {

28 
¥Ÿe˘ed
:

29 
vútuÆ
 * 
gë_èbÀ_«me
(
uöt32_t
 
id
);

30 
	mpublic
:

31 
vútuÆ
 ~
	$CèbÀRouã1x1
(){}

32 
	`CèbÀRouã1x1
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

33 c⁄° * 
èbÀ_«me_¥e
,c⁄° * 
id_«me
 ,c⁄° * 
key2_«me
="" );

36 
	}
};

	@/usr/include/dbser/CtableString.h

19 #i‚de‡ 
CTABLESTRING_INCL


20 
	#CTABLESTRING_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀ.h
"

27 ˛as†
	cCèbÀSåög
 : 
public
 
CèbÀ
 {

28 
¥Ÿe˘ed
:

29 
èbÀ_«me_¥e
[25];

30 
	mdb_«me_¥e
[25];

34 
vútuÆ
 *
gë_èbÀ_«me
(c⁄° * 
°r
 );

35 
	mpublic
:

38 
CèbÀSåög
(
mysql_öãrÁ˚
 * 
db
, c⁄° * 
db_«me_¥e
,

39 c⁄° * 
èbÀ_«me_¥e
) ;

41 
	mvútuÆ
 ~
	$CèbÀSåög
(){}

42 
	}
};

	@/usr/include/dbser/CtableWithKey.h

19 #i‚de‡ 
CTABLEWITHKEY_INCL


20 
	#CTABLEWITHKEY_INCL


	)

21 
	~<°dio.h
>

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~"CèbÀ.h
"

27 ˛as†
	cCèbÀWôhKey
 : 
public
 
CèbÀ
 {

28 
¥Ÿe˘ed
:

29 
id_«me
[25];

30 
	mpublic
:

32 
vútuÆ
 
id_is_exi°ed
(
uöt32_t
 
id
, 
boﬁ
 * 
exi°ed
);

33 
CèbÀWôhKey
 (
mysql_öãrÁ˚
 * 
db
,c⁄° * 
db«me
,

34 c⁄° * 
èbÀ«me
,c⁄° * 
id_«me
 );

35 
	mvútuÆ
 ~
	$CèbÀWôhKey
(){}

36 
	}
};

	@/usr/include/dbser/benchapi.h

1 #i‚de‡
SERVERBENCH_BENCHAPI_H_


2 
	#SERVERBENCH_BENCHAPI_H_


	)

4 #ifde‡
__˝lu•lus


8 
	~<sys/cdefs.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<¨∑/öë.h
>

12 
	~<libèomì/log.h
>

13 
	~<libèomì/c⁄f_∑r£r/c⁄fig.h
>

14 
	~<libèomì/öë/t˝.h
>

16 #unde‡
__©å_cde˛__


17 
	#__©å_cde˛__
 
	`__©åibuã__
((
__cde˛__
))

	)

29 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 < 96

30 
	#__buûtö_ex≥˘
(
x
, 
ex≥˘ed_vÆue
Ë(x)

	)

33 #unde‡
__©å_puª__


34 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 < 96

35 
	#__©å_puª__


	)

37 
	#__©å_puª__
 
	`__©åibuã__
((
__puª__
))

	)

40 #unde‡
__©å_n⁄nuŒ__


41 #i‡
__GNUC__
 =2 && 
__GNUC_MINOR__
 < 96

42 
	#__©å_n⁄nuŒ__
(
x
Ë

	)

44 
	#__©å_n⁄nuŒ__
(
x
Ë
	`__©åibuã__
((
	`__n⁄nuŒ__
(x)))

	)

47 #i‚de‡
likñy


48 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

50 #i‚de‡
u∆ikñy


51 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

54 
	#__öô
 
	`__©åibuã__
 ((
	`__£˘i⁄__
 (".öô.ãxt")))

	)

55 
	#__öôd©a
 
	`__©åibuã__
 ((
	`__£˘i⁄__
 (".öô.d©a")))

	)

56 
	#__exôd©a
 
	`__©åibuã__
 ((
	`__£˘i⁄__
(".exô.d©a")))

	)

57 
	#__exô_ˇŒ
 
__©åibuã_u£d__
 
	`__©åibuã__
 ((
	`__£˘i⁄__
 (".exôˇŒ.exô")))

	)

59 #ifde‡
MODULE


60 
	#__exô
 
	`__©åibuã__
 ((
	`__£˘i⁄__
(".exô.ãxt")))

	)

62 
	#__exô
 
__©åibuã_u£d__
 
	`__©åibuã__
 ((
	`__£˘i⁄__
(".exô.ãxt")))

	)

66 
PROC_MAIN
 = 0,

67 
PROC_CONN
,

68 
PROC_WORK
,

77 
	ssköfo_°ru˘
 {

78 
sockfd
;

79 
ty≥
;

82 
time_t
 
ªcvtm
;

83 
time_t
 
£ndtm
;

85 
u_öt
 
loˇl_ù
;

86 
u_sh‹t
 
loˇl_p‹t
;

87 
u_öt
 
ªmŸe_ù
;

88 
u_sh‹t
 
ªmŸe_p‹t
;

89 } 
	tsköfo_t
;

94 
	sdŒ_func_°ru˘
 {

95 *
h™dÀ
;

96 (*
h™dÀ_öô
) (, **, );

97 (*
h™dÀ_öput
Ë(c⁄° *, , c⁄° 
sköfo_t
*);

98 (*
h™dÀ_¥o˚ss
Ë(*, , **, *, c⁄° 
sköfo_t
*);

99 (*
h™dÀ_›í
Ë(**, *, c⁄° 
sköfo_t
*);

100 (*
h™dÀ_˛o£
Ë(c⁄° 
sköfo_t
*);

101 (*
h™dÀ_timî
) (*);

102 (*
h™dÀ_föi
) ();

103 } 
	tdŒ_func_t
;

105 
dŒ_func_t
 
dŒ
;

111 
push_a_pkg_to_w‹kî
(c⁄° * 
pkg
, 
u_öt
 
pkgÀn
);

113 #ifde‡
__˝lu•lus


	@/usr/include/dbser/db_base.pb.h

4 #i‚de‡
PROTOBUF_db_5fba£_2ïrŸo__INCLUDED


5 
	#PROTOBUF_db_5fba£_2ïrŸo__INCLUDED


	)

7 
	~<°rög
>

9 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

11 #i‡
GOOGLE_PROTOBUF_VERSION
 < 2004000

12 #îr‹ 
This
 
fûe
 
was
 
gíî©ed
 
by
 
a
 
√wî
 
vîsi⁄
 
of
 
¥Ÿoc
 
which
 
is


13 #îr‹ 
öcom∑tibÀ
 
wôh
 
your
 
PrŸocﬁ
 
Buf„r
 
hódîs
. 
PÀa£
 
upd©e


14 #îr‹ 
your
 
hódîs
.

16 #i‡2004001 < 
GOOGLE_PROTOBUF_MIN_PROTOC_VERSION


17 #îr‹ 
This
 
fûe
 
was
 
gíî©ed
 
by
 
™
 
ﬁdî
 
vîsi⁄
 
of
 
¥Ÿoc
 
which
 
is


18 #îr‹ 
öcom∑tibÀ
 
wôh
 
your
 
PrŸocﬁ
 
Buf„r
 
hódîs
. 
PÀa£


19 #îr‹ 
ªgíî©e
 
this
 
fûe
 
wôh
 
a
 
√wî
 
vîsi⁄
 
of
 
¥Ÿoc
.

22 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_utû.h
>

23 
	~<googÀ/¥Ÿobuf/ª≥©ed_fõld.h
>

24 
	~<googÀ/¥Ÿobuf/exãnsi⁄_£t.h
>

25 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_ªÊe˘i⁄.h
>

28 
«me•a˚
 
	gdbBa£
 {

31 
¥Ÿobuf_AddDesc_db_5fba£_2ïrŸo
();

32 
¥Ÿobuf_AssignDesc_db_5fba£_2ïrŸo
();

33 
¥Ÿobuf_ShutdownFûe_db_5fba£_2ïrŸo
();

35 
˛ass
 
	gdb_¥Ÿo_hódî
;

36 
˛ass
 
	gmesßge_nuŒ
;

40 ˛as†
	cdb_¥Ÿo_hódî
 : 
public
 ::
googÀ
::
¥Ÿobuf
::
Mesßge
 {

41 
public
:

42 
db_¥Ÿo_hódî
();

43 
	gvútuÆ
 ~
db_¥Ÿo_hódî
();

45 
db_¥Ÿo_hódî
(c⁄° db_¥Ÿo_hódî& 
‰om
);

47 
ölöe
 
	gdb_¥Ÿo_hódî
& 
	g›î©‹
=(c⁄° 
db_¥Ÿo_hódî
& 
‰om
) {

48 
C›yFrom
(
‰om
);

49  *
	gthis
;

52 
ölöe
 c⁄° ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
& 
unknown_fõlds
() const {

53  
_unknown_fõlds_
;

56 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
* 
muèbÀ_unknown_fõlds
() {

57  &
_unknown_fõlds_
;

60 c⁄° ::
googÀ
::
¥Ÿobuf
::
Des¸ùt‹
* 
des¸ùt‹
();

61 c⁄° 
	gdb_¥Ÿo_hódî
& 
deÁu…_ö°™˚
();

63 
Sw≠
(
db_¥Ÿo_hódî
* 
Ÿhî
);

67 
db_¥Ÿo_hódî
* 
New
() const;

68 
C›yFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

69 
MîgeFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

70 
C›yFrom
(c⁄° 
db_¥Ÿo_hódî
& 
‰om
);

71 
MîgeFrom
(c⁄° 
db_¥Ÿo_hódî
& 
‰om
);

72 
CÀ¨
();

73 
boﬁ
 
IsInôülized
() const;

75 
ByãSize
() const;

76 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(

77 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedI≈utSåóm
* 
öput
);

78 
SîülizeWôhCachedSizes
(

79 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedOuçutSåóm
* 
ouçut
) const;

80 ::
googÀ
::
¥Ÿobuf
::
uöt8
* 
SîülizeWôhCachedSizesToAºay
(::googÀ::¥Ÿobuf::uöt8* 
ouçut
) const;

81 
GëCachedSize
(Ëc⁄° {  
	g_ˇched_size_
; }

82 
	g¥iv©e
:

83 
Sh¨edCt‹
();

84 
Sh¨edDt‹
();

85 
SëCachedSize
(
size
) const;

86 
	gpublic
:

88 ::
googÀ
::
¥Ÿobuf
::
Mëad©a
 
GëMëad©a
() const;

95 
ölöe
 
boﬁ
 
has_msg_ty≥_«me
() const;

96 
ölöe
 
˛ór_msg_ty≥_«me
();

97 c⁄° 
	gkMsgTy≥NameFõldNumbî
 = 1;

98 
ölöe
 c⁄° ::
°d
::
°rög
& 
msg_ty≥_«me
() const;

99 
ölöe
 
£t_msg_ty≥_«me
(c⁄° ::
°d
::
°rög
& 
vÆue
);

100 
ölöe
 
£t_msg_ty≥_«me
(c⁄° * 
vÆue
);

101 
ölöe
 
£t_msg_ty≥_«me
(c⁄° * 
vÆue
, 
size_t
 
size
);

102 
	gölöe
 ::
°d
::
°rög
* 
muèbÀ_msg_ty≥_«me
();

103 
	gölöe
 ::
°d
::
°rög
* 
ªÀa£_msg_ty≥_«me
();

106 
ölöe
 
boﬁ
 
has_u£rid
() const;

107 
ölöe
 
˛ór_u£rid
();

108 c⁄° 
	gkU£ridFõldNumbî
 = 2;

109 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
u£rid
() const;

110 
ölöe
 
£t_u£rid
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

113 
ölöe
 
boﬁ
 
has_ªsu…
() const;

114 
ölöe
 
˛ór_ªsu…
();

115 c⁄° 
	gkResu…FõldNumbî
 = 3;

116 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
ªsu…
() const;

117 
ölöe
 
£t_ªsu…
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

120 
ölöe
 
boﬁ
 
has_v_ex1
() const;

121 
ölöe
 
˛ór_v_ex1
();

122 c⁄° 
	gkVEx1FõldNumbî
 = 4;

123 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex1
() const;

124 
ölöe
 
£t_v_ex1
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

127 
ölöe
 
boﬁ
 
has_v_ex2
() const;

128 
ölöe
 
˛ór_v_ex2
();

129 c⁄° 
	gkVEx2FõldNumbî
 = 5;

130 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex2
() const;

131 
ölöe
 
£t_v_ex2
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

134 
ölöe
 
boﬁ
 
has_v_ex3
() const;

135 
ölöe
 
˛ór_v_ex3
();

136 c⁄° 
	gkVEx3FõldNumbî
 = 6;

137 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex3
() const;

138 
ölöe
 
£t_v_ex3
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

141 
ölöe
 
boﬁ
 
has_s_ex4
() const;

142 
ölöe
 
˛ór_s_ex4
();

143 c⁄° 
	gkSEx4FõldNumbî
 = 7;

144 
ölöe
 c⁄° ::
°d
::
°rög
& 
s_ex4
() const;

145 
ölöe
 
£t_s_ex4
(c⁄° ::
°d
::
°rög
& 
vÆue
);

146 
ölöe
 
£t_s_ex4
(c⁄° * 
vÆue
);

147 
ölöe
 
£t_s_ex4
(c⁄° * 
vÆue
, 
size_t
 
size
);

148 
	gölöe
 ::
°d
::
°rög
* 
muèbÀ_s_ex4
();

149 
	gölöe
 ::
°d
::
°rög
* 
ªÀa£_s_ex4
();

152 
ölöe
 
boﬁ
 
has_v_ex5
() const;

153 
ölöe
 
˛ór_v_ex5
();

154 c⁄° 
	gkVEx5FõldNumbî
 = 8;

155 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex5
() const;

156 
ölöe
 
£t_v_ex5
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

159 
	g¥iv©e
:

160 
ölöe
 
£t_has_msg_ty≥_«me
();

161 
ölöe
 
˛ór_has_msg_ty≥_«me
();

162 
ölöe
 
£t_has_u£rid
();

163 
ölöe
 
˛ór_has_u£rid
();

164 
ölöe
 
£t_has_ªsu…
();

165 
ölöe
 
˛ór_has_ªsu…
();

166 
ölöe
 
£t_has_v_ex1
();

167 
ölöe
 
˛ór_has_v_ex1
();

168 
ölöe
 
£t_has_v_ex2
();

169 
ölöe
 
˛ór_has_v_ex2
();

170 
ölöe
 
£t_has_v_ex3
();

171 
ölöe
 
˛ór_has_v_ex3
();

172 
ölöe
 
£t_has_s_ex4
();

173 
ölöe
 
˛ór_has_s_ex4
();

174 
ölöe
 
£t_has_v_ex5
();

175 
ölöe
 
˛ór_has_v_ex5
();

177 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
 
_unknown_fõlds_
;

179 ::
°d
::
°rög
* 
msg_ty≥_«me_
;

180 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
u£rid_
;

181 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
ªsu…_
;

182 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex1_
;

183 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex2_
;

184 ::
°d
::
°rög
* 
s_ex4_
;

185 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex3_
;

186 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex5_
;

188 
muèbÀ
 
	g_ˇched_size_
;

189 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
_has_bôs_
[(8 + 31) / 32];

191 
‰õnd
 
¥Ÿobuf_AddDesc_db_5fba£_2ïrŸo
();

192 
‰õnd
 
¥Ÿobuf_AssignDesc_db_5fba£_2ïrŸo
();

193 
‰õnd
 
¥Ÿobuf_ShutdownFûe_db_5fba£_2ïrŸo
();

195 
InôAsDeÁu…In°™˚
();

196 
db_¥Ÿo_hódî
* 
	gdeÁu…_ö°™˚_
;

200 ˛as†
	cmesßge_nuŒ
 : 
public
 ::
googÀ
::
¥Ÿobuf
::
Mesßge
 {

201 
public
:

202 
mesßge_nuŒ
();

203 
	gvútuÆ
 ~
mesßge_nuŒ
();

205 
mesßge_nuŒ
(c⁄° mesßge_nuŒ& 
‰om
);

207 
ölöe
 
	gmesßge_nuŒ
& 
	g›î©‹
=(c⁄° 
mesßge_nuŒ
& 
‰om
) {

208 
C›yFrom
(
‰om
);

209  *
	gthis
;

212 
ölöe
 c⁄° ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
& 
unknown_fõlds
() const {

213  
_unknown_fõlds_
;

216 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
* 
muèbÀ_unknown_fõlds
() {

217  &
_unknown_fõlds_
;

220 c⁄° ::
googÀ
::
¥Ÿobuf
::
Des¸ùt‹
* 
des¸ùt‹
();

221 c⁄° 
	gmesßge_nuŒ
& 
deÁu…_ö°™˚
();

223 
Sw≠
(
mesßge_nuŒ
* 
Ÿhî
);

227 
mesßge_nuŒ
* 
New
() const;

228 
C›yFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

229 
MîgeFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

230 
C›yFrom
(c⁄° 
mesßge_nuŒ
& 
‰om
);

231 
MîgeFrom
(c⁄° 
mesßge_nuŒ
& 
‰om
);

232 
CÀ¨
();

233 
boﬁ
 
IsInôülized
() const;

235 
ByãSize
() const;

236 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(

237 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedI≈utSåóm
* 
öput
);

238 
SîülizeWôhCachedSizes
(

239 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedOuçutSåóm
* 
ouçut
) const;

240 ::
googÀ
::
¥Ÿobuf
::
uöt8
* 
SîülizeWôhCachedSizesToAºay
(::googÀ::¥Ÿobuf::uöt8* 
ouçut
) const;

241 
GëCachedSize
(Ëc⁄° {  
	g_ˇched_size_
; }

242 
	g¥iv©e
:

243 
Sh¨edCt‹
();

244 
Sh¨edDt‹
();

245 
SëCachedSize
(
size
) const;

246 
	gpublic
:

248 ::
googÀ
::
¥Ÿobuf
::
Mëad©a
 
GëMëad©a
() const;

255 
	g¥iv©e
:

257 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
 
_unknown_fõlds_
;

260 
muèbÀ
 
	g_ˇched_size_
;

261 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
_has_bôs_
[1];

263 
‰õnd
 
¥Ÿobuf_AddDesc_db_5fba£_2ïrŸo
();

264 
‰õnd
 
¥Ÿobuf_AssignDesc_db_5fba£_2ïrŸo
();

265 
‰õnd
 
¥Ÿobuf_ShutdownFûe_db_5fba£_2ïrŸo
();

267 
InôAsDeÁu…In°™˚
();

268 
mesßge_nuŒ
* 
	gdeÁu…_ö°™˚_
;

278 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_msg_ty≥_«me
() const {

279  (
_has_bôs_
[0] & 0x00000001u) != 0;

280 
	}
}

281 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_msg_ty≥_«me
() {

282 
_has_bôs_
[0] |= 0x00000001u;

283 
	}
}

284 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_msg_ty≥_«me
() {

285 
_has_bôs_
[0] &= ~0x00000001u;

286 
	}
}

287 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_msg_ty≥_«me
() {

288 i‡(
msg_ty≥_«me_
 !&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

289 
msg_ty≥_«me_
->
	`˛ór
();

291 
	`˛ór_has_msg_ty≥_«me
();

292 
	}
}

293 
ölöe
 c⁄° ::
°d
::
°rög
& 
db_¥Ÿo_hódî
::
	$msg_ty≥_«me
() const {

294  *
msg_ty≥_«me_
;

295 
	}
}

296 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_msg_ty≥_«me
(c⁄° ::
°d
::
°rög
& 
vÆue
) {

297 
£t_has_msg_ty≥_«me
();

298 i‡(
	gmsg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

299 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

301 
	gmsg_ty≥_«me_
->
assign
(
vÆue
);

303 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_msg_ty≥_«me
(c⁄° * 
vÆue
) {

304 
	`£t_has_msg_ty≥_«me
();

305 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

306 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

308 
msg_ty≥_«me_
->
	`assign
(
vÆue
);

309 
	}
}

310 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_msg_ty≥_«me
(c⁄° * 
vÆue
, 
size_t
 
size
) {

311 
	`£t_has_msg_ty≥_«me
();

312 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

313 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

315 
msg_ty≥_«me_
->
	`assign
(
ªöãΩªt_ˇ°
<c⁄° *>(
vÆue
), 
size
);

316 
	}
}

317 
	gölöe
 ::
°d
::
°rög
* 
db_¥Ÿo_hódî
::
	$muèbÀ_msg_ty≥_«me
() {

318 
	`£t_has_msg_ty≥_«me
();

319 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

320 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

322  
msg_ty≥_«me_
;

323 
	}
}

324 
	gölöe
 ::
°d
::
°rög
* 
db_¥Ÿo_hódî
::
	$ªÀa£_msg_ty≥_«me
() {

325 
	`˛ór_has_msg_ty≥_«me
();

326 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

327  
NULL
;

329 ::
°d
::
°rög
* 
ãmp
 = 
msg_ty≥_«me_
;

330 
msg_ty≥_«me_
 = 
c⁄°_ˇ°
< ::
°d
::
°rög
*>(&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
);

331  
ãmp
;

333 
	}
}

336 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_u£rid
() const {

337  (
_has_bôs_
[0] & 0x00000002u) != 0;

338 
	}
}

339 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_u£rid
() {

340 
_has_bôs_
[0] |= 0x00000002u;

341 
	}
}

342 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_u£rid
() {

343 
_has_bôs_
[0] &= ~0x00000002u;

344 
	}
}

345 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_u£rid
() {

346 
u£rid_
 = 0u;

347 
	`˛ór_has_u£rid
();

348 
	}
}

349 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$u£rid
() const {

350  
u£rid_
;

351 
	}
}

352 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_u£rid
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

353 
£t_has_u£rid
();

354 
	gu£rid_
 = 
vÆue
;

358 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_ªsu…
() const {

359  (
_has_bôs_
[0] & 0x00000004u) != 0;

360 
	}
}

361 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_ªsu…
() {

362 
_has_bôs_
[0] |= 0x00000004u;

363 
	}
}

364 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_ªsu…
() {

365 
_has_bôs_
[0] &= ~0x00000004u;

366 
	}
}

367 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_ªsu…
() {

368 
ªsu…_
 = 0u;

369 
	`˛ór_has_ªsu…
();

370 
	}
}

371 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$ªsu…
() const {

372  
ªsu…_
;

373 
	}
}

374 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_ªsu…
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

375 
£t_has_ªsu…
();

376 
	gªsu…_
 = 
vÆue
;

380 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_v_ex1
() const {

381  (
_has_bôs_
[0] & 0x00000008u) != 0;

382 
	}
}

383 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_v_ex1
() {

384 
_has_bôs_
[0] |= 0x00000008u;

385 
	}
}

386 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_v_ex1
() {

387 
_has_bôs_
[0] &= ~0x00000008u;

388 
	}
}

389 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_v_ex1
() {

390 
v_ex1_
 = 0u;

391 
	`˛ór_has_v_ex1
();

392 
	}
}

393 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$v_ex1
() const {

394  
v_ex1_
;

395 
	}
}

396 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_v_ex1
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

397 
£t_has_v_ex1
();

398 
	gv_ex1_
 = 
vÆue
;

402 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_v_ex2
() const {

403  (
_has_bôs_
[0] & 0x00000010u) != 0;

404 
	}
}

405 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_v_ex2
() {

406 
_has_bôs_
[0] |= 0x00000010u;

407 
	}
}

408 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_v_ex2
() {

409 
_has_bôs_
[0] &= ~0x00000010u;

410 
	}
}

411 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_v_ex2
() {

412 
v_ex2_
 = 0u;

413 
	`˛ór_has_v_ex2
();

414 
	}
}

415 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$v_ex2
() const {

416  
v_ex2_
;

417 
	}
}

418 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_v_ex2
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

419 
£t_has_v_ex2
();

420 
	gv_ex2_
 = 
vÆue
;

424 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_v_ex3
() const {

425  (
_has_bôs_
[0] & 0x00000020u) != 0;

426 
	}
}

427 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_v_ex3
() {

428 
_has_bôs_
[0] |= 0x00000020u;

429 
	}
}

430 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_v_ex3
() {

431 
_has_bôs_
[0] &= ~0x00000020u;

432 
	}
}

433 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_v_ex3
() {

434 
v_ex3_
 = 0u;

435 
	`˛ór_has_v_ex3
();

436 
	}
}

437 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$v_ex3
() const {

438  
v_ex3_
;

439 
	}
}

440 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_v_ex3
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

441 
£t_has_v_ex3
();

442 
	gv_ex3_
 = 
vÆue
;

446 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_s_ex4
() const {

447  (
_has_bôs_
[0] & 0x00000040u) != 0;

448 
	}
}

449 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_s_ex4
() {

450 
_has_bôs_
[0] |= 0x00000040u;

451 
	}
}

452 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_s_ex4
() {

453 
_has_bôs_
[0] &= ~0x00000040u;

454 
	}
}

455 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_s_ex4
() {

456 i‡(
s_ex4_
 !&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

457 
s_ex4_
->
	`˛ór
();

459 
	`˛ór_has_s_ex4
();

460 
	}
}

461 
ölöe
 c⁄° ::
°d
::
°rög
& 
db_¥Ÿo_hódî
::
	$s_ex4
() const {

462  *
s_ex4_
;

463 
	}
}

464 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_s_ex4
(c⁄° ::
°d
::
°rög
& 
vÆue
) {

465 
£t_has_s_ex4
();

466 i‡(
	gs_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

467 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

469 
	gs_ex4_
->
assign
(
vÆue
);

471 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_s_ex4
(c⁄° * 
vÆue
) {

472 
	`£t_has_s_ex4
();

473 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

474 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

476 
s_ex4_
->
	`assign
(
vÆue
);

477 
	}
}

478 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_s_ex4
(c⁄° * 
vÆue
, 
size_t
 
size
) {

479 
	`£t_has_s_ex4
();

480 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

481 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

483 
s_ex4_
->
	`assign
(
ªöãΩªt_ˇ°
<c⁄° *>(
vÆue
), 
size
);

484 
	}
}

485 
	gölöe
 ::
°d
::
°rög
* 
db_¥Ÿo_hódî
::
	$muèbÀ_s_ex4
() {

486 
	`£t_has_s_ex4
();

487 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

488 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

490  
s_ex4_
;

491 
	}
}

492 
	gölöe
 ::
°d
::
°rög
* 
db_¥Ÿo_hódî
::
	$ªÀa£_s_ex4
() {

493 
	`˛ór_has_s_ex4
();

494 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

495  
NULL
;

497 ::
°d
::
°rög
* 
ãmp
 = 
s_ex4_
;

498 
s_ex4_
 = 
c⁄°_ˇ°
< ::
°d
::
°rög
*>(&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
);

499  
ãmp
;

501 
	}
}

504 
ölöe
 
boﬁ
 
	gdb_¥Ÿo_hódî
::
	$has_v_ex5
() const {

505  (
_has_bôs_
[0] & 0x00000080u) != 0;

506 
	}
}

507 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$£t_has_v_ex5
() {

508 
_has_bôs_
[0] |= 0x00000080u;

509 
	}
}

510 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_has_v_ex5
() {

511 
_has_bôs_
[0] &= ~0x00000080u;

512 
	}
}

513 
ölöe
 
	gdb_¥Ÿo_hódî
::
	$˛ór_v_ex5
() {

514 
v_ex5_
 = 0u;

515 
	`˛ór_has_v_ex5
();

516 
	}
}

517 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
db_¥Ÿo_hódî
::
	$v_ex5
() const {

518  
v_ex5_
;

519 
	}
}

520 
ölöe
 
	gdb_¥Ÿo_hódî
::
£t_v_ex5
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

521 
£t_has_v_ex5
();

522 
	gv_ex5_
 = 
vÆue
;

534 #i‚de‡
SWIG


535 
«me•a˚
 
	ggoogÀ
 {

536 
«me•a˚
 
	g¥Ÿobuf
 {

	@/usr/include/dbser/db_error_base.h

19 #i‚de‡ 
db_îr‹_ba£


20 
	#db_îr‹_ba£


	)

22 
	#SUCC
 0

	)

23 
	#FAIL
 -1

	)

24 
	#DB_SUCC
 0

	)

27 
	#NO_DEFINE_ERR
 1000

	)

29 
	#SYS_ERR
 1001

	)

32 
	#DB_ERR
 1002

	)

35 
	#NET_ERR
 1003

	)

38 
	#CMDID_NODEFINE_ERR
 1004

	)

40 
	#PROTO_LEN_ERR
 1005

	)

43 
	#VALUE_OUT_OF_RANGE_ERR
 1006

	)

46 
	#FLAY_ALREADY_SET_ERR
 1007

	)

49 
	#VALUE_ISNOT_FULL_ERR
 1008

	)

52 
	#ENUM_OUT_OF_RANGE_ERR
 1009

	)

55 
	#PROTO_RETURN_LEN_ERR
 1010

	)

58 
	#DB_DATA_ERR
 1011

	)

60 
	#NET_SEND_ERR
 1012

	)

61 
	#NET_RECV_ERR
 1013

	)

63 
	#KEY_EXISTED_ERR
 1014

	)

65 
	#KEY_NOFIND_ERR
 1015

	)

68 
	#DB_CANNOT_UPDATE_ERR
 1016

	)

71 
	#NET_TIMEOUT_ERR
 1017

	)

74 
	#CMD_EXEC_MAX_PER_MINUTE_ERR
 1018

	)

76 
	#VALUE_NOENOUGH_E
 1020

	)

77 
	#VALUE_MAX_E
 1021

	)

81 
	#CMD_MD5_TAG_ERR
 1021

	)

84 
	#CHECK_PASSWD_ERR
 1103

	)

87 
	#USER_ID_EXISTED_ERR
 1104

	)

89 
	#USER_ID_NOFIND_ERR
 1105

	)

91 
	#LIST_ID_EXISTED
 1109

	)

93 
	#LIST_ID_NOFIND
 1110

	)

94 
	#LIST_ID_MAX
 1115

	)

	@/usr/include/dbser/db_macro.h

18 #i‚de‡
db_ma¸o


19 
	#db_ma¸o


	)

20 
	~<°rög
>

21 
	~"db_îr‹_ba£.h
"

22 
	~"¥Ÿo_hódî.h
"

23 
	~<mysql/mysql.h
>

24 
	~<libèomì/c⁄f_∑r£r/c⁄fig.h
>

25 
	#GET_ROUTE
(
cmdid
Ë((cmdid&0x8000)?(70+((cmdid&0x7E00)>>6)+((cmdid &0x00E0)>>5)):(cmdid>>9))

	)

27 
	#£t_mysql_°rög
(
d°
,
§c
,
n
Ë
	`mysql_ªÆ_esˇ≥_°rög
( \

28 &(
this
->
db
->
h™dÀ
), 
d°
, 
§c
, 
n
)

	)

30 
ölöe
 
uöt64_t
 
	$©oi_ß„
 (*
°r
)

32  (
°r
!
NULL
 ? 
	`©ﬁl
(str):0 );

33 
	}
}

35 
ölöe
 
	$©of_ß„
 (*
°r
)

37  (
°r
!
NULL
 ? 
	`©of
(str):0 );

38 
	}
}

40 
	#mysql_°r_Àn
(
n
Ë–“Ë*2 +1)

	)

44 
	#STD_OPEN_AUTOCOMMIT
(Ë
	`mysql_autocommô
(&(
this
->
db
->
h™dÀ
), 
T
)

	)

45 
	#STD_ROLLBACK
() {\

46 
	`DEBUG_LOG
("[D] DO:STD_ROLLBACK" );\

47 
	`mysql_rﬁlback
(&(
this
->
db
->
h™dÀ
));\

48 }

	)

49 
	#STD_CLOSE_AUTOCOMMIT
(
ƒë
) {\

50 i‡(
	`mysql_autocommô
(&(
this
->
db
->
h™dÀ
), 
F
)==
DB_SUCC
){\

51 
ƒë
 = 
DB_SUCC
;\

53 
ƒë
 = 
DB_ERR
;\

55 }

	)

56 
	#STD_COMMIT
(
ƒë
) {\

57 i‡(
	`mysql_commô
(&(
this
->
db
->
h™dÀ
))==
DB_SUCC
){\

58 
ƒë
 = 
DB_SUCC
;\

60 
ƒë
 = 
DB_ERR
;\

62 }

	)

69 
	#NEXT_FIELD
 (
row
[++
_fi
])

	)

72 
	#BIN_CPY_NEXT_FIELD
–
d°
,
max_Àn
Ë++
_fi
; \

73 
	`mysql_„tch_Àngths
(
ªs
); \

74 
ªs
->
Àngths
[
_fi
]<
max_Àn
? \

75 
	`mem˝y
(
d°
,
row
[
_fi
],
ªs
->
Àngths
[_fi] ): mem˝y(d°,row[_fi],
max_Àn
)

	)

77 
	#BIN_CPY_NEXT_FIELD_TO_MSG
(
ôem_«me
, 
msg_«me
Ë++
_fi
; \

78 
	`mysql_„tch_Àngths
(
ªs
); \

79 
ôem_«me
.
_
##
msg_«me
##
_Àn
=
ªs
->
Àngths
[
_fi
]<(item_name.msg_name) ?Ñes->lengths[_fi]:(item_name.msg_name);\

80 
	`mem˝y
(
ôem_«me
.
msg_«me
,
row
[
_fi
],ôem_«me.
_
##msg_«me##
_Àn
 );

	)

84 
	#BIN_CPY_NEXT_FIELD_TO_CMESSAGE
(
msg_«me
Ë++
_fi
; \

85 
	`mysql_„tch_Àngths
(
ªs
); \

86 (
msg_«me
).
	`ªad_‰om_buf_ex
(
row
[
_fi
], 
ªs
->
Àngths
[_fi]);

	)

90 
	#INT_CPY_NEXT_FIELD
(
vÆue
 ) (vÆue)=
	`©oi_ß„
(
NEXT_FIELD
 )

	)

93 
	#DOUBLE_CPY_NEXT_FIELD
(
vÆue
 ) (vÆue)=
	`©of_ß„
(
NEXT_FIELD
 )

	)

95 
	#PB_INT_CPY_NEXT_FIELD
(
v
,
membî
 ) (v).
£t_
##
	`membî
(
	`©oi_ß„
(
NEXT_FIELD
 ));

	)

96 
	#PB_DOUBLE_CPY_NEXT_FIELD
(
v
,
membî
 ) (v).
£t_
##
	`membî
(
	`©of_ß„
(
NEXT_FIELD
 ));

	)

97 
	#PB_BIN_CPY_NEXT_FIELD
(
v
,
membî
Ë++
_fi
; \

98 
	`mysql_„tch_Àngths
(
ªs
); \

99 (
v
).
£t_
##
	`membî
(
°d
::
	`°rög
(
row
[
_fi
],
ªs
->
Àngths
[_fi]Ë);

	)

101 
	#PB_OBJ_CPY_NEXT_FIELD
(
v
,
membî
Ë++
_fi
; \

102 
	`mysql_„tch_Àngths
(
ªs
); \

103 ((
	`ty≥of
(
v
).
muèbÀ_
##
	`membî
(Ë)((v).muèbÀ_##membî()))->
	`P¨£FromAºay
(
row
[
_fi
],
ªs
->
Àngths
[_fi]);

	)

105 
	#BIN_CPY_NEXT_FIELD_TO_STRING
(
°r
 ) ++
_fi
; \

106 
	`mysql_„tch_Àngths
(
ªs
); \

107 (
°r
).
	`assign
(
row
[
_fi
],
ªs
->
Àngths
[_fi] );

	)

111 #ifde‡
DB_GET_LIST_NO_MALLOC


113 
	#STD_QUERY_WHILE_BEGIN
–
sql°r
,
µ_li°
,
p_cou¡
 ) \

114 { 
MYSQL_RES
 *
ªs
;\

115 
MYSQL_ROW
 
row
;\

116 
li°_size
;\

117 
i
;\

118 
this
->
db
->
id
=this->id;\

119 i‡(–
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
))==
DB_SUCC
){\

120 *
p_cou¡
=
	`mysql_num_rows
(
ªs
);\

121 *
µ_li°
 =(
	`ty≥of
(*µ_li°))
this
->
db£r_ªtu∫_buf
;\

122 
li°_size
 = (
	`ty≥of
(**
µ_li°
))*(*
p_cou¡
);\

123 if(
li°_size
 > 
PROTO_MAX_SIZE
 ){\

124 
	`DEBUG_LOG
("THE SYS_ERR");\

125  
SYS_ERR
;\

127 
	`mem£t
(*
µ_li°
,0,
PROTO_MAX_SIZE
 );\

128 
i
=0;\

129 (
row
 = 
	`mysql_„tch_row
(
ªs
))){\

130 
_fi
;\

131 
_fi
=-1;

	)

133 
	#STD_QUERY_WHILE_END
() \

134 
i
++;\

136 
	`mysql_‰ì_ªsu…
(
ªs
); \

137  
DB_SUCC
;\

139  
DB_ERR
;\

141 }

	)

143 #ñi‡
deföed
 
DB_GET_LIST_NEW


145 
	#STD_QUERY_WHILE_BEGIN
–
sql°r
,
ôem_li°
 ) \

147 
	`ty≥of
(
ôem_li°
)&
_ôem_li°
=item_list;\

148 
MYSQL_RES
 *
ªs
;\

149 
MYSQL_ROW
 
row
;\

150 
this
->
db
->
id
=this->id;\

151 i‡(–
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
))==
DB_SUCC
){\

152 
	`ty≥of
(
_ôem_li°
[0]Ë
ôem
 ;\

153 (
row
 = 
	`mysql_„tch_row
(
ªs
))){\

154 
_fi
;\

155 
_fi
=-1;

	)

158 
	#STD_QUERY_WHILE_END
() \

159 
_ôem_li°
.
	`push_back
(
ôem
);\

161 
	`mysql_‰ì_ªsu…
(
ªs
); \

162  
DB_SUCC
;\

164  
DB_ERR
;\

166 }

	)

171 
	#STD_QUERY_WHILE_BEGIN
–
sql°r
,
µ_li°
,
p_cou¡
 ) \

172 { 
MYSQL_RES
 *
ªs
;\

173 
MYSQL_ROW
 
row
;\

174 
i
;\

175 
this
->
db
->
id
=this->id;\

176 i‡(–
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
))==
DB_SUCC
){\

177 *
p_cou¡
=
	`mysql_num_rows
(
ªs
);\

178 i‡((*
µ_li°
 =–
	`ty≥of
(*µ_li°))
	`mÆloc
(\

179 (
	`ty≥of
(**
µ_li°
ËË*(*
p_cou¡
))Ë==
NULL
){\

180  
SYS_ERR
;\

182 
	`mem£t
(*
µ_li°
,0, (
	`ty≥of
(**µ_li°ËË*(*
p_cou¡
) );\

183 
i
=0;\

184 (
row
 = 
	`mysql_„tch_row
(
ªs
))){\

185 
_fi
;\

186 
_fi
=-1;

	)

189 
	#STD_QUERY_WHILE_END
() \

190 
i
++;\

192 
	`mysql_‰ì_ªsu…
(
ªs
); \

193  
DB_SUCC
;\

195  
DB_ERR
;\

197 }

	)

202 
	#STD_QUERY_WHILE_BEGIN_NEW
–
sql°r
,
ôem_li°
 ) \

204 
	`ty≥of
(
ôem_li°
)&
_ôem_li°
=(item_list);\

205 
MYSQL_RES
 *
ªs
;\

206 
MYSQL_ROW
 
row
;\

207 
this
->
db
->
id
=this->id;\

208 i‡(–
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
))==
DB_SUCC
){\

209 
	`ty≥of
(
_ôem_li°
[0]Ë
ôem
 ;\

210 (
row
 = 
	`mysql_„tch_row
(
ªs
))){\

211 
_fi
;\

212 
_fi
=-1;

	)

214 
	#STD_QUERY_WHILE_END_NEW
() \

215 
_ôem_li°
.
	`push_back
(
ôem
);\

217 
	`mysql_‰ì_ªsu…
(
ªs
); \

218  
DB_SUCC
;\

220  
DB_ERR
;\

222 }

	)

225 
	#STD_QUERY_ONE_BEGIN
–
sql°r
, 
no_födîr
 ) {\

226 
uöt32_t
 
ªt
;\

227 
MYSQL_RES
 *
ªs
;\

228 
MYSQL_ROW
 
row
;\

229 
rowcou¡
;\

230 
this
->
db
->
id
=this->id;\

231 
ªt
 =
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
);\

232 i‡(
ªt
==
DB_SUCC
){\

233 
rowcou¡
=
	`mysql_num_rows
(
ªs
);\

234 i‡(
rowcou¡
!=1) { \

235 
	`mysql_‰ì_ªsu…
(
ªs
); \

236 
	`DEBUG_LOG
("nÿ£À˘áÑec‹d [%u]",
no_födîr
 );\

237  
no_födîr
; \

239 
row

	`mysql_„tch_row
(
ªs
); \

240 
_fi
 ; _fi=-1;

	)

244 
	#STD_QUERY_ONE_END
()\

245 
	`mysql_‰ì_ªsu…
(
ªs
);\

246  
DB_SUCC
;\

249  
DB_ERR
; \

251 }

	)

253 
	#STD_QUERY_ONE_END_WITHOUT_RETURN
() \

254 
	`mysql_‰ì_ªsu…
(
ªs
); \

257  
DB_ERR
; \

259 }

	)

262 
	#PB_STD_QUERY_WHILE_BEGIN
–
sql°r
,
p_ôem_li°
,
membî
 ) \

264 
MYSQL_RES
 *
ªs
;\

265 
MYSQL_ROW
 
row
;\

266 
this
->
db
->
id
=this->id;\

267 i‡(–
this
->
db
->
	`exec_quîy_sql
(
sql°r
,&
ªs
))==
DB_SUCC
){\

268 (
row
 = 
	`mysql_„tch_row
(
ªs
))){\

269 
	`ty≥of
(*
p_ôem_li°
->
add_
##
	`membî
()Ë&
ôem
= *(p_item_list->add_##member());\

270 
_fi
;\

271 
_fi
=-1;

	)

274 
	#PB_STD_QUERY_WHILE_END
() \

276 
	`mysql_‰ì_ªsu…
(
ªs
); \

277  
DB_SUCC
;\

279  
DB_ERR
;\

281 }

	)

285 
	~<time.h
>

286 
ölöe
 
	$mysql_d©e
–*
d©e_°r
, 
time_t
 
t
 , 
Àn
 )

288  
	`°r·ime
(
d©e_°r
 ,
Àn
, "%Y/%m/%d %H:%M:%S", 
	`loˇ…ime
(&
t
));

289 
	}
}

290 
ölöe
 
	$gë_d©e
(
time_t
 
t
 )

292 
tm
 
tm_tmp
;

293 
	`loˇ…ime_r
(&
t
, &
tm_tmp
) ;

294  (
tm_tmp
.
tm_yór
+1900)*10000+—m_tmp.
tm_m⁄
+1)*100+tm_tmp.
tm_mday
;

295 
	}
}

297 
ölöe
 
	$gë_yór_m⁄th
(
time_t
 
t
 )

299 
tm
 
tm_tmp
;

300 
	`loˇ…ime_r
(&
t
, &
tm_tmp
) ;

301  (
tm_tmp
.
tm_yór
+1900)*100+tm_tmp.
tm_m⁄
+1;

302 
	}
}

305 
ölöe
 
uöt32_t
 
	$hash_°r
(c⁄° * 
key
 )

307 
h
;

308 *
p
;

309 
h
=0, 
p
 = (*)
key
; *p ;Ö++)

310 
h
 = 31 * h + *
p
;

311  
h
;

312 
	}
}

315 
ölöe
 c⁄° * 
c⁄fig_gë_°rvÆ_wôh_def
(c⁄° * 
key
,c⁄° * 
def
 ="" ){

316 c⁄° * 
v

c⁄fig_gë_°rvÆ
(
key
) ;

317 i‡–
	gv
!=
NULL
){

318  
v
;

320  
	gdef
;

324 
ölöe
 * 
	$£t_•a˚_íd
(* 
§c
, 
Àn
 )

326 
i
=0;

327 
i
<
Àn
 && 
§c
[i] !='\0' ) i++;

329 ;
i
<
Àn
;i++Ë
§c
[i]=' ';

330  
§c
 ;

332 
	}
}

	@/usr/include/dbser/mysql_iface.h

1 #i‚de‡
MYSQL_IFACE_H


2 
	#MYSQL_IFACE_H


	)

4 
	~<mysql.h
>

5 
	~<°dlib.h
>

6 
	~<mysqld_îr‹.h
>

7 
	~<îrmsg.h
>

8 
	~"öây≥s.h
"

9 
	~"db_îr‹_ba£.h
"

10 
	~"bích≠i.h
"

12 
	~<°rög
>

13 ˛as†
	cmysql_öãrÁ˚
 {

14 
	m¥iv©e
:

15 
ho°
[16];

16 
	mu£r
[16];

17 
	m∑ss
[16];

18 
	munix_sockë
[255];

19 
	mmysql_ch¨_£t
[255];

20 
	mp‹t
;

22 
	mis_log_debug_sql
;

24 
	mœ°_mysql_î∫o
;

25 
boﬁ
 
	mis_ã°_ív
;

26 
	m°d
::
°rög
 
£À˘_db_«me_fix
;

27 
	m°d
::
°rög
 
£À˘_db_«me
;

30 
boﬁ
 
	mis_£À˘_db_succ
;

33 
	mis_⁄ly_exec_£À˘_sql
;

35 
execsql
(c⁄° * 
cmd
);

36 
c⁄√˘_£rvî
 ();

38 
	mpublic
:

39 
MYSQL
 
h™dÀ
;

40 
uöt32_t
 
	mid
;

41 
mysql_öãrÁ˚
 ( c⁄° *
h
, c⁄° *
u
, c⁄° *
p
, 
p‹t
=3306,

42 c⁄° * 
a_unix_sockë
=
NULL
 ,c⁄° * 
ch¨_£t
=NULL );

43 ~
mysql_öãrÁ˚
 ();

44 
ölöe
 
boﬁ
 
	$gë_is_£À˘_db_succ
(){

45  
this
->
is_£À˘_db_succ
;

48 
ölöe
 
	$gë_œ°_mysql_î∫o
(){

49  
this
->
œ°_mysql_î∫o
;

50 
	}
}

52 
ölöe
 
	$£t_œ°_mysql_î∫o
(
vÆue
 ){

53 
this
->
œ°_mysql_î∫o
=
vÆue
;

54 
	}
}

57 
ölöe
 
	$£t_is_ã°_ív
(
boﬁ
 
vÆue
){

58 
this
->
is_ã°_ív
=
vÆue
;

59 
	}
}

64 c⁄° 
	$gë_î∫o
(Ë{  
	`mysql_î∫o
(&
h™dÀ
); 
	}
}

65 c⁄° * 
	$gë_îr‹
(Ë{  
	`mysql_îr‹
(&
h™dÀ
); 
	}
}

66 
show_îr‹_log
(c⁄° *
cmd
);

67 
£t_is_log_debug_sql
(
vÆue
 );

68 
	$£t_is_⁄ly_exec_£À˘_sql
(
vÆue
 ){

69 
this
->
is_⁄ly_exec_£À˘_sql
=
vÆue
;

70 
	}
};

72 
£À˘_db
 (*
db_«me
 );

75 
ölöe
 
	$£t_£À˘_db_°r_fix
 (c⁄° *
db_«me_fix
 ){

76 
this
->
£À˘_db_«me_fix
=
db_«me_fix
;

77 
this
->
£À˘_db_«me
="";

78 
this
->
is_£À˘_db_succ
=
åue
;

79 
	}
}

81 
exec_quîy_sql
 (c⁄° *
cmd
, 
MYSQL_RES
 **
ªsu…
);

82 
exec_upd©e_sql
(c⁄° *
cmd
, * 
af„˘ed_rows
 );

	@/usr/include/dbser/proto_base.pb.h

4 #i‚de‡
PROTOBUF_¥Ÿo_5fba£_2ïrŸo__INCLUDED


5 
	#PROTOBUF_¥Ÿo_5fba£_2ïrŸo__INCLUDED


	)

7 
	~<°rög
>

9 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

11 #i‡
GOOGLE_PROTOBUF_VERSION
 < 2004000

12 #îr‹ 
This
 
fûe
 
was
 
gíî©ed
 
by
 
a
 
√wî
 
vîsi⁄
 
of
 
¥Ÿoc
 
which
 
is


13 #îr‹ 
öcom∑tibÀ
 
wôh
 
your
 
PrŸocﬁ
 
Buf„r
 
hódîs
. 
PÀa£
 
upd©e


14 #îr‹ 
your
 
hódîs
.

16 #i‡2004001 < 
GOOGLE_PROTOBUF_MIN_PROTOC_VERSION


17 #îr‹ 
This
 
fûe
 
was
 
gíî©ed
 
by
 
™
 
ﬁdî
 
vîsi⁄
 
of
 
¥Ÿoc
 
which
 
is


18 #îr‹ 
öcom∑tibÀ
 
wôh
 
your
 
PrŸocﬁ
 
Buf„r
 
hódîs
. 
PÀa£


19 #îr‹ 
ªgíî©e
 
this
 
fûe
 
wôh
 
a
 
√wî
 
vîsi⁄
 
of
 
¥Ÿoc
.

22 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_utû.h
>

23 
	~<googÀ/¥Ÿobuf/ª≥©ed_fõld.h
>

24 
	~<googÀ/¥Ÿobuf/exãnsi⁄_£t.h
>

25 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_ªÊe˘i⁄.h
>

28 
«me•a˚
 
	g¥Ÿo_ba£
 {

31 
¥Ÿobuf_AddDesc_¥Ÿo_5fba£_2ïrŸo
();

32 
¥Ÿobuf_AssignDesc_¥Ÿo_5fba£_2ïrŸo
();

33 
¥Ÿobuf_ShutdownFûe_¥Ÿo_5fba£_2ïrŸo
();

35 
˛ass
 
	gcomm_¥Ÿo_hódî
;

36 
˛ass
 
	gmesßge_nuŒ
;

40 ˛as†
	ccomm_¥Ÿo_hódî
 : 
public
 ::
googÀ
::
¥Ÿobuf
::
Mesßge
 {

41 
public
:

42 
comm_¥Ÿo_hódî
();

43 
	gvútuÆ
 ~
comm_¥Ÿo_hódî
();

45 
comm_¥Ÿo_hódî
(c⁄° comm_¥Ÿo_hódî& 
‰om
);

47 
ölöe
 
	gcomm_¥Ÿo_hódî
& 
	g›î©‹
=(c⁄° 
comm_¥Ÿo_hódî
& 
‰om
) {

48 
C›yFrom
(
‰om
);

49  *
	gthis
;

52 
ölöe
 c⁄° ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
& 
unknown_fõlds
() const {

53  
_unknown_fõlds_
;

56 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
* 
muèbÀ_unknown_fõlds
() {

57  &
_unknown_fõlds_
;

60 c⁄° ::
googÀ
::
¥Ÿobuf
::
Des¸ùt‹
* 
des¸ùt‹
();

61 c⁄° 
	gcomm_¥Ÿo_hódî
& 
deÁu…_ö°™˚
();

63 
Sw≠
(
comm_¥Ÿo_hódî
* 
Ÿhî
);

67 
comm_¥Ÿo_hódî
* 
New
() const;

68 
C›yFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

69 
MîgeFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

70 
C›yFrom
(c⁄° 
comm_¥Ÿo_hódî
& 
‰om
);

71 
MîgeFrom
(c⁄° 
comm_¥Ÿo_hódî
& 
‰om
);

72 
CÀ¨
();

73 
boﬁ
 
IsInôülized
() const;

75 
ByãSize
() const;

76 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(

77 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedI≈utSåóm
* 
öput
);

78 
SîülizeWôhCachedSizes
(

79 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedOuçutSåóm
* 
ouçut
) const;

80 ::
googÀ
::
¥Ÿobuf
::
uöt8
* 
SîülizeWôhCachedSizesToAºay
(::googÀ::¥Ÿobuf::uöt8* 
ouçut
) const;

81 
GëCachedSize
(Ëc⁄° {  
	g_ˇched_size_
; }

82 
	g¥iv©e
:

83 
Sh¨edCt‹
();

84 
Sh¨edDt‹
();

85 
SëCachedSize
(
size
) const;

86 
	gpublic
:

88 ::
googÀ
::
¥Ÿobuf
::
Mëad©a
 
GëMëad©a
() const;

95 
ölöe
 
boﬁ
 
has_msg_ty≥_«me
() const;

96 
ölöe
 
˛ór_msg_ty≥_«me
();

97 c⁄° 
	gkMsgTy≥NameFõldNumbî
 = 1;

98 
ölöe
 c⁄° ::
°d
::
°rög
& 
msg_ty≥_«me
() const;

99 
ölöe
 
£t_msg_ty≥_«me
(c⁄° ::
°d
::
°rög
& 
vÆue
);

100 
ölöe
 
£t_msg_ty≥_«me
(c⁄° * 
vÆue
);

101 
ölöe
 
£t_msg_ty≥_«me
(c⁄° * 
vÆue
, 
size_t
 
size
);

102 
	gölöe
 ::
°d
::
°rög
* 
muèbÀ_msg_ty≥_«me
();

103 
	gölöe
 ::
°d
::
°rög
* 
ªÀa£_msg_ty≥_«me
();

106 
ölöe
 
boﬁ
 
has_u£rid
() const;

107 
ölöe
 
˛ór_u£rid
();

108 c⁄° 
	gkU£ridFõldNumbî
 = 2;

109 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
u£rid
() const;

110 
ölöe
 
£t_u£rid
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

113 
ölöe
 
boﬁ
 
has_ªsu…
() const;

114 
ölöe
 
˛ór_ªsu…
();

115 c⁄° 
	gkResu…FõldNumbî
 = 3;

116 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
ªsu…
() const;

117 
ölöe
 
£t_ªsu…
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

120 
ölöe
 
boﬁ
 
has_v_ex1
() const;

121 
ölöe
 
˛ór_v_ex1
();

122 c⁄° 
	gkVEx1FõldNumbî
 = 4;

123 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex1
() const;

124 
ölöe
 
£t_v_ex1
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

127 
ölöe
 
boﬁ
 
has_v_ex2
() const;

128 
ölöe
 
˛ór_v_ex2
();

129 c⁄° 
	gkVEx2FõldNumbî
 = 5;

130 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex2
() const;

131 
ölöe
 
£t_v_ex2
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

134 
ölöe
 
boﬁ
 
has_v_ex3
() const;

135 
ölöe
 
˛ór_v_ex3
();

136 c⁄° 
	gkVEx3FõldNumbî
 = 6;

137 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex3
() const;

138 
ölöe
 
£t_v_ex3
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

141 
ölöe
 
boﬁ
 
has_s_ex4
() const;

142 
ölöe
 
˛ór_s_ex4
();

143 c⁄° 
	gkSEx4FõldNumbî
 = 7;

144 
ölöe
 c⁄° ::
°d
::
°rög
& 
s_ex4
() const;

145 
ölöe
 
£t_s_ex4
(c⁄° ::
°d
::
°rög
& 
vÆue
);

146 
ölöe
 
£t_s_ex4
(c⁄° * 
vÆue
);

147 
ölöe
 
£t_s_ex4
(c⁄° * 
vÆue
, 
size_t
 
size
);

148 
	gölöe
 ::
°d
::
°rög
* 
muèbÀ_s_ex4
();

149 
	gölöe
 ::
°d
::
°rög
* 
ªÀa£_s_ex4
();

152 
ölöe
 
boﬁ
 
has_v_ex5
() const;

153 
ölöe
 
˛ór_v_ex5
();

154 c⁄° 
	gkVEx5FõldNumbî
 = 8;

155 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex5
() const;

156 
ölöe
 
£t_v_ex5
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
);

159 
	g¥iv©e
:

160 
ölöe
 
£t_has_msg_ty≥_«me
();

161 
ölöe
 
˛ór_has_msg_ty≥_«me
();

162 
ölöe
 
£t_has_u£rid
();

163 
ölöe
 
˛ór_has_u£rid
();

164 
ölöe
 
£t_has_ªsu…
();

165 
ölöe
 
˛ór_has_ªsu…
();

166 
ölöe
 
£t_has_v_ex1
();

167 
ölöe
 
˛ór_has_v_ex1
();

168 
ölöe
 
£t_has_v_ex2
();

169 
ölöe
 
˛ór_has_v_ex2
();

170 
ölöe
 
£t_has_v_ex3
();

171 
ölöe
 
˛ór_has_v_ex3
();

172 
ölöe
 
£t_has_s_ex4
();

173 
ölöe
 
˛ór_has_s_ex4
();

174 
ölöe
 
£t_has_v_ex5
();

175 
ölöe
 
˛ór_has_v_ex5
();

177 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
 
_unknown_fõlds_
;

179 ::
°d
::
°rög
* 
msg_ty≥_«me_
;

180 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
u£rid_
;

181 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
ªsu…_
;

182 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex1_
;

183 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex2_
;

184 ::
°d
::
°rög
* 
s_ex4_
;

185 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex3_
;

186 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
v_ex5_
;

188 
muèbÀ
 
	g_ˇched_size_
;

189 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
_has_bôs_
[(8 + 31) / 32];

191 
‰õnd
 
¥Ÿobuf_AddDesc_¥Ÿo_5fba£_2ïrŸo
();

192 
‰õnd
 
¥Ÿobuf_AssignDesc_¥Ÿo_5fba£_2ïrŸo
();

193 
‰õnd
 
¥Ÿobuf_ShutdownFûe_¥Ÿo_5fba£_2ïrŸo
();

195 
InôAsDeÁu…In°™˚
();

196 
comm_¥Ÿo_hódî
* 
	gdeÁu…_ö°™˚_
;

200 ˛as†
	cmesßge_nuŒ
 : 
public
 ::
googÀ
::
¥Ÿobuf
::
Mesßge
 {

201 
public
:

202 
mesßge_nuŒ
();

203 
	gvútuÆ
 ~
mesßge_nuŒ
();

205 
mesßge_nuŒ
(c⁄° mesßge_nuŒ& 
‰om
);

207 
ölöe
 
	gmesßge_nuŒ
& 
	g›î©‹
=(c⁄° 
mesßge_nuŒ
& 
‰om
) {

208 
C›yFrom
(
‰om
);

209  *
	gthis
;

212 
ölöe
 c⁄° ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
& 
unknown_fõlds
() const {

213  
_unknown_fõlds_
;

216 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
* 
muèbÀ_unknown_fõlds
() {

217  &
_unknown_fõlds_
;

220 c⁄° ::
googÀ
::
¥Ÿobuf
::
Des¸ùt‹
* 
des¸ùt‹
();

221 c⁄° 
	gmesßge_nuŒ
& 
deÁu…_ö°™˚
();

223 
Sw≠
(
mesßge_nuŒ
* 
Ÿhî
);

227 
mesßge_nuŒ
* 
New
() const;

228 
C›yFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

229 
MîgeFrom
(c⁄° ::
googÀ
::
¥Ÿobuf
::
Mesßge
& 
‰om
);

230 
C›yFrom
(c⁄° 
mesßge_nuŒ
& 
‰om
);

231 
MîgeFrom
(c⁄° 
mesßge_nuŒ
& 
‰om
);

232 
CÀ¨
();

233 
boﬁ
 
IsInôülized
() const;

235 
ByãSize
() const;

236 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(

237 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedI≈utSåóm
* 
öput
);

238 
SîülizeWôhCachedSizes
(

239 ::
googÀ
::
¥Ÿobuf
::
io
::
CodedOuçutSåóm
* 
ouçut
) const;

240 ::
googÀ
::
¥Ÿobuf
::
uöt8
* 
SîülizeWôhCachedSizesToAºay
(::googÀ::¥Ÿobuf::uöt8* 
ouçut
) const;

241 
GëCachedSize
(Ëc⁄° {  
	g_ˇched_size_
; }

242 
	g¥iv©e
:

243 
Sh¨edCt‹
();

244 
Sh¨edDt‹
();

245 
SëCachedSize
(
size
) const;

246 
	gpublic
:

248 ::
googÀ
::
¥Ÿobuf
::
Mëad©a
 
GëMëad©a
() const;

255 
	g¥iv©e
:

257 ::
googÀ
::
¥Ÿobuf
::
UnknownFõldSë
 
_unknown_fõlds_
;

260 
muèbÀ
 
	g_ˇched_size_
;

261 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
_has_bôs_
[1];

263 
‰õnd
 
¥Ÿobuf_AddDesc_¥Ÿo_5fba£_2ïrŸo
();

264 
‰õnd
 
¥Ÿobuf_AssignDesc_¥Ÿo_5fba£_2ïrŸo
();

265 
‰õnd
 
¥Ÿobuf_ShutdownFûe_¥Ÿo_5fba£_2ïrŸo
();

267 
InôAsDeÁu…In°™˚
();

268 
mesßge_nuŒ
* 
	gdeÁu…_ö°™˚_
;

278 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_msg_ty≥_«me
() const {

279  (
_has_bôs_
[0] & 0x00000001u) != 0;

280 
	}
}

281 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_msg_ty≥_«me
() {

282 
_has_bôs_
[0] |= 0x00000001u;

283 
	}
}

284 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_msg_ty≥_«me
() {

285 
_has_bôs_
[0] &= ~0x00000001u;

286 
	}
}

287 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_msg_ty≥_«me
() {

288 i‡(
msg_ty≥_«me_
 !&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

289 
msg_ty≥_«me_
->
	`˛ór
();

291 
	`˛ór_has_msg_ty≥_«me
();

292 
	}
}

293 
ölöe
 c⁄° ::
°d
::
°rög
& 
comm_¥Ÿo_hódî
::
	$msg_ty≥_«me
() const {

294  *
msg_ty≥_«me_
;

295 
	}
}

296 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_msg_ty≥_«me
(c⁄° ::
°d
::
°rög
& 
vÆue
) {

297 
£t_has_msg_ty≥_«me
();

298 i‡(
	gmsg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

299 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

301 
	gmsg_ty≥_«me_
->
assign
(
vÆue
);

303 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_msg_ty≥_«me
(c⁄° * 
vÆue
) {

304 
	`£t_has_msg_ty≥_«me
();

305 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

306 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

308 
msg_ty≥_«me_
->
	`assign
(
vÆue
);

309 
	}
}

310 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_msg_ty≥_«me
(c⁄° * 
vÆue
, 
size_t
 
size
) {

311 
	`£t_has_msg_ty≥_«me
();

312 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

313 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

315 
msg_ty≥_«me_
->
	`assign
(
ªöãΩªt_ˇ°
<c⁄° *>(
vÆue
), 
size
);

316 
	}
}

317 
	gölöe
 ::
°d
::
°rög
* 
comm_¥Ÿo_hódî
::
	$muèbÀ_msg_ty≥_«me
() {

318 
	`£t_has_msg_ty≥_«me
();

319 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

320 
msg_ty≥_«me_
 = 
√w
 ::
°d
::
°rög
;

322  
msg_ty≥_«me_
;

323 
	}
}

324 
	gölöe
 ::
°d
::
°rög
* 
comm_¥Ÿo_hódî
::
	$ªÀa£_msg_ty≥_«me
() {

325 
	`˛ór_has_msg_ty≥_«me
();

326 i‡(
msg_ty≥_«me_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

327  
NULL
;

329 ::
°d
::
°rög
* 
ãmp
 = 
msg_ty≥_«me_
;

330 
msg_ty≥_«me_
 = 
c⁄°_ˇ°
< ::
°d
::
°rög
*>(&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
);

331  
ãmp
;

333 
	}
}

336 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_u£rid
() const {

337  (
_has_bôs_
[0] & 0x00000002u) != 0;

338 
	}
}

339 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_u£rid
() {

340 
_has_bôs_
[0] |= 0x00000002u;

341 
	}
}

342 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_u£rid
() {

343 
_has_bôs_
[0] &= ~0x00000002u;

344 
	}
}

345 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_u£rid
() {

346 
u£rid_
 = 0u;

347 
	`˛ór_has_u£rid
();

348 
	}
}

349 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$u£rid
() const {

350  
u£rid_
;

351 
	}
}

352 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_u£rid
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

353 
£t_has_u£rid
();

354 
	gu£rid_
 = 
vÆue
;

358 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_ªsu…
() const {

359  (
_has_bôs_
[0] & 0x00000004u) != 0;

360 
	}
}

361 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_ªsu…
() {

362 
_has_bôs_
[0] |= 0x00000004u;

363 
	}
}

364 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_ªsu…
() {

365 
_has_bôs_
[0] &= ~0x00000004u;

366 
	}
}

367 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_ªsu…
() {

368 
ªsu…_
 = 0u;

369 
	`˛ór_has_ªsu…
();

370 
	}
}

371 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$ªsu…
() const {

372  
ªsu…_
;

373 
	}
}

374 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_ªsu…
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

375 
£t_has_ªsu…
();

376 
	gªsu…_
 = 
vÆue
;

380 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_v_ex1
() const {

381  (
_has_bôs_
[0] & 0x00000008u) != 0;

382 
	}
}

383 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_v_ex1
() {

384 
_has_bôs_
[0] |= 0x00000008u;

385 
	}
}

386 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_v_ex1
() {

387 
_has_bôs_
[0] &= ~0x00000008u;

388 
	}
}

389 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_v_ex1
() {

390 
v_ex1_
 = 0u;

391 
	`˛ór_has_v_ex1
();

392 
	}
}

393 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$v_ex1
() const {

394  
v_ex1_
;

395 
	}
}

396 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_v_ex1
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

397 
£t_has_v_ex1
();

398 
	gv_ex1_
 = 
vÆue
;

402 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_v_ex2
() const {

403  (
_has_bôs_
[0] & 0x00000010u) != 0;

404 
	}
}

405 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_v_ex2
() {

406 
_has_bôs_
[0] |= 0x00000010u;

407 
	}
}

408 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_v_ex2
() {

409 
_has_bôs_
[0] &= ~0x00000010u;

410 
	}
}

411 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_v_ex2
() {

412 
v_ex2_
 = 0u;

413 
	`˛ór_has_v_ex2
();

414 
	}
}

415 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$v_ex2
() const {

416  
v_ex2_
;

417 
	}
}

418 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_v_ex2
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

419 
£t_has_v_ex2
();

420 
	gv_ex2_
 = 
vÆue
;

424 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_v_ex3
() const {

425  (
_has_bôs_
[0] & 0x00000020u) != 0;

426 
	}
}

427 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_v_ex3
() {

428 
_has_bôs_
[0] |= 0x00000020u;

429 
	}
}

430 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_v_ex3
() {

431 
_has_bôs_
[0] &= ~0x00000020u;

432 
	}
}

433 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_v_ex3
() {

434 
v_ex3_
 = 0u;

435 
	`˛ór_has_v_ex3
();

436 
	}
}

437 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$v_ex3
() const {

438  
v_ex3_
;

439 
	}
}

440 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_v_ex3
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

441 
£t_has_v_ex3
();

442 
	gv_ex3_
 = 
vÆue
;

446 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_s_ex4
() const {

447  (
_has_bôs_
[0] & 0x00000040u) != 0;

448 
	}
}

449 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_s_ex4
() {

450 
_has_bôs_
[0] |= 0x00000040u;

451 
	}
}

452 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_s_ex4
() {

453 
_has_bôs_
[0] &= ~0x00000040u;

454 
	}
}

455 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_s_ex4
() {

456 i‡(
s_ex4_
 !&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

457 
s_ex4_
->
	`˛ór
();

459 
	`˛ór_has_s_ex4
();

460 
	}
}

461 
ölöe
 c⁄° ::
°d
::
°rög
& 
comm_¥Ÿo_hódî
::
	$s_ex4
() const {

462  *
s_ex4_
;

463 
	}
}

464 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_s_ex4
(c⁄° ::
°d
::
°rög
& 
vÆue
) {

465 
£t_has_s_ex4
();

466 i‡(
	gs_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

467 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

469 
	gs_ex4_
->
assign
(
vÆue
);

471 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_s_ex4
(c⁄° * 
vÆue
) {

472 
	`£t_has_s_ex4
();

473 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

474 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

476 
s_ex4_
->
	`assign
(
vÆue
);

477 
	}
}

478 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_s_ex4
(c⁄° * 
vÆue
, 
size_t
 
size
) {

479 
	`£t_has_s_ex4
();

480 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

481 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

483 
s_ex4_
->
	`assign
(
ªöãΩªt_ˇ°
<c⁄° *>(
vÆue
), 
size
);

484 
	}
}

485 
	gölöe
 ::
°d
::
°rög
* 
comm_¥Ÿo_hódî
::
	$muèbÀ_s_ex4
() {

486 
	`£t_has_s_ex4
();

487 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

488 
s_ex4_
 = 
√w
 ::
°d
::
°rög
;

490  
s_ex4_
;

491 
	}
}

492 
	gölöe
 ::
°d
::
°rög
* 
comm_¥Ÿo_hódî
::
	$ªÀa£_s_ex4
() {

493 
	`˛ór_has_s_ex4
();

494 i‡(
s_ex4_
 =&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
) {

495  
NULL
;

497 ::
°d
::
°rög
* 
ãmp
 = 
s_ex4_
;

498 
s_ex4_
 = 
c⁄°_ˇ°
< ::
°d
::
°rög
*>(&::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
);

499  
ãmp
;

501 
	}
}

504 
ölöe
 
boﬁ
 
	gcomm_¥Ÿo_hódî
::
	$has_v_ex5
() const {

505  (
_has_bôs_
[0] & 0x00000080u) != 0;

506 
	}
}

507 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$£t_has_v_ex5
() {

508 
_has_bôs_
[0] |= 0x00000080u;

509 
	}
}

510 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_has_v_ex5
() {

511 
_has_bôs_
[0] &= ~0x00000080u;

512 
	}
}

513 
ölöe
 
	gcomm_¥Ÿo_hódî
::
	$˛ór_v_ex5
() {

514 
v_ex5_
 = 0u;

515 
	`˛ór_has_v_ex5
();

516 
	}
}

517 
	gölöe
 ::
googÀ
::
¥Ÿobuf
::
uöt32
 
comm_¥Ÿo_hódî
::
	$v_ex5
() const {

518  
v_ex5_
;

519 
	}
}

520 
ölöe
 
	gcomm_¥Ÿo_hódî
::
£t_v_ex5
(::
googÀ
::
¥Ÿobuf
::
uöt32
 
vÆue
) {

521 
£t_has_v_ex5
();

522 
	gv_ex5_
 = 
vÆue
;

534 #i‚de‡
SWIG


535 
«me•a˚
 
	ggoogÀ
 {

536 
«me•a˚
 
	g¥Ÿobuf
 {

	@/usr/include/dbser/proto_header.h

19 #i‚de‡ 
PROTO_HEADER_INC


20 
	#PROTO_HEADER_INC


	)

21 
	~<öây≥s.h
>

22 
	~<°rög.h
>

23 
	~<°dlib.h
>

25 
uöt32_t
 
	tu£rid_t
;

27 
	s°ru_db_ˇche_°©e
 {

28 
boﬁ
 
	må™ß˘i⁄_›í_Êag
;

30 
°ru_db_ˇche_°©e
 
g_db_ˇche_°©e
;

32 
	s¥Ÿo_hódî
{

33 
uöt32_t
 
	m¥Ÿo_Àngth
;

34 
uöt32_t
 
	m¥Ÿo_id
;

35 
uöt16_t
 
	mcmd_id
;

36 
öt32_t
 
	mªsu…
;

37 
u£rid_t
 
	mid
;

38 #ifde‡ 
GF_PROTO_HEADER


39 
uöt32_t
 
	mrﬁe_tm
;

42 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tPROTO_HEADER
;

43 
¥Ÿo_hódî
 
	t¥Ÿo_hódî_t
;

46 
	#RROTO_ROUTE_FIELD
 0xFE00

47 

	)

50 
	#NEED_UPDATE
 0x0100

	)

52 
	#PROTO_MAX_SIZE
 81920

	)

53 
	#PROTO_HEADER_SIZE
 ( (
PROTO_HEADER
))

	)

55 
	#RECVBUF_HEADER
 ((
PROTO_HEADER
*)
ªcvbuf
)

	)

56 
	#SNDBUF_PRIVATE_POS
 (((*)*
£ndbuf
)+
PROTO_HEADER_SIZE
 )

	)

57 
	#RCVBUF_PRIVATE_POS
 ((*)
ªcvbuf
 +
PROTO_HEADER_SIZE
 )

	)

59 
	#RECVBUF_USERID
 (
RECVBUF_HEADER
->
id
)

	)

60 
	#RECVBUF_GROUPID
 (
RECVBUF_HEADER
->
id
)

	)

61 
	#RECVBUF_CMDID
 (
RECVBUF_HEADER
->
cmd_id
)

	)

62 
	#USER_ID_FROM_RECVBUF
 
RECVBUF_USERID


	)

63 
	#RECVLEN_FROM_RECVBUF
 (
RECVBUF_HEADER
->
¥Ÿo_Àngth
)

	)

64 
	#PROTOID_FROM_RECVBUF
 (
RECVBUF_HEADER
->
¥Ÿo_id
)

	)

65 
	#PRI_IN_LEN
 (
RECVLEN_FROM_RECVBUF
-
PROTO_HEADER_SIZE
)

	)

66 
	#PRI_IN_POS
 (
	`ty≥of
(
p_ö
))(
RCVBUF_PRIVATE_POS
)

	)

67 
	#PRI_SEND_IN_POS
 (
	`ty≥of
(
ö
))(
£ndbuf
+
PROTO_HEADER_SIZE
 )

	)

68 
	#SET_STD_ERR_BUF
(
£ndbuf
,
¢dÀn
,
rcvph
,
ªt
Ë
	`£t_°d_ªtu∫
(£ndbuf,¢dÀn,rcvph,ªt,0)

	)

69 
ölöe
 
boﬁ
 
	$£t_°d_ªtu∫_p
(*
£ndbuf
, * 
¢dÀn
,

70 
PROTO_HEADER
 * 
rcvph
,
uöt32_t
 
¥Ÿoid
 ,
ªt
, uöt32_à
¥iv©e_size
 )

72 
PROTO_HEADER
 *
ph
;

73 *
¢dÀn
=
PROTO_HEADER_SIZE
+
¥iv©e_size
;

74 i‡(*
¢dÀn
>81920000){

75  
Ál£
;

77 
ph
=(
PROTO_HEADER
*)
£ndbuf
;

78 
	`mem˝y
 (
ph
,
rcvph
,
PROTO_HEADER_SIZE
);

79 
ph
->
¥Ÿo_Àngth
=*
¢dÀn
;

80 
ph
->
¥Ÿo_id
=
¥Ÿoid
;

81 
ph
->
ªsu…
=
ªt
;

82  
åue
;

83 
	}
}

85 
ölöe
 
	$£t_db_¥Ÿo_buf
–* 
£nd_buf
,
uöt16_t
 
cmdid
 ,
uöt32_t
 
u£rid
, uöt32_à
¥iv©e_size
 )

87 
PROTO_HEADER
 *
ph
=(PROTO_HEADER*)(
£nd_buf
);

88 
	`mem£t
(
ph
,0,
PROTO_HEADER_SIZE
);

89 
ph
->
¥Ÿo_Àngth
=
PROTO_HEADER_SIZE
+
¥iv©e_size
 ;

90 
ph
->
cmd_id
=
cmdid
 ;

91 
ph
->
id
=
u£rid
;

92 
	}
}

94 
ölöe
 
boﬁ
 
	$£t_°d_ªtu∫
(**
£ndbuf
, * 
¢dÀn
,

95 
PROTO_HEADER
 * 
rcvph
,
ªt
, 
uöt32_t
 
¥iv©e_size
 ,

96 
uöt32_t
 
¥Ÿo_hódî_Àn
 =
PROTO_HEADER_SIZE
 )

98 
PROTO_HEADER
 *
ph
;

99 *
¢dÀn
=
¥Ÿo_hódî_Àn
 +
¥iv©e_size
;

100 i‡(*
¢dÀn
>81920000){

101  
Ál£
;

103 i‡(!(*
£ndbuf
 = (*)
	`mÆloc
(*
¢dÀn
))) {

104  
Ál£
;

107 
ph
=(
PROTO_HEADER
*)*
£ndbuf
;

108 
	`mem˝y
 (
ph
,
rcvph
,
¥Ÿo_hódî_Àn
 );

109 
ph
->
¥Ÿo_Àngth
=*
¢dÀn
;

110 
ph
->
ªsu…
=
ªt
;

111  
åue
;

112 
	}
}

113 
ölöe
 
	$£t_¥Ÿo_buf
(*
£ndbuf
, 
cmd_id
, 
u£rid_t
 
u£rid
,

114 * 
¥i_∑π
, 
uöt32_t
 
¥i_size
 )

116 
PROTO_HEADER
 *
ph
=(PROTO_HEADER *)
£ndbuf
 ;

117 
ph
->
¥Ÿo_Àngth
=
PROTO_HEADER_SIZE
+
¥i_size
;

118 
ph
->
cmd_id
= cmd_id;

119 
ph
->
¥Ÿo_id
=0x12345678;

120 
ph
->
id
=
u£rid
;

121 
ph
->
ªsu…
=0;

122 
	`mem˝y
((
£ndbuf
+
PROTO_HEADER_SIZE
), 
¥i_∑π
,
¥i_size
);

123  
ph
->
¥Ÿo_Àngth
;

124 
	}
}

125 
ölöe
 
	$£t_¥Ÿo_hódî
(*
£ndbuf
, 
uöt16_t
 
cmd_id
,
uöt32_t
 
¥Ÿo_id
,

126 
u£rid_t
 
u£rid
, 
uöt32_t
 
¥i_size
=0 ,
ªsu…
=0 )

128 
PROTO_HEADER
 *
ph
=(PROTO_HEADER *)
£ndbuf
 ;

129 
ph
->
¥Ÿo_Àngth
=
PROTO_HEADER_SIZE
+
¥i_size
;

130 
ph
->
cmd_id
= cmd_id;

131 
ph
->
¥Ÿo_id
=proto_id;

132 
ph
->
id
=
u£rid
;

133 
ph
->
ªsu…
=0;

134  
ph
->
¥Ÿo_Àngth
;

135 
	}
}

	@/usr/include/dbser/proxy_dll_interface.h

18 #i‚de‡ 
¥oxy_dŒ_öãrÁ˚_ö˛


19 
	#¥oxy_dŒ_öãrÁ˚_ö˛


	)

21 
	~<async_£rv/√t_if.h
>

23 
	#PROXY_PAGE_SIZE
 16384

	)

26 
uöt32_t
 
g_˛õ¡_¥Ÿo_id
;

27 
	~"¥Ÿo_hódî.h
"

29 
	s°ru_¥i_buf
{

30 
uöt32_t
 
	m°©e
;

31 
	mbuf
[20];

32 * 
	mp_ex_buf
;

34 
	s°ru_˛õ¡_öfo
{

37 
fd£ssi⁄_t
* 
	mp_˛õ¡
;

38 
uöt32_t
 
	m˛õ¡_¥Ÿoid
;

39 
uöt16_t
 
	m˛õ¡_cmdid
;

40 
uöt32_t
 
	m˛õ¡_u£rid
;

41 
	m£nd_fd
;

43 
uöt32_t
 
	mdb_u£rid
;

46 
°ru_¥i_buf
 
	m¥i_buf
;

53 
	eíum_£nd_pkg_Êag
{

54 
	mFLAG_NULL
=0,

55 
	mFLAG_SEND_TO_CLIENT
=1,

56 
	mFLAG_SEND_TO_SERVER
=2

62 
	s°ru_¥oxy_öãrÁ˚_out
{

63 
íum_£nd_pkg_Êag
 
	m£nd_pkg_Êag
;

65 
uöt32_t
 
	m£nd_˛õ¡_ªsu…
;

67 
uöt32_t
 
	m£nd_˛õ¡_¥iv©e_buf_Àn
;

69 
	m£nd_˛õ¡_¥iv©e_buf
[
PROXY_PAGE_SIZE
];

73 
	m£nd_£rvî_buf
[
PROXY_PAGE_SIZE
];

76 
£t_£nd_to_˛õ¡_wôhout_buf
–
uöt32_t
 
£nd_˛õ¡_ªsu…
 ,

77 
uöt32_t
 
£nd_˛õ¡_¥iv©e_buf_Àn
=0)

79 
this
->
£nd_pkg_Êag
=
FLAG_SEND_TO_CLIENT
;

80 
	mthis
->
	m£nd_˛õ¡_ªsu…
=
£nd_˛õ¡_ªsu…
 ;

81 
	mthis
->
	m£nd_˛õ¡_¥iv©e_buf_Àn
=
£nd_˛õ¡_¥iv©e_buf_Àn
;

85 
£t_£nd_to_£rvî_wôhout_buf
–
uöt16_t
 
cmdid
 ,
uöt32_t
 
u£rid
, uöt32_à
¥iv©e_size
 )

87 
	mthis
->
	m£nd_pkg_Êag
=
FLAG_SEND_TO_SERVER
;

88 
PROTO_HEADER
 *
	mph
=(PROTO_HEADER*)(
this
->
£nd_£rvî_buf
);

89 
mem£t
(
ph
,0,
PROTO_HEADER_SIZE
);

90 
	mph
->
	m¥Ÿo_Àngth
=
PROTO_HEADER_SIZE
+
¥iv©e_size
 ;

91 
	mph
->
	mcmd_id
=
cmdid
 ;

92 
	mph
->
	mid
=
u£rid
;

100 
	s°ru_lib_öfo
{

101 
	mlib_«me
[32];

102 
	mvîsi⁄
[32];

108 "C" 
¥oxy_gë_lib_öfo
(
°ru_lib_öfo
 *
p_out
 );

110 "C" 
¥oxy_öô_£rvi˚
 ();

112 "C" 
¥oxy_föi_£rvi˚
 ();

118 "C" 
¥oxy_¥o˚ss_˛õ¡_cmd
(* 
ªcvbuf
,
ªcvÀn
, 
°ru_˛õ¡_öfo
 * 
p_˛õ¡_öfo
 ,

119 
°ru_¥oxy_öãrÁ˚_out
 *
p_out
);

125 "C" 
¥oxy_¥o˚ss_£rv_ªtu∫
(* 
ªcvbuf
,
ªcvÀn
,
°ru_¥i_buf
 * 
p_¥i_buf
 ,

126 
°ru_¥oxy_öãrÁ˚_out
 *
p_out
 );

	@/usr/include/dbser/proxy_route.h

19 #i‚de‡ 
¥oxy_rouã


20 
	#¥oxy_rouã


	)

25 
	#GET_ROUTE
(
cmdid
Ë((cmdid&0x8000)?(70+((cmdid&0x7E00)>>6)+((cmdid &0x00E0)>>5)):(cmdid>>9))

	)

26 
	#gë_db_ty≥
–
cmdid
 ) 
	`íum_rouã_ty≥
–
	`GET_ROUTE
(cmdidË)

	)

29 
	eíum_rouã_ty≥
 {

30 
	mROUTE_NULL
=-1,

31 
	mROUTE_USERINFO
=
GET_ROUTE
(0x0000),

32 
	mROUTE_XHX
=
GET_ROUTE
(0x0200),

33 
	mROUTE_XHXOTHER
=
GET_ROUTE
(0x0400),

34 
	mROUTE_GF
=
GET_ROUTE
(0x0600),

35 
	mROUTE_MOLE2
=
GET_ROUTE
(0x0800),

36 
	mROUTE_SESSION
=
GET_ROUTE
(0x0A00),

37 
	mROUTE_REG_USERID
=
GET_ROUTE
(0x0C00),

38 
	mROUTE_GF_OTHER
=
GET_ROUTE
(0x0E00),

40 
	mROUTE_USER
=
GET_ROUTE
(0x1000),

41 
	mROUTE_PAIPAI_2
=
GET_ROUTE
(0x1200),

42 
	mROUTE_HOPE
=
GET_ROUTE
(0x1400),

43 
	mROUTE_PAIPAI
=
GET_ROUTE
(0x1800),

44 
	mROUTE_PP_EMAIL
=
GET_ROUTE
(0x1A00),

45 
	mROUTE_DD
=
GET_ROUTE
(0x1C00),

48 
	mROUTE_VIP
=
GET_ROUTE
(0x2000),

49 
	mROUTE_MOLE_DINING
=
GET_ROUTE
(0x2200),

50 
	mROUTE_PRODUCE
=
GET_ROUTE
(0x2400),

51 
	mROUTE_BAOBAO
=
GET_ROUTE
(0x2800),

53 
	mROUTE_USER_2
=
GET_ROUTE
(0x3000),

54 
	mROUTE_GROUPMAIN
=
GET_ROUTE
(0x3400),

55 
	mROUTE_PPTASKDAY
=
GET_ROUTE
(0x3800),

56 
	mROUTE_USER_LOGIN
=
GET_ROUTE
(0x3C00),

58 
	mROUTE_EMAIL
=
GET_ROUTE
(0x4000),

59 
	mROUTE_MMS
=
GET_ROUTE
(0x4400),

60 
	mROUTE_PPOTHER
=
GET_ROUTE
(0x4800),

62 
	mROUTE_GAME_SCORE
=
GET_ROUTE
(0x5000),

63 
	mROUTE_ADMIN
=
GET_ROUTE
(0x5400),

64 
	mROUTE_PP_PK_TEAM
=
GET_ROUTE
(0x5800),

66 
	mROUTE_SERIAL
=
GET_ROUTE
(0x6000),

67 
	mROUTE_PARTY
=
GET_ROUTE
(0x6400),

69 
	mROUTE_MSGBOARD
=
GET_ROUTE
(0x7000),

70 
	mROUTE_MOLE_NOAH
=
GET_ROUTE
(0x7200),

71 
	mROUTE_PICTURE
=
GET_ROUTE
(0x7400),

73 
	mROUTE_GAME
=
GET_ROUTE
(0x8000),

74 
	mROUTE_USERMSG
 =
GET_ROUTE
(0x9000),

76 
	mROUTE_SU
=
GET_ROUTE
(0xA000),

78 
	mROUTE_ROOM
=
GET_ROUTE
(0xB400),

79 
	mROUTE_ROOM_2
=
GET_ROUTE
(0xB420),

80 
	mROUTE_ROOM_4
=
GET_ROUTE
(0xB440),

81 
	mROUTE_ROOM_6
=
GET_ROUTE
(0xB460),

82 
	mROUTE_ROOM_8
=
GET_ROUTE
(0xB480),

84 
	mROUTE_SYSARG
=
GET_ROUTE
(0xC000),

85 
	mROUTE_SYSARG_2
=
GET_ROUTE
(0xC020),

86 
	mROUTE_SYSARG_4
=
GET_ROUTE
(0xC040),

87 
	mROUTE_SYSARG_6
=
GET_ROUTE
(0xC060),

89 
	mROUTE_ROOMMSG
=
GET_ROUTE
(0xC400),

90 
	mROUTE_ROOMMSG_2
=
GET_ROUTE
(0xC420),

92 
	mROUTE_TEMP
=
GET_ROUTE
(0xD000),

93 
	mROUTE_TEMP_2
=
GET_ROUTE
(0xD020),

94 
	mROUTE_TEMP_4
=
GET_ROUTE
(0xD040),

96 
	mROUTE_GROUP
=
GET_ROUTE
(0xD400),

97 
	mROUTE_MOLE2_RAND_ITEM
=
GET_ROUTE
(0xD420),

99 
	mROUTE_EMAIL_SYS
=
GET_ROUTE
(0xE000),

101 
	mROUTE_NOROUTE
=
GET_ROUTE
(0xF000),

103 
	mROUTE_IM_USER_CACHE
=
GET_ROUTE
(0xF020),

104 
	mROUTE_IM_ONLINE_INFO
=
GET_ROUTE
(0xF040),

105 
	mROUTE_IM_USER
=
GET_ROUTE
(0xF060),

106 
	mROUTE_IM_USER_2
=
GET_ROUTE
(0xF080),

	@/usr/include/libtaomee++/bitmanip/bitmanip.hpp

14 #i‚de‡
LIBTAOMEEPP_BITMANIP_HPP_


15 
	#LIBTAOMEEPP_BITMANIP_HPP_


	)

17 
	~<ˇs£π
>

18 
	~<˛imôs
>

19 
	~<c°ddef
>

22 
	~<°döt.h
>

25 
«me•a˚
 
èomì
 {

33 
ölöe
 

34 
nbôs_⁄8
(
uöt8_t
 
vÆ
)

36 
vÆ
 = ((val & 0xAA) >> 1) + (val & 0x55);

37 
vÆ
 = ((val & 0xCC) >> 2) + (val & 0x33);

38 
vÆ
 = ((val & 0xF0) >> 4) + (val & 0x0F);

40  
vÆ
;

44 
	#NBITS_ON
(
vÆ_
, 
∆o›s_
, 
˙t_
Ë\

	)

46 
i
 = 0; \

47 ; 
i
 !(
∆o›s_
); ++i) { \

48 (
˙t_
Ë+
nbôs_⁄8
–*(((
uöt8_t
*)&(
vÆ_
)Ë+ 
i
) ); \

57 
ölöe
 

58 
nbôs_⁄16
(
uöt16_t
 
vÆ
)

60 
˙t
 = 0;

61 
NBITS_ON
(
vÆ
, 2, 
˙t
);

63  
˙t
;

71 
ölöe
 

72 
nbôs_⁄32
(
uöt32_t
 
vÆ
)

74 
˙t
 = 0;

75 
NBITS_ON
(
vÆ
, 4, 
˙t
);

77  
˙t
;

85 
ölöe
 

86 
nbôs_⁄64
(
uöt64_t
 
vÆ
)

88 
˙t
 = 0;

89 
NBITS_ON
(
vÆ
, 8, 
˙t
);

91  
˙t
;

95 
uöt64_t
 
bô64_èbÀ
[64] = {

109 
uöt64_t
 
bô64_nŸ_èbÀ
[64] = {

131 
ãm∂©e
 <
ty≥«me
 
T
, 
size_t
 
N
>

132 
£t_bô_⁄
(
T
 (&
¨r
)[
N
], 
size_t
 
pos
)

134 
as£π
((
pos
 > 0Ë&& (po†<(
¨r
Ë* 
CHAR_BIT
));

136 
pos
 -= 1;

137 
size_t
 
i
 = 
pos
 / ((
T
Ë* 
CHAR_BIT
);

138 
¨r
[
i
] |
bô64_èbÀ
[
pos
 % ((
T
Ë* 
CHAR_BIT
)];

147 
ãm∂©e
 <
ty≥«me
 
T
>

148 
T
 
£t_bô_⁄
(T 
vÆ
, 
size_t
 
pos
)

150 
as£π
((
pos
 > 0Ë&& (po†<(
T
Ë* 
CHAR_BIT
));

152  (
vÆ
 | 
bô64_èbÀ
[
pos
 - 1]);

163 
ãm∂©e
 <
ty≥«me
 
T
, 
size_t
 
N
>

164 
£t_bô_off
(
T
 (&
¨r
)[
N
], 
size_t
 
pos
)

166 
as£π
((
pos
 > 0Ë&& (po†<(
¨r
Ë* 
CHAR_BIT
));

168 
pos
 -= 1;

169 
size_t
 
i
 = 
pos
 / ((
T
Ë* 
CHAR_BIT
);

170 
¨r
[
i
] &
bô64_nŸ_èbÀ
[
pos
 % ((
T
Ë* 
CHAR_BIT
)];

179 
ãm∂©e
 <
ty≥«me
 
T
>

180 
T
 
£t_bô_off
(T 
vÆ
, 
size_t
 
pos
)

182 
as£π
((
pos
 > 0Ë&& (po†<(
T
Ë* 
CHAR_BIT
));

184  (
vÆ
 & 
bô64_nŸ_èbÀ
[
pos
 - 1]);

196 
ãm∂©e
 <
ty≥«me
 
T
, 
size_t
 
N
>

197 
boﬁ
 
ã°_bô_⁄
(
T
 (&
¨r
)[
N
], 
size_t
 
pos
)

199 
as£π
((
pos
 > 0Ë&& (po†<(
¨r
Ë* 
CHAR_BIT
));

201 
pos
 -= 1;

202 
size_t
 
i
 = 
pos
 / ((
T
Ë* 
CHAR_BIT
);

203  (
¨r
[
i
] & 
bô64_èbÀ
[
pos
 % ((
T
Ë* 
CHAR_BIT
)]);

213 
ãm∂©e
 <
ty≥«me
 
T
>

214 
boﬁ
 
ã°_bô_⁄
(
T
 
vÆ
, 
size_t
 
pos
)

216 
as£π
((
pos
 > 0Ë&& (po†<(
T
Ë* 
CHAR_BIT
));

218  (
vÆ
 & 
bô64_èbÀ
[
pos
 - 1]);

	@/usr/include/libtaomee++/conf_parser/ini_parser.hpp

19 #i‚de‡
LIBTAOMEEPP_INI_PARSER_HPP_


20 
	#LIBTAOMEEPP_INI_PARSER_HPP_


	)

22 
	~<c°dlib
>

24 
	~<m≠
>

25 
	~<°dex˚±
>

26 
	~<°rög
>

32 
«me•a˚
 
	gèomì
 {

34 
	g°d
::
	tm≠
<
	t°d
::
	t°rög
, std::°rög> 
	tSåM≠
;

35 
	gSåM≠
::
	tôî©‹
 
	tSåM≠Iãøt‹
;

37 c⁄° * c⁄° 
	gmid°rög
 = "_____][_____";

43 ˛as†
	cIniP¨£Eº‹
 : 
public
 
°d
::
logic_îr‹
 {

44 
public
:

45 
ex∂icô
 
IniP¨£Eº‹
(c⁄° 
°d
::
°rög
& 
îrmsg
Ë: std::
logic_îr‹
(errmsg)

53 ˛as†
	cIniP¨£r
 {

54 
	gpublic
:

59 
ex∂icô
 
IniP¨£r
(c⁄° 
°d
::
°rög
& 
∑th«me
 = ""Ë: 
öi_∑th_
(pathname)

67 
£t_∑th«me
(c⁄° 
°d
::
°rög
& 
∑th«me
);

75 
∑r£
();

85 
	g°d
::
°rög
 
ªad
(c⁄° * 
£˘
, c⁄° * 
key
);

95 
ªad_öt
(c⁄° * 
£˘
, c⁄° * 
key
);

96 
	g¥iv©e
:

97 
°d
::
°rög
 
öi_∑th_
;

98 
SåM≠
 
	göi_m≠_
;

101 
ölöe
 
	gIniP¨£r
::

102 
£t_∑th«me
(c⁄° 
°d
::
°rög
& 
∑th«me
)

104 i‡(!
öi_∑th_
.
em±y
()) {

105 
throw
 
IniP¨£Eº‹
("Pathname is Set Already!");

108 
	göi_∑th_
 = 
∑th«me
;

111 
ölöe
 
	g°d
::
°rög
 
IniP¨£r
::

112 
	$ªad
(c⁄° * 
£˘
, c⁄° * 
key
)

114 
°d
::
°rög
 
m≠key
 = 
£˘
;

115 
m≠key
 +
mid°rög
;

116 
m≠key
 +
key
;

118 
SåM≠Iãøt‹
 
ô
 = 
öi_m≠_
.
	`föd
(
m≠key
);

119 i‡(
ô
 !
öi_m≠_
.
	`íd
()) {

120  
ô
->
£c⁄d
;

123 
throw
 
	`IniP¨£Eº‹
(
°d
::
	`°rög
("C™nŸ Föd Key '"Ë+ 
key
 + "' AàSe˘‹ [" + 
£˘
 + "].");

124 
	}
}

126 
ölöe
 
	gIniP¨£r
::

127 
	$ªad_öt
(c⁄° * 
£˘
, c⁄° * 
key
)

129  
	`©oi
(
	`ªad
(
£˘
, 
key
).
	`c_°r
());

130 
	}
}

	@/usr/include/libtaomee++/conf_parser/item_manager.hpp

15 #i‚de‡
LIBTAOMEEPP_ITEM_MANAGER_HPP_


16 
	#LIBTAOMEEPP_ITEM_MANAGER_HPP_


	)

18 
	~<°rög
>

20 
	~<libèomì++/bôm™ù/bôm™ù.hµ
>

21 
	~<libèomì++/c⁄f_∑r£r/xmÕ¨£r.hµ
>

24 
	~<°döt.h
>

27 
«me•a˚
 
èomì
 {

32 ˛as†
	cIãmP¨£Eº‹
 : 
public
 
XmlP¨£Eº‹
 {

33 
public
:

34 
ex∂icô
 
IãmP¨£Eº‹
(c⁄° 
°d
::
°rög
& 
îrmsg
Ë: 
XmlP¨£Eº‹
(errmsg)

41 ˛as†
	cIãm
 {

42 
public
:

46 
Iãm
(Ë{ 
öô
(); }

52 
uöt32_t
 
id
(Ëc⁄° {  
id_
; }

57 
uöt32_t
 
ˇãg‹y
(Ëc⁄° {  
ˇt_
; }

62 
uöt32_t
 
db_ˇãg‹y
(Ëc⁄° {  
dbˇt_
; }

67 
uöt32_t
 
max
(Ëc⁄° {  
max_
; }

72 
uöt32_t
 
¥i˚
(Ëc⁄° {  
¥i˚_
; }

77 
uöt32_t
 
£Œ¥i˚
(Ëc⁄° {  
£Œ¥i˚_
; }

82 
boﬁ
 
is_ôem_Æl_buyabÀ
(Ëc⁄° {  
ã°_bô_⁄
(
Êag_
, 
ôem_Æl_buyabÀ
); }

87 
boﬁ
 
is_ôem_Æl_£ŒabÀ
(Ëc⁄° {  
ã°_bô_⁄
(
Êag_
, 
ôem_Æl_£ŒabÀ
); }

92 
boﬁ
 
is_ôem_vù_buyabÀ
(Ëc⁄° {  
ã°_bô_⁄
(
Êag_
, 
ôem_vù_buyabÀ
); }

97 
boﬁ
 
is_ôem_vù_£ŒabÀ
(Ëc⁄° {  
ã°_bô_⁄
(
Êag_
, 
ôem_vù_£ŒabÀ
); }

102 
boﬁ
 
is_ôem_vù_⁄ly
(Ëc⁄° {  
ã°_bô_⁄
(
Êag_
, 
ôem_vù_⁄ly
); }

104 
¥Ÿe˘ed
:

108 
öô
(Ë{ 
mem£t
(
this
, 0, (*this)); }

110 
¥iv©e
:

112 
ôem_Æl_buyabÀ
 = 1,

113 
ôem_Æl_£ŒabÀ
 = 2,

114 
ôem_vù_buyabÀ
 = 3,

115 
ôem_vù_£ŒabÀ
 = 4,

116 
ôem_vù_⁄ly
 = 5

123 
£t_id
(
uöt32_t
 
id
Ë{ 
id_
 = id; }

128 
£t_ˇãg‹y
(
uöt32_t
 
ˇt
Ë{ 
ˇt_
 = cat; }

133 
£t_db_ˇãg‹y
(
uöt32_t
 
dbˇt
Ë{ 
dbˇt_
 = dbcat; }

138 
£t_max
(
uöt32_t
 
max
Ë{ 
max_
 = max; }

143 
£t_¥i˚
(
uöt32_t
 
¥i˚
Ë{ 
¥i˚_
 =Örice; }

148 
£t_£Œ¥i˚
(
uöt32_t
 
£Œ¥i˚
Ë{ 
£Œ¥i˚_
 = sellprice; }

152 
£t_ôem_Æl_buyabÀ
(Ë{ 
Êag_
 = 
£t_bô_⁄
(Êag_, 
ôem_Æl_buyabÀ
); }

156 
£t_ôem_Æl_£ŒabÀ
(Ë{ 
Êag_
 = 
£t_bô_⁄
(Êag_, 
ôem_Æl_£ŒabÀ
); }

160 
£t_ôem_vù_buyabÀ
(Ë{ 
Êag_
 = 
£t_bô_⁄
(Êag_, 
ôem_vù_buyabÀ
); }

164 
£t_ôem_vù_£ŒabÀ
(Ë{ 
Êag_
 = 
£t_bô_⁄
(Êag_, 
ôem_vù_£ŒabÀ
); }

168 
£t_ôem_vù_⁄ly
(Ë{ 
Êag_
 = 
£t_bô_⁄
(Êag_, 
ôem_vù_⁄ly
); }

171 
uöt32_t
 
id_
;

173 
uöt8_t
 
Êag_
;

175 
uöt8_t
 
ˇt_
;

177 
uöt8_t
 
dbˇt_
;

179 
uöt32_t
 
max_
;

181 
uöt32_t
 
¥i˚_
;

183 
uöt32_t
 
£Œ¥i˚_
;

188 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

189 
‰õnd
 
˛ass
 
IãmM™agî
;

198 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

199 ˛as†
	cIãmM™agî
 {

200 
public
:

204 
IãmM™agî
(c⁄° * 
fûe
Ë: 
fûíame_
(file) { }

212 c⁄° 
ITEM
* 
gë_ôem
(
uöt32_t
 
ôem_id
) const;

216 
lﬂd_ôems
(Ë{ 
ªlﬂd_ôems
(); }

220 
ªlﬂd_ôems
();

221 
¥iv©e
:

224 
ôem_ba£_ôem_id
 = 100000

230 
öô_Æl_ôems
();

234 
lﬂd_™_ôem
(
xmlNodePå
 
cur
, 
uöt32_t
 
ˇt_id
, uöt32_à
dbˇt
, uöt32_à
max
);

240 
vútuÆ
 
lﬂd_ôem_exãnded_öfo
(
ITEM
* 
ôem
, 
xmlNodePå
 
cur
) {  0; }

242 
ITEM
 
ôems_
[
MAX_CAT
][
MAX_ELEM
];

243 
°d
::
°rög
 
fûíame_
;

246 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

247 
ölöe
 

248 
IãmM™agî
<
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>::
	$öô_Æl_ôems
()

250 
i
, 
j
;

251 
i
 = 0; i !
MAX_CAT
; ++i) {

252 
j
 = 0; j !
MAX_ELEM
; ++j) {

253 
ôems_
[
i
][
j
].
	`öô
();

256 
	}
}

258 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

259 
ölöe
 c⁄° 
ITEM
*

260 
IãmM™agî
<
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>::
	$gë_ôem
(
uöt32_t
 
ôem_id
) const

262 
uöt32_t
 
idx1
 = ((
ôem_id
 - 1Ë/ 
ôem_ba£_ôem_id
);

263 
uöt32_t
 
idx2
 = ((
ôem_id
 - 1Ë% 
ôem_ba£_ôem_id
);

265 i‡((
idx1
 < 
MAX_CAT
Ë&& (
idx2
 < 
MAX_ELEM
Ë&& (
ôems_
[idx1][idx2].
	`id
(Ë=
ôem_id
)) {

266  &(
ôems_
[
idx1
][
idx2
]);

270 
	}
}

272 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

274 
IãmM™agî
<
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>::
	$ªlﬂd_ôems
()

277 
xmlDocPå
 
doc
 = 
	`xmlRódFûe
(
fûíame_
.
	`c_°r
(), 0, 
XML_PARSE_NOBLANKS
);

278 i‡(!
doc
) {

279 
throw
 
	`IãmP¨£Eº‹
(
°d
::
	`°rög
("ÁûedÅÿ∑r£ iãm fûê'"Ë+ 
fûíame_
 + "'");

282 
xmlNodePå
 
cur
 = 
	`xmlDocGëRoŸEÀmít
(
doc
);

283 i‡(!
cur
) {

284 
	`xmlFªeDoc
(
doc
);

285 
throw
 
	`IãmP¨£Eº‹
(
°d
::
	`°rög
("xmlDocGëRoŸEÀmíàîr‹ whíÜﬂdög iãm fûê'"Ë+ 
fûíame_
 + "'");

288 
	`öô_Æl_ôems
();

291 
uöt32_t
 
id
, 
max
, 
dbˇtid
;

292 
cur
 = cur->
xmlChûdªnNode
;

293 
cur
) {

294 i‡(!
	`xmlSåcmp
(
cur
->
«me
, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>("Cat"))) {

296 
	`gë_xml_¥›
(
id
, 
cur
, "ID");

297 
	`gë_xml_¥›
(
dbˇtid
, 
cur
, "DbCatID");

298 
	`gë_xml_¥›
(
max
, 
cur
, "Max");

299 i‡(
id
 >
MAX_CAT
) {

300 
°d
::
o°rög°ªam
 
oss
;

301 
oss
 << "övÆid c©eg‹y id: " << 
id
;

302 
throw
 
	`IãmP¨£Eº‹
(
oss
.
	`°r
());

305 
	`lﬂd_™_ôem
(
cur
->
xmlChûdªnNode
, 
id
, 
dbˇtid
, 
max
);

307 
cur
 = cur->
√xt
;

310 
	`xmlFªeDoc
(
doc
);

311 
	}
}

313 
ãm∂©e
 <
ty≥«me
 
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>

315 
IãmM™agî
<
ITEM
, 
MAX_CAT
, 
MAX_ELEM
>::
	$lﬂd_™_ôem
(
xmlNodePå
 
cur
, 
uöt32_t
 
ˇt_id
, uöt32_à
dbˇt
, uöt32_à
max
)

317 
uöt32_t
 
id
, 
idx
, 
Êag
;

318 
uöt32_t
 
ba£_id
 = (
ˇt_id
 * 
ôem_ba£_ôem_id
) + 1;

319 
ITEM
* 
ôems
 = 
ôems_
[
ˇt_id
];

320 
cur
) {

321 i‡(!
	`xmlSåcmp
(
cur
->
«me
, (c⁄° 
xmlCh¨
*)"Item")) {

322 
	`gë_xml_¥›
(
id
, 
cur
, "ID");

324 
idx
 = 
id
 - 
ba£_id
;

325 i‡((
id
 < 
ba£_id
Ë|| ((
idx
Ë>
MAX_ELEM
Ë|| 
ôems
[idx].
	`id
()) {

326 
°d
::
o°rög°ªam
 
oss
;

327 
oss
 << "övÆid/du∂iˇãd iãm: id=" << 
id
 << " c©id=" << 
ˇt_id
;

328 
throw
 
	`IãmP¨£Eº‹
(
oss
.
	`°r
());

331 
ITEM
* 
ôem
 = &(
ôems
[
idx
]);

333 
ôem
->
	`£t_id
(
id
);

334 
ôem
->
	`£t_ˇãg‹y
(
ˇt_id
);

335 
ôem
->
	`£t_db_ˇãg‹y
(
dbˇt
);

337 
uöt32_t
 
tmp
;

338 
	`gë_xml_¥›_def
(
tmp
, 
cur
, "Max", 
max
);

339 
ôem
->
	`£t_max
(
tmp
);

340 
	`gë_xml_¥›_def
(
tmp
, 
cur
, "Price", 0);

341 
ôem
->
	`£t_¥i˚
(
tmp
);

342 
	`gë_xml_¥›_def
(
tmp
, 
cur
, "SellPrice", 0);

343 
ôem
->
	`£t_£Œ¥i˚
(
tmp
);

345 
	`gë_xml_¥›_def
(
Êag
, 
cur
, "Tradability", 3);

346 i‡(
	`ã°_bô_⁄
(
Êag
, 1)) {

347 
ôem
->
	`£t_ôem_Æl_buyabÀ
();

349 i‡(
	`ã°_bô_⁄
(
Êag
, 2)) {

350 
ôem
->
	`£t_ôem_Æl_£ŒabÀ
();

352 
	`gë_xml_¥›_def
(
Êag
, 
cur
, "VipTradability", 3);

353 i‡(
	`ã°_bô_⁄
(
Êag
, 1)) {

354 
ôem
->
	`£t_ôem_vù_buyabÀ
();

356 i‡(
	`ã°_bô_⁄
(
Êag
, 2)) {

357 
ôem
->
	`£t_ôem_vù_£ŒabÀ
();

359 
	`gë_xml_¥›_def
(
Êag
, 
cur
, "VipOnly", 0);

360 i‡(
Êag
) {

361 
ôem
->
	`£t_ôem_vù_⁄ly
();

365 i‡(
	`lﬂd_ôem_exãnded_öfo
(
ôem
, 
cur
) != 0) {

366 
°d
::
o°rög°ªam
 
oss
;

367 
oss
 << "îr‹ occu∏whûêlﬂdögÉxãnded iãm info: id=" << 
id
;

368 
throw
 
	`IãmP¨£Eº‹
(
oss
.
	`°r
());

372 
cur
 = cur->
√xt
;

374 
	}
}

	@/usr/include/libtaomee++/conf_parser/xmlparser.hpp

16 #i‚de‡
LIBTAOMEEPP_XMLPARSER_HPP_


17 
	#LIBTAOMEEPP_XMLPARSER_HPP_


	)

19 
	~<c°rög
>

20 
	~<io°ªam
>

21 
	~<°dex˚±
>

22 
	~<°rög
>

23 
	~<s°ªam
>

26 
	~<libxml/åì.h
>

29 
«me•a˚
 
èomì
 {

31 
°d
::
	tios_ba£
& (&
	tm™ù_t
)(
	t°d
::ios_base&);

37 ˛as†
	cXmlP¨£Eº‹
 : 
public
 
°d
::
logic_îr‹
 {

38 
public
:

39 
ex∂icô
 
XmlP¨£Eº‹
(c⁄° 
°d
::
°rög
& 
îrmsg
Ë: std::
logic_îr‹
(errmsg)

53 
ãm∂©e
 <
ty≥«me
 
T1
, 
size_t
 
Àn
>

54 
size_t
 
gë_xml_¥›_¨r
(
T1
 (&
¨r
)[
Àn
], 
xmlNodePå
 
cur
, c⁄° * 
¥›
, 
m™ù_t
 
m™ù
 = 
°d
::
dec
)

56 
xmlCh¨
* 
°r
;

57 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

58 
throw
 
XmlP¨£Eº‹
(
°d
::
°rög
("failedÅoÖarseÖrop '")

59 + 
ªöãΩªt_ˇ°
<c⁄° *>(
¥›
) + "'");

61 
size_t
 
i
 = 0;

62 
°d
::
i°rög°ªam
 
iss
(
ªöãΩªt_ˇ°
<c⁄° *>(
°r
));

64 i‡(*((*)
°r
) == 0) {

65 
xmlFªe
(
°r
);

66 
throw
 
XmlP¨£Eº‹
(
°d
::
°rög
("failedÅoÖarseÖrop '")

67 + 
ªöãΩªt_ˇ°
<c⁄° *>(
¥›
) + "'");

69 (
i
 !
Àn
Ë&& (
iss
 >> 
m™ù
 >> 
¨r
[i])) {

70 ++
i
;

72 
xmlFªe
(
°r
);

73  
i
;

86 
ãm∂©e
 <
size_t
 
Àn
>

87 
gë_xml_¥›_øw_°r
((&
vÆ
)[
Àn
], 
xmlNodePå
 
cur
, c⁄° * 
¥›
)

89 
xmlCh¨
* 
°r
;

90 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

91 
throw
 
XmlP¨£Eº‹
(
°d
::
°rög
("failedÅoÖarseÖrop '")

92 + 
ªöãΩªt_ˇ°
<c⁄° *>(
¥›
) + "'");

94 
°∫˝y
(
vÆ
, 
ªöãΩªt_ˇ°
<*>(
°r
), 
Àn
 - 1);

95 
vÆ
[
Àn
 - 1] = '\0';

96 
xmlFªe
(
°r
);

111 
ãm∂©e
 <
ty≥«me
 
T1
>

112 
gë_xml_¥›
(
T1
& 
vÆ
, 
xmlNodePå
 
cur
, c⁄° * 
¥›
, 
m™ù_t
 
m™ù
 = 
°d
::
dec
)

114 
xmlCh¨
* 
°r
;

115 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

116 
throw
 
XmlP¨£Eº‹
(
°d
::
°rög
("failedÅoÖarseÖrop '")

117 + 
ªöãΩªt_ˇ°
<c⁄° *>(
¥›
) + "'");

119 
°d
::
i°rög°ªam
 
iss
(
ªöãΩªt_ˇ°
<c⁄° *>(
°r
));

120 
iss
 >> 
m™ù
 >> 
vÆ
;

121 
xmlFªe
(
°r
);

122 i‡(!
iss
) {

123 
throw
 
XmlP¨£Eº‹
(
°d
::
°rög
("failedÅoÖarseÖrop '")

124 + 
ªöãΩªt_ˇ°
<c⁄° *>(
¥›
) + "'");

134 
ãm∂©e
 <
ty≥«me
 
T1
,Åy≥«mê
T2
, 
size_t
 
Àn
>

135 
size_t
 
gë_xml_¥›_¨r_def
(
T1
 (&
¨r
)[
Àn
], 
xmlNodePå
 
cur
, c⁄° * 
¥›
, c⁄° 
T2
& 
def
, 
m™ù_t
 
m™ù
 = 
°d
::
dec
)

137 
xmlCh¨
* 
°r
;

138 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

139 
size_t
 
i
 = 0; i !
Àn
; ++i) {

140 
¨r
[
i
] = 
def
;

144 
size_t
 
i
 = 0;

145 i‡(*((*)
°r
) == 0) {

146 
size_t
 
i
 = 0; i !
Àn
; ++i) {

147 
¨r
[
i
] = 
def
;

149 
xmlFªe
(
°r
);

152 
°d
::
i°rög°ªam
 
iss
(
ªöãΩªt_ˇ°
<c⁄° *>(
°r
));

153 (
i
 !
Àn
Ë&& (
iss
 >> 
m™ù
 >> 
¨r
[i])) {

154 ++
i
;

156 
xmlFªe
(
°r
);

157  
i
;

166 
ãm∂©e
 <
size_t
 
Àn
>

167 
gë_xml_¥›_øw_°r_def
((&
vÆ
)[
Àn
], 
xmlNodePå
 
cur
, c⁄° * 
¥›
, c⁄° * 
def
)

169 
xmlCh¨
* 
°r
;

170 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

171 
°∫˝y
(
vÆ
, 
def
, 
Àn
 - 1);

172 
vÆ
[
Àn
 - 1] = '\0';

174 
°∫˝y
(
vÆ
, 
ªöãΩªt_ˇ°
<*>(
°r
), 
Àn
 - 1);

175 
vÆ
[
Àn
 - 1] = '\0';

176 
xmlFªe
(
°r
);

184 
ãm∂©e
 <
ty≥«me
 
T1
,Åy≥«mê
T2
>

185 
gë_xml_¥›_def
(
T1
& 
vÆ
, 
xmlNodePå
 
cur
, c⁄° * 
¥›
, c⁄° 
T2
& 
def
, 
m™ù_t
 
m™ù
 = 
°d
::
dec
)

187 
xmlCh¨
* 
°r
;

188 i‡(!
cur
 || !(
°r
 = 
xmlGëPr›
(cur, 
ªöãΩªt_ˇ°
<c⁄° 
xmlCh¨
*>(
¥›
)))) {

189 
vÆ
 = 
def
;

191 
°d
::
i°rög°ªam
 
iss
(
ªöãΩªt_ˇ°
<c⁄° *>(
°r
));

192 i‡(*((*)
°r
) == 0) {

193 
vÆ
 = 
def
;

195 
iss
 >> 
m™ù
 >> 
vÆ
;

197 
xmlFªe
(
°r
);

207 
lﬂd_xmlc⁄f
(c⁄° * 
fûe
, (*
∑r£r
)(
xmlNodePå
 
cur_node
));

209 
	}
}

	@/usr/include/libtaomee++/ev/eventpoll.hpp

15 #i‚de‡
LIBTAOMEEPP_EVENT_POLL_HPP_


16 
	#LIBTAOMEEPP_EVENT_POLL_HPP_


	)

18 
	~<ˇs£π
>

19 
	~<˚ºno
>

20 
	~<c°rög
>

22 
	~<queue
>

23 
	~<°dex˚±
>

24 
	~<°rög
>

27 
	~<sys/ïﬁl.h
>

30 
	~<libèomì++/mem‹y/mempoﬁ.hµ
>

31 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

33 
«me•a˚
 
èomì
 {

40 ˛as†
	cEvítPﬁl
 : 
N⁄c›yabÀ
 {

41 
¥iv©e
:

42 ˛as†
	cCÆlbackBa£
 : 
public
 
MemPoﬁ
 {

43 
public
:

44 
vútuÆ
 
execuã
() = 0;

45 
vútuÆ
 ~
CÆlbackBa£
() { };

48 ˛as†
	cCÆlbackV
 : 
public
 
CÆlbackBa£
 {

49 
public
:

50 (*
Mëhod
)();

52 
public
:

53 
CÆlbackV
(
Mëhod
 
mëhod
)

54 { 
m_func
 = 
mëhod
; }

56 
execuã
()

57 { 
m_func
(); }

59 
¥iv©e
:

60 
Mëhod
 
m_func
;

63 ˛as†
	cCÆlback0
 : 
public
 
CÆlbackBa£
 {

64 
public
:

65 (*
Mëhod
)();

67 
public
:

68 
CÆlback0
(
Mëhod
 
mëhod
, 
fd
)

69 { 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; }

71 
execuã
()

72 { 
m_func
(
m_fd
); }

74 
¥iv©e
:

75 
Mëhod
 
m_func
;

76 
m_fd
;

79 
ãm∂©e
 < 
ty≥«me
 
P1
 >

80 ˛as†
	cCÆlback1
 : 
public
 
CÆlbackBa£
 {

81 
public
:

82 (*
Mëhod
)(, 
	tP1
&);

84 
public
:

85 
CÆlback1
(
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
)

86 { 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; }

88 
execuã
()

89 { 
m_func
(
m_fd
, 
m_p1
); }

91 
¥iv©e
:

92 
Mëhod
 
m_func
;

93 
m_fd
;

94 
P1
 
m_p1
;

97 
ãm∂©e
 < 
ty≥«me
 
P1
,Åy≥«mê
P2
 >

98 ˛as†
	cCÆlback2
 : 
public
 
CÆlbackBa£
 {

99 
public
:

100 (*
Mëhod
)(, 
	tP1
&, 
	tP2
&);

102 
public
:

103 
CÆlback2
(
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
)

104 { 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; }

106 
execuã
()

107 { 
m_func
(
m_fd
, 
m_p1
, 
m_p2
); }

109 
¥iv©e
:

110 
Mëhod
 
m_func
;

111 
m_fd
;

112 
P1
 
m_p1
;

113 
P2
 
m_p2
;

116 
ãm∂©e
 < 
ty≥«me
 
P1
,Åy≥«mê
P2
,Åy≥«mê
P3
 >

117 ˛as†
	cCÆlback3
 : 
public
 
CÆlbackBa£
 {

118 
public
:

119 (*
Mëhod
)(, 
	tP1
&, 
	tP2
&, 
	tP3
&);

121 
public
:

122 
CÆlback3
(
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
)

123 { 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; 
m_p3
 = 
p3
; }

125 
execuã
()

126 { 
m_func
(
m_fd
, 
m_p1
, 
m_p2
, 
m_p3
); }

128 
¥iv©e
:

129 
Mëhod
 
m_func
;

130 
m_fd
;

131 
P1
 
m_p1
;

132 
P2
 
m_p2
;

133 
P3
 
m_p3
;

136 
ãm∂©e
 < 
ty≥«me
 
P1
,Åy≥«mê
P2
,Åy≥«mê
P3
,Åy≥«mê
P4
 >

137 ˛as†
	cCÆlback4
 : 
public
 
CÆlbackBa£
 {

138 
public
:

139 (*
Mëhod
)(, 
	tP1
&, 
	tP2
&, 
	tP3
&, 
	tP4
&);

141 
public
:

142 
CÆlback4
(
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
)

143 { 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; 
m_p3
 = 
p3
; 
m_p4
 = 
p4
; }

145 
execuã
()

146 { 
m_func
(
m_fd
, 
m_p1
, 
m_p2
, 
m_p3
, 
m_p4
); }

148 
¥iv©e
:

149 
Mëhod
 
m_func
;

150 
m_fd
;

151 
P1
 
m_p1
;

152 
P2
 
m_p2
;

153 
P3
 
m_p3
;

154 
P4
 
m_p4
;

157 
ãm∂©e
 < 
ty≥«me
 
Cœss
 >

158 ˛as†
	cCÆlbackPV
 : 
public
 
CÆlbackBa£
 {

159 
public
:

160 (
Cœss
::*
	tMëhod
)();

162 
public
:

163 
CÆlbackPV
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
)

164 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; }

166 
execuã
()

167 { (
m_obj
->*
m_func
)(); }

169 
¥iv©e
:

170 
Cœss
* 
m_obj
;

171 
Mëhod
 
m_func
;

174 
ãm∂©e
 < 
ty≥«me
 
Cœss
 >

175 ˛as†
	cCÆlbackP0
 : 
public
 
CÆlbackBa£
 {

176 
public
:

177 (
Cœss
::*
	tMëhod
)();

179 
public
:

180 
CÆlbackP0
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, 
fd
)

181 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; }

183 
execuã
()

184 { (
m_obj
->*
m_func
)(
m_fd
); }

186 
¥iv©e
:

187 
Cœss
* 
m_obj
;

188 
Mëhod
 
m_func
;

189 
m_fd
;

192 
ãm∂©e
 < 
ty≥«me
 
Cœss
,Åy≥«mê
P1
 >

193 ˛as†
	cCÆlbackP1
 : 
public
 
CÆlbackBa£
 {

194 
public
:

195 (
Cœss
::*
	tMëhod
)(, 
	tP1
&);

197 
public
:

198 
CÆlbackP1
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
)

199 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; }

201 
execuã
()

202 { (
m_obj
->*
m_func
)(
m_fd
, 
m_p1
); }

204 
¥iv©e
:

205 
Cœss
* 
m_obj
;

206 
Mëhod
 
m_func
;

207 
m_fd
;

208 
P1
 
m_p1
;

211 
ãm∂©e
 < 
ty≥«me
 
Cœss
,Åy≥«mê
P1
,Åy≥«mê
P2
 >

212 ˛as†
	cCÆlbackP2
 : 
public
 
CÆlbackBa£
 {

213 
public
:

214 (
Cœss
::*
	tMëhod
)(, 
	tP1
&, 
	tP2
&);

216 
public
:

217 
CÆlbackP2
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
)

218 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; }

220 
execuã
()

221 { (
m_obj
->*
m_func
)(
m_fd
, 
m_p1
, 
m_p2
); }

223 
¥iv©e
:

224 
Cœss
* 
m_obj
;

225 
Mëhod
 
m_func
;

226 
m_fd
;

227 
P1
 
m_p1
;

228 
P2
 
m_p2
;

231 
ãm∂©e
 < 
˛ass
 
Cœss
, 
ty≥«me
 
P1
,Åy≥«mê
P2
,Åy≥«mê
P3
 >

232 ˛as†
	cCÆlbackP3
 : 
public
 
CÆlbackBa£
 {

233 
public
:

234 (
Cœss
::*
	tMëhod
)(, 
	tP1
&, 
	tP2
&, 
	tP3
&);

236 
public
:

237 
CÆlbackP3
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
)

238 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; 
m_p3
 = 
p3
; }

240 
execuã
()

241 { (
m_obj
->*
m_func
)(
m_fd
, 
m_p1
, 
m_p2
, 
m_p3
); }

243 
¥iv©e
:

244 
Cœss
* 
m_obj
;

245 
Mëhod
 
m_func
;

246 
m_fd
;

247 
P1
 
m_p1
;

248 
P2
 
m_p2
;

249 
P3
 
m_p3
;

252 
ãm∂©e
 < 
˛ass
 
Cœss
, 
ty≥«me
 
P1
,Åy≥«mê
P2
,Åy≥«mê
P3
,Åy≥«mê
P4
 >

253 ˛as†
	cCÆlbackP4
 : 
public
 
CÆlbackBa£
 {

254 
public
:

255 (
Cœss
::*
	tMëhod
)(, 
	tP1
&, 
	tP2
&, 
	tP3
&, 
	tP4
&);

257 
public
:

258 
CÆlbackP4
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, 
fd
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
)

259 { 
m_obj
 = 
˛ass_ö°™˚
; 
m_func
 = 
mëhod
; 
m_fd
 = 
fd
; 
m_p1
 = 
p1
; 
m_p2
 = 
p2
; 
m_p3
 = 
p3
; 
m_p4
 = 
p4
; }

261 
execuã
()

262 { (
m_obj
->*
m_func
)(
m_fd
, 
m_p1
, 
m_p2
, 
m_p3
, 
m_p4
); }

264 
¥iv©e
:

265 
Cœss
* 
m_obj
;

266 
Mëhod
 
m_func
;

267 
m_fd
;

268 
P1
 
m_p1
;

269 
P2
 
m_p2
;

270 
P3
 
m_p3
;

271 
P4
 
m_p4
;

274 
	sEvítH™dÀr
 {

275 
public
:

276 
EvítH™dÀr
()

277 { 
ö_u£
 = 
Ál£
; }

279 
public
:

280 
boﬁ
 
ö_u£
;

281 
boﬁ
 
u£_ë
;

282 
CÆlbackBa£
* 
ö
;

283 
CÆlbackBa£
* 
out
;

286 
public
:

290 
	eEvítTy≥
 {

292 
evít_ö
 = 
EPOLLIN
,

298 
evít_out
 = 
EPOLLOUT
,

300 
evít_io
 = 
evít_ö
 | 
evít_out
,

303 
evít_îr
 = 
EPOLLERR
,

304 
evít_hup
 = 
EPOLLHUP
,

305 
evít_rdhup
 = 
EPOLLRDHUP
,

306 
evít_ë
 = 
EPOLLET


309 
public
:

321 
EvítPﬁl
(
maxfd
 = 20000, 
timeout
 = -1);

326 ~
EvítPﬁl
();

333 
add_∂ugö
((*
∂ugö
)())

335 
as£π
(
m_∂ugö
 == 0);

337 
m_∂ugö
 = 
√w
 
CÆlbackV
(
∂ugö
);

345 
ãm∂©e
 <
ty≥«me
 
Cœss
>

346 
add_∂ugö
(
Cœss
& 
obj
, (Cœss::*
∂ugö
)())

348 
as£π
(
m_∂ugö
 == 0);

350 
m_∂ugö
 = 
√w
 
CÆlbackPV
<
Cœss
>(&
obj
, 
∂ugö
);

364 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, (*
öcb
)(fd), (*
outcb
)(fd), 
boﬁ
 
u£_ë
 = 
åue
)

366 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlback0
(
öcb
, 
fd
);

367 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlback0
(
outcb
, 
fd
);

369 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

385 
ãm∂©e
 <
ty≥«me
 
In1
,Åy≥«mê
Out1
>

386 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
,

387 (*
öcb
)(
fd
, 
In1
&), (*
outcb
)(fd, 
Out1
&),

388 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
Out1
& 
out1
 = Out1(),

389 
boﬁ
 
u£_ë
 = 
åue
)

391 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlback1
<
In1
>(
öcb
, 
fd
, 
ö1
);

392 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlback1
<
Out1
>(
outcb
, 
fd
, 
out1
);

394 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

412 
ãm∂©e
 <
ty≥«me
 
In1
,Åy≥«mê
In2
,Åy≥«mê
Out1
,Åy≥«mê
Out2
>

413 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
,

414 (*
öcb
)(
fd
, 
In1
&, 
In2
&), (*
outcb
)(fd, 
Out1
&, 
Out2
&),

415 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(),

416 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(),

417 
boﬁ
 
u£_ë
 = 
åue
)

419 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlback2
<
In1
, 
In2
>(
öcb
, 
fd
, 
ö1
, 
ö2
);

420 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlback2
<
Out1
, 
Out2
>(
outcb
, 
fd
, 
out1
, 
out2
);

422 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

442 
ãm∂©e
 <
ty≥«me
 
In1
,Åy≥«mê
In2
,Åy≥«mê
In3
,Åy≥«mê
Out1
,Åy≥«mê
Out2
,Åy≥«mê
Out3
>

443 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
,

444 (*
öcb
)(
fd
, 
In1
&, 
In2
&, 
In3
&), (*
outcb
)(fd, 
Out1
&, 
Out2
&, 
Out3
&),

445 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(), c⁄° 
In3
& 
ö3
 = In3(),

446 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(), c⁄° 
Out3
& 
out3
 = Out3(),

447 
boﬁ
 
u£_ë
 = 
åue
)

449 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlback3
<
In1
, 
In2
, 
In3
>(
öcb
, 
fd
, 
ö1
, 
ö2
, 
ö3
);

450 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlback3
<
Out1
, 
Out2
, 
Out3
>(
outcb
, 
fd
, 
out1
, 
out2
, 
out3
);

452 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

474 
ãm∂©e
 <
ty≥«me
 
In1
,Åy≥«mê
In2
,Åy≥«mê
In3
,Åy≥«mê
In4
,

475 
ty≥«me
 
Out1
,Åy≥«mê
Out2
,Åy≥«mê
Out3
,Åy≥«mê
Out4
>

476 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
,

477 (*
öcb
)(
fd
, 
In1
&, 
In2
&, 
In3
&, 
In4
&), (*
outcb
)(fd, 
Out1
&, 
Out2
&, 
Out3
&, 
Out4
&),

478 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(), c⁄° 
In3
& 
ö3
 = In3(), c⁄° 
In4
& 
ö4
 = In4(),

479 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(), c⁄° 
Out3
& 
out3
 = Out3(), c⁄° 
Out4
& 
out4
 = Out4(),

480 
boﬁ
 
u£_ë
 = 
åue
)

482 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlback4
<
In1
, 
In2
, 
In3
, 
In4
>(
öcb
, 
fd
, 
ö1
, 
ö2
, 
ö3
, 
ö4
);

483 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlback4
<
Out1
, 
Out2
, 
Out3
, 
Out4
>(
outcb
, 
fd
, 
out1
, 
out2
, 
out3
, 
out4
);

485 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

501 
ãm∂©e
 <
ty≥«me
 
Cœss
>

502 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

503 (
Cœss
::*
öcb
)(), (Cœss::*
outcb
)(),

504 
boﬁ
 
u£_ë
 = 
åue
)

506 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackPV
<
Cœss
>(&
obj
, 
öcb
);

507 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackPV
<
Cœss
>(&
obj
, 
outcb
);

509 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

525 
ãm∂©e
 <
ty≥«me
 
Cœss
>

526 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

527 (
Cœss
::*
öcb
)(
fd
), (Cœss::*
outcb
)(fd),

528 
boﬁ
 
u£_ë
 = 
åue
)

530 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackP0
<
Cœss
>(&
obj
, 
öcb
, 
fd
);

531 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackP0
<
Cœss
>(&
obj
, 
outcb
, 
fd
);

533 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

551 
ãm∂©e
 <
ty≥«me
 
Cœss
,Åy≥«mê
In1
,Åy≥«mê
Out1
>

552 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

553 (
Cœss
::*
öcb
)(
fd
, 
In1
&), (Cœss::*
outcb
)(fd, 
Out1
&),

554 c⁄° 
In1
& 
ö1
 = In1(),

555 c⁄° 
Out1
& 
out1
 = Out1(),

556 
boﬁ
 
u£_ë
 = 
åue
)

558 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackP1
<
Cœss
, 
In1
>(&
obj
, 
öcb
, 
fd
, 
ö1
);

559 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackP1
<
Cœss
, 
Out1
>(&
obj
, 
outcb
, 
fd
, 
out1
);

561 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

581 
ãm∂©e
 <
ty≥«me
 
Cœss
,Åy≥«mê
In1
,Åy≥«mê
In2
,Åy≥«mê
Out1
,Åy≥«mê
Out2
>

582 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

583 (
Cœss
::*
öcb
)(
fd
, 
In1
&, 
In2
&), (Cœss::*
outcb
)(fd, 
Out1
&, 
Out2
&),

584 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(),

585 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(),

586 
boﬁ
 
u£_ë
 = 
åue
)

588 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackP2
<
Cœss
, 
In1
, 
In2
>(&
obj
, 
fd
, 
öcb
, 
ö1
, 
ö2
);

589 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackP2
<
Cœss
, 
Out1
, 
Out2
>(&
obj
, 
fd
, 
outcb
, 
out1
, 
out2
);

591 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

613 
ãm∂©e
 <
ty≥«me
 
Cœss
,Åy≥«mê
In1
,Åy≥«mê
In2
,Åy≥«mê
In3
,

614 
ty≥«me
 
Out1
,Åy≥«mê
Out2
,Åy≥«mê
Out3
>

615 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

616 (
Cœss
::*
öcb
)(
fd
, 
In1
&, 
In2
&, 
In3
&),

617 (
Cœss
::*
outcb
)(
fd
, 
Out1
&, 
Out2
&, 
Out3
&),

618 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(), c⁄° 
In3
& 
ö3
 = In3(),

619 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(), c⁄° 
Out3
& 
out3
 = Out3(),

620 
boﬁ
 
u£_ë
 = 
åue
)

622 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackP3
<
Cœss
, 
In1
, 
In2
, 
In3
>(&
obj
, 
öcb
, 
fd
, 
ö1
, 
ö2
, 
ö3
);

623 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackP3
<
Cœss
, 
Out1
, 
Out2
, 
Out3
>(&
obj
, 
outcb
, 
fd
, 
out1
, 
out2
, 
out3
);

625 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

649 
ãm∂©e
 <
ty≥«me
 
Cœss
,Åy≥«mê
In1
,Åy≥«mê
In2
,Åy≥«mê
In3
,Åy≥«mê
In4
,

650 
ty≥«me
 
Out1
,Åy≥«mê
Out2
,Åy≥«mê
Out3
,Åy≥«mê
Out4
>

651 
add
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
Cœss
& 
obj
,

652 (
Cœss
::*
öcb
)(
fd
, 
In1
&, 
In2
&, 
In3
&, 
In4
&),

653 (
Cœss
::*
outcb
)(
fd
, 
Out1
&, 
Out2
&, 
Out3
&, 
Out4
&),

654 c⁄° 
In1
& 
ö1
 = In1(), c⁄° 
In2
& 
ö2
 = In2(), c⁄° 
In3
& 
ö3
 = In3(), c⁄° 
In4
& 
ö4
 = In4(),

655 c⁄° 
Out1
& 
out1
 = Out1(), c⁄° 
Out2
& 
out2
 = Out2(), c⁄° 
Out3
& 
out3
 = Out3(), c⁄° 
Out4
& 
out4
 = Out4(),

656 
boﬁ
 
u£_ë
 = 
åue
)

658 
CÆlbackBa£
* 
ö
 = 
√w
 
CÆlbackP4
<
Cœss
, 
In1
, 
In2
, 
In3
, 
In4
>(&
obj
, 
öcb
, 
fd
, 
ö1
, 
ö2
, 
ö3
, 
ö4
);

659 
CÆlbackBa£
* 
out
 = 
√w
 
CÆlbackP4
<
Cœss
, 
Out1
, 
Out2
, 
Out3
, 
Out4
>(&
obj
, 
outcb
, 
fd
, 
out1
, 
out2
, 
out3
, 
out4
);

661 
add_evít
(
fd
, 
ev_ty≥
, 
ö
, 
out
, 
u£_ë
);

674 
modify
(
fd
, 
EvítTy≥
 
ev_ty≥
)

676 
as£π
((
fd
 < 
m_maxfd
Ë&& (fd > -1Ë&& 
m_ev_hdÃs
[fd].
ö_u£
);

678 i‡(
ïﬁl_c⁄åﬁ
(
EPOLL_CTL_MOD
, 
fd
, 
ev_ty≥
, 
m_ev_hdÃs
[fd].
u£_ë
) == -1) {

679 
throw
 
°d
::
ru¡ime_îr‹
(°d::
°rög
("ïﬁl_˘»(EPOLL_CTL_MODËÁûed: "Ë+ 
°ªº‹
(
î∫o
));

688 
ªmove
(
fd
)

690 
as£π
((
fd
 < 
m_maxfd
Ë&& (fd > -1Ë&& 
m_ev_hdÃs
[fd].
ö_u£
);

692 
EvítH™dÀr
* 
evhdÃ
 = &
m_ev_hdÃs
[
fd
];

693 
evhdÃ
->
ö_u£
 = 
Ál£
;

694 
dñëe
 
evhdÃ
->
ö
;

695 
dñëe
 
evhdÃ
->
out
;

696 --
m_ev_num
;

698 
ïﬁl_c⁄åﬁ
(
EPOLL_CTL_DEL
, 
fd
, 
evít_ö
, 
Ál£
);

707 
ªp‹t_agaö_ö
(
fd
)

709 
as£π
((
fd
 < 
m_maxfd
Ë&& (fd > -1Ë&& 
m_ev_hdÃs
[fd].
ö_u£
);

711 
m_ªad_evs
.
push
(&
m_ev_hdÃs
[
fd
]);

721 
di•©ch
();

723 
¥iv©e
:

724 
add_evít
(
fd
, 
EvítTy≥
 
ev_ty≥
, 
CÆlbackBa£
* 
ö
, CÆlbackBa£* 
out
, 
boﬁ
 
u£_ë
);

725 
ïﬁl_c⁄åﬁ
(
›
, 
fd
, 
EvítTy≥
 
ev_ty≥
, 
boﬁ
 
u£_ë
);

727 
di•©ch_ªady_evíts
(
ev_num
);

729 
ªdi•©ch_ö_evíts
();

731 
¥iv©e
:

733 
m_ïfd
;

735 
m_timeout
;

737 
m_ev_num
;

739 
m_maxfd
;

741 
EvítH™dÀr
* 
m_ev_hdÃs
;

743 
ïﬁl_evít
* 
m_avaû_evs
;

745 
°d
::
queue
<
EvítH™dÀr
*> 
m_ªad_evs
;

747 
CÆlbackBa£
* 
m_∂ugö
;

	@/usr/include/libtaomee++/event/event_mgr.hpp

17 #i‚de‡
LIBTAOMEEPP_EVENT_MANAGER_HPP_


18 
	#LIBTAOMEEPP_EVENT_MANAGER_HPP_


	)

20 
	~<m≠
>

22 
	~<libèomì++/mem‹y/mempoﬁ.hµ
>

23 
	~<libèomì++/time/timevÆ.hµ
>

25 
	~<libèomì++/evít/evíèbÀ_obj.hµ
>

27 
«me•a˚
 
	gèomì
 {

32 ˛as†
	cTimedEvít
 : 
public
 
MemPoﬁ
 {

33 
¥iv©e
:

34 ˛as†
	cCÆlbackBa£
 : 
public
 
MemPoﬁ
 {

35 
public
:

36 
vútuÆ
 
execuã
() = 0;

37 
	gvútuÆ
 ~
CÆlbackBa£
() { };

40 
	gãm∂©e
 < 
ty≥«me
 
	gCœss
 >

41 ˛as†
	cCÆlbackP0
 : 
public
 
CÆlbackBa£
 {

42 
public
:

43 (
Cœss
::*
	tMëhod
)();

45 
	gpublic
:

46 
CÆlbackP0
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
)

47 { 
	gm_obj
 = 
˛ass_ö°™˚
; 
	gm_func
 = 
mëhod
; }

49 
execuã
()

50 {  (
	gm_obj
->*
	gm_func
)(); }

52 
	g¥iv©e
:

53 
Cœss
* 
m_obj
;

54 
Mëhod
 
	gm_func
;

57 
	gãm∂©e
 < 
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
 >

58 ˛as†
	cCÆlbackP1
 : 
public
 
CÆlbackBa£
 {

59 
public
:

60 (
Cœss
::*
	tMëhod
)(
	tP1
&);

62 
	gpublic
:

63 
CÆlbackP1
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, c⁄° 
P1
& 
p1
)

64 { 
	gm_obj
 = 
˛ass_ö°™˚
; 
	gm_func
 = 
mëhod
; 
	gm_p1
 = 
p1
; }

66 
execuã
()

67 {  (
	gm_obj
->*
	gm_func
)(
	gm_p1
); }

69 
	g¥iv©e
:

70 
Cœss
* 
m_obj
;

71 
Mëhod
 
	gm_func
;

72 
P1
 
	gm_p1
;

75 
	gãm∂©e
 < 
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
 >

76 ˛as†
	cCÆlbackP2
 : 
public
 
CÆlbackBa£
 {

77 
public
:

78 (
Cœss
::*
	tMëhod
)(
	tP1
&, 
	tP2
&);

80 
	gpublic
:

81 
CÆlbackP2
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
)

82 { 
	gm_obj
 = 
˛ass_ö°™˚
; 
	gm_func
 = 
mëhod
; 
	gm_p1
 = 
p1
; 
	gm_p2
 = 
p2
; }

84 
execuã
()

85 {  (
	gm_obj
->*
	gm_func
)(
	gm_p1
, 
	gm_p2
); }

87 
	g¥iv©e
:

88 
Cœss
* 
m_obj
;

89 
Mëhod
 
	gm_func
;

90 
P1
 
	gm_p1
;

91 
P2
 
	gm_p2
;

94 
	gãm∂©e
 < 
˛ass
 
	gCœss
, 
ty≥«me
 
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
 >

95 ˛as†
	cCÆlbackP3
 : 
public
 
CÆlbackBa£
 {

96 
public
:

97 (
Cœss
::*
	tMëhod
)(
	tP1
&, 
	tP2
&, 
	tP3
&);

99 
	gpublic
:

100 
CÆlbackP3
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
)

101 { 
	gm_obj
 = 
˛ass_ö°™˚
; 
	gm_func
 = 
mëhod
; 
	gm_p1
 = 
p1
; 
	gm_p2
 = 
p2
; 
	gm_p3
 = 
p3
; }

103 
execuã
()

104 {  (
	gm_obj
->*
	gm_func
)(
	gm_p1
, 
	gm_p2
, 
	gm_p3
); }

106 
	g¥iv©e
:

107 
Cœss
* 
m_obj
;

108 
Mëhod
 
	gm_func
;

109 
P1
 
	gm_p1
;

110 
P2
 
	gm_p2
;

111 
P3
 
	gm_p3
;

114 
	gãm∂©e
 < 
˛ass
 
	gCœss
, 
ty≥«me
 
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
 >

115 ˛as†
	cCÆlbackP4
 : 
public
 
CÆlbackBa£
 {

116 
public
:

117 (
Cœss
::*
	tMëhod
)(
	tP1
&, 
	tP2
&, 
	tP3
&, 
	tP4
&);

119 
	gpublic
:

120 
CÆlbackP4
(
Cœss
* 
˛ass_ö°™˚
, 
Mëhod
 
mëhod
, c⁄° 
P1
& 
p1
, c⁄° 
P2
& 
p2
, c⁄° 
P3
& 
p3
, c⁄° 
P4
& 
p4
)

121 { 
	gm_obj
 = 
˛ass_ö°™˚
; 
	gm_func
 = 
mëhod
; 
	gm_p1
 = 
p1
; 
	gm_p2
 = 
p2
; 
	gm_p3
 = 
p3
; 
	gm_p4
 = 
p4
; }

123 
execuã
()

124 {  (
	gm_obj
->*
	gm_func
)(
	gm_p1
, 
	gm_p2
, 
	gm_p3
, 
	gm_p4
); }

126 
	g¥iv©e
:

127 
Cœss
* 
m_obj
;

128 
Mëhod
 
	gm_func
;

129 
P1
 
	gm_p1
;

130 
P2
 
	gm_p2
;

131 
P3
 
	gm_p3
;

132 
P4
 
	gm_p4
;

135 
	g¥iv©e
:

136 
TimedEvít
(
EvíèbÀObje˘
* 
ev_ow√r
, 
CÆlbackBa£
* 
cb
, 
uöt32_t
 
öãrvÆ
, 
ª≥©
)

137 { 
	gm_ev_ow√r
 = 
ev_ow√r
; 
	gm_cb
 = 
cb
; 
	gm_öãrvÆ
 = 
öãrvÆ
; 
	gm_ª≥©_times
 = 
ª≥©
; }

139 ~
TimedEvít
()

140 { 
dñëe
 
	gm_cb
; }

142 
dó˘iv©e
()

143 { 
	gm_ev_ow√r
 = 0; }

145 
boﬁ
 
is_a˘ive
() const

146 {  
	gm_ev_ow√r
; }

148 
	g¥iv©e
:

149 
EvíèbÀObje˘
* 
m_ev_ow√r
;

150 
CÆlbackBa£
* 
	gm_cb
;

152 
uöt32_t
 
	gm_öãrvÆ
;

153 
	gm_ª≥©_times
;

154 
TimeVÆ
 
	gm_expúed_tv
;

157 
	gpublic
:

158 
‰õnd
 
˛ass
 
EvítMgr
;

159 
‰õnd
 
˛ass
 
	gEvíèbÀObje˘
;

165 ˛as†
	cEvítMgr
 {

166 
	g¥iv©e
:

167 
°d
::
	tmu…im≠
<
	tTimeVÆ
, 
	tTimedEvít
*> 
	tEvítM≠
;

169 
	gpublic
:

180 
ãm∂©e
 <
ty≥«me
 
Cœss
>

181 
TimedEvít
* 
add_evít
(
Cœss
& 
obj
, (Cœss::*
mëhod
)(), c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
 = 0, 
ª≥©s
 = 0)

183 
TimedEvít
::
CÆlbackBa£
* 
cb
 = 
√w
 TimedEvít::
CÆlbackP0
<
Cœss
>(&
obj
, 
	gmëhod
);

185  
do_add_evít
(&
obj
, 
cb
, 
fú°_expúed_tv
, 
öãrvÆ
, 
ª≥©s
);

199 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
>

200 
TimedEvít
* 
add_evít
(
Cœss
& 
obj
, (Cœss::*
mëhod
)(
P1
&), c⁄° P1& 
p1
, c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
 = 0, 
ª≥©s
 = 0)

202 
TimedEvít
::
CÆlbackBa£
* 
cb
 = 
√w
 TimedEvít::
CÆlbackP1
<
Cœss
, 
	gP1
>(&
	gobj
, 
	gmëhod
, 
	gp1
);

204  
do_add_evít
(&
obj
, 
cb
, 
fú°_expúed_tv
, 
öãrvÆ
, 
ª≥©s
);

219 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
>

220 
TimedEvít
* 
add_evít
(
Cœss
& 
obj
, (Cœss::*
mëhod
)(
P1
&, 
P2
&), c⁄° P1& 
p1
, c⁄° P2& 
p2
, c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
 = 0, 
ª≥©s
 = 0)

222 
TimedEvít
::
CÆlbackBa£
* 
cb
 = 
√w
 TimedEvít::
CÆlbackP2
<
Cœss
, 
	gP1
, 
	gP2
>(&
	gobj
, 
	gmëhod
, 
	gp1
, 
	gp2
);

224  
do_add_evít
(&
obj
, 
cb
, 
fú°_expúed_tv
, 
öãrvÆ
, 
ª≥©s
);

240 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
>

241 
TimedEvít
* 
add_evít
(
Cœss
& 
obj
, (Cœss::*
mëhod
)(
P1
&, 
P2
&, 
P3
&), c⁄° P1& 
p1
, c⁄° P2& 
p2
, c⁄° P3& 
p3
, c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
 = 0, 
ª≥©s
 = 0)

243 
TimedEvít
::
CÆlbackBa£
* 
cb
 = 
√w
 TimedEvít::
CÆlbackP3
<
Cœss
, 
	gP1
, 
	gP2
, 
	gP3
>(&
	gobj
, 
	gmëhod
, 
	gp1
, 
	gp2
, 
	gp3
);

245  
do_add_evít
(&
obj
, 
cb
, 
fú°_expúed_tv
, 
öãrvÆ
, 
ª≥©s
);

262 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gP1
,Åy≥«mê
	gP2
,Åy≥«mê
	gP3
,Åy≥«mê
	gP4
>

263 
TimedEvít
* 
add_evít
(
Cœss
& 
obj
, (Cœss::*
mëhod
)(
P1
&, 
P2
&, 
P3
&, 
P4
&), c⁄° P1& 
p1
, c⁄° P2& 
p2
, c⁄° P3& 
p3
, c⁄° P4& 
p4
, c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
 = 0, 
ª≥©s
 = 0)

265 
TimedEvít
::
CÆlbackBa£
* 
cb
 = 
√w
 TimedEvít::
CÆlbackP4
<
Cœss
, 
	gP1
, 
	gP2
, 
	gP3
, 
	gP4
>(&
	gobj
, 
	gmëhod
, 
	gp1
, 
	gp2
, 
	gp3
, 
	gp4
);

267  
do_add_evít
(&
obj
, 
cb
, 
fú°_expúed_tv
, 
öãrvÆ
, 
ª≥©s
);

274 
ªmove_evít
(
TimedEvít
* 
ev
)

276 
	gev
->
	gm_ev_ow√r
->
evít_ªmove_evít
(
ev
);

283 
ªmove_evíts
(
EvíèbÀObje˘
& 
obj
)

285 
	gobj
.
evít_ªmove_evít
();

293 
modify_expúed_tv
(
TimedEvít
* 
ev
, c⁄° 
timevÆ
& 
tv
)

295 
as£π
(
m_ÆÀvíts
.
cou¡
(
ev
->
m_expúed_tv
));

297 
	gm_ÆÀvíts
.
îa£
(
ev
->
m_expúed_tv
);

299 
	gev
->
	gm_expúed_tv
 = 
tv
;

301 
	gm_ÆÀvíts
.
ö£π
(
°d
::
make_∑ú
(
ev
->
m_expúed_tv
,Év));

309 
modify_öãrvÆ
(
TimedEvít
* 
ev
, 
uöt32_t
 
öãrvÆ
)

311 
	gev
->
	gm_öãrvÆ
 = 
öãrvÆ
;

318 
¥o˚ss_evíts
();

320 
	g¥iv©e
:

321 
TimedEvít
* 
do_add_evít
(
EvíèbÀObje˘
* 
obj
, TimedEvít::
CÆlbackBa£
* 
cb
, c⁄° 
timevÆ
& 
fú°_expúed_tv
, 
uöt32_t
 
öãrvÆ
, 
ª≥©s
)

324 
TimedEvít
* 
	gevít
 = 
√w
 TimedEvít(
obj
, 
cb
, 
öãrvÆ
, 
ª≥©s
);

325 
	gevít
->
	gm_expúed_tv
 = 
fú°_expúed_tv
;

327 
	gm_ÆÀvíts
.
ö£π
(
°d
::
make_∑ú
(
evít
->
m_expúed_tv
,Évent));

329 
	gobj
->
evít_add_evít
(
evít
);

331  
	gevít
;

334 
	g¥iv©e
:

335 
EvítM≠
 
m_ÆÀvíts
;

	@/usr/include/libtaomee++/event/eventable_obj.hpp

15 #i‚de‡
LIBTAOMEEPP_EVENTABLE_OBJECT_HPP_


16 
	#LIBTAOMEEPP_EVENTABLE_OBJECT_HPP_


	)

18 
	~<ˇs£π
>

19 
	~<£t
>

21 
«me•a˚
 
	gèomì
 {

24 
˛ass
 
	gTimedEvít
;

30 ˛as†
	cEvíèbÀObje˘
 {

31 
	g¥iv©e
:

32 
°d
::
	t£t
<
	tTimedEvít
*> 
	tEvítSë
;

34 
	gpublic
:

35 
EvíèbÀObje˘
 () {}

40 
vútuÆ
 ~
EvíèbÀObje˘
()

42 
evít_ªmove_evít
();

45 
	g¥iv©e
:

46 
evít_add_evít
(
TimedEvít
* 
ev
)

48 
m_evs
.
ö£π
(
ev
);

51 
evít_ªmove_evít
(
TimedEvít
* 
ev
 = 0);

53 
	g¥iv©e
:

54 
EvíèbÀObje˘
 (const EventableObject &);

55 
	gEvíèbÀObje˘
 & 
	g›î©‹
 = (c⁄° 
EvíèbÀObje˘
 &);

57 
	g¥iv©e
:

58 
EvítSë
 
m_evs
;

60 
	gpublic
:

61 
‰õnd
 
˛ass
 
EvítMgr
;

	@/usr/include/libtaomee++/factory/factory.hpp

14 #i‚de‡
LIBTAOMEEPP_FACTORY_HPP_


15 
	#LIBTAOMEEPP_FACTORY_HPP_


	)

17 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

18 
	~<libèomì++/utûs/obj_ªgi°ry.hµ
>

20 
«me•a˚
 
	gèomì
 {

28 
	gãm∂©e
 <
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gAb°ø˘ProdTy≥
>

29 ˛as†
	cFa˘‹y
 {

30 
	g¥iv©e
:

34 ˛as†
	cAb°ø˘W‹kî
 {

35 
public
:

39 
vútuÆ
 ~
Ab°ø˘W‹kî
()

44 
vútuÆ
 
Ab°ø˘ProdTy≥
* 
¸óã
(c⁄° * 
d©a
 = 0) const = 0;

50 
	gãm∂©e
 <
ty≥«me
 
	gProdTy≥
>

51 ˛as†
	cW‹kî
 : 
public
 
Ab°ø˘W‹kî
 {

52 
public
:

53 ~
W‹kî
()

60 
ProdTy≥
* 
¸óã
(c⁄° * 
d©a
 = 0) const

61 {  
√w
 
ProdTy≥
(
d©a
); }

64 
	gpublic
:

74 
ãm∂©e
 <
ty≥«me
 
ProdTy≥
>

75 
boﬁ
 
add_¥odu˘
(c⁄° 
KeyTy≥
& 
key
, boﬁ 
ovîride
 = 
Ál£
)

76 {  
m_hﬁdî
.
ö£π_obje˘
(
key
, 
√w
 
W‹kî
<
ProdTy≥
>, 
ovîride
); }

82 
ªmove_¥odu˘
(c⁄° 
KeyTy≥
& 
key
)

83 { 
	gm_hﬁdî
.
ªmove_obje˘
(
key
); }

92 
Ab°ø˘ProdTy≥
* 
¸óã
(c⁄° 
KeyTy≥
& 
key
, c⁄° * 
d©a
 = 0) const;

94 
	g¥iv©e
:

96 
Obje˘Regi°ry
<
KeyTy≥
, 
	gAb°ø˘W‹kî
> 
	gm_hﬁdî
;

99 
	gãm∂©e
 <
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gAb°ø˘ProdTy≥
>

100 
ölöe
 
Ab°ø˘ProdTy≥
* 
	gFa˘‹y
<
	gKeyTy≥
, 
	gAb°ø˘ProdTy≥
>::
	$¸óã
(c⁄° 
KeyTy≥
& 
key
, c⁄° * 
d©a
) const

102 c⁄° 
Ab°ø˘W‹kî
* 
w‹kî
 = 
m_hﬁdî
.
	`gë_obje˘
(
key
);

103 i‡(
w‹kî
) {

104  
w‹kî
->
	`¸óã
(
d©a
);

108 
	}
}

	@/usr/include/libtaomee++/inet/byteswap.hpp

15 #i‚de‡
LIBTAOMEEPP_BYTESWAP_HPP_


16 
	#LIBTAOMEEPP_BYTESWAP_HPP_


	)

19 
	~<°döt.h
>

21 
	~<byãsw≠.h
>

24 
«me•a˚
 
èomì
 {

26 
ölöe
 
öt8_t
 
bsw≠
(öt8_à
x
)

28  
x
;

31 
ölöe
 
uöt8_t
 
bsw≠
(uöt8_à
x
)

33  
x
;

36 
ölöe
 
öt16_t
 
bsw≠
(öt16_à
x
)

38  
bsw≠_16
(
x
);

41 
ölöe
 
uöt16_t
 
bsw≠
(uöt16_à
x
)

43  
bsw≠_16
(
x
);

46 
ölöe
 
öt32_t
 
bsw≠
(öt32_à
x
)

48  
bsw≠_32
(
x
);

51 
ölöe
 
uöt32_t
 
bsw≠
(uöt32_à
x
)

53  
bsw≠_32
(
x
);

56 
ölöe
 
öt64_t
 
bsw≠
(öt64_à
x
)

58  
bsw≠_64
(
x
);

61 
ölöe
 
uöt64_t
 
bsw≠
(uöt64_à
x
)

63  
bsw≠_64
(
x
);

66 #i‡
__WORDSIZE
 == 32

67 
ölöe
 
bsw≠
(
x
)

69  
bsw≠_32
(
x
);

72 
ölöe
 
bsw≠
(
x
)

74  
bsw≠_32
(
x
);

	@/usr/include/libtaomee++/inet/pdumanip.hpp

14 #i‚de‡
LIBTAOMEEPP_PDUMAINP_HPP_


15 
	#LIBTAOMEEPP_PDUMAINP_HPP_


	)

17 
	~<c°rög
>

19 
	~"byãsw≠.hµ
"

21 
«me•a˚
 
	gèomì
 {

31 
	gãm∂©e
 <
ty≥«me
 
	gT
>

32 
ölöe
 
∑ck
(* 
pkg
, 
T
 
vÆ
, & 
idx
)

34 *(
	gªöãΩªt_ˇ°
<
	gT
*>‘eöãΩªt_ˇ°<
	guöt8_t
*>(
	gpkg
Ë+ 
	gidx
)Ë
bsw≠
(
vÆ
);

35 
	gidx
 + 
vÆ
;

46 
ölöe
 
∑ck
(* 
pkg
, c⁄° * 
vÆ
, 
°d
::
size_t
 
Àn
, & 
idx
)

48 
mem˝y
(
ªöãΩªt_ˇ°
<
uöt8_t
*>(
pkg
Ë+ 
idx
, 
vÆ
, 
Àn
);

49 
	gidx
 +
Àn
;

60 
	gãm∂©e
 <
ty≥«me
 
	gT
>

61 
ölöe
 
∑ck_h
(* 
pkg
, 
T
 
vÆ
, & 
idx
)

63 *(
	gªöãΩªt_ˇ°
<
	gT
*>‘eöãΩªt_ˇ°<
	guöt8_t
*>(
	gpkg
Ë+ 
	gidx
)Ë
vÆ
;

64 
	gidx
 + 
vÆ
;

75 
	gãm∂©e
 <
ty≥«me
 
	gT
>

76 
ölöe
 
u≈ack
(c⁄° * 
pkg
, 
T
& 
vÆ
, & 
idx
)

78 
	gvÆ
 = 
bsw≠
(*(
ªöãΩªt_ˇ°
<c⁄° 
T
*>‘eöãΩªt_ˇ°<c⁄° 
uöt8_t
*>(
pkg
Ë+ 
idx
)));

79 
	gidx
 + 
vÆ
;

90 
ölöe
 
u≈ack
(c⁄° * 
pkg
, * 
vÆ
, 
°d
::
size_t
 
Àn
, & 
idx
)

92 
mem˝y
(
vÆ
, 
ªöãΩªt_ˇ°
<c⁄° 
uöt8_t
*>(
pkg
Ë+ 
idx
, 
Àn
);

93 
	gidx
 +
Àn
;

104 
	gãm∂©e
 <
ty≥«me
 
	gT
>

105 
ölöe
 
u≈ack_h
(c⁄° * 
pkg
, 
T
& 
vÆ
, & 
idx
)

107 
	gvÆ
 = *(
ªöãΩªt_ˇ°
<c⁄° 
T
*>‘eöãΩªt_ˇ°<c⁄° 
uöt8_t
*>(
pkg
Ë+ 
idx
));

108 
	gidx
 + 
vÆ
;

	@/usr/include/libtaomee++/inet/udp_pool/udp_pool.hpp

14 #i‚de‡
LIBTAOMEEPP_UDP_POOL_HPP_


15 
	#LIBTAOMEEPP_UDP_POOL_HPP_


	)

18 
	~<¨∑/öë.h
>

19 
	~<sys/sockë.h
>

22 
	~<˚ºno
>

23 
	~<c°rög
>

25 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

27 
	~<libèomì++/thªad/thªadpoﬁ.hµ
>

29 
«me•a˚
 
èomì
 {

44 
ãm∂©e
 <
ty≥«me
 
JobPﬁicy
>

45 ˛as†
	cUdpPoﬁ
 : 
N⁄c›yabÀ
 {

46 
public
:

54 
UdpPoﬁ
(
ö_p‹t_t
 
p‹t
 = 8421, c⁄° * 
ù
 = 0, c⁄° 
size_t
 
pkgsize
 = 4096, size_à
¡hrs
 = 20);

55 ~
UdpPoﬁ
() { }

59 
run
();

61 
›î©‹
 *() const

62 {  
ªöãΩªt_ˇ°
<*>(!
îr_
); }

63 
¥iv©e
:

64 ˛as†
	cJob
 {

65 
public
:

66 
run
(c⁄° * 
d©a
)

68 
job_
.
run
(
d©a
);

69 
dñëe
 [] 
ªöãΩªt_ˇ°
<c⁄° *>(
d©a
);

71 
¥iv©e
:

72 
JobPﬁicy
 
job_
;

76 
îr_
;

78 
sockfd_
;

80 c⁄° 
size_t
 
pkgsize_
;

82 
ThªadPoﬁ
<
Job
> 
thΩoﬁ_
;

85 
	~"udp_poﬁ.t˝p
"

	@/usr/include/libtaomee++/memory/mempool.hpp

24 #i‚de‡
LIBTAOMEEPP_MEMPOOL_HPP_


25 
	#LIBTAOMEEPP_MEMPOOL_HPP_


	)

27 
	~<°dex˚±
>

30 
	~<glib.h
>

33 
«me•a˚
 
èomì
 {

39 ˛as†
	cMemPoﬁ
 {

40 
public
:

41 
vútuÆ
 ~
MemPoﬁ
() { }

43 
public
:

44 * 
›î©‹
 
√w
(
°d
::
size_t
 
n
);

45 * 
›î©‹
 
√w
(
°d
::
size_t
 
n
, c⁄° std::
nŸhrow_t
& 
¡
);

46 
›î©‹
 
dñëe
(* 
p
, 
°d
::
size_t
 
n
);

48 * 
›î©‹
 
√w
[](
°d
::
size_t
 
n
);

49 * 
›î©‹
 
√w
[](
°d
::
size_t
 
n
, c⁄° std::
nŸhrow_t
& 
¡
);

50 
›î©‹
 
dñëe
[](* 
p
, 
°d
::
size_t
 
n
);

53 
ölöe
 *

54 
MemPoﬁ
::
›î©‹
 
√w
(
°d
::
size_t
 
n
)

56 * 
p
 = 
g_¶i˚_Æloc
(
n
);

57 i‡(
p
) {

58  
p
;

61 
throw
 
°d
::
bad_Æloc
();

64 
ölöe
 *

65 
MemPoﬁ
::
›î©‹
 
√w
(
°d
::
size_t
 
n
, c⁄° std::
nŸhrow_t
& 
¡
)

67  
g_¶i˚_Æloc
(
n
);

70 
ölöe
 

71 
MemPoﬁ
::
›î©‹
 
dñëe
(* 
p
, 
°d
::
size_t
 
n
)

73 
g_¶i˚_‰ì1
(
n
, 
p
);

76 
ölöe
 *

77 
MemPoﬁ
::
›î©‹
 
√w
[](
°d
::
size_t
 
n
)

79  
›î©‹
 
√w
(
n
);

82 
ölöe
 *

83 
MemPoﬁ
::
›î©‹
 
√w
[](
°d
::
size_t
 
n
, c⁄° std::
nŸhrow_t
& 
¡
)

85  
›î©‹
 
√w
(
n
, 
¡
);

88 
ölöe
 

89 
MemPoﬁ
::
›î©‹
 
dñëe
[](* 
p
, 
°d
::
size_t
 
n
)

91 
›î©‹
 
dñëe
(
p
, 
n
);

	@/usr/include/libtaomee++/pathfinder/astar/astar.hpp

15 #i‚de‡
LIBTAOMEEPP_ASTAR_HPP_


16 
	#LIBTAOMEEPP_ASTAR_HPP_


	)

19 
	~<°döt.h
>

22 
	~<c°dlib
>

24 
	~<Æg‹ôhm
>

25 
	~<f°ªam
>

26 
	~<ve˘‹
>

28 
	~<libèomì++/øndom/øndom.hµ
>

30 
	~"def_grid_d©a.hµ
"

32 
«me•a˚
 
èomì
 {

37 
ãm∂©e
 <
ty≥«me
 
GridD©a
 = 
DefGridD©a
>

38 ˛as†
	cASèr
 {

39 
¥iv©e
:

43 
	ea°¨_c⁄°™t_t
 {

44 
a°¨_grid_di°_°æ
 = 10,

45 
a°¨_grid_di°_oblique
 = 14,

48 
˛ass
 
Grid
;

52 
Grid
* 
	tGridPoöãr
;

54 
public
:

58 ˛as†
	cPoöt
 {

59 
public
:

63 
Poöt
(
uöt32_t
 
xpos
 = 0, uöt32_à
ypos
 = 0)

64 { 
x
 = 
xpos
; 
y
 = 
ypos
; }

66 
public
:

68 
uöt32_t
 
x
;

70 
uöt32_t
 
y
;

76 
°d
::
	tve˘‹
<
	tPoöt
> 
	tPoöts
;

78 
public
:

82 
ASèr
(c⁄° * 
fûíame
);

86 
ASèr
(c⁄° ASèr& 
°¨
);

90 ~
ASèr
();

99 
boﬁ
 
£t_grids_wÆkabûôy
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
, 
wÆkabûôy
);

107 c⁄° 
Poöts
* 
föd∑th
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
);

114 c⁄° 
Poöts
* 
föd_löór_∑th
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
);

120 c⁄° 
Poöts
* 
föd_suºoundög_poöts
(c⁄° 
Poöt
& 
§c
);

126 c⁄° 
Poöts
* 
föd_suºoundög_poöts2
(c⁄° 
Poöt
& 
§c
);

134 c⁄° 
Poöts
* 
föd_esˇ≥_∑th
(c⁄° 
Poöt
& 
cuΩos
, c⁄° Poöt& 
f€pos
, 
di°
);

140 
boﬁ
 
is_pos_wÆkabÀ
(c⁄° 
Poöt
& 
cur_pos
);

145 
›î©‹
 *() const

146 {  
ªöãΩªt_ˇ°
<*>(!
m_îr
); }

148 
¥iv©e
:

152 
	ea°¨_îr‹_t
 {

153 
a°¨_îr_ok
 = 0,

154 
a°¨_îr_›í_fûe
 = 1,

155 
a°¨_îr_ªad_fûe
 = 2,

161 ˛as†
	cGridIndex
 {

162 
public
:

166 
GridIndex
(
uöt32_t
 
r
 = 0, uöt32_à
c
 = 0)

167 { 
row
 = 
r
; 
cﬁumn
 = 
c
; }

169 
public
:

170 
‰õnd
 
boﬁ
 
›î©‹
 ==(c⁄° 
GridIndex
& 
i1
, c⁄° GridIndex& 
i2
)

171 {  (
i1
.
row
 =
i2
.rowË&& (i1.
cﬁumn
 == i2.column); }

173 
‰õnd
 
boﬁ
 
›î©‹
 !=(c⁄° 
GridIndex
& 
i1
, c⁄° GridIndex& 
i2
)

174 {  !(
i1
 =
i2
); }

176 
‰õnd
 
GridIndex
 
›î©‹
 -(c⁄° GridIndex& 
lhs
, c⁄° GridIndex& 
rhs
)

177 { 
GridIndex
 
ªt
(
lhs
);Ñë.
row
 -
rhs
.row;Ñë.
cﬁumn
 -=Ñhs.column; Ñet; }

179 
public
:

181 
uöt32_t
 
row
;

183 
uöt32_t
 
cﬁumn
;

189 ˛as†
	cGrid
 {

190 
public
:

191 
Grid
()

192 { 
∑ª¡
 = 0; 
chûd
 = 0; 
f
 = 0; 
g
 = 0; }

194 
public
:

195 
‰õnd
 
boﬁ
 
›î©‹
 ==(c⁄° 
Grid
& 
g1
, c⁄° Grid& 
g2
)

196 {  (
g1
.
idx
 =
g2
.idx); }

198 
public
:

200 
Grid
* 
∑ª¡
;

205 
Grid
* 
chûd
;

208 
uöt32_t
 
f
;

210 
uöt32_t
 
g
;

213 
GridIndex
 
idx
;

215 
GridD©a
 
grid_d©a
;

218 
¥iv©e
:

219 
Æloc_m≠
();

221 
åy_add_suc˚ss‹
(c⁄° 
GridIndex
& 
idx
, 
Grid
* 
∑ª¡
, 
uöt32_t
 
co°
 = 
a°¨_grid_di°_°æ
);

222 
f‹m_∑th
(
Grid
* 
gﬂl
, c⁄° 
Poöt
& 
d°
);

224 
GridPoöãr
 
gë_grid
(c⁄° 
GridIndex
& 
idx
);

226 
öô_˛o£d_li°
()

227 { 
m_˛o£d_li°
.
∑ª¡
 = &m_˛o£d_li°; m_˛o£d_li°.
chûd
 = 0; }

228 
add_to_˛o£d_li°
(
Grid
* 
g
)

229 { 
m_˛o£d_li°
.
∑ª¡
->
chûd
 = 
g
; m_closed_list.parent = g; g->child = 0; }

231 
uöt32_t
 
di°™˚
(c⁄° 
GridIndex
& 
°¨t
, c⁄° GridIndex& 
íd
) const

232 {  (
abs
(
íd
.
row
 - 
°¨t
.rowË+ábs”nd.
cﬁumn
 - sèπ.cﬁumn)Ë* 
a°¨_grid_di°_°æ
; }

234 
GridIndex
 
poöt_to_grid_idx
(c⁄° 
Poöt
& 
±
) const

235 {  
GridIndex
(
±
.
y
 / 
m_µg_y
,Öt.
x
 / 
m_µg_x
); }

236 
Poöt
 
grid_idx_to_poöt
(c⁄° 
GridIndex
& 
idx
) const

237 {  
Poöt
(
idx
.
cﬁumn
 * 
m_µg_x
, idx.
row
 * 
m_µg_y
); }

239 
boﬁ
 
out_of_ønge
(c⁄° 
GridIndex
& 
idx
) const

240 {  (
idx
.
row
 >
m_max_grids_row
Ë|| (idx.
cﬁumn
 >
m_max_grids_cﬁumn
); }

242 
¥iv©e
:

246 
boﬁ
 
grid_cmp
(c⁄° 
Grid
* 
g1
, c⁄° Grid* 
g2
)

247 {  (
g1
->
f
 > 
g2
->f); }

249 
¥iv©e
:

251 
uöt32_t
 
m_max_grids_row
;

253 
uöt32_t
 
m_max_grids_cﬁumn
;

255 
uöt32_t
 
m_µg_x
;

257 
uöt32_t
 
m_µg_y
;

259 
Poöts
 
m_poöts
;

262 
GridPoöãr
* 
m_m≠
;

265 
Grid
* 
m_cur_grid
;

267 
Grid
* 
m_gﬂl_grid
;

269 
°d
::
ve˘‹
<
GridPoöãr
> 
m_›í_li°
;

271 
Grid
 
m_˛o£d_li°
;

274 
m_îr
;

277 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

278 
ölöe


279 
ASèr
<
GridD©a
>::
	$ASèr
(c⁄° * 
fûíame
)

281 
m_îr
 = 
a°¨_îr_ok
;

282 
m_m≠
 = 0;

284 
	`öô_˛o£d_li°
();

286 
m_›í_li°
.
	`ª£rve
(50);

287 
m_poöts
.
	`ª£rve
(50);

290 
°d
::
if°ªam
 
	`fö
(
fûíame
);

291 i‡(!
fö
) {

292 
m_îr
 = 
a°¨_îr_›í_fûe
;

297 
fö
 >> 
m_max_grids_cﬁumn
 >> 
m_max_grids_row
 >> 
m_µg_x
 >> 
m_µg_y
;

298 i‡(!
fö
) {

299 
m_îr
 = 
a°¨_îr_ªad_fûe
;

304 
	`Æloc_m≠
();

307 
uöt32_t
 
i
 = 0; i !
m_max_grids_row
; ++i) {

308 
uöt32_t
 
j
 = 0; j !
m_max_grids_cﬁumn
; ++j) {

309 
fö
 >> 
m_m≠
[
i
][
j
].
grid_d©a
;

310 
m_m≠
[
i
][
j
].
idx
.
row
 = i;

311 
m_m≠
[
i
][
j
].
idx
.
cﬁumn
 = j;

315 i‡(!
fö
) {

316 
m_îr
 = 
a°¨_îr_ªad_fûe
;

319 
	}
}

321 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

322 
ölöe


323 
ASèr
<
GridD©a
>::ASèr(c⁄° ASèr<GridD©a>& 
°¨
)

325 
m_îr
 = 
°¨
.m_err;

326 
m_max_grids_cﬁumn
 = 
°¨
.m_max_grids_column;

327 
m_max_grids_row
 = 
°¨
.m_max_grids_row;

328 
m_µg_x
 = 
°¨
.m_ppg_x;

329 
m_µg_y
 = 
°¨
.m_ppg_y;

330 
m_poöts
 = 
°¨
.m_points;

331 
m_cur_grid
 = 
°¨
.m_cur_grid;

332 
m_gﬂl_grid
 = 
°¨
.m_goal_grid;

333 
m_›í_li°
 = 
°¨
.m_open_list;

334 
m_m≠
 = 0;

335 
öô_˛o£d_li°
();

338 
Æloc_m≠
();

339 
uöt32_t
 
i
 = 0; i !
m_max_grids_row
; ++i){

340 
uöt32_t
 
j
 = 0; j !
m_max_grids_cﬁumn
; ++j){

341 
m_m≠
[
i
][
j
].
grid_d©a
 = 
°¨
.m_map[i][j].grid_data;

342 
m_m≠
[
i
][
j
].
idx
 = 
°¨
.m_map[i][j].idx;

347 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

348 
ölöe


349 
ASèr
<
GridD©a
>::~
	$ASèr
()

351 i‡(
m_m≠
) {

352 
dñëe
 [] 
m_m≠
[0];

353 
dñëe
 [] 
m_m≠
;

355 
	}
}

357 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

358 
boﬁ
 
ASèr
<
GridD©a
>::
	$£t_grids_wÆkabûôy
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
, 
wÆkabûôy
)

360 if(
§c
.
x
 =
d°
.x || src.
y
 == dst.y){

361  
Ál£
;

363 if(
§c
.
x
 % 
m_µg_x
 !0 || src.
y
 % 
m_µg_y
 != 0){

364  
Ál£
;

366 if(
d°
.
x
 % 
m_µg_x
 !0 || d°.
y
 % 
m_µg_y
 != 0){

367  
Ál£
;

370 
GridIndex
 
°¨t_idx
 = 
	`poöt_to_grid_idx
(
§c
);

371 
GridIndex
 
íd_idx
 = 
	`poöt_to_grid_idx
(
d°
);

373 
uöt32_t
 
mö_x_ödex
 = 
°¨t_idx
.
cﬁumn
 > 
íd_idx
.column ?Énd_idx.column : start_idx.column;

374 
uöt32_t
 
max_x_ödex
 = 
°¨t_idx
.
cﬁumn
 < 
íd_idx
.column ?Énd_idx.column : start_idx.column;

375 
uöt32_t
 
mö_y_ödex
 = 
°¨t_idx
.
row
 > 
íd_idx
.row ?Énd_idx.row: start_idx.row;

376 
uöt32_t
 
max_y_ödex
 = 
°¨t_idx
.
row
 < 
íd_idx
.row ?Énd_idx.row: start_idx.row;

378 
uöt32_t
 
i
 = 
mö_y_ödex
; i < 
max_y_ödex
; ++i) {

379 i‡(
i
 >
m_max_grids_row
) {

383 
uöt32_t
 
j
 = 
mö_x_ödex
; j < 
max_x_ödex
; ++j) {

384 if(
j
 >
m_max_grids_cﬁumn
) {

387 
m_m≠
[
i
][
j
].
grid_d©a
.
	`£t_wÆkabûôy
(
wÆkabûôy
);

391  
åue
;

392 
	}
}

394 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

395 
ölöe
 c⁄° 
ty≥«me
 
ASèr
<
GridD©a
>::
Poöts
*

396 
ASèr
<
GridD©a
>::
	$föd∑th
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
)

398 
m_poöts
.
	`˛ór
();

399 
m_cur_grid
 = 0;

401 
GridIndex
 
°¨t_idx
 = 
	`poöt_to_grid_idx
(
§c
);

402 
GridIndex
 
íd_idx
 = 
	`poöt_to_grid_idx
(
d°
);

404 i‡(
°¨t_idx
 =
íd_idx
) {

405 
m_poöts
.
	`push_back
(
d°
);

406  &
m_poöts
;

409 
Grid
* 
°¨t_grid
 = 
	`gë_grid
(
°¨t_idx
);

410 
m_gﬂl_grid
 = 
	`gë_grid
(
íd_idx
);

411 i‡(!
°¨t_grid
 || !
m_gﬂl_grid
 || !m_gﬂl_grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

415 
m_gﬂl_grid
->
∑ª¡
 = 0;

417 
°¨t_grid
->
∑ª¡
 = 0;

418 
°¨t_grid
->
g
 = 0;

419 
°¨t_grid
->
f
 = 
	`di°™˚
(
°¨t_idx
, 
íd_idx
);

421 
m_›í_li°
.
	`push_back
(
°¨t_grid
);

423 
°d
::
	`push_hóp
(
m_›í_li°
.
	`begö
(), m_›í_li°.
	`íd
(), 
grid_cmp
);

427 
m_cur_grid
 = 
m_›í_li°
.
	`‰⁄t
();

428 
°d
::
	`p›_hóp
(
m_›í_li°
.
	`begö
(), m_›í_li°.
	`íd
(), 
grid_cmp
);

429 
m_›í_li°
.
	`p›_back
();

432 
	`add_to_˛o£d_li°
(
m_cur_grid
);

435 i‡(
m_cur_grid
 =
m_gﬂl_grid
) {

440 c⁄° 
GridIndex
& 
idx
 = 
m_cur_grid
->idx;

441 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
, idx.
cﬁumn
 - 1), 
m_cur_grid
);

442 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
, idx.
cﬁumn
 + 1), 
m_cur_grid
);

443 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 - 1, idx.
cﬁumn
), 
m_cur_grid
);

444 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 + 1, idx.
cﬁumn
), 
m_cur_grid
);

445 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 + 1, idx.
cﬁumn
 - 1), 
m_cur_grid
, 
a°¨_grid_di°_oblique
);

446 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 - 1, idx.
cﬁumn
 - 1), 
m_cur_grid
, 
a°¨_grid_di°_oblique
);

447 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 + 1, idx.
cﬁumn
 + 1), 
m_cur_grid
, 
a°¨_grid_di°_oblique
);

448 
	`åy_add_suc˚ss‹
(
	`GridIndex
(
idx
.
row
 - 1, idx.
cﬁumn
 + 1), 
m_cur_grid
, 
a°¨_grid_di°_oblique
);

449 } 
m_›í_li°
.
	`size
());

452 
Grid
* 
node
 = 
m_˛o£d_li°
.
chûd
;

453 
node
) {

454 
node
->
f
 = 0;

455 
node
 =Çode->
chûd
;

457 
ty≥«me
 
°d
::
ve˘‹
<
GridPoöãr
>::
ôî©‹
 
ô
 = 
m_›í_li°
.
	`begö
(); ià!m_›í_li°.
	`íd
(); ++it) {

458 (*
ô
)->
f
 = 0;

461 
m_›í_li°
.
	`˛ór
();

462 
	`öô_˛o£d_li°
();

465 i‡(
m_gﬂl_grid
->
∑ª¡
) {

466 
	`f‹m_∑th
(
m_gﬂl_grid
, 
d°
);

467  &
m_poöts
;

471 
	}
}

473 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

474 
ölöe
 c⁄° 
ty≥«me
 
ASèr
<
GridD©a
>::
Poöts
*

475 
ASèr
<
GridD©a
>::
	$föd_löór_∑th
(c⁄° 
Poöt
& 
§c
, c⁄° Poöt& 
d°
)

477 
m_poöts
.
	`˛ór
();

479 
GridIndex
 
°¨t_idx
 = 
	`poöt_to_grid_idx
(
§c
);

480 
GridIndex
 
íd_idx
 = 
	`poöt_to_grid_idx
(
d°
);

482 i‡(
°¨t_idx
 =
íd_idx
) {

483 
m_poöts
.
	`push_back
(
d°
);

484  &
m_poöts
;

487 
Grid
* 
°¨t_grid
 = 
	`gë_grid
(
°¨t_idx
);

488 
row_diff
 = 
íd_idx
.
row
 - 
°¨t_idx
.row;

489 
cﬁ_diff
 = 
íd_idx
.
cﬁumn
 - 
°¨t_idx
.column;

490 i‡((
°¨t_grid
 =0Ë|| !°¨t_grid->
grid_d©a
.
	`is_wÆkabÀ
()

491 || ((
row_diff
 !0Ë&& (
cﬁ_diff
 !0Ë&& (
	`abs
(row_diff) !=ábs(col_diff)))) {

492 
m_poöts
.
	`push_back
(
§c
);

493  &
m_poöts
;

496 i‡(
row_diff
 > 0) {

497 
row_diff
 = 1;

498 } i‡(
row_diff
 < 0) {

499 
row_diff
 = -1;

502 i‡(
cﬁ_diff
 > 0) {

503 
cﬁ_diff
 = 1;

504 } i‡(
cﬁ_diff
 < 0) {

505 
cﬁ_diff
 = -1;

508 
GridIndex
 
¥ev_idx
 = 
°¨t_idx
;

509 
GridIndex
 
	`cur_idx
(
¥ev_idx
.
row
 + 
row_diff
,Öªv_idx.
cﬁumn
 + 
cﬁ_diff
);

511 
Grid
* 
g
 = 
	`gë_grid
(
cur_idx
);

512 i‡(
g
 && g->
grid_d©a
.
	`is_wÆkabÀ
()) {

513 i‡(
cur_idx
 !
íd_idx
) {

514 
¥ev_idx
 = 
cur_idx
;

515 
cur_idx
.
row
 +
row_diff
;

516 
cur_idx
.
cﬁumn
 +
cﬁ_diff
;

518 
m_poöts
.
	`push_back
(
d°
);

522 i‡(
¥ev_idx
 !
°¨t_idx
) {

523 
Poöt
 
±
 = 
	`grid_idx_to_poöt
(
¥ev_idx
);

524 i‡(
row_diff
 == 0) {

525 
±
.
y
 = 
§c
.y;

526 
±
.
x
 +
m_µg_x
 / 2;

527 } i‡(
cﬁ_diff
 == 0) {

528 
±
.
x
 = 
§c
.x;

529 
±
.
y
 +
m_µg_y
 / 2;

531 
±
.
x
 +
m_µg_x
 / 2;

532 
±
.
y
 +
m_µg_y
 / 2;

534 
m_poöts
.
	`push_back
(
±
);

536 
m_poöts
.
	`push_back
(
§c
);

542  &
m_poöts
;

543 
	}
}

545 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

546 
ölöe
 c⁄° 
ty≥«me
 
ASèr
<
GridD©a
>::
Poöts
*

547 
ASèr
<
GridD©a
>::
	$föd_suºoundög_poöts
(c⁄° 
Poöt
& 
§c
)

549 
m_poöts
.
	`˛ór
();

551 
GridIndex
 
idx
 = 
	`poöt_to_grid_idx
(
§c
);

553 
Grid
* 
grid
 = 
	`gë_grid
(
idx
);

554 i‡(
grid
 == 0) {

555 
m_poöts
.
	`push_back
(
§c
);

556  &
m_poöts
;

559 
Poöt
 
±
 = 
	`grid_idx_to_poöt
(
idx
);

560 
i
 = 0; i != 3; ++i) {

561 
j
 = 0; j != 3; ++j) {

562 
m_poöts
.
	`push_back
(
	`Poöt
(
±
.
x
 + 
m_µg_x
 / 2 * 
i
,Öt.
y
 + 
m_µg_y
 / 2 * 
j
));

566  &
m_poöts
;

567 
	}
}

569 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

570 
ölöe
 c⁄° 
ty≥«me
 
ASèr
<
GridD©a
>::
Poöts
*

571 
ASèr
<
GridD©a
>::
	$föd_suºoundög_poöts2
(c⁄° 
Poöt
& 
§c
)

573 
m_poöts
.
	`˛ór
();

575 
GridIndex
 
idx
 = 
	`poöt_to_grid_idx
(
§c
);

576 
Grid
* 
grid
 = 
	`gë_grid
(
idx
);

577 i‡(
grid
 == 0) {

578 
m_poöts
.
	`push_back
(
§c
);

579  &
m_poöts
;

582 
uöt32_t
 
adj
 = 5;

583 
GridIndex
 
d°_idx
;

585 
d°_row
 = 0, 
d°_cﬁ
 = 0;

586 
i
 = -1; i != 2; ++i) {

587 
j
 = -1; j != 2; ++j) {

588 
d°_row
 = 
idx
.
row
 + 
i
 * 
adj
;

589 
d°_cﬁ
 = 
idx
.
cﬁumn
 + 
j
 * 
adj
;

590 i‡(
	`abs
(
i
Ë=abs(
j
Ë|| 
d°_row
 < 0 || 
d°_cﬁ
 < 0) {

594 
d°_idx
 = 
	`GridIndex
(
d°_row
, 
d°_cﬁ
);

595 
Grid
* 
grid
 = 
	`gë_grid
(
d°_idx
);

596 i‡(!
grid
 || grid->
f
 || !grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

600 
m_poöts
.
	`push_back
(
	`grid_idx_to_poöt
(
d°_idx
));

605 
i
 = -1; i != 2; ++i) {

606 
j
 = -1; j != 2; ++j) {

607 
d°_row
 = 
idx
.
row
 + 
i
 * 
adj
;

608 
d°_cﬁ
 = 
idx
.
cﬁumn
 + 
j
 * 
adj
;

609 i‡(
	`abs
(
i
Ë!abs(
j
Ë|| 
d°_row
 < 0 || 
d°_cﬁ
 < 0) {

613 
d°_idx
 = 
	`GridIndex
(
d°_row
, 
d°_cﬁ
);

614 
Grid
* 
grid
 = 
	`gë_grid
(
d°_idx
);

615 i‡(!
grid
 || grid->
f
 || !grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

619 
m_poöts
.
	`push_back
(
	`grid_idx_to_poöt
(
d°_idx
));

623 i‡(
m_poöts
.
	`size
() == 0) {

624 
m_poöts
.
	`push_back
(
§c
);

627  &
m_poöts
;

628 
	}
}

630 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

631 
ölöe
 c⁄° 
ty≥«me
 
ASèr
<
GridD©a
>::
Poöts
*

632 
ASèr
<
GridD©a
>::
	$föd_esˇ≥_∑th
(c⁄° 
Poöt
& 
cuΩos
, c⁄° Poöt& 
f€pos
, 
di°
)

634 
sign
[] = { -1, 1 };

636 
grid_num
 = 
di°
 / 
m_µg_x
;

637 
Grid
* 
grid
;

638 
GridIndex
 
f€_idx
 = 
	`poöt_to_grid_idx
(
f€pos
);

639 
GridIndex
 
d°_idx
;

640 
adj
 = 0;

642 i‡(
f€_idx
.
cﬁumn
 + 
grid_num
 < 
m_max_grids_cﬁumn
 - 1) {

643 i‡(
f€_idx
.
row
 + 3 <
m_max_grids_row
 && foe_idx.row >= 3) {

644 
adj
 = (
	`ønd
() % 4) * (rand() % 2);

646 i‡(
adj
) {

647 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 + 
adj
, f€_idx.
cﬁumn
 + 
grid_num
);

649 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
, f€_idx.
cﬁumn
 + 
grid_num
 + 1);

652 
grid
 = 
	`gë_grid
(
d°_idx
);

653 i‡(
grid
 && grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

654 
ªt
;

657 i‡(
f€_idx
.
cﬁumn
 > 
grid_num
) {

658 i‡(
f€_idx
.
row
 + 3 <
m_max_grids_row
 && foe_idx.row >= 3) {

659 
adj
 = (
	`ønd
() % 4) * (rand() % 2);

661 i‡(
adj
) {

662 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 + 
adj
, f€_idx.
cﬁumn
 - 
grid_num
);

664 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
, f€_idx.
cﬁumn
 - 
grid_num
 - 1);

667 
grid
 = 
	`gë_grid
(
d°_idx
);

668 i‡(
grid
 && grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

669 
ªt
;

672 i‡(
f€_idx
.
row
 + 
grid_num
 < 
m_max_grids_row
 - 1) {

673 i‡(
f€_idx
.
cﬁumn
 + 3 <
m_max_grids_cﬁumn
 && foe_idx.column >= 3) {

674 
adj
 = (
	`ønd
() % 4) * (rand() % 2);

676 i‡(
adj
) {

677 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 + 
grid_num
, f€_idx.
cﬁumn
 + 
adj
);

679 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 + 
grid_num
 + 1, f€_idx.
cﬁumn
);

682 
grid
 = 
	`gë_grid
(
d°_idx
);

683 i‡(
grid
 && grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

684 
ªt
;

687 i‡(
f€_idx
.
cﬁumn
 + 3 <
m_max_grids_cﬁumn
 && foe_idx.column >= 3) {

688 
adj
 = (
	`ønd
() % 4) * (rand() % 2);

690 i‡(
adj
) {

691 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 - 
grid_num
, f€_idx.
cﬁumn
 + 
adj
);

693 
d°_idx
 = 
	`GridIndex
(
f€_idx
.
row
 - 
grid_num
 - 1, f€_idx.
cﬁumn
);

696 
ªt
:

697 c⁄° 
Poöts
* 
±s
 = 
	`föd∑th
(
cuΩos
, 
	`grid_idx_to_poöt
(
d°_idx
));

698 i‡(
±s
) {

699  
±s
;

703 i‡(
m_cur_grid
 && m_cur_grid->
∑ª¡
) {

704 
	`f‹m_∑th
(
m_cur_grid
, 
	`grid_idx_to_poöt
(m_cur_grid->
idx
));

705  &
m_poöts
;

709 
	}
}

711 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

712 
ölöe
 
boﬁ


713 
ASèr
<
GridD©a
>::
	$is_pos_wÆkabÀ
(c⁄° 
Poöt
& 
cur_pos
)

715 
GridIndex
 
pos_idx
 = 
	`poöt_to_grid_idx
(
cur_pos
);

717 
Grid
* 
pos_grid
 = 
	`gë_grid
(
pos_idx
);

718 i‡(!
pos_grid
 || !pos_grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

719  
Ál£
;

722  
åue
;

723 
	}
}

728 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

729 
ölöe
 

730 
ASèr
<
GridD©a
>::
	$Æloc_m≠
()

733 
m_m≠
 = 
√w
 
GridPoöãr
[
m_max_grids_row
];

734 
m_m≠
[0] = 
√w
 
Grid
[
m_max_grids_row
 * 
m_max_grids_cﬁumn
];

735 
uöt32_t
 
i
 = 1; i !
m_max_grids_row
; ++i){

736 
m_m≠
[
i
] = m_m≠[0] + i * 
m_max_grids_cﬁumn
;

738 
	}
}

740 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

741 
ölöe
 

742 
ASèr
<
GridD©a
>::
	$åy_add_suc˚ss‹
(c⁄° 
GridIndex
& 
idx
, 
Grid
* 
∑ª¡
, 
uöt32_t
 
co°
)

744 
Grid
* 
grid
 = 
	`gë_grid
(
idx
);

745 i‡(!
grid
 || grid->
f
 || !grid->
grid_d©a
.
	`is_wÆkabÀ
()) {

749 
grid
->
g
 = 
∑ª¡
->g + 
co°
;

750 
grid
->
f
 = grid->
g
 + 
	`di°™˚
(
idx
, 
m_gﬂl_grid
->idx);

751 
grid
->
∑ª¡
 =Öarent;

754 
m_›í_li°
.
	`push_back
(
grid
);

756 
°d
::
	`push_hóp
(
m_›í_li°
.
	`begö
(), m_›í_li°.
	`íd
(), 
grid_cmp
);

757 
	}
}

759 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

760 
ölöe
 

761 
ASèr
<
GridD©a
>::
	$f‹m_∑th
(
Grid
* 
gﬂl
, c⁄° 
Poöt
& 
d°
)

763 
Grid
* 
cur
 = 
gﬂl
;

764 
Grid
* 
¥ev1
 = 
cur
->
∑ª¡
;

765 
Grid
* 
¥ev2
 = 
¥ev1
->
∑ª¡
;

766 
Grid
* 
¥ev_öu£d_grid
 = 
cur
;

767 
¥ev_öu£d_grid
->
∑ª¡
 = 0;

768 
¥ev2
) {

769 i‡(((
cur
->
idx
 - 
¥ev1
->idxË!’ªv1->idx - 
¥ev2
->idx)Ë&& (cu∏!
¥ev_öu£d_grid
)) {

770 
¥ev_öu£d_grid
->
∑ª¡
 = 
¥ev1
;

771 
¥ev_öu£d_grid
 = 
¥ev1
;

773 
cur
 = 
¥ev1
;

774 
¥ev1
 = 
¥ev2
;

775 
¥ev2
 = 
¥ev1
->
∑ª¡
;

777 
¥ev_öu£d_grid
->
∑ª¡
 = 
¥ev1
;

779 
cur
 = 
gﬂl
;

780 
¥ev1
 = 
cur
->
∑ª¡
;

781 
¥ev2
 = 
¥ev1
->
∑ª¡
;

782 
m_poöts
.
	`push_back
(
d°
);

783 
¥ev2
) {

784 i‡((
cur
->
idx
 - 
¥ev1
->idxË!’ªv1->idx - 
¥ev2
->idx)) {

785 
m_poöts
.
	`push_back
(
	`grid_idx_to_poöt
(
¥ev1
->
idx
));

787 
cur
 = 
¥ev1
;

788 
¥ev1
 = 
¥ev2
;

789 
¥ev2
 = 
¥ev1
->
∑ª¡
;

791 
	}
}

793 
ãm∂©e
 <
ty≥«me
 
GridD©a
>

794 
ölöe
 
ty≥«me
 
ASèr
<
GridD©a
>::
GridPoöãr


795 
ASèr
<
GridD©a
>::
	$gë_grid
(c⁄° 
GridIndex
& 
idx
)

797 i‡(!
	`out_of_ønge
(
idx
)) {

798  &(
m_m≠
[
idx
.
row
][idx.
cﬁumn
]);

801 
	}
}

	@/usr/include/libtaomee++/pathfinder/astar/def_grid_data.hpp

14 #i‚de‡
LIBTAOMEEPP_DEF_GRID_DATA_HPP_


15 
	#LIBTAOMEEPP_DEF_GRID_DATA_HPP_


	)

17 
	~<io°ªam
>

19 
«me•a˚
 
	gèomì
 {

24 ˛as†
	cDefGridD©a
 {

25 
	gpublic
:

26 
DefGridD©a
()

27 { 
m_d©a
 = 0; }

32 
boﬁ
 
is_wÆkabÀ
() const

33 {  (
	gm_d©a
 == 0); }

39 
£t_wÆkabûôy
(
wÆkabûôy
)

40 { 
	gm_d©a
 = 
wÆkabûôy
; }

42 
	gpublic
:

43 
‰õnd
 
°d
::
i°ªam
& 
›î©‹
 >>(°d::i°ªam& 
is
, 
	gDefGridD©a
& 
	gobj
)

44 { 
	gis
 >> 
	gobj
.
	gm_d©a
;  is; }

45 
‰õnd
 
	g°d
::
o°ªam
& 
›î©‹
 <<(
°d
::o°ªam& 
os
, c⁄° 
	gDefGridD©a
& 
	gobj
)

46 { 
	gos
 << 
	gobj
.
	gm_d©a
;  os; }

48 
	g¥iv©e
:

49 
m_d©a
;

	@/usr/include/libtaomee++/proto/Ccmd_map.h

18 #i‚de‡ 
CCMD_MAP_H


19 
	#CCMD_MAP_H


	)

20 
	~<°rög.h
>

21 
	~<m≠
>

22 
	~<as£π.h
>

23 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

25 
	~<libèomì/log.h
>

33 
ãm∂©e
 <
˛ass
 
_Tp
 >

34 ˛as†
	cCcmd_m≠
{

35 
public
:

36 
_Tp
 
	tT_ITEM
 ;

37 
°d
::
m≠
< 
uöt32_t
 ,
T_ITEM
 > 
cmdm≠
 ;

38 
¥iv©e
:

39 
public
:

40 
ty≥«me
 
	t°d
::
	tm≠
<
	tuöt32_t
,
	tT_ITEM
 >::
	tôî©‹
 iterator;

41 
	$Ccmd_m≠
()

44 
ölöe
 
	$öôli°
(
T_ITEM
 * 
p_ôem_li°
, 
cou¡
 ){

46 
°d
::
ve˘‹
<
T_ITEM
> 
	`ôem_li°
–
p_ôem_li°
,Ö_ôem_li°+
cou¡
 );

47 
this
->
	`öôli°
(
ôem_li°
 );

48 
	}
}

50 
ölöe
 
öôli°
(
°d
::
ve˘‹
<
T_ITEM
>& 
ôem_li°
){

51 
i
=0;i<
ôem_li°
.
size
();i++ ){

52 
uöt32_t
 
cmdid
=
ôem_li°
[
i
].cmdid ;

53 
as£π
–
cmdid
!=0 );

54 
as£π
(
this
->
cmdm≠
.
föd
(
cmdid
)=Òhis->cmdm≠.
íd
() );

57 
this
->
cmdm≠
[
cmdid
]
ôem_li°
[
i
];

62 
ölöe
 
T_ITEM
 * 
	$gëôem
(
uöt32_t
 
cmdid
){

63 i‡(
this
->
cmdm≠
.
	`föd
(
cmdid
)!Òhis->cmdm≠.
	`íd
() ){

64  &
this
->
cmdm≠
[
cmdid
];

66  
NULL
;

68 
	}
}

71 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

72 
	sCcmd
{

73 
	mpublic
:

74 
_Tp
 
	tT_Func
;

75 
uöt32_t
 
	mcmdid
;

76 
Cmesßge
* 
	m¥Ÿo_¥i_msg
;

77 
uöt32_t
 
	mmd5_èg
;

78 
uöt32_t
 
	mböd_bôm≠
;

79 
T_Func
 
	mfunc
;

	@/usr/include/libtaomee++/proto/Cnew_timer_base.hpp

16 #i‚de‡
_CNEW_CTIMER_BASE_H_


17 
	#_CNEW_CTIMER_BASE_H_


	)

20 
	~<time.h
>

21 
	~<sys/time.h
>

22 
	~<as£π.h
>

23 
	~<£t
>

24 
	~<m≠
>

25 
	~<°rög
>

26 
	~<ve˘‹
>

27 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

28 #ifde‡
__˝lu•lus


32 
	~<libèomì/log.h
>

33 #ifde‡
__˝lu•lus


41 ˛as†
	cCtime_vÆ
 {

42 
public
:

43 
timevÆ
 
tv
;

44 
	$Ctime_vÆ
(){

46 
	$Ctime_vÆ
(
timevÆ
 
a_tv
){

47 
this
->
tv
=
a_tv
;

48 
	}
}

49 
	$Ctime_vÆ
(
uöt32_t
 
£c⁄ds
,uöt32_à
u£c⁄ds
){

50 
this
->
tv
.
tv_£c
=
£c⁄ds
;

51 
this
->
tv
.
tv_u£c
=
u£c⁄ds
;

52 
	}
}

53 
boﬁ
 
›î©‹
==(c⁄° 
Ctime_vÆ
 &
t1
)const{

54  (
this
->
tv
.
tv_£c
==
t1
.tv.tv_£cË&& (this->tv.
tv_u£c
 ==t1.tv.tv_usec);

57 
boﬁ
 
›î©‹
<(c⁄° 
Ctime_vÆ
 &
t1
)const{

58 i‡(
this
->
tv
.
tv_£c
<
t1
.tv.tv_sec) {

59  
åue
;

60 }i‡(
this
->
tv
.
tv_£c
==
t1
.tv.tv_sec) {

61  
this
->
tv
.
tv_u£c
< 
t1
.tv.tv_usec;

63  
Ál£
;

66 
boﬁ
 
›î©‹
<=(c⁄° 
Ctime_vÆ
 &
t1
)const{

67 i‡(
this
->
tv
.
tv_£c
<
t1
.tv.tv_sec) {

68  
åue
;

69 }i‡(
this
->
tv
.
tv_£c
==
t1
.tv.tv_sec) {

70  
this
->
tv
.
tv_u£c
<
t1
.tv.tv_usec;

72  
Ál£
;

75 
	$ch™ge_u£c
 ( 
time_t
 
ch™ge_u£cs
 ) {

76 
	#MAX_USEC
 1000000

	)

77 
this
->
tv
.
tv_u£c
+=
ch™ge_u£cs
;

78 i‡(
this
->
tv
.
tv_u£c
 <0){

79 
ch™ge_tv_£c

this
->
tv
.
tv_u£c
/
MAX_USEC
 -1;

80 
this
->
tv
.
tv_£c
+=
ch™ge_tv_£c
;

81 
this
->
tv
.
tv_u£c
+=(-
ch™ge_tv_£c
)*
MAX_USEC
;

83 
this
->
tv
.
tv_£c
+Òhis->tv.
tv_u£c
/
MAX_USEC
 ;

84 
this
->
tv
.
tv_u£c
Òhis->tv.tv_u£c%
MAX_USEC
 ;

86 
	}
}

90 ~
	$Ctime_vÆ
(){
	}
}

93 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

94 
˛ass
 
	gCtimî_obj_ba£
 ;

98 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

99 ˛as†
	cCfun˘i⁄_li°
 {

100 (*
	ttimî_func_ba£_t
 )(
	tCtimî_obj_ba£
<
	tRELOAD_MSG_T
> *,
	tCmesßge
 *
	t¨gs_msg
,* 
	tbuf
 ,
	tbuÊí
);

101 c⁄° 
uöt32_t
 
max_fun˘i⁄_cou¡
=1000;

102 
timî_func_ba£_t
 
fun˘i⁄_li°
[
max_fun˘i⁄_cou¡
 ];

103 
public
:

104 
	$Cfun˘i⁄_li°
(){

106 
this
->
	`öô
();

108 
ölöe
 
	$öô
(){

109 
	`mem£t
(&
this
->
fun˘i⁄_li°
,0,(this->function_list));

110 
	}
}

111 
boﬁ
 
	$add_fun˘i⁄
(
uöt32_t
 
id
, 
timî_func_ba£_t
 
evít_func
 ){

112 i‡(
id
<
this
->
max_fun˘i⁄_cou¡
){

114 
this
->
fun˘i⁄_li°
[
id
] =
evít_func
;

115  
åue
;

117  
Ál£
;

119 
	}
}

120 
ölöe
 
timî_func_ba£_t
 
	$gë_fun˘i⁄
(
uöt32_t
 
id
){

121 i‡(
id
<
this
->
max_fun˘i⁄_cou¡
){

122  
this
->
fun˘i⁄_li°
[
id
];

124  
NULL
;

126 
	}
}

130 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

131 ˛as†
	cCtimî_node
 {

132 
	m¥iv©e
:

134 
boﬁ
 
is_a˘ive
;

135 
	mfun˘i⁄_id
;

136 
	mCtimî_obj_ba£
<
	mRELOAD_MSG_T
> * 
	mp_ow√r
;

138 
RELOAD_MSG_T
 
	m¨g
;

139 
	m°d
::
°rög
 
buf
;

140 
	mpublic
:

142 
	$Ctimî_node
(){

143 
this
->
fun˘i⁄_id
=-1;

145 
this
->
is_a˘ive
=
Ál£
;

147 ~
	$Ctimî_node
(){

148 i‡(
this
->
	`gë_is_a˘ive
(Ë&&Åhis->
p_ow√r
){

149 
this
->
p_ow√r
->
	`ªmove_timî_node
(this);

151 
	}
}

152 
	$ª£t_cmsg_¨g
(){

153 
this
->
¨g
.
	`ª£t_msg
();

154 
	}
}

156 
ölöe
 
öô
–
fun˘i⁄_id
,
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_ow√r
, 
Cmesßge
 * 
p_¨g
, *
buf
,
uöt32_t
 
buf_Àn
 ){

157 
as£π
(
fun˘i⁄_id
!=-1);

158 
	gthis
->
	gp_ow√r
=
p_ow√r
;

159 i‡(
	gthis
->
	gp_ow√r
){

161 
	gthis
->
	gp_ow√r
->
add_timî_node
(
this
);

163 
	gthis
->
	g¨g
.
£t
(
p_¨g
);

164 
	gthis
->
	gbuf
.
assign
(
buf
, 
buf_Àn
);

165 
	gthis
->
	gfun˘i⁄_id
=
fun˘i⁄_id
;

167 
	gthis
->
	gis_a˘ive
=
åue
;

170 
ölöe
 
	$£t_is_a˘ive
(
boﬁ
 
v
){

171 
this
->
is_a˘ive
=
v
;

172 
	}
}

173 
ölöe
 
boﬁ
 
	$gë_is_a˘ive
(){

174  
this
->
is_a˘ive
;

175 
	}
}

177 
ölöe
 
boﬁ
 
	$is_£t_d©a
(){

178  
this
->
fun˘i⁄_id
!=-1;

179 
	}
}

185 
exec
 (
Cfun˘i⁄_li°
< 
RELOAD_MSG_T
 > &
fun_li°
){

186 i‡(
	gthis
->
gë_is_a˘ive
()){

187 (*(
	gfun_li°
.
gë_fun˘i⁄
(
this
->
fun˘i⁄_id
) ))

188 (
	gthis
->
	gp_ow√r
,this->
	g¨g
.
gë
(), (*Èhis->
	gbuf
.
c_°r
(),Åhis->buf.
Àngth
());

193 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

194 ˛as†
	cCtimî_obj_ba£
 {

195 
	m¥iv©e
:

197 
°d
::
£t
<
Ctimî_node
< 
RELOAD_MSG_T
 > *> 
timî_£t
;

198 
	mpublic
:

200 
ty≥«me
 
	t°d
::
	t£t
<
	tCtimî_node
< 
	tRELOAD_MSG_T
 > *> ::
	tôî©‹
 iterator;

202 
	$Ctimî_obj_ba£
(){}

203 
	`add_timî_node
(
Ctimî_node
< 
RELOAD_MSG_T
 > * 
p_node
){

204 
this
->
timî_£t
.
	`ö£π
(
p_node
);

205 
	}
}

207 
ªmove_timî_node
–
Ctimî_node
<
RELOAD_MSG_T
> * 
p_node
){

208 
as£π
(
this
->
timî_£t
.
cou¡
(
p_node
));

209 
	gthis
->
	gtimî_£t
.
îa£
(
p_node
);

211 
ªmove_Æl_timî_node
();

212 ~
	$Ctimî_obj_ba£
(){

214 
this
->
	`ªmove_Æl_timî_node
();

215 
	}
}

222 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

223 ˛as†
	cCtimî_mgr_ba£
 {

224 
	m¥iv©e
:

225 
°d
::
m≠
<
Ctime_vÆ
, 
	mCtimî_node
<
	mRELOAD_MSG_T
> > 
	mtimî_m≠
;

227 
	mpublic
:

228 
ty≥«me
 
	t°d
::
	tm≠
<
	tCtime_vÆ
, 
	tCtimî_node
<
	tRELOAD_MSG_T
> >::
	tôî©‹
 iterator;

229 
	mCfun˘i⁄_li°
<
	mRELOAD_MSG_T
> 
	mfun_li°
;

231 
	$Ctimî_mgr_ba£
(){}

232 
boﬁ
 
	`add_timî
–
Ctime_vÆ
 
tv
, 
uöt32_t
 
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
=
NULL
, 
Cmesßge
 *
p_¨g
=NULL, * 
buf
=NULL ,
buf_Àn
=0 );

245 
ölöe
 
boﬁ
 
	`add_timî
–
uöt32_t
 
dól_time
, uöt32_à
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
, 
Cmesßge
 *
p_¨g
, * 
buf
=
NULL
 ,
buf_Àn
=0 ){

246 
Ctime_vÆ
 
	`tmp
(
dól_time
,
	`øndom
()&0xFFFF);

247  
this
->
	`add_timî
(
tmp
, 
fun˘i⁄_id
,
p_obj
,
p_¨g
,
buf
,
buf_Àn
);

248 
	}
}

249 
ölöe
 
boﬁ
 
add_timî
–
uöt32_t
 
dól_time
, uöt32_à
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
=
NULL
, * 
buf
=NULL ,
buf_Àn
=0 ){

251 
Ctime_vÆ
 
tmp
(
dól_time
,
øndom
()&0xFFFF);

252  
	gthis
->
add_timî
(
tmp
, 
fun˘i⁄_id
,
p_obj
,
NULL
,
buf
,
buf_Àn
);

256 
ölöe
 
boﬁ
 
add_timî_‰om_now
–
mûli£c⁄d
 , 
uöt32_t
 
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
=
NULL
, * 
buf
=NULL ,
buf_Àn
=0 ){

257 
Ctime_vÆ
 
tmp
;

258 
gëtimeofday
(&(
tmp
.
tv
), 0);

259 
	gtmp
.
ch™ge_u£c
(
mûli£c⁄d
*1000 );

260  
	gthis
->
add_timî
(
tmp
, 
fun˘i⁄_id
,
p_obj
,
NULL
,
buf
,
buf_Àn
);

263 
ölöe
 
boﬁ
 
add_timî_‰om_now
–
mûli£c⁄d
, 
uöt32_t
 
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
, 
Cmesßge
 *
p_¨g
, * 
buf
=
NULL
 ,
buf_Àn
=0 ){

264 
Ctime_vÆ
 
tmp
;

265 
gëtimeofday
(&(
tmp
.
tv
), 0);

266 
	gtmp
.
ch™ge_u£c
(
mûli£c⁄d
*1000 );

267  
	gthis
->
add_timî
(
tmp
.
tv
, 
fun˘i⁄_id
,
p_obj
,
p_¨g
,
buf
,
buf_Àn
);

277 
dól_timî
(c⁄° 
Ctime_vÆ
 
dó…ime
);

279 
	$ª£t_cmsg_obj
() {

280 
ôî©‹
 
ô
;

281  
ô

timî_m≠
.
	`begö
();ô!timî_m≠.
	`íd
();++it ){

282 
ô
->
£c⁄d
.
	`ª£t_cmsg_¨g
();

284 
	}
}

289 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

290 
ölöe
 

291 
	gCtimî_obj_ba£
<
	gRELOAD_MSG_T
>::
	$ªmove_Æl_timî_node
()

293 
ôî©‹
 
ô
;

294 
ô
 = 
this
->
timî_£t
.
	`begö
(); ià!this->timî_£t.
	`íd
(); ++it) {

296 (*
ô
)->
	`£t_is_a˘ive
(
Ál£
);

299 
this
->
timî_£t
.
	`˛ór
();

300 
	}
}

302 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

303 
ölöe
 
boﬁ


304 
	gCtimî_mgr_ba£
<
	gRELOAD_MSG_T
>::
add_timî
–
Ctime_vÆ
 
tv
, 
uöt32_t
 
fun˘i⁄_id
, 
Ctimî_obj_ba£
<
RELOAD_MSG_T
> * 
p_obj
, 
Cmesßge
 *
p_¨g
, * 
buf
 ,
buf_Àn
 )

307 
	gCtimî_node
<
	gRELOAD_MSG_T
> *
	gp_node
;

308 
	gp_node
=&(
this
->
timî_m≠
[
tv
]);

310  
	gp_node
->
is_£t_d©a
()){

312 
	gtv
.tv.
	gtv_u£c
++;

313 
	gp_node
=&(
this
->
timî_m≠
[
tv
]);

315 
as£π
(
this
->
fun_li°
.
gë_fun˘i⁄
(
fun˘i⁄_id
)!=
NULL
);

316 
	gp_node
->
öô
(
fun˘i⁄_id
, 
p_obj
, 
p_¨g
, 
buf
, 
buf_Àn
);

317  
	gåue
;

321 
	gãm∂©e
 < 
ty≥«me
 
	gRELOAD_MSG_T
 >

322 
ölöe
 

323 
	gCtimî_mgr_ba£
<
	gRELOAD_MSG_T
>::
	$dól_timî
(c⁄° 
Ctime_vÆ
 
dó…ime
)

325 
ôî©‹
 
ô
;

326 
ô
=
this
->
timî_m≠
.
	`begö
();ô!Òhis->timî_m≠.
	`íd
(); ){

327 i‡(
ô
->
fú°
<=
dó…ime
 ){

329 
ô
->
£c⁄d
.
	`exec
(
this
->
fun_li°
);

330 
this
->
timî_m≠
.
	`îa£
(
ô
++);

335 
	}
}

	@/usr/include/libtaomee++/proto/Creload_cmsg.h

18 #i‚de‡
_CRELOAD_MSG_H_


19 
	#_CRELOAD_MSG_H_


	)

20 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

21 
	~<m≠
>

22 
	~<°rög
>

23 
	~<as£π.h
>

25 
	#CREATE_SESSION_MSG_BEGIN
() \

26 i‡(
Ál£
){

	)

29 
	#CREATE_SESSION_MSG
(
msg_t
) \

30 } i‡(
this
->
msg_ty≥
==#msg_t){ \

31 
this
->
msg
=
	`√w
 (this->msg)
	`msg_t
(); \

32 
ªt
=
åue
;

	)

35 
	#CREATE_SESSION_MSG_END
() \

36 }

	)

39 ˛as†
	cCªlﬂd_cmsg_ba£


41 
	m¥Ÿe˘ed
:

43 
°d
::
°rög
 
msg_ty≥
;

46 
Cmesßge
 * 
	mmsg
;

47 
	mpublic
:

48 
	$Cªlﬂd_cmsg_ba£
(){

49 
this
->
msg
=
NULL
;

52 
Cmesßge
 * 
	$gë
(){

53  
msg
;

54 
	}
}

56 
	gvútuÆ
 ~
	$Cªlﬂd_cmsg_ba£
(){

57 if(
this
->
msg
){

58 
dñëe
 
this
->
msg
;

60 
	}
}

62 
	$£t
(
Cmesßge
* 
a_msg
){

64 if(
this
->
msg
){

65 
dñëe
 
this
->
msg
;

67 
this
->
msg
=
a_msg
;

69 if–
this
->
msg
){

70 
this
->
msg_ty≥
Òhis->
msg
->
	`_gë_ty≥_id
();

72 
ªt
=
this
->
	`ª£t_msg
();

73 i‡(!
ªt
){

74 
	`DEBUG_LOG
("NOFIND SESSION:%†NEED DEFINE TO:Ñe£t_msg",
this
->
msg_ty≥
.
	`c_°r
());

75 
	`as£π
(
this
->
	`ª£t_msg
()&&Åhis->
msg_ty≥
 );

78 
	}
}

80 
vútuÆ
 
boﬁ
 
ª£t_msg
() = 0;

	@/usr/include/libtaomee++/proto/proto_base.h

1 #i‚de‡
PROTO_BASE_H


2 
	#PROTO_BASE_H


	)

3 
	~<°döt.h
>

4 
	~<ve˘‹
>

5 
	~<°rög.h
>

6 
	~<°dlib.h
>

7 
	~<¨∑/öë.h
>

10 
	~<libèomì/log.h
>

12 #i‡
USE_PROTO_READ_FROM_XMLNODE


13 
	~<libxml2/libxml/∑r£r.h
>

16 
ölöe
 
	$uöt32_t_sw≠
(
uöt32_t
 &
vÆue
 ){

17 
vÆue
=
	`¡ohl
(value );

18 
	}
}

19 
ölöe
 
	$öt32_t_sw≠
(
öt32_t
 &
vÆue
 ){

20 
vÆue
=
	`¡ohl
(value );

21 
	}
}

22 
ölöe
 
	$uöt16_t_sw≠
(
uöt16_t
 &
vÆue
 ){

23 
vÆue
=
	`¡ohs
(value );

24 
	}
}

25 
ölöe
 
	$öt16_t_sw≠
(
öt16_t
 &
vÆue
 ){

26 
vÆue
=
	`¡ohs
(value );

27 
	}
}

28 
ölöe
 
	$uöt8_t_sw≠
(
uöt8_t
 &
vÆue
 ){

30 
	}
}

31 
ölöe
 
	$öt8_t_sw≠
(
öt8_t
 &
vÆue
 ){

33 
	}
}

35 
ölöe
 
	$uöt64_t_sw≠
(
uöt64_t
 &
vÆue
 ){

36 
vÆue
=
	`¡ohl
(vÆue>>32Ë+(((
uöt64_t
 )ntohl( value&0xFFFFFFFF))<<32);

37 
	}
}

38 
ölöe
 
	$öt64_t_sw≠
(
öt64_t
 &
vÆue
 ){

39 
vÆue
=
	`¡ohl
(vÆue>>32Ë+(((
uöt64_t
 )ntohl( value&0xFFFFFFFF))<<32);

40 
	}
}

42 
ölöe
 
	$ch¨_sw≠
(&
vÆue
 ){

44 
	}
}

46 
ölöe
 
	$doubÀ_sw≠
(&
vÆue
 ){

48 
	}
}

51 
	~<°rög
>

53 
˛ass
 
byã_¨øy_t
 ;

55 ˛as†
	cCmesßge
 {

56 
	mpublic
 :

59 
vútuÆ
 
boﬁ
 
	$ªad_‰om_buf
(
byã_¨øy_t
 & 
ba
 ){  
åue
; }

61 
vútuÆ
 
boﬁ
 
	$wrôe_to_buf
(
byã_¨øy_t
 & 
ba
 ) {  
åue
; 
	}
}

63 #i‡
USE_PROTO_READ_FROM_XMLNODE


64 
vútuÆ
 
boﬁ
 
	$ªad_‰om_xm ode
(
xmlNodePå
 
cur_node
 ){  
åue
;
	}
}

67 
vútuÆ
 c⁄° * 
	$_gë_ty≥_id
(Ë{  "Cmesßge"; 
	}
}

70 
boﬁ
 
wrôe_to_buf_ex
(* 
buf
,
uöt32_t
 
buf_size
,uöt32_à* 
p_wrôe_Àn
=
NULL
 );

71 
boﬁ
 
ªad_‰om_buf_ex
(c⁄° * 
buf
,
uöt32_t
 
buf_size
 );

72 
	g°d
::
°rög
 
wrôe_to_buf_ex
();

73 
boﬁ
 
ªad_‰om_buf_ex
(
°d
::
°rög
 
buf
 );

76 
boﬁ
 
wrôe_to_buf_ex
–
byã_¨øy_t
 & 
ba
, boﬁ 
is_öô_ba_posi⁄
=
åue
 );

80 
boﬁ
 
ªad_‰om_buf_ex
–
byã_¨øy_t
 & 
ba
, boﬁ 
is_öô_ba_posi⁄
=
åue
 );

82 
vútuÆ
 
	$öô
(){ 
	}
}

83 
	gvútuÆ
 ~
	$Cmesßge
(){ 
	}
}

87 
	#GEN_READ_SINGLE_P_VALUE_FUNC
–
vÆue_ty≥
 ) \

88 
boﬁ
 
	`ªad
(
vÆue_ty≥
 *
p_vÆue
 ){ \

89 i‡–!
this
->
m_is_ªad_⁄ly
 )  
Ál£
; \

90 if(
this
->
m_po°i⁄
+(
vÆue_ty≥
)<Òhis->
m_size
) { \

91 (*
p_vÆue
)=*(
vÆue_ty≥
*)(
this
->
m_buf
+this->
m_po°i⁄
 ); \

92 if(
this
->
is_bigídün
){
vÆue_ty≥
##
	`_sw≠
((*
p_vÆue
)); } \

93 
this
->
m_po°i⁄
+=(
vÆue_ty≥
); \

94  
åue
; \

96  
Ál£
; \

98 }

	)

100 
	#GEN_WRITE_SINGLE_P_VALUE_FUNC
–
vÆue_ty≥
 ) \

101 
boﬁ
 
	`wrôe
(c⁄° 
vÆue_ty≥
 * 
p_vÆue
){ \

102 i‡–
this
->
m_is_ªad_⁄ly
 )  
Ál£
; \

103 i‡(!
this
->
	`ª£t_size
((
vÆue_ty≥
Ë)Ë 
Ál£
; \

104 *(
vÆue_ty≥
 *)(
this
->
m_buf
+this->
m_po°i⁄
 )*
p_vÆue
; \

105 i‡(
this
->
is_bigídün
 ){ \

106 
vÆue_ty≥
##
	`_sw≠
–*(vÆue_ty≥ *)(
this
->
m_buf
+this->
m_po°i⁄
 ) ); \

108 
this
->
m_po°i⁄
+(
vÆue_ty≥
) ; \

109  
åue
; \

111 

	)

116 
	#GEN_READ_SINGLE_VALUE_FUNC
–
func
 ,
vÆue_ty≥
 ) \

117 
boﬁ
 
	`func
 (
vÆue_ty≥
 &
vÆue
 ){ \

118 i‡–!
this
->
m_is_ªad_⁄ly
 )  
Ál£
; \

119 if(
this
->
m_po°i⁄
+(
vÆue_ty≥
)<Òhis->
m_size
) { \

120 
vÆue
=*(
vÆue_ty≥
*)(
this
->
m_buf
+this->
m_po°i⁄
 ); \

121 if(
this
->
is_bigídün
){
vÆue_ty≥
##
	`_sw≠
(
vÆue
); } \

122 
this
->
m_po°i⁄
+=(
vÆue_ty≥
); \

123  
åue
; \

125  
Ál£
; \

127 }

	)

129 
	#GEN_WRITE_SINGLE_VALUE_FUNC
–
func
 ,
vÆue_ty≥
 ) \

130 
boﬁ
 
	`func
(c⁄° 
vÆue_ty≥
 
vÆue
){ \

131 i‡–
this
->
m_is_ªad_⁄ly
 )  
Ál£
; \

132 i‡(!
this
->
	`ª£t_size
((
vÆue
Ë)Ë 
Ál£
; \

133 *(
vÆue_ty≥
 *)(
this
->
m_buf
+this->
m_po°i⁄
 )
vÆue
; \

134 i‡(
this
->
is_bigídün
 ){ \

135 
vÆue_ty≥
##
	`_sw≠
–*(vÆue_ty≥ *)(
this
->
m_buf
+this->
m_po°i⁄
 ) ); \

137 
this
->
m_po°i⁄
+(
vÆue
) ; \

138  
åue
; \

140 

	)

141 ˛as†
	cbyã_¨øy_t
 {

142 * 
	mm_buf
;

143 
uöt32_t
 
	mm_size
 ;

144 
boﬁ
 
	mm_is_ªad_⁄ly
;

145 
uöt32_t
 
	mm_po°i⁄
;

146 
boﬁ
 
	mis_bigídün
;

148 
	mpublic
:

149 
ölöe
 c⁄° * 
	$gë_buf
–){  
this
->
m_buf
; }

150 
ölöe
 
uöt32_t
 
	$gë_po°i⁄
–){  
this
->
m_po°i⁄
; 
	}
}

151 
ölöe
 
uöt32_t
 
	$gë_bufsize
–){  
this
->
m_size
; 
	}
}

152 
ölöe
 
	$öô_po°i⁄
–){ 
this
->
m_po°i⁄
=0; 
	}
}

153 
ölöe
 
	$£t_is_bigídün
–
boﬁ
 
vÆue
 ){ 
this
->
is_bigídün
=vÆue; 
	}
}

154 
ölöe
 
boﬁ
 
	$gë_is_ªad_⁄ly
(){  
this
->
m_is_ªad_⁄ly
; 
	}
}

156 
	$byã_¨øy_t
(c⁄° * 
buf
,
size
 ){

157 
this
->
m_is_ªad_⁄ly
=
åue
;

158 
this
->
m_buf
=
NULL
;

159 
this
->
is_bigídün
=
Ál£
;

160 
this
->
	`öô_ªad_mode
(
buf
,
size
 );

161 
	}
}

163 
	$byã_¨øy_t
(
boﬁ
 
a_is_bigídün
 ){

164 
this
->
m_is_ªad_⁄ly
=
åue
;

165 
this
->
m_buf
=
NULL
;

166 
this
->
is_bigídün
=
a_is_bigídün
;

167 
	}
}

171 
	$öô_ªad_mode
(c⁄° * 
buf
,
size
 ){

172 if(!
this
->
m_is_ªad_⁄ly
){

173 
	`‰ì
(
this
->
m_buf
);

175 
this
->
m_buf
=(*)
buf
;

176 
this
->
m_size
=
size
;

177 
this
->
m_po°i⁄
=0;

178 
this
->
m_is_ªad_⁄ly
=
åue
;

179 
	}
}

181 
	$byã_¨øy_t
(
uöt32_t
 
mÆloc_size
=32, 
boﬁ
 
a_is_bigídün
=
Ál£
 ){

182 
this
->
m_buf
=(*)
	`mÆloc
(
mÆloc_size
 );

183 
this
->
m_size
=
mÆloc_size
;

184 
this
->
m_po°i⁄
=0;

185 
this
->
m_is_ªad_⁄ly
=
Ál£
;

186 
this
->
is_bigídün
=
a_is_bigídün
 ;

187 
	}
}

189 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
uöt32_t
 )

190 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
uöt16_t
 )

191 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
uöt8_t
 )

193 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
uöt32_t
 )

194 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
uöt16_t
 )

195 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
uöt8_t
 )

197 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
öt32_t
 )

198 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
öt16_t
 )

199 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
öt8_t
 )

200 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
öt32_t
 )

201 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
öt16_t
 )

202 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
öt8_t
 )

204 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
öt64_t
 )

205 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
(
uöt64_t
 )

207 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
öt64_t
 )

208 
	$GEN_READ_SINGLE_P_VALUE_FUNC
(
uöt64_t
 )

210 
	$GEN_READ_SINGLE_P_VALUE_FUNC
()

211 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
()

213 
	$GEN_READ_SINGLE_P_VALUE_FUNC
()

214 
	$GEN_WRITE_SINGLE_P_VALUE_FUNC
()

218 
ölöe
 
boﬁ
 
	$wrôe
–
Cmesßge
 * 
p_vÆue
){

219  
p_vÆue
->
	`wrôe_to_buf
(*
this
);

220 
	}
}

221 
ölöe
 
boﬁ
 
	$ªad
–
Cmesßge
 * 
p_vÆue
){

222  
p_vÆue
->
	`ªad_‰om_buf
(*
this
);

223 
	}
}

233 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_uöt32
,
uöt32_t
 )

234 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_uöt16
,
uöt16_t
 )

235 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_uöt8
,
uöt8_t
 )

237 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_uöt32
,
uöt32_t
 )

238 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_uöt16
,
uöt16_t
 )

239 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_uöt8
,
uöt8_t
 )

241 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_öt32
,
öt32_t
 )

242 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_öt16
,
öt16_t
 )

243 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_öt8
,
öt8_t
 )

244 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_öt32
,
öt32_t
 )

245 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_öt16
,
öt16_t
 )

246 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_öt8
,
öt8_t
 )

248 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_öt64
,
öt64_t
 )

249 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_uöt64
,
uöt64_t
 )

251 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_öt64
,
öt64_t
 )

252 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_uöt64
,
uöt64_t
 )

255 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_ch¨
,)

256 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_ch¨
,)

258 
	$GEN_READ_SINGLE_VALUE_FUNC
(
ªad_doubÀ
 ,)

259 
	$GEN_WRITE_SINGLE_VALUE_FUNC
(
wrôe_doubÀ
,)

264 
boﬁ
 
	$ªad_buf
(* 
buf
, 
uöt32_t
 
size
 ){

265 if(
this
->
m_po°i⁄
+
size
<Òhis->
m_size
) {

266 
	`mem˝y
(
buf
,
this
->
m_buf
+this->
m_po°i⁄
,
size
);

267 
this
->
m_po°i⁄
+
size
;

268  
åue
;

270  
Ál£
;

272 
	}
}

274 
boﬁ
 
	$ª£t_size
(
uöt32_t
 
add_size
 ){

276 i‡(
this
->
m_is_ªad_⁄ly
Ë 
Ál£
;

277 if(
this
->
m_po°i⁄
+
add_size
>this->
m_size
) {

278 
this
->
m_buf
=(*)
	`ªÆloc
—his->m_buf,—his->
m_po°i⁄
+
add_size
));

279 i‡(!
this
->
m_buf
Ë 
Ál£
;

280 
this
->
m_size
=—his->
m_po°i⁄
+
add_size
);

282  
åue
;

283 
	}
}

285 
boﬁ
 
	$wrôe_buf
(c⁄° * 
buf
, 
uöt32_t
 
size
 ){

286 i‡(!
this
->
	`ª£t_size
(
size
)Ë 
Ál£
;

287 
	`mem˝y
(
this
->
m_buf
+this->
m_po°i⁄
,
buf
,
size
);

288 
this
->
m_po°i⁄
+
size
;

289  
åue
;

290 
	}
}

294 
boﬁ
 
	$is_íd
–){  
this
->
m_po°i⁄
=Òhis->
m_size
; 
	}
}

295 
	gvútuÆ
 ~
	$byã_¨øy_t
(){

296 if–! 
this
->
m_is_ªad_⁄ly
 ){

297 
	`‰ì
(
this
->
m_buf
);

299 
	}
}

302 
	~<io°ªam
>

303 
	~<°rög
>

304 
	~<s°ªam
>

305 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

306 
ölöe
 c⁄° * 
	$vÆue_to_°r
(
_Tp
 
vÆue
 ){

307 
°d
::
°rög
 
°r
;

308 
°d
::
°rög°ªam
 
°rSåóm
;

309 
°rSåóm
<<
vÆue
;

310 
°r
=
°rSåóm
.
	`°r
();

311  
°r
.
	`c_°r
();

312 
	}
}

314 
ölöe
 c⁄° * 
	$vÆue_to_°r
(
uöt8_t
 
vÆue
 ){

315 
°d
::
°rög
 
°r
;

316 
°d
::
°rög°ªam
 
°rSåóm
;

317 
°rSåóm
<<(
vÆue
);

318 
°r
=
°rSåóm
.
	`°r
();

319  
°r
.
	`c_°r
();

320 
	}
}

322 
ölöe
 c⁄° * 
	$vÆue_to_°r
(
öt8_t
 
vÆue
 ){

323 
°d
::
°rög
 
°r
;

324 
°d
::
°rög°ªam
 
°rSåóm
;

325 
°rSåóm
<<(
vÆue
);

326 
°r
=
°rSåóm
.
	`°r
();

327  
°r
.
	`c_°r
();

328 
	}
}

332 
ölöe
 
	g°d
::
°rög
 
Cmesßge
::
	$wrôe_to_buf_ex
(){

333 
byã_¨øy_t
 
ba
;

334 
ba
.
	`öô_po°i⁄
();

335 
this
->
	`wrôe_to_buf
(
ba
);

336  
°d
::
	`°rög
(
ba
.
	`gë_buf
(), ba.
	`gë_po°i⁄
() );

337 
	}
}

339 
ölöe
 
boﬁ
 
	gCmesßge
::
	$wrôe_to_buf_ex
(* 
buf
,
uöt32_t
 
buf_size
,uöt32_à* 
p_wrôe_Àn
 )

341 
byã_¨øy_t
 
ba
;

342 
ba
.
	`öô_po°i⁄
();

343 
this
->
	`wrôe_to_buf
(
ba
);

344 i‡(
ba
.
	`gë_po°i⁄
()>
buf_size
 ){

346  
Ál£
;

348 
	`mem˝y
(
buf
,
ba
.
	`gë_buf
(), ba.
	`gë_po°i⁄
() );

349 i‡(
p_wrôe_Àn
!=
NULL
 ){

350 *
p_wrôe_Àn
=
ba
.
	`gë_po°i⁄
();

353  
åue
;

354 
	}
}

356 
ölöe
 
boﬁ
 
	gCmesßge
::
ªad_‰om_buf_ex
(
°d
::
°rög
 
buf
 )

358 
byã_¨øy_t
 
ba
(
buf
.
c_°r
(),buf.
size
() );

359 
	gthis
->
öô
();

361 i‡(!
	gthis
->
ªad_‰om_buf
(
ba
)) {

362  
	gÁl£
;

364 i‡(!
	gba
.
is_íd
()) {

365  
	gÁl£
;

367  
	gåue
;

370 
ölöe
 
boﬁ
 
	gCmesßge
::
	$ªad_‰om_buf_ex
(c⁄° * 
buf
,
uöt32_t
 
buf_size
 )

372 
byã_¨øy_t
 
	`ba
(
buf
,
buf_size
);

373 
this
->
	`öô
();

375 i‡(!
this
->
	`ªad_‰om_buf
(
ba
)) {

376  
Ál£
;

378 i‡(!
ba
.
	`is_íd
()) {

379  
Ál£
;

381  
åue
;

382 
	}
}

384 
ölöe
 
boﬁ
 
	gCmesßge
::
	$wrôe_to_buf_ex
–
byã_¨øy_t
 & 
ba
, 
boﬁ
 
is_öô_ba_posi⁄
)

386 i‡(
is_öô_ba_posi⁄
 ){

387 
ba
.
	`öô_po°i⁄
();

389  
this
->
	`wrôe_to_buf
(
ba
);

390 
	}
}

392 
ölöe
 
boﬁ
 
	gCmesßge
::
	$ªad_‰om_buf_ex
–
byã_¨øy_t
 & 
ba
, 
boﬁ
 
is_öô_ba_posi⁄
 )

395 if–
ba
.
	`gë_is_ªad_⁄ly
() ){

396 i‡(
is_öô_ba_posi⁄
 ){

397 
ba
.
	`öô_po°i⁄
();

399  
this
->
	`ªad_‰om_buf_ex
(
ba
);

401  
this
->
	`ªad_‰om_buf_ex
(
ba
.
	`gë_buf
(),ba.
	`gë_po°i⁄
());

403 
	}
}

407 
	#P_IN
 
dy«mic_ˇ°
<
ty≥of
 
p_ö
>(
c_ö
);

	)

408 
	#P_OUT
 
dy«mic_ˇ°
<
ty≥of
 
p_out
>(
c_out
);

	)

	@/usr/include/libtaomee++/proto/proto_client.h

2 #i‚de‡ 
PROTO_CLIENT_H


3 
	#PROTO_CLIENT_H


	)

6 
	~<libèomì++/utûs/t˝ù.h
>

7 ˛as†
	cC¥Ÿo_ba£
 : 
Ct˝
 {

8 
¥iv©e
:

9 
uöt32_t
 
¥Ÿo_hódî_Àn_
;

10 
byã_¨øy_t
 
	mba_ö_
;

11 
byã_¨øy_t
 
	mba_out_
;

12 
	mpublic
:

13 
	$C¥Ÿo_ba£
(c⁄° * 
ùp‹t
, 
uöt32_t
 
£nd_ªcv_timeout
=1, uöt32_à
ªc⁄√˘_öãrvÆ
=10 ):
	$Ct˝
(
ùp‹t
,
£nd_ªcv_timeout
,
ªc⁄√˘_öãrvÆ
 ) {

14 
this
->
¥Ÿo_hódî_Àn_
=18;

17 
vútuÆ
 
	$pkg_hódî
–
uöt32_t
 
u£rid
,
uöt16_t
 
cmdid
 ) {

18 
this
->
ba_ö_
.
	`wrôe_uöt32
((
uöt32_t
)0);

19 
this
->
ba_ö_
.
	`wrôe_uöt32
(
	`uöt32_t
(0));

20 
this
->
ba_ö_
.
	`wrôe_uöt16
(
cmdid
);

21 
this
->
ba_ö_
.
	`wrôe_uöt32
(
	`uöt32_t
(0));

22 
this
->
ba_ö_
.
	`wrôe_uöt32
(
u£rid
);

23 
	}
}

25 
vútuÆ
 
	$gë_pkg_Àn
(* 
buf
,
buf_Àn
 ){

26 i‡(
buf_Àn
>=4Ë *((
uöt32_t
 *)
buf
 );

28 
	}
}

30 
vútuÆ
 
	$£t_pkg_hódî_Àn
–
uöt32_t
 
Àn
 ){

31 *((
uöt32_t
 *)
this
->
ba_ö_
.
	`gë_buf
())=
Àn
;

32 
	}
}

34 
vútuÆ
 
	$gë_ªsu…
–* 
buf
, 
buf_Àn
 ){

35 i‡–
buf_Àn
< 
this
->
¥Ÿo_hódî_Àn_
)  -1;

36  *((
uöt32_t
*)–
buf
+10 ));

38 
	}
}

40 
ölöe
 
	$dól_¥Ÿo_cmd
(
uöt32_t
 
u£rid
,
uöt16_t
 
cmdid
,
Cmesßge
 *
c_ö
, Cmesßgê*
c_out
 )

42 * 
out_buf
 =
NULL
 ;

43 
out_buf_size
=0;

44 
this
->
ba_ö_
.
	`öô_po°i⁄
();

45 
this
->
	`pkg_hódî
(
u£rid
,
cmdid
 );

46 i‡(
c_ö
 !=
NULL
 ){

47 
this
->
ba_ö_
.
	`wrôe
(
c_ö
 );

49 
this
->
	`£t_pkg_hódî_Àn
—his->
ba_ö_
.
	`gë_po°i⁄
() );

50 
ªt
;

51 
ªt
=
this
->
	`do_√t_io
—his->
ba_ö_
.
	`gë_buf
(),this->ba_ö_.
	`gë_po°i⁄
(),

52 &
out_buf
,&
out_buf_size
 );

53 i‡–
ªt
==1003) Ñet;

55 
ªt
=
this
->
	`gë_ªsu…
(
out_buf
,
out_buf_size
 );

56 i‡(
ªt
==0) {

57 
this
->
ba_out_
.
	`öô_ªad_mode
(
out_buf
+this->
¥Ÿo_hódî_Àn_
,

58 
out_buf_size
-
this
->
¥Ÿo_hódî_Àn_
 );

59 
boﬁ
 
u≈ack_ªt
;

60 i‡(
c_out
==
NULL
){

61 i‡(
out_buf_size
=
this
->
¥Ÿo_hódî_Àn_
 ){

62 
ªt
= 0;

64 
ªt
=1010;

67 
u≈ack_ªt
=
this
->
ba_out_
.
	`ªad
–
c_out
 );

68 i‡(
u≈ack_ªt
){

69 
ªt
= 0;

71 
ªt
=1010;

75 
	`‰ì
(
out_buf
);

76  
ªt
;

78 
	}
}

	@/usr/include/libtaomee++/proto/proto_util.h

18 #i‚de‡
PROTO_UTIL_H


19 
	#PROTO_UTIL_H


	)

20 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

22 #ifde‡
DB_SERVER


23 
	sfd£ssi⁄
 {

24 
fd
;

25 
uöt32_t
 
id
;

26 
uöt16_t
 
ªmŸe_p‹t
;

27 
uöt32_t
 
ªmŸe_ù
;

28 } 
	tfd£ssi⁄_t
;

29 
£nd_pkg_to_˛õ¡
(
fd£ssi⁄_t
* 
fd£ss
, c⁄° * 
pkg
, c⁄° 
pkgÀn
);

30 
√t_£nd
(
fd
, c⁄° * 
d©a
, 
uöt32_t
 
Àn
);

32 
	~<async_£rv/√t_if.h
>

36 
	~<libèomì/log.h
>

39 #ifde‡
USE_HEX_LOG_PROTO


40 
	~<libèomì++/utûs/°rögs.hµ
>

41 
g_log_£nd_buf_hex_Êag
;

44 
ölöe
 
	$£nd_pkg_to_˛õ¡_ex
(
fd£ssi⁄_t
* 
fd£ss
, c⁄° * 
pkg
, c⁄° 
pkgÀn
)

46 
ªt

	`£nd_pkg_to_˛õ¡
–
fd£ss
, 
pkg
, 
pkgÀn
);

47 #ifde‡
USE_HEX_LOG_PROTO


48 i‡(
g_log_£nd_buf_hex_Êag
 ){

49 
outbuf
[13000];

50 
	`bö2hex
(
outbuf
,(*)
pkg
,
pkgÀn
,2000);

51 
	`DEBUG_LOG
("CO[ªt=%d][%s]", 
ªt
,
outbuf
 );

54  
ªt
;

56 
	}
}

57 
ölöe
 
	$√t_£nd_ex
(
fd
, c⁄° * 
pkg
, c⁄° 
pkgÀn
)

59 
ªt
=
	`√t_£nd
–
fd
, 
pkg
, 
pkgÀn
);

60 #ifde‡
USE_HEX_LOG_PROTO


61 i‡(
g_log_£nd_buf_hex_Êag
 ){

62 
outbuf
[13000];

63 
	`bö2hex
(
outbuf
,(*)
pkg
,
pkgÀn
,2000);

64 
	`DEBUG_LOG
("SO[fd=%d][ªt=%d][%s]", 
fd
,
ªt
 ,
outbuf
 );

67  
ªt
;

69 
	}
}

75 
ölöe
 
	$£nd_ba_to_˛õ¡
(
fd£ssi⁄_t
* 
fd£ss
 ,*
hód_buf
, 
byã_¨øy_t
 *
p_ba
)

77 
uöt32_t
 
hód_Àn
=*(uöt32_t* )
hód_buf
;

78 i‡(
p_ba
==
NULL
) {

79  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
hód_buf
,
hód_Àn
 );

81 
byã_¨øy_t
 
ba
;

82 
ba
.
	`öô_po°i⁄
();

83 
ba
.
	`wrôe_buf
(
hód_buf
,
hód_Àn
);

84 
ba
.
	`wrôe_buf
(
p_ba
->
	`gë_buf
(Ë,p_ba->
	`gë_po°i⁄
());

85 
uöt32_t
 
tŸÆ_size
=
ba
.
	`gë_po°i⁄
();

86 *(
uöt32_t
*)(
ba
.
	`gë_buf
())=
tŸÆ_size
;

87  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
ba
.
	`gë_buf
(),
tŸÆ_size
);

90 
	}
}

95 
ölöe
 
	$£nd_msg_to_˛õ¡
(
fd£ssi⁄_t
* 
fd£ss
 ,*
hód_buf
, 
Cmesßge
 *
msg
=
NULL
, 
uöt32_t
 
Ÿhî_£t_hódî_posôi⁄
 =0, 
boﬁ
 
Ÿhî_£t_hódî_posôi⁄_is_bigídün
=
Ál£
 )

97 
uöt32_t
 
hód_Àn
=*(uöt32_t* )
hód_buf
;

98 i‡(
msg
==
NULL
) {

99  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
hód_buf
,
hód_Àn
 );

101 
byã_¨øy_t
 
ba
;

102 
ba
.
	`öô_po°i⁄
();

103 
ba
.
	`wrôe_buf
(
hód_buf
,
hód_Àn
);

104 
msg
->
	`wrôe_to_buf
(
ba
);

105 
uöt32_t
 
tŸÆ_size
=
ba
.
	`gë_po°i⁄
();

106 *(
uöt32_t
*)(
ba
.
	`gë_buf
())=
tŸÆ_size
;

107 i‡(
Ÿhî_£t_hódî_posôi⁄
 !=0 ){

108 i‡(
Ÿhî_£t_hódî_posôi⁄_is_bigídün
){

109 *(
uöt32_t
*)(
ba
.
	`gë_buf
()+
Ÿhî_£t_hódî_posôi⁄
)=
	`ht⁄l
(
tŸÆ_size
-other_set_header_position);

111 *(
uöt32_t
*)(
ba
.
	`gë_buf
()+
Ÿhî_£t_hódî_posôi⁄
)=
tŸÆ_size
-other_set_header_position;

114  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
ba
.
	`gë_buf
(),
tŸÆ_size
);

117 
	}
}

122 
ölöe
 
	$√t_£nd_msg
(
fd
, *
hód_buf
, 
Cmesßge
 *
msg
=
NULL
,
uöt32_t
 
Ÿhî_£t_hódî_posôi⁄
 =0 , 
boﬁ
 
Ÿhî_£t_hódî_posôi⁄_is_bigídün
=
Ál£
 )

125 
uöt32_t
 
hód_Àn
=*(uöt32_t* )
hód_buf
;

126 i‡(
msg
==
NULL
) {

127  
	`√t_£nd_ex
(
fd
,
hód_buf
,
hód_Àn
 );

129 
byã_¨øy_t
 
ba
;

130 
ba
.
	`öô_po°i⁄
();

131 
ba
.
	`£t_is_bigídün
(
Ÿhî_£t_hódî_posôi⁄_is_bigídün
);

132 
ba
.
	`wrôe_buf
(
hód_buf
,
hód_Àn
);

133 
msg
->
	`wrôe_to_buf
(
ba
);

134 
uöt32_t
 
tŸÆ_size
=
ba
.
	`gë_po°i⁄
();

135 *(
uöt32_t
*)(
ba
.
	`gë_buf
())=
tŸÆ_size
;

136 i‡(
Ÿhî_£t_hódî_posôi⁄
 !=0 ){

137 i‡(
Ÿhî_£t_hódî_posôi⁄_is_bigídün
){

138 *(
uöt32_t
*)(
ba
.
	`gë_buf
()+
Ÿhî_£t_hódî_posôi⁄
)=
	`ht⁄l
–
tŸÆ_size
-other_set_header_position);

141 *(
uöt32_t
*)(
ba
.
	`gë_buf
()+
Ÿhî_£t_hódî_posôi⁄
)=
tŸÆ_size
-other_set_header_position;

145  
	`√t_£nd_ex
(
fd
,
ba
.
	`gë_buf
(),
tŸÆ_size
);

147 
	}
}

152 
ölöe
 
	$£nd_msg_to_˛õ¡_bigídün
(
fd£ssi⁄_t
* 
fd£ss
 ,*
hód_buf
, 
Cmesßge
 *
msg
=
NULL
, 
uöt32_t
 
Ÿhî_£t_hódî_posôi⁄
 =0 )

154 
uöt32_t
 
hód_Àn
=
	`¡ohl
(*(uöt32_t* )
hód_buf
);

155 i‡(
msg
==
NULL
) {

156  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
hód_buf
,
hód_Àn
 );

158 
byã_¨øy_t
 
ba
;

159 
ba
.
	`öô_po°i⁄
();

160 
ba
.
	`£t_is_bigídün
(
åue
);

161 
ba
.
	`wrôe_buf
(
hód_buf
,
hód_Àn
);

162 
msg
->
	`wrôe_to_buf
(
ba
);

163 
uöt32_t
 
tŸÆ_size
=
ba
.
	`gë_po°i⁄
();

164 *(
uöt32_t
*)(
ba
.
	`gë_buf
())=
	`ht⁄l
(
tŸÆ_size
);

165 i‡(
Ÿhî_£t_hódî_posôi⁄
 !=0 ){

166 *(
uöt32_t
*)(
ba
.
	`gë_buf
()+
Ÿhî_£t_hódî_posôi⁄
)=
	`ht⁄l
(
tŸÆ_size
-other_set_header_position);

168  
	`£nd_pkg_to_˛õ¡_ex
(
fd£ss
,
ba
.
	`gë_buf
(),
tŸÆ_size
);

170 
	}
}

227 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

228 ˛as†
	cCãmp_v¨li°
: 
public
 
Cmesßge
 {

229 
public
:

231 
°d
::
ve˘‹
<
_Tp
> * 
p_ôem_li°
;

233 
Cãmp_v¨li°
–
°d
::
ve˘‹
<
_Tp
> * 
p_li°
 ){

234 
this
->
öô
(
p_li°
);

237 
öô
(
°d
::
ve˘‹
<
_Tp
> * 
p_li°
 ){

238 
this
->
p_ôem_li°
=
p_li°
;

241 
boﬁ
 
	$ªad_‰om_buf
(
byã_¨øy_t
 & 
ba
 ){

242 
uöt32_t
 
ôem_li°_cou¡
 ;

243 i‡(!
ba
.
	`ªad_uöt32
–
ôem_li°_cou¡
 )Ë 
Ál£
;

244 
_Tp
 
ôem_li°_ôem
;

245 
this
->
p_ôem_li°
->
	`˛ór
();

246 {
uöt32_t
 
i
=0; i<
ôem_li°_cou¡
;i++){

247 i‡(!
ba
.
	`ªad
(&
ôem_li°_ôem
ËË 
Ál£
;

248 
this
->
p_ôem_li°
->
	`push_back
(
ôem_li°_ôem
);

250  
åue
;

252 
	}
}

254 
boﬁ
 
	$wrôe_to_buf
(
byã_¨øy_t
 & 
ba
 ){

255 i‡(!
ba
.
	`wrôe_uöt32
(
this
->
p_ôem_li°
->
	`size
())Ë 
Ál£
;

256 {
uöt32_t
 
i
=0; i<
this
->
p_ôem_li°
->
	`size
() ;i++){

257 i‡(!
ba
.
	`wrôe
(& (*
this
->
p_ôem_li°
)[
i
])Ë 
Ál£
;

259  
åue
;

260 
	}
}

265 
	gãm∂©e
 <
˛ass
 
	g_Tp
 >

266 ˛as†
	cCãmp_¨øy
: 
public
 
Cmesßge
 {

267 
public
:

269 
_Tp
 
	tT_ITEM
 ;

270 
	m°d
::
ve˘‹
<
T_ITEM
> * 
p_ôem_li°
;

271 
uöt32_t
 
	mÀngth
;

273 
Cãmp_¨øy
–
°d
::
ve˘‹
<
T_ITEM
> * 
p_li°
,
uöt32_t
 
¨øy_Àngth
 ){

274 
	mthis
->
öô
(
p_li°
,
¨øy_Àngth
 );

277 
öô
(
°d
::
ve˘‹
<
T_ITEM
> * 
p_li°
, 
uöt32_t
 
¨øy_Àngth
 ){

278 
	gthis
->
	gÀngth
=
¨øy_Àngth
;

279 
	gthis
->
	gp_ôem_li°
=
p_li°
;

282 
boﬁ
 
	$ªad_‰om_buf
(
byã_¨øy_t
 & 
ba
 ){

283 {
uöt32_t
 
i
=0; i<
this
->
Àngth
 ;i++){

284 i‡(!
ba
.
	`ªad
(&(*
this
->
p_ôem_li°
)[
i
]ËË 
Ál£
;

286  
åue
;

288 
	}
}

290 
boﬁ
 
	$wrôe_to_buf
(
byã_¨øy_t
 & 
ba
 ){

291 {
uöt32_t
 
i
=0; i<
this
->
Àngth
 ;i++){

292 i‡(!
ba
.
	`wrôe
(& (*
this
->
p_ôem_li°
)[
i
])Ë 
Ál£
;

294  
åue
;

295 
	}
}

	@/usr/include/libtaomee++/proto/proto_xml.h

16 #i‚de‡
_PROTO_XML_H_


17 
	#_PROTO_XML_H_


	)

18 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

19 
	~<libèomì++/utûs/°rögs.hµ
>

20 
	~<libxml2/libxml/∑r£r.h
>

21 
	~<°dlib.h
>

22 #ifde‡
__˝lu•lus


26 
	~<libèomì/log.h
>

27 #ifde‡
__˝lu•lus


32 
	~<ve˘‹
>

33 
	~<s°ªam
>

35 
	~<Æg‹ôhm
>

36 
	~<fun˘i⁄Æ
>

37 
ölöe
 
boﬁ
 
	$°r2ve˘‹_check_£t_•a˚
–
ch
 ){

38  
ch
==',' || ch == ';'|| ch == '/' || ch == ':';

39 
	}
}

40 
ãm∂©e
 <
ty≥«me
 
Ty≥
 >

41 
ölöe
 
°r2ve˘‹
 (c⁄° * 
§c
,
°d
::
ve˘‹
< 
Ty≥
 > & 
v
 ){

42 
°d
::
°rög
 
°r
(
§c
);

43 
°d
::
ª∂a˚_if
(
°r
.
begö
(),°r.
íd
(), 
°r2ve˘‹_check_£t_•a˚
 ,' ');

44 
°d
::
°rög°ªam
 
ss
(
°r
 );

45 
vÆue
;

46  
ss
>>
vÆue
 ){

47 
v
.
push_back
(
vÆue
);

50 
ãm∂©e
 <
ty≥«me
 
Ty≥
 >

51 
ölöe
 
	$°r2¨øy
 (c⁄° * 
§c
, 
Ty≥
 * 
p_¨r
, 
uöt32_t
 
size
 ){

52 
°d
::
°rög
 
	`°r
(
§c
);

53 
°d
::
	`ª∂a˚_if
(
°r
.
	`begö
(),°r.
	`íd
(), 
°r2ve˘‹_check_£t_•a˚
 ,' ');

54 
°d
::
°rög°ªam
 
	`ss
(
°r
 );

55 
	`mem£t
(
p_¨r
,0,(
Ty≥
)*
size
 );

56 
vÆue
;

57 
uöt32_t
 
i
=0;

58  
ss
>>
vÆue
 ){

59 i‡(
i
>=
size
){

62 *(
p_¨r
+
i
)=
vÆue
;

63 
i
++;

65 
	}
}

68 
ölöe
 
boﬁ
 
	$xml_ªad_©å_°rög
(* 
dsc
, 
uöt32_t
 
dsc_size
 ,
xmlNodePå
 
node
,c⁄° * 
fõld_«me
, 
boﬁ
 
is_ªquúed
,c⁄° * 
def_vÆue
 ){

69 
xmlCh¨
 *
szAâr
 = 
	`xmlGëPr›
 (
node
, 
BAD_CAST
 
fõld_«me
 );

70 i‡(
szAâr
){

71 
boﬁ
 
ªt
=
Ál£
;

72 i‡(
	`°æí
((c⁄° *)
szAâr
 )<
dsc_size
){

73 
	`°r˝y
(
dsc
,(c⁄° *Ë
szAâr
 );

74 
ªt
=
åue
;

76 
	`DEBUG_LOG
("XMLERR fõld=[%s]Üí=%u max=%u",
fõld_«me
,

77 
	`°æí
((c⁄° * )
szAâr
Ë, 
dsc_size
);

79 
	`xmlFªe
(
szAâr
);

80  
ªt
;

82 i‡(
is_ªquúed
) {

83 
	`DEBUG_LOG
("XMLERR fõld=[%s] is_ªquúed",
fõld_«me
 );

84  
Ál£
;

86 i‡(
	`°æí
((c⁄° *)
def_vÆue
 )<
dsc_size
){

87 
	`°r˝y
(
dsc
,(c⁄° *Ë
def_vÆue
 );

88  
åue
;

90  
Ál£
;

94 
	}
}

108 
ölöe
 
boﬁ
 
	$xml_ªad_©å_doubÀ
(&
vÆue
, 
xmlNodePå
 
node
 ,c⁄° * 
fõld_«me
, 
boﬁ
 
is_ªquúed
,
def_vÆue
, 
mö_vÆue
, 
max_vÆue
 )

110 
xmlCh¨
 *
szAâr
 = 
	`xmlGëPr›
 (
node
, 
BAD_CAST
 
fõld_«me
 );

111 
ªad_vÆue
;

112 i‡(
szAâr
){

113 
ªad_vÆue
=
	`©of
((c⁄° *Ë
szAâr
 );

114 
	`xmlFªe
(
szAâr
);

115 if(
ªad_vÆue
 >=
mö_vÆue
 &&Ñód_vÆue<=
max_vÆue
 ){

116 
vÆue
=
ªad_vÆue
;

117  
åue
;

119 
	`DEBUG_LOG
("XMLERR field=[%s] v=%0.0f min= %0.0f max= %0.0f ",

120 
fõld_«me
,
ªad_vÆue
,
mö_vÆue
,
max_vÆue


122  
Ál£
;

125 i‡(
is_ªquúed
) {

126 
	`DEBUG_LOG
("XMLERR fõld=[%s] is_ªquúed",
fõld_«me
 );

127  
Ál£
;

129 
vÆue
=
def_vÆue
;

130  
åue
;

133 
	}
}

134 
	#GEN_XML_READ_ATTR_INTEGER
(
ty≥
) \

135 
ölöe
 
boﬁ
 
xml_ªad_©å_
##
	`ty≥
(
ty≥
##
_t
 &
vÆue
, 
xmlNodePå
 
node
 ,c⁄° * 
fõld_«me
, boﬁ 
is_ªquúed
,ty≥##_à
def_vÆue
,Åy≥##_à
mö_vÆue
,Åy≥##_à
max_vÆue
 ){ \

136 
v
; \

137 
boﬁ
 
ªt

	`xml_ªad_©å_doubÀ
 (
v
,
node
,
fõld_«me
,
is_ªquúed
,
def_vÆue
,
mö_vÆue
,
max_vÆue
 );\

138 
vÆue
=
v
; \

139  
ªt
; \

140 }

	)

142 
	$GEN_XML_READ_ATTR_INTEGER
(
uöt8
)

143 
	$GEN_XML_READ_ATTR_INTEGER
(
uöt16
)

144 
	$GEN_XML_READ_ATTR_INTEGER
(
uöt32
)

145 
	$GEN_XML_READ_ATTR_INTEGER
(
uöt64
)

146 
	$GEN_XML_READ_ATTR_INTEGER
(
öt8
)

147 
	$GEN_XML_READ_ATTR_INTEGER
(
öt16
)

148 
	$GEN_XML_READ_ATTR_INTEGER
(
öt32
)

149 
	$GEN_XML_READ_ATTR_INTEGER
(
öt64
)

151 
ölöe
 
boﬁ
 
	$mesßge_ªad_‰om_xml_fûe
–
Cmesßge
 & 
msg
 ,c⁄° * 
fûe_«me
 )

153 
xmlDocPå
 
pdoc
 = 
NULL
;

154 
xmlNodePå
 
¥oŸ
 = 
NULL
;

157 
pdoc
 = 
	`xmlRódFûe
 (
fûe_«me
, "UTF-8", 
XML_PARSE_NOBLANKS
);

159 i‡(
pdoc
 =
NULL
) {

160 
	`DEBUG_LOG
("XML ERR :xmlRódFûêÉº fûe_«me%s",
fûe_«me
);

161  
Ál£
;

165 
¥oŸ
 = 
	`xmlDocGëRoŸEÀmít
 (
pdoc
);

167 i‡(
¥oŸ
 =
NULL
) {

168 
	`DEBUG_LOG
("XML ERR : xmlDocGëRoŸEÀmíàî∏fûe_«me%s",
fûe_«me
);

169  
Ál£
;

171 
boﬁ
 
ªt
=
msg
.
	`ªad_‰om_xm ode
(
¥oŸ
);

173 
	`xmlFªeDoc
 (
pdoc
);

174 
	`xmlCÀ™upP¨£r
 ();

175  
ªt
;

177 
	}
}

178 
ölöe
 
	$debug_log_cmsg
–
Cmesßge
 *
p_msg
 ){

179 
byã_¨øy_t
 
ba
;

180 
ba
.
	`öô_po°i⁄
();

181 
p_msg
->
	`wrôe_to_buf
(
ba
);

182 
outbuf
[13000];

183 
	`bö2hex
(
outbuf
,(*)
ba
.
	`gë_buf
(Ë,ba.
	`gë_po°i⁄
(),2000);

184 
	`DEBUG_LOG
("CMSG: %†%†", 
p_msg
->
	`_gë_ty≥_id
(), 
outbuf
 );

185 
	}
}

	@/usr/include/libtaomee++/random/random.hpp

14 #i‚de‡
LIBTAOMEEPP_RANDOM_HPP_


15 
	#LIBTAOMEEPP_RANDOM_HPP_


	)

17 
	~<c°dlib
>

19 
«me•a˚
 
	gèomì
 {

27 
ölöe
 
ønged_øndom
(
mö
, 
max
)

30  (
ønd
(Ë% (
	gmax
 - 
	gmö
 + 1)) + min;

	@/usr/include/libtaomee++/thread/barrier.hpp

16 #i‚de‡
LIBTAOMEEPP_BARRIER_HPP_


17 
	#LIBTAOMEEPP_BARRIER_HPP_


	)

19 
	~<°dex˚±
>

22 
	~<±hªad.h
>

25 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

27 
«me•a˚
 
èomì
 {

34 ˛as†
	cB¨rõr
 : 
N⁄c›yabÀ
 {

35 
public
:

46 
B¨rõr
(
˙t
 = 2, 
boﬁ
 
¥o˚ss_sh¨ed
 = 
Ál£
);

48 ~
B¨rõr
();

54 
boﬁ
 
waô
();

56 
¥iv©e
:

57 
±hªad_b¨rõr_t
 
b¨_
;

60 
ölöe


61 
B¨rõr
::
	$B¨rõr
(
˙t
, 
boﬁ
 
¥o˚ss_sh¨ed
)

63 
±hªad_b¨rõøâr_t
 
©å
;

66 i‡(
	`±hªad_b¨rõøâr_öô
(&
©å
) != 0) {

67 
throw
 
°d
::
	`ru¡ime_îr‹
("No Enough Memory!");

69 i‡(
¥o˚ss_sh¨ed
) {

70 
	`±hªad_b¨rõøâr_£çsh¨ed
(&
©å
, 
PTHREAD_PROCESS_SHARED
);

73 i‡(
	`±hªad_b¨rõr_öô
(&
b¨_
, &
©å
, 
˙t
) != 0) {

74 
throw
 
°d
::
	`ru¡ime_îr‹
("No Enough Memory Or Invalid Count Specified!");

77 
	`±hªad_b¨rõøâr_de°roy
(&
©å
);

78 
	}
}

80 
ölöe


81 
B¨rõr
::~
	$B¨rõr
()

83 
	`±hªad_b¨rõr_de°roy
(&
b¨_
);

84 
	}
}

86 
ölöe
 
boﬁ


87 
B¨rõr
::
	$waô
()

89 
ªt
 = 
	`±hªad_b¨rõr_waô
(&
b¨_
);

90  ((
ªt
 =0Ë|| (ªà=
PTHREAD_BARRIER_SERIAL_THREAD
));

91 
	}
}

	@/usr/include/libtaomee++/thread/mutex.hpp

14 #i‚de‡
LIBTAOMEEPP_MUTEX_HPP_


15 
	#LIBTAOMEEPP_MUTEX_HPP_


	)

18 
	~<±hªad.h
>

19 
	~<sys/time.h
>

22 
	~<libèomì++/utûs/c⁄fig.hµ
>

23 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

25 
	~<libèomì++/thªad/thªadlock.hµ
>

27 
«me•a˚
 
èomì
 {

37 ˛as†
	cMuãx
 : 
public
 
ThªadLock
 {

38 
‰õnd
 
˛ass
 
ThªadC⁄d
;

39 
public
:

43 
	eMuãxTy≥
 {

48 
n‹mÆ_muãx
 = 
PTHREAD_MUTEX_NORMAL
,

54 
îr‹_chk_muãx
 = 
PTHREAD_MUTEX_ERRORCHECK
,

61 
ªcursive_muãx
 = 
PTHREAD_MUTEX_RECURSIVE
,

65 
deÁu…_muãx
 = 
PTHREAD_MUTEX_DEFAULT


71 
Muãx
();

77 
Muãx
(
MuãxTy≥
 
ty≥
, 
boﬁ
 
¥o˚ss_sh¨ed
 = 
Ál£
);

79 ~
Muãx
();

81 
boﬁ
 
lock
();

82 
boﬁ
 
timedlock
(
time_t
 
timeout
);

83 
boﬁ
 
åylock
();

84 
boﬁ
 
u∆ock
();

85 
¥Ÿe˘ed
:

86 
boﬁ
 
de°roy
();

87 
¥iv©e
:

88 
±hªad_muãx_t
 
muãx_
;

91 #i‚de‡
NONINLINE


93 
	~<libèomì++/thªad/muãx.t˝p
>

	@/usr/include/libtaomee++/thread/rwlock.hpp

14 #i‚de‡
LIBTAOMEEPP_RWLOCK_HPP_


15 
	#LIBTAOMEEPP_RWLOCK_HPP_


	)

18 
	~<±hªad.h
>

19 
	~<sys/time.h
>

22 
	~<libèomì++/utûs/c⁄fig.hµ
>

23 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

25 
	~<libèomì++/thªad/thªadlock.hµ
>

27 
«me•a˚
 
èomì
 {

37 ˛as†
	cRwlock
 : 
public
 
ThªadLock
 {

38 
public
:

44 
Rwlock
(
boﬁ
 
psh¨ed
 = 
Ál£
);

46 ~
Rwlock
();

48 
boﬁ
 
lock
();

49 
boﬁ
 
timedlock
(
time_t
 
timeout
);

50 
boﬁ
 
åylock
();

51 
boﬁ
 
u∆ock
();

58 
boﬁ
 
rdlock
();

65 
boﬁ
 
timedrdlock
(
time_t
 
timeout
);

71 
boﬁ
 
åyrdlock
();

72 
¥Ÿe˘ed
:

73 
boﬁ
 
de°roy
();

74 
¥iv©e
:

75 
±hªad_rwlock_t
 
rwlock_
;

78 #i‚de‡
NONINLINE


80 
	~<libèomì++/thªad/rwlock.t˝p
>

	@/usr/include/libtaomee++/thread/spinlock.hpp

14 #i‚de‡
LIBTAOMEEPP_SPINLOCK_HPP_


15 
	#LIBTAOMEEPP_SPINLOCK_HPP_


	)

18 
	~<±hªad.h
>

21 
	~<libèomì++/thªad/thªadlock.hµ
>

23 
«me•a˚
 
èomì
 {

32 ˛as†
	cSpöLock
 : 
public
 
ThªadLock
 {

33 
public
:

41 
SpöLock
(
boﬁ
 
¥o˚ss_sh¨ed
 = 
Ál£
);

43 ~
SpöLock
();

46 
boﬁ
 
lock
();

51 
boﬁ
 
timedlock
(
time_t
 
timeout
);

52 
boﬁ
 
åylock
();

53 
boﬁ
 
u∆ock
();

55 
¥iv©e
:

56 
±hªad_•ölock_t
 
•ö_
;

59 
ölöe


60 
SpöLock
::
	$SpöLock
(
boﬁ
 
¥o˚ss_sh¨ed
)

65 i‡(!
¥o˚ss_sh¨ed
) {

66 
îr_
 = 
	`±hªad_•ö_öô
(&
•ö_
, 
PTHREAD_PROCESS_PRIVATE
);

68 
îr_
 = 
	`±hªad_•ö_öô
(&
•ö_
, 
PTHREAD_PROCESS_SHARED
);

70 
	}
}

72 
ölöe


73 
SpöLock
::~
	$SpöLock
()

75 
	`u∆ock
();

78 
	`±hªad_•ö_de°roy
(&
•ö_
);

79 
	}
}

81 
ölöe
 
boﬁ


82 
SpöLock
::
	$lock
()

87  !
	`±hªad_•ö_lock
(&
•ö_
);

88 
	}
}

90 
ölöe
 
boﬁ


91 
SpöLock
::
	$timedlock
(
time_t
 
timeout
)

93  
Ál£
;

94 
	}
}

96 
ölöe
 
boﬁ


97 
SpöLock
::
	$åylock
()

100  !
	`±hªad_•ö_åylock
(&
•ö_
);

101 
	}
}

103 
ölöe
 
boﬁ


104 
SpöLock
::
	$u∆ock
()

109  !
	`±hªad_•ö_u∆ock
(&
•ö_
);

110 
	}
}

	@/usr/include/libtaomee++/thread/thread.hpp

14 #i‚de‡
LIBTAOMEEPP_THREAD_HPP_


15 
	#LIBTAOMEEPP_THREAD_HPP_


	)

17 
	~<ˇs£π
>

20 
	~<±hªad.h
>

21 
	~<sig«l.h
>

24 
	~<libèomì++/utûs/c⁄fig.hµ
>

25 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

27 
	~<libèomì++/thªad/muãx.hµ
>

28 
	~<libèomì++/thªad/thªadc⁄dôi⁄.hµ
>

30 
«me•a˚
 
èomì
 {

45 ˛as†
	cThªad
 : 
N⁄c›yabÀ
 {

46 
public
:

51 
±hªad_t
 
	tthªad_id_ty≥
;

56 
	esc›e_ty≥
 {

58 
sy°em_sc›e
 = 
PTHREAD_SCOPE_SYSTEM
,

60 
¥o˚ss_sc›e
 = 
PTHREAD_SCOPE_PROCESS


68 
Thªad
(
boﬁ
 
dëached
 = 
Ál£
, 
sc›e_ty≥
 
sc›e
 = 
sy°em_sc›e
);

70 
vútuÆ
 ~
Thªad
();

76 
boﬁ
 
gë_°ack
(*& 
°ackaddr
, 
size_t
& 
°acksize
) const;

81 
boﬁ
 
£t_°ack
(* 
°ackaddr
, 
size_t
 
°acksize
);

87 
boﬁ
 
gë_°acksize
(
size_t
& 
°acksize
) const;

92 
boﬁ
 
£t_°acksize
(
size_t
 
°acksize
);

98 
boﬁ
 
gë_gu¨dsize
(
size_t
& 
gu¨dsize
) const;

103 
boﬁ
 
£t_gu¨dsize
(
size_t
 
gu¨dsize
);

110 
boﬁ
 
°¨t
();

117 
boﬁ
 
joö
();

122 
boﬁ
 
dëach
();

134 
boﬁ
 
ˇn˚l
();

139 
boﬁ
 
kûl
(
signo
 = 0);

145 
boﬁ
 
joöabÀ
() const;

150 
boﬁ
 
ru¬ög
() const;

156 c⁄° 
thªad_id_ty≥
& 
tid
() const;

161 
boﬁ
 
equÆ
(c⁄° 
thªad_id_ty≥
& 
id
) const;

164 
›î©‹
 *() const

165 {  
ªöãΩªt_ˇ°
<*>(!
îr_
); }

172 
gë_c⁄cuºícy
();

177 
boﬁ
 
£t_c⁄cuºícy
(
Àvñ
);

195 
boﬁ
 
sigmask_›
(
how
, c⁄° 
sig£t_t
* 
£t
, sig£t_t* 
ﬁd_£t
 = 0);

205 
boﬁ
 
©_f‹k
((*
b4_f‹k
)(Ë0, (*
a·î_f‹k
)(Ë0, (*
a·î_f‹k_chûd
)() = 0);

206 
¥Ÿe˘ed
:

211 
	eˇn˚l_ty≥
 {

213 
de„ºed_ˇn˚l
 = 
PTHREAD_CANCEL_DEFERRED
,

215 
asyn_ˇn˚l
 = 
PTHREAD_CANCEL_ASYNCHRONOUS


223 
vútuÆ
 
run
() = 0;

227 
exô
(* 
rvÆ_±r
Ë{ 
±hªad_exô
(rval_ptr); }

239 
boﬁ
 
£t_ˇn˚œbûôy
(boﬁ 
ˇn˚œbÀ
 = 
åue
, boﬁ* 
ﬁd_ˇn˚œbÀ
 = 0);

246 
boﬁ
 
£t_ˇn˚…y≥
(
ˇn˚l_ty≥
 
ty≥
 = 
de„ºed_ˇn˚l
, c™˚l_ty≥* 
ﬁd_ty≥
 = 0);

253 
ã°_ˇn˚l
();

254 
¥iv©e
:

255 * 
ˇŒ_run
(* 
t
);

256 
ª£t_ru¬ög
(* 
t
);

258 
thªad_id_ty≥
 
tid_
;

259 
±hªad_©å_t
 
©å_
;

261 
îr_
;

262 
boﬁ
 
dëached_
;

263 
boﬁ
 
joöabÀ_
;

264 
boﬁ
 
ru¬ög_
;

266 
Muãx
 
muãx_
;

267 
ThªadC⁄d
 
c⁄d_
;

270 #i‚de‡
NONINLINE


272 
	~<libèomì++/thªad/thªad.t˝p
>

	@/usr/include/libtaomee++/thread/threadcondition.hpp

14 #i‚de‡
LIBTAOMEEPP_THREADCONDITION_HPP_


15 
	#LIBTAOMEEPP_THREADCONDITION_HPP_


	)

18 
	~<±hªad.h
>

19 
	~<sys/time.h
>

22 
	~<libèomì++/utûs/c⁄fig.hµ
>

23 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

25 
	~<libèomì++/thªad/muãx.hµ
>

27 
«me•a˚
 
èomì
 {

37 ˛as†
	cThªadC⁄d
 : 
N⁄c›yabÀ
 {

38 
public
:

43 
ThªadC⁄d
(
boﬁ
 
psh¨ed
 = 
Ál£
);

44 ~
ThªadC⁄d
();

55 
boﬁ
 
waô
(
Muãx
& 
muãx
);

62 
boﬁ
 
timedwaô
(
Muãx
& 
muãx
, 
time_t
 
timeout
);

68 
boﬁ
 
brﬂdˇ°
();

75 
boﬁ
 
sig«l
();

77 
›î©‹
 *() const

78 {  
ªöãΩªt_ˇ°
<*>(!
îr_
); }

79 
¥iv©e
:

80 
±hªad_c⁄d_t
 
c⁄d_
;

82 
îr_
;

85 #i‚de‡
NONINLINE


87 
	~<libèomì++/thªad/thªadc⁄dôi⁄.t˝p
>

	@/usr/include/libtaomee++/thread/threadlock.hpp

14 #i‚de‡
LIBTAOMEEPP_THREADLOCK_HPP_


15 
	#LIBTAOMEEPP_THREADLOCK_HPP_


	)

17 
	~<˘ime
>

19 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

21 
«me•a˚
 
	gèomì
 {

27 ˛as†
	cThªadLock
 : 
N⁄c›yabÀ
 {

28 
public
:

33 
vútuÆ
 ~
ThªadLock
() { }

39 
vútuÆ
 
boﬁ
 
lock
() = 0;

45 
vútuÆ
 
boﬁ
 
timedlock
(
time_t
 
timeout
) = 0;

50 
vútuÆ
 
boﬁ
 
åylock
() = 0;

55 
vútuÆ
 
boﬁ
 
u∆ock
() = 0;

57 
›î©‹
 *() const

58 {  
	gªöãΩªt_ˇ°
<*>(!
	gîr_
); }

59 
	g¥Ÿe˘ed
:

60 
îr_
;

	@/usr/include/libtaomee++/thread/threadpool.hpp

15 #i‚de‡
LIBTAOMEEPP_THREADPOOL_HPP_


16 
	#LIBTAOMEEPP_THREADPOOL_HPP_


	)

18 
	~<queue
>

20 #ifde‡
USE_BOOST_ANY_


21 
	~<boo°/™y.hµ
>

24 
	~<libèomì++/utûs/c⁄fig.hµ
>

25 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

27 
	~<libèomì++/thªad/thªad.hµ
>

29 
«me•a˚
 
	gèomì
 {

45 
	gãm∂©e
<
ty≥«me
 
	gJobPﬁicy
>

46 ˛as†
	cThªadPoﬁ
 : 
N⁄c›yabÀ
 {

47 
¥iv©e
:

51 #ifde‡
USE_BOOST_ANY_


52 
boo°
::
	t™y
 
	tD©aTy≥
;

54 * 
	tD©aTy≥
;

57 
	gpublic
:

62 
ThªadPoﬁ
(
size_t
 
w‹kî_num
 = 4);

63 ~
ThªadPoﬁ
();

70 
boﬁ
 
run_job
(c⁄° 
D©aTy≥
& 
d©a
 = DataType());

76 
scheduÀ_job
(c⁄° 
D©aTy≥
& 
d©a
 = DataType());

78 
›î©‹
 *() const

79 {  
	gªöãΩªt_ˇ°
<*>(!
	gîr_
); }

80 
	g¥iv©e
:

82 
˛ass
 
W‹kî
;

84 
	g°d
::
	tqueue
<
	tW‹kî
*> 
	tW‹kîQueue
;

85 
	g°d
::
	tqueue
<
	tD©aTy≥
> 
	tD©aQueue
;

88 
W‹kîQueue
 
	gw‹kî_q_
;

90 
Muãx
 
	gd©a_q_muãx_
;

91 
ThªadC⁄d
 
	gd©a_q_c⁄d_
;

92 
D©aQueue
 
	gd©a_q_
;

94 
boﬁ
 
	gíd_
;

96 
size_t
 
	gnw‹kîs_idÀ_
;

97 
	gîr_
;

101 
	gãm∂©e
<
ty≥«me
 
	gJobPﬁicy
>

102 
˛ass
 
	gThªadPoﬁ
<
	gJobPﬁicy
>::
W‹kî
 : 
public
 
Thªad
 {

103 
public
:

104 
W‹kî
(
ThªadPoﬁ
<
JobPﬁicy
>* 
thΩoﬁ
Ë: 
thΩoﬁ_
(thrpool)

106 ~
W‹kî
()

107 { i‡(
joöabÀ
()Ë
joö
(); }

108 
	g¥Ÿe˘ed
:

109 
run
();

110 
	g¥iv©e
:

111 
JobPﬁicy
 
job_
;

113 
	gThªadPoﬁ
<
	gJobPﬁicy
>* c⁄° 
	gthΩoﬁ_
;

117 
	~<libèomì++/thªad/thªadpoﬁ.t˝p
>

	@/usr/include/libtaomee++/time/time.hpp

14 #i‚de‡
LIBTAOMEEPP_TIME_HPP_


15 
	#LIBTAOMEEPP_TIME_HPP_


	)

18 
	~<sys/time.h
>

21 
	~<cm©h
>

23 
«me•a˚
 
èomì
 {

31 
ölöe
 
su£c⁄ds_t
 
timecmp
(c⁄° 
timevÆ
& 
tv1
, c⁄°ÅimevÆ& 
tv2
)

33 i‡(
tv1
.
tv_£c
 > 
tv2
.tv_sec) {

35 } i‡(
tv1
.
tv_£c
 =
tv2
.tv_sec) {

36  (
tv1
.
tv_u£c
 - 
tv2
.tv_usec);

48 
ölöe
 
timódd
(
timevÆ
& 
tv
, 
tm∂us
)

50 i‡–
tm∂us
 > 1.0 ) {

51 
tv
.
tv_£c
 +
°©ic_ˇ°
<
time_t
>(
tm∂us
);

52 
tm∂us
 -
°©ic_ˇ°
<
time_t
>(tmplus);

54 
tv
.
tv_u£c
 +
Ãound
(
tm∂us
 * 1000000.0);

55 i‡(
tv
.
tv_u£c
 > 999999) {

56 
tv
.
tv_£c
 +tv.
tv_u£c
 / 1000000;

57 
tv
.
tv_u£c
 =Åv.tv_usec % 1000000;

67 
ölöe
 
timediff
(c⁄° 
timevÆ
& 
tv1
, c⁄°ÅimevÆ& 
tv2
)

69  
tv1
.
tv_£c
 - 
tv2
.tv_£¯+ (tv1.
tv_u£c
 -Åv2.tv_usec)/1000000.0;

78 
ölöe
 
timediff2
(c⁄° 
timevÆ
& 
tv1
, c⁄°ÅimevÆ& 
tv2
)

80  (
tv1
.
tv_£c
 - 
tv2
.tv_£cË* 1000 + (tv1.
tv_u£c
 -Åv2.tv_usec)/1000;

	@/usr/include/libtaomee++/time/timeval.hpp

14 #i‚de‡
LIBTAOMEEPP_TIMEVAL_HPP_


15 
	#LIBTAOMEEPP_TIMEVAL_HPP_


	)

18 
	~<°döt.h
>

20 
	~<sys/time.h
>

23 
«me•a˚
 
èomì
 {

28 ˛as†
	cTimeVÆ
 {

29 
public
:

33 
TimeVÆ
()

35 
upd©e
();

42 
ex∂icô
 
TimeVÆ
(c⁄° 
timevÆ
& 
tv
)

44 
m_tv
 = 
tv
;

51 
ms_timódd
(
uöt32_t
 
ms
)

53 
m_tv
.
tv_£c
 +
ms
 / 1000;

54 
m_tv
.
tv_u£c
 +(
ms
 % 1000) * 1000;

55 i‡(
m_tv
.
tv_u£c
 > 999999) {

56 
m_tv
.
tv_£c
 +m_tv.
tv_u£c
 / 1000000;

57 
m_tv
.
tv_u£c
 = m_tv.tv_usec % 1000000;

64 
upd©e
()

66 
gëtimeofday
(&
m_tv
, 0);

69 
public
:

73 c⁄° 
TimeVÆ
& 
›î©‹
 =(c⁄° 
timevÆ
& 
tv
)

75 
m_tv
 = 
tv
;

76  *
this
;

79 
¥iv©e
:

80 
timevÆ
 
m_tv
;

82 
public
:

86 
‰õnd
 
boﬁ
 
›î©‹
 <(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
);

90 
‰õnd
 
boﬁ
 
›î©‹
 ==(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
);

94 
‰õnd
 
boﬁ
 
›î©‹
 <=(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
);

97 
ölöe
 
boﬁ
 
›î©‹
 <(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
)

99  (
t1
.
m_tv
.
tv_£c
 < 
t2
.m_tv.tv_£cË|| (t1.m_tv.tv_£¯=t2.m_tv.tv_£¯&&Å1.m_tv.
tv_u£c
 <Å2.m_tv.tv_usec);

102 
ölöe
 
boﬁ
 
›î©‹
 ==(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
)

104  (
t1
.
m_tv
.
tv_£c
 =
t2
.m_tv.tv_£¯&&Å1.m_tv.
tv_u£c
 ==Å2.m_tv.tv_usec);

107 
ölöe
 
boﬁ
 
›î©‹
 <=(c⁄° 
TimeVÆ
& 
t1
, c⁄° TimeVÆ& 
t2
)

109  (
t1
 < 
t2
) || (t1 ==Å2);

	@/usr/include/libtaomee++/utils/config.hpp

1 #i‚de‡
LIBTAOMEEPP_CONFIG_HPP_


2 
	#LIBTAOMEEPP_CONFIG_HPP_


	)

5 #ifde‡
INLINE


6 #unde‡
INLINE


9 #i‚de‡
NONINLINE


10 
	#INLINE
 
ölöe


	)

12 
	#INLINE


	)

	@/usr/include/libtaomee++/utils/md5.h

1 #i‚de‡
MD5_H


2 
	#MD5_H


	)

4 
	~<°rög
>

5 
	~<f°ªam
>

8 
	tbyã
;

9 
	tuöt32
;

11 
usög
 
	g°d
::
°rög
;

12 
usög
 
	g°d
::
if°ªam
;

14 
«me•a˚
 
	gutûs
{

17 ˛as†
	cMD5
 {

18 
	gpublic
:

19 
MD5
();

20 
MD5
(c⁄° * 
öput
, 
size_t
 
Àngth
);

21 
MD5
(c⁄° 
°rög
& 
°r
);

22 
MD5
(
if°ªam
& 
ö
);

23 
upd©e
(c⁄° * 
öput
, 
size_t
 
Àngth
);

24 
upd©e
(c⁄° 
°rög
& 
°r
);

25 
upd©e
(
if°ªam
& 
ö
);

26 c⁄° 
byã
* 
dige°
();

27 
°rög
 
toSåög
();

28 
ª£t
();

30 
	g¥iv©e
:

31 
upd©e
(c⁄° 
byã
* 
öput
, 
size_t
 
Àngth
);

32 
föÆ
();

33 
å™sf‹m
(c⁄° 
byã
 
block
[64]);

34 
ícode
(c⁄° 
uöt32
* 
öput
, 
byã
* 
ouçut
, 
size_t
 
Àngth
);

35 
decode
(c⁄° 
byã
* 
öput
, 
uöt32
* 
ouçut
, 
size_t
 
Àngth
);

36 
°rög
 
byãsToHexSåög
(c⁄° 
byã
* 
öput
, 
size_t
 
Àngth
);

39 
MD5
(const MD5&);

40 
	gMD5
& 
	g›î©‹
=(c⁄° 
MD5
&);

42 
	g¥iv©e
:

43 
uöt32
 
_°©e
[4];

44 
uöt32
 
	g_cou¡
[2];

45 
byã
 
	g_buf„r
[64];

46 
byã
 
	g_dige°
[16];

47 
boﬁ
 
	g_föished
;

49 c⁄° 
byã
 
	gPADDING
[64];

50 c⁄° 
	gHEX
[16];

51 íum { 
	gBUFFER_SIZE
 = 1024 };

	@/usr/include/libtaomee++/utils/noncopyable.hpp

16 #i‚de‡
LIBTAOMEEPP_NONCOPYABLE_HPP_


17 
	#LIBTAOMEEPP_NONCOPYABLE_HPP_


	)

19 
«me•a˚
 
	gèomì
 {

24 ˛as†
	cN⁄c›yabÀ
 {

25 
	g¥Ÿe˘ed
:

26 
N⁄c›yabÀ
() { }

27 
¥iv©e
:

28 
N⁄c›yabÀ
(const Noncopyable&);

29 
	gN⁄c›yabÀ
& 
	g›î©‹
=(c⁄° 
N⁄c›yabÀ
&);

	@/usr/include/libtaomee++/utils/obj_registry.hpp

14 #i‚de‡
LIBTAOMEEPP_OBJECT_REGISTRY_HPP_


15 
	#LIBTAOMEEPP_OBJECT_REGISTRY_HPP_


	)

17 
	~<m≠
>

19 
	~<libèomì++/utûs/n⁄c›yabÀ.hµ
>

21 
«me•a˚
 
	gèomì
 {

26 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gObjTy≥
>

27 ˛as†
	cObje˘Regi°ry
 : 
public
 
N⁄c›yabÀ
 {

28 
¥iv©e
:

30 
°d
::
	tm≠
<
	tKeyTy≥
, 
	tObjTy≥
*> 
	tRegi°ryM≠Ty≥
;

32 
	gpublic
:

34 
ty≥«me
 
	tRegi°ryM≠Ty≥
::
	tsize_ty≥
 size_type;

36 
	gpublic
:

40 ~
Obje˘Regi°ry
();

51 
boﬁ
 
ö£π_obje˘
(c⁄° 
KeyTy≥
& 
key
, 
ObjTy≥
* 
obj
, boﬁ 
ovîride
 = 
Ál£
);

57 
ªmove_obje˘
(c⁄° 
KeyTy≥
& 
key
);

64 c⁄° 
ObjTy≥
* 
gë_obje˘
(c⁄° 
KeyTy≥
& 
key
) const;

70 
boﬁ
 
has_obje˘
(c⁄° 
KeyTy≥
& 
key
) const

71 {  (
	gm_ªg_objs
.
föd
(
key
Ë!
m_ªg_objs
.
íd
()); }

77 
size_ty≥
 
size
() const

78 {  
	gm_ªg_objs
.
size
(); }

80 
	g¥iv©e
:

82 
Regi°ryM≠Ty≥
 
m_ªg_objs
;

85 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gObjTy≥
>

86 
	gObje˘Regi°ry
<
	gKeyTy≥
, 
	gObjTy≥
>::

87 ~
	$Obje˘Regi°ry
()

89 
ty≥«me
 
Regi°ryM≠Ty≥
::
ôî©‹
 
ôî
 = 
m_ªg_objs
.
	`begö
(); iã∏!m_ªg_objs.
	`íd
(); ++iter) {

90 
dñëe
 
ôî
->
£c⁄d
;

92 
	}
}

94 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gObjTy≥
>

95 
boﬁ
 
	gObje˘Regi°ry
<
	gKeyTy≥
, 
	gObjTy≥
>::

96 
	$ö£π_obje˘
(c⁄° 
KeyTy≥
& 
key
, 
ObjTy≥
* 
obj
, 
boﬁ
 
ovîride
)

98 
ty≥«me
 
Regi°ryM≠Ty≥
::
ôî©‹
 
ôî
 = 
m_ªg_objs
.
	`föd
(
key
);

99 i‡(
ôî
 !
m_ªg_objs
.
	`íd
()) {

100 i‡(!
ovîride
) {

101  
Ál£
;

103 
dñëe
 
ôî
->
£c⁄d
;

106 
m_ªg_objs
[
key
] = 
obj
;

107  
åue
;

108 
	}
}

110 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gObjTy≥
>

111 
	gObje˘Regi°ry
<
	gKeyTy≥
, 
	gObjTy≥
>::

112 
	$ªmove_obje˘
(c⁄° 
KeyTy≥
& 
key
)

114 
ty≥«me
 
Regi°ryM≠Ty≥
::
ôî©‹
 
ôî
 = 
m_ªg_objs
.
	`föd
(
key
);

115 i‡(
ôî
 !
m_ªg_objs
.
	`íd
()) {

116 
dñëe
 
ôî
->
£c⁄d
;

117 
m_ªg_objs
.
	`îa£
(
ôî
);

119 
	}
}

121 
	gãm∂©e
<
ty≥«me
 
	gKeyTy≥
,Åy≥«mê
	gObjTy≥
>

122 c⁄° 
ObjTy≥
* 
	gObje˘Regi°ry
<
	gKeyTy≥
, 
	gObjTy≥
>::

123 
	$gë_obje˘
(c⁄° 
KeyTy≥
& 
key
) const

125 
ty≥«me
 
Regi°ryM≠Ty≥
::
c⁄°_ôî©‹
 
ôî
 = 
m_ªg_objs
.
	`föd
(
key
);

126  ((
ôî
 !
m_ªg_objs
.
	`íd
()Ë? iãr->
£c⁄d
 : 0);

127 
	}
}

	@/usr/include/libtaomee++/utils/strings.hpp

19 #i‚de‡ 
°rögs_INC


20 
	#°rögs_INC


	)

21 
	~<°rög
>

22 
	~<Æg‹ôhm
>

23 
	~<f°ªam
>

24 
	~<°döt.h
>

25 
	~<libèomì++/utûs/md5.h
>

26 
	~<libèomì++/utûs/t˝ù.h
>

28 
ölöe
 
boﬁ
 
	$i¢ewlöe
(c⁄° 
c
)

30  
c
 == '\r' || c == '\n';

31 
	}
}

35 
ölöe
 
boﬁ
 
	$p‹èbÀ_is•a˚
(c⁄° 
c
)

38 i‡(
°©ic_ˇ°
<>(
c
) >= 128)

39  
Ál£
;

40  
	`i¢ewlöe
(
c
Ë|| 
	`is•a˚
(c);

41 
	}
}

45 
ölöe
 
boﬁ
 
	$nŸ•a˚
(c⁄° 
c
)

47  !
	`p‹èbÀ_is•a˚
(
c
);

48 
	}
}

50 íum { 
	mREMOVE_EMPTY
 = 0x01,

51 
	mSTRIP_SPACES
 = 0x02

53 
ölöe
 
	g°d
::
°rög
 &
°rù
(
°d
::°rög &
°r
)

57 
°d
::
°rög
::
ôî©‹
 
ô
 = std::
föd_if
(
°r
.
begö
(), så.
íd
(), 
nŸ•a˚
);

58 i‡(
	gô
 =
°r
.
íd
())

59  
°r
;

61 
	g°r
.
îa£
(
°r
.
begö
(), 
ô
);

62 
	g°r
.
îa£
(
°d
::
föd_if
(
°r
.
rbegö
(), så.
ªnd
(), 
nŸ•a˚
).
ba£
(), så.
íd
());

64  
	g°r
;

67 
	~<ve˘‹
>

68 
ölöe
 
	g°d
::
ve˘‹
< 
°d
::
°rög
 > 
•lô
(°d::°rög c⁄° &
vÆ
, 
c
=',', 
Êags
=
REMOVE_EMPTY
|
STRIP_SPACES
)

70 
°d
::
ve˘‹
< std::
°rög
 > 
ªs
;

71 
	g°d
::
°rög
::
c⁄°_ôî©‹
 
i1
 = 
vÆ
.
begö
();

72 
	g°d
::
°rög
::
c⁄°_ôî©‹
 
i2
 = 
vÆ
.
begö
();

76 
	gi2
 !
vÆ
.
íd
()) {

77 i‡(*
i2
 =
c
) {

78 
°d
::
°rög
 
√w_vÆ
(
i1
, 
i2
);

79 i‡(
	gÊags
 & 
	gSTRIP_SPACES
)

80 
°rù
(
√w_vÆ
);

81 i‡(!(
	gÊags
 & 
	gREMOVE_EMPTY
Ë|| !
	g√w_vÆ
.
em±y
())

82 
	gªs
.
push_back
(
√w_vÆ
);

83 ++
	gi2
;

84 i‡(
	gÊags
 & 
	gSTRIP_SPACES
) {

85 
	gi2
 !
vÆ
.
íd
(Ë&& *
i2
 == ' ')

86 ++
i2
;

89 
	gi1
 = 
i2
;

91 ++
	gi2
;

95 
	g°d
::
°rög
 
√w_vÆ
(
i1
, 
i2
);

96 i‡(
	gÊags
 & 
	gSTRIP_SPACES
)

97 
°rù
(
√w_vÆ
);

98 i‡(!(
	gÊags
 & 
	gREMOVE_EMPTY
Ë|| !
	g√w_vÆ
.
em±y
()){

99 
	gªs
.
push_back
(
√w_vÆ
);

101  
	gªs
;

105 
ölöe
 * 
	$bö2hex
(* 
d°
, * 
§c
,
Àn
,
max_Àn
=0xFFFF)

107 
buf
[500*3+1];

108 i‡(
d°
==
NULL
){

109 
max_Àn
=500;

110 
d°
=
buf
;

113 
hex
;

114 
i
;

115 
di
;

116 i‡(
Àn
>
max_Àn
)Üen=max_len;

117 
i
=0;i<
Àn
;i++){

118 
hex
=(()
§c
[
i
])>>4;

119 
di
=
i
*3;

120 
d°
[
di
]=
hex
<10?'0'+hex:'A'-10 +hex ;

121 
hex
=(()
§c
[
i
])&0x0F;

122 
d°
[
di
+1]=
hex
<10?'0'+hex:'A'-10 +hex ;

123 
d°
[
di
+2]=' ';

125 
d°
[
Àn
*3]=0;

126  
d°
;

127 
	}
}

132 
ölöe
 
	$bö2hex_‰m
(* 
d°
, * 
§c
,
Àn
, 
is_uµî
 )

134 
uöt32_t
 
max_Àn
=
Àn
;

135 
buf
[500*2+1];

136 i‡(
d°
==
NULL
){

137 
max_Àn
=500;

138 
d°
=
buf
;

140 
ch_a
;

141 i‡(
is_uµî
!=0 ){

142 
ch_a
='A';

144 
ch_a
='a';

147 
hex
;

148 
i
;

149 
di
;

150 i‡(
Àn
>
max_Àn
)Üen=max_len;

151 
i
=0;i<
Àn
;i++){

152 
di
=
i
*2;

153 
hex
=(()
§c
[
i
])>>4;

154 
d°
[
di
]=
hex
<10?'0'+hex:
ch_a
-10 +hex ;

155 
hex
=(()
§c
[
i
])&0x0F;

156 
d°
[
di
+1]=
hex
<10?'0'+hex:
ch_a
-10 +hex ;

158 
d°
[
Àn
*2]=0;

159 
	}
}

161 
ölöe
 
	$gë_hex
(
ch
)

163 i‡(
ch
>='0' && ch<='9')  ch-'0';

164 i‡(
ch
>='A' && ch<='F')  10+ch-'A';

165 i‡(
ch
>='a' && ch<='f')  10+ch-'a';

167 
	}
}

169 
ölöe
 
	$hex2bö
(* 
d°
, c⁄° * 
§c
,
Àn
)

171 
i
=0;i<
Àn
;i++){

172 
d°
[
i
]=()((
	`gë_hex
(
§c
[i*2])<<4)+get_hex(src[i*2+1]));

174 
	}
}

175 
	~<°rög.h
>

177 
ölöe
 c⁄° * 
	$GëCompûedD©e
–c⁄° * 
_d©e
 )

179 
_buf
[9] = {0};

180 if(
_buf
[0] == 0)

182 c⁄° * 
_m⁄th
[] =

187 
	`mem˝y
(
_buf
, 
_d©e
 + 7, 4);

188 
	`mem˝y
(
_buf
+6, 
_d©e
 + 4, 2);

189 
m⁄th
 = 0;

190 
i
 = 0; i < 12; i++)

192 if(
	`memcmp
(
_m⁄th
[
i
], 
_d©e
, 3) == 0)

194 
m⁄th
 = 
i
+1;

198 
_buf
[4] = 
m⁄th
 / 10 % 10 + '0';

199 
_buf
[5] = 
m⁄th
 % 10 + '0';

201  
_buf
;

202 
	}
}

205 
ölöe
 
	g°d
::
°rög
 
fûe_li°_md5
–
°d
::
ve˘‹
<°d::°rög> 
fûe_«me_li°
)

207 
utûs
::
MD5
 
md5
;

208 
	gmd
[16];

209 
	gÀngth
,
	gi
;

210 
	gbuf„r
[1024];

211 
	gmd5
.
ª£t
();

212 
uöt32_t
 
	gi
=0;i<
	gfûe_«me_li°
.
size
();i++ ) {

213 
	g°d
::
if°ªam
 
fö
(
fûe_«me_li°
[
i
].
c_°r
(),
°d
::
ios
::
ö
|°d::ios::
bö¨y
);

214 i‡(
	gfö
.
is_›í
()){

215 !
	gfö
.
eof
()){

216 
	gfö
.
ªad
(
buf„r
, 1024);

217 
	gÀngth
 = 
fö
.
gcou¡
();

218 i‡(
	gÀngth
 > 0) {

219 
	gmd5
.
upd©e
(
buf„r
, 
Àngth
);

226  
	gmd5
.
toSåög
();

233 
ölöe
 
	g°d
::
°rög
 
gë_vîsi⁄_°r
 ( 
°d
::°rög 
vîsi⁄_°r
 ,°d::
ve˘‹
<°d::°rög> 
fûe_«me_li°
,
boﬁ
 
is_out_ù
 =
åue
 ,
uöt32_t
 
ù_ty≥_Êag
 =0x01 )

235 i‡(
is_out_ù
){

236  
°d
::
°rög
("ù:")+
gë_ù_ex
(
ù_ty≥_Êag
 )+ std::°rög("|VERSION:")+
vîsi⁄_°r
+"|compûed:"+
GëCompûedD©e
(
__DATE__
)

237 +"-"
__TIME__
"|md5:"+
fûe_li°_md5
(
fûe_«me_li°
) ;

239  
	g°d
::
°rög
("VERSION:")+
vîsi⁄_°r
+"|compûed:"+
GëCompûedD©e
(
__DATE__
)

240 +"-"
__TIME__
"|md5:"+
fûe_li°_md5
(
fûe_«me_li°
) ;

246 
ölöe
 c⁄° * 
gë_vîsi⁄_£nd_buf
 ( 
°d
::
°rög
 
vîsi⁄_°r
 ,°d::
ve˘‹
<°d::°rög> 
fûe_«me_li°
,
boﬁ
 
is_out_ù
 =
åue
 ,
uöt32_t
 
ù_ty≥_Êag
 =0x01 )

248 
vîsi⁄
[256];

249 
mem£t
(
vîsi⁄
,0,(version ));

250 *((
	guöt32_t
*)
	gvîsi⁄
)=256;

251 
°∫˝y
(
vîsi⁄
+18,

252 
gë_vîsi⁄_°r
(
vîsi⁄_°r
,
fûe_«me_li°
 ,
is_out_ù
,
ù_ty≥_Êag
 ).
c_°r
(),

254  
	gvîsi⁄
;

	@/usr/include/libtaomee++/utils/tcpip.h

1 #i‚de‡
_TCPIP_PP_H_


2 
	#_TCPIP_PP_H_


	)

3 
	~<time.h
>

4 
	~<sys/sockë.h
>

5 
	~<¨∑/öë.h
>

6 
	~<√töë/ö.h
>

7 
	~<°rög.h
>

8 
	~<°dlib.h
>

9 
	~<libèomì++/¥Ÿo/¥Ÿo_ba£.h
>

11 
	~<uni°d.h
>

12 
	s°ru_ù_p‹t
 {

13 
	maddr
[128];

14 
uöt32_t
 
	mp‹t
;

16 
ölöe
 
	$u≈ack_addr
(c⁄° * 
addr
, 
°ru_ù_p‹t
 *
p_out
 )

18 i‡(
addr
==
NULL
 )  -1;

19 c⁄° * 
p
=
addr
;

20 *
p
!='\0' && *p!=':') ++p;

22 i‡(*
p
=='\0' )  -1;

23 
uöt32_t
 
Àn
=
p
-
addr
;

24 i‡(
Àn
>(
p_out
->
addr
)-1)  -1 ;

26 
	`°∫˝y
(
p_out
->
addr
,áddr,
Àn
);

27 
p_out
->
addr
[
Àn
]='\0';

28 
p_out
->
p‹t
=
	`©ﬁ
–
p
+1 );

30 
	}
}

33 
›í_sockë
 (c⁄° *
svrù
, 
u_sh‹t
 
svΩ‹t
, 
uöt32_t
 
timeout
=3 );

34 
›í_sockë_udp
 (c⁄° * 
svrù
, 
u_sh‹t
 
svΩ‹t
,
sockaddr_ö
 *
£rvaddr
);

35 
√t_io
(
sockëfd
, c⁄° *
¢dbuf
, 
¢dÀn
, ** 
rcvbuf
, *
rcvÀn
);

36 
√t_io_no_ªtu∫
(
sockfd
, c⁄° *
¢dbuf
, 
¢dÀn
 );

38 ˛as†
	cCudp_£ndî
{

39 
	mpublic
:

40 
	$Cudp_£ndî
(){ 
fd
=-1; 
	`mem£t
(&
addr
,0,(addr)); };

43 
	$Cudp_£ndî
(c⁄° *
a_ùp‹t
 ){

44 
°ru_ù_p‹t
 
ù_p‹t
;

45 i‡–
	`u≈ack_addr
(
a_ùp‹t
,&
ù_p‹t
 )==0 ){

46 
	`öô
(
ù_p‹t
.
addr
 ,ù_p‹t.
p‹t
);

48 
fd
=-1; 
	`mem£t
(&
addr
,0,(addr));

50 
	}
};

51 
	$Cudp_£ndî
(*
a_ù
,
uöt16_t
 
a_p‹t
 ){

52 
	`öô
(
a_ù
,
a_p‹t
);

53 
	}
};

56 
ölöe
 
	$öô
(*
a_ù
 , 
uöt16_t
 
a_p‹t
 ){

57 
	`°r˝y
(
this
->
ù
,
a_ù
);

58 
this
->
p‹t
=
a_p‹t
;

59 
this
->
fd

	`›í_sockë_udp
—his->
ù
,Åhis->
p‹t
, &—his->
addr
));

60 
	}
}

63 
ölöe
 
boﬁ
 
	$£nd
(c⁄° *
buf
, 
Àn
){

64 
£ndÀn
=
	`£ndto
(
this
->
fd
, 
buf
, 
Àn
, 0,

65 (c⁄° 
sockaddr
 *)&(
this
->
addr
), (this->addr));

66 i‡(
£ndÀn
!=
Àn
){

67 
this
->
fd

	`›í_sockë_udp
—his->
ù
,Åhis->
p‹t
, &—his->
addr
));

68 i‡(
this
->
fd
!=-1){

69 
£ndÀn
=
	`£ndto
(
this
->
fd
, 
buf
, 
Àn
, 0,

70 (c⁄° 
sockaddr
 *)&(
this
->
addr
), (this->addr));

73  
£ndÀn
==
Àn
;

74 
	}
}

77 
ölöe
 
boﬁ
 
	$£nd_msg
–*
hód_buf
, 
Cmesßge
 *
msg
=
NULL
 )

79 
uöt32_t
 
hód_Àn
=*(uöt32_t* )
hód_buf
;

80 i‡(
msg
==
NULL
) {

81  
this
->
	`£nd
(
hód_buf
,
hód_Àn
 );

83 
byã_¨øy_t
 
ba
;

84 
ba
.
	`öô_po°i⁄
();

85 
ba
.
	`wrôe_buf
(
hód_buf
,
hód_Àn
);

86 
msg
->
	`wrôe_to_buf
(
ba
);

87 
uöt32_t
 
tŸÆ_size
=
ba
.
	`gë_po°i⁄
();

88 *(
uöt32_t
*)(
ba
.
	`gë_buf
())=
tŸÆ_size
;

89  
this
->
	`£nd
(
ba
.
	`gë_buf
(),
tŸÆ_size
);

91 
	}
}

93 
ölöe
 
boﬁ
 
	$£nd_db_msg
(
uöt32_t
 
u£rid
,
uöt16_t
 
cmdid
,uöt32_à
¥Ÿoid
=0, 
Cmesßge
 *
msg
=
NULL
 )

96 
uöt32_t
 
¥Ÿo_Àngth
;

97 
uöt32_t
 
¥Ÿo_id
;

98 
uöt16_t
 
cmd_id
;

99 
öt32_t
 
ªsu…
;

100 
uöt32_t
 
id
;

101 } 
	`__©åibuã__
((
∑cked
)Ë
ph
;

102 
ph
.
¥Ÿo_Àngth
=(ph);

103 
ph
.
¥Ÿo_id
=
¥Ÿoid
;

104 
ph
.
id
=
u£rid
;

105 
ph
.
cmd_id
=
cmdid
;

106 
ph
.
ªsu…
=0;

107  
this
->
	`£nd_msg
((*)&
ph
,
msg
 );

109 
	}
}

113 
ölöe
 
	$˛o£_sockë_udp
(){

114  
	`˛o£
(
fd
);

115 
	}
}

118 
ölöe
 c⁄° * 
	$gë_ù
(){

119  
ù
;

120 
	}
}

123 
ölöe
 
uöt16_t
 
	$gë_p‹t
(){

124  
p‹t
;

125 
	}
}

128 
ölöe
 
	$gë_fd
(){

129  
fd
;

130 
	}
}

132 
	g¥iv©e
:

133 
ù
[32];

134 
uöt16_t
 
	gp‹t
;

135 
	gfd
;

136 
sockaddr_ö
 
	gaddr
;

140 ˛as†
	cCt˝
{

141 
	mpublic
:

142 
	$Ct˝
(){ 
fd_
=-1; };

145 
	$Ct˝
(c⁄° *
a_ùp‹t
 ,
uöt32_t
 
£nd_ªcv_timeout
=1, uöt32_à
ªc⁄√˘_öãrvÆ
=10){

146 
°ru_ù_p‹t
 
ù_p‹t
;

147 i‡–
	`u≈ack_addr
(
a_ùp‹t
,&
ù_p‹t
 )==0){

148 
this
->
fd_
=-1;

149 
	`öô
–
ù_p‹t
.
addr
 ,ù_p‹t.
p‹t
,
£nd_ªcv_timeout
,
ªc⁄√˘_öãrvÆ
 );

151 
this
->
fd_
=-1;

153 
	}
};

155 
	$Ct˝
(c⁄° *
ù
,
p‹t
,
uöt32_t
 
£nd_ªcv_timeout
=1, uöt32_à
ªc⁄√˘_öãrvÆ
=10 ){

156 
this
->
fd_
=-1;

157 
	`öô
–
ù
,
p‹t
,
£nd_ªcv_timeout
,
ªc⁄√˘_öãrvÆ
 );

158 
	}
};

159 
	gvútuÆ
 ~
	$Ct˝
(){

160 i‡–
this
->
fd_
 !=-1){

161 
	`˛o£
(
this
->
fd_
);

163 
	}
};

165 
	$öô
(c⁄° *
ù
 ,
p‹t
,
uöt32_t
 
£nd_ªcv_timeout
,uöt32_à
ªc⁄√˘_öãrvÆ
 ){

166 i‡(
ù
!=
NULL
){

167 
	`°∫˝y
(
this
->
ù_
,
ù
,(this->ip_));

169 
	`mem£t
(
this
->
ù_
,'\0',(this->ip_) );

171 
this
->
ù_
[(this->ip_)]='\0';

172 
this
->
p‹t_
=
p‹t
;

173 
this
->
£nd_ªcv_timeout_
=
£nd_ªcv_timeout
;

174 
this
->
ªc⁄√˘_öãrvÆ_
=
ªc⁄√˘_öãrvÆ
;

175 
this
->
œ°_Áû_c⁄√˘_time_
=0;

176 
this
->
	`ªc⁄√˘
();

177 
	}
}

179 
	$ªc⁄√˘
()

181 
uöt32_t
 
now
=
	`time
(
NULL
);

182 i‡(
this
->
fd_
!=-1){

183 
	`˛o£
(
this
->
fd_
);

184 
this
->
fd_
=-1;

187 i‡(
now
-
this
->
œ°_Áû_c⁄√˘_time_
<this->
ªc⁄√˘_öãrvÆ_
){

189  
this
->
fd_
;

192 
this
->
fd_
=
	`›í_sockë
—his->
ù_
,Åhis->
p‹t_
,Åhis->
£nd_ªcv_timeout_
);

193 i‡(
this
->
fd_
==-1){

194 
this
->
œ°_Áû_c⁄√˘_time_
=
	`time
(
NULL
);

196  
this
->
fd_
;

197 
	}
}

199 
	$do_√t_io
–c⁄° *
¢dbuf
, c⁄° 
¢dÀn
, **
rcvbuf
, *
rcvÀn
)

201 
ªt
;

202 
ªt
=
	`√t_io
(
this
->
fd_
,
¢dbuf
,
¢dÀn
,
rcvbuf
,
rcvÀn
);

203 i‡–
ªt
==1003 ) {

204 i‡(
this
->
	`ªc⁄√˘
()==-1){

207 
ªt
=
	`√t_io
(
this
->
fd_
,
¢dbuf
,
¢dÀn
,
rcvbuf
,
rcvÀn
);

208 i‡(
ªt
==1003){

209 
this
->
	`ªc⁄√˘
();

211  
ªt
;

214  
ªt
;

215 
	}
}

216 
ölöe
 c⁄° * 
	$gë_ù
(){

217  
ù_
;

218 
	}
}

220 
ölöe
 
uöt16_t
 
	$gë_p‹t
(){

221  
p‹t_
;

222 
	}
}

226 
	g¥iv©e
:

227 
ù_
[16];

228 
	gp‹t_
;

229 
	gfd_
;

230 
uöt32_t
 
	g£nd_ªcv_timeout_
;

231 
uöt32_t
 
	gªc⁄√˘_öãrvÆ_
;

232 
uöt32_t
 
	gœ°_Áû_c⁄√˘_time_
;

241 c⁄° * 
gë_ù_ex
 (c⁄° 
ù_ty≥
 );

243 
	~<sys/sockë.h
>

244 
	~<√töë/ö.h
>

245 
	~<¨∑/öë.h
>

247 
ölöe
 
uöt32_t
 
	$ù2l⁄g
(c⁄° *
ù
) {

248  
	`öë_addr
(
ù
);

249 
	}
}

251 
ölöe
 * 
	$l⁄g2ù
(
uöt32_t
 
ù_öt
 ) {

252 
ö_addr
 
ö
;

253 
ö
.
s_addr
=
ù_öt
;

254  
	`öë_¡ﬂ
–
ö
) ;

255 
	}
}

	@/usr/include/libtaomee++/utils/utilities.hpp

14 #i‚de‡
LIBTAOMEEPP_UTILITIES_HPP_


15 
	#LIBTAOMEEPP_UTILITIES_HPP_


	)

17 
	~<°rög
>

19 
«me•a˚
 
	gèomì
 {

27 
ölöe
 
boﬁ


28 
check_fûíame_ext
(c⁄° 
°d
::
°rög
& 
fûíame
, c⁄° std::°rög& 
ext
)

30 
°d
::
°rög
::
size_ty≥
 
loc
 = 
fûíame
.
rföd
(
ext
);

32  ((
	gloc
 !
°d
::
°rög
::
≈os
Ë&& ((
fûíame
.
size
(Ë- 
loc
Ë=
ext
.size()));

39 
ölöe
 const *

40 
libèomìµ_gë_vîsi⁄
()

	@/usr/include/libtaomee++/verification_image/verification_image.hpp

14 #i‚de‡
LIBTAOMEEPP_VERIFICATION_IMAGE_HPP_


15 
	#LIBTAOMEEPP_VERIFICATION_IMAGE_HPP_


	)

17 
	~<°dex˚±
>

18 
	~<°rög
>

19 
	~<ve˘‹
>

22 
	~<gd.h
>

26 
«me•a˚
 
èomì
 {

31 ˛as†
	cVîifImgEº‹
 : 
public
 
°d
::
logic_îr‹
 {

32 
public
:

33 
ex∂icô
 
VîifImgEº‹
(c⁄° 
°d
::
°rög
& 
îrmsg
Ë: std::
logic_îr‹
(errmsg)

40 ˛as†
	cVîifiˇti⁄Image
 {

41 
¥iv©e
:

42 
‰õnd
 
˛ass
 
Vîifiˇti⁄ImageGíî©‹
;

44 
¥iv©e
:

45 
ex∂icô
 
Vîifiˇti⁄Image
(c⁄° * 
code
, c⁄° * 
img
, 
size
)

46 : 
m_vîif_code
(
code
), 
m_img
(
img
, 
size
)

49 
public
:

53 c⁄° 
°d
::
°rög
& 
gë_vîif_code
() const

54 {  
m_vîif_code
; }

58 c⁄° 
°d
::
°rög
& 
gë_image
() const

59 {  
m_img
; }

61 
¥iv©e
:

62 
°d
::
°rög
 
m_vîif_code
;

63 
°d
::
°rög
 
m_img
;

69 ˛as†
	cVîifiˇti⁄ImageGíî©‹
 {

70 
public
:

80 
Vîifiˇti⁄ImageGíî©‹
(c⁄° * 
f⁄t_dú
, 
Àngth
 = 79, 
width
 = 28, 
f⁄tsize
 = 20);

89 
Vîifiˇti⁄Image
 
gíî©e
(
nch¨s
, 
boﬁ
 
is_ósy
);

91 
¥iv©e
:

93 
boﬁ
 
is_vÆid_âf
(c⁄° * 
fûíame
);

95 
sim∂e_noisy
(
gdImagePå
 
im
, 
cﬁ‹
);

97 
com∂iˇãd_noisy
(
gdImagePå
 
im
);

99 
¥iv©e
:

100 c⁄° 
sc_vîif_code_num
 = 9;

102 
¥iv©e
:

103 c⁄° 
cm_Àngth
;

104 c⁄° 
cm_width
;

105 c⁄° 
cm_f⁄tsize
;

107 
¥iv©e
:

108 
°d
::
ve˘‹
<°d::
°rög
> 
m_f⁄ç©h
;

110 
¥iv©e
:

111 c⁄° 
sm_sim∂e_mëa_ch¨s
[];

113 c⁄° 
sm_mëa_ch¨s
[];

115 c⁄° 
sm_thö_mëa_ch¨s
[];

117 c⁄° 
sm_™gÀs
[];

	@/usr/include/libtaomee/atomic.h

14 #i‚de‡
LIBTAOMEE_ARCH_I386_ATOMIC_


15 
	#LIBTAOMEE_ARCH_I386_ATOMIC_


	)

17 
	#LOCK
 "lock ; "

	)

26 vﬁ©ûê
	mcou¡î
;

27 } 
	t©omic_t
;

33 
	#©omic_ªad
(
v
Ë((v)->
cou¡î
)

	)

40 
	#©omic_£t
(
v
,
i
Ë(((v)->
cou¡î
Ë(i))

	)

47 
__ölöe__
 

48 
	$©omic_add
 (
i
, 
©omic_t
 * 
v
)

50 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "add»%1,%0":"=m" (
v
->
cou¡î
):"ú" (
i
),

51 "m" (
v
->
cou¡î
));

52 
	}
}

59 
__ölöe__
 

60 
	$©omic_sub
 (
i
, 
©omic_t
 * 
v
)

62 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "sub»%1,%0":"=m" (
v
->
cou¡î
):"ú" (
i
),

63 "m" (
v
->
cou¡î
));

64 
	}
}

74 
__ölöe__
 

75 
	$©omic_sub_™d_ã°
 (
i
, 
©omic_t
 * 
v
)

77 
c
;

79 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "sub»%2,%0; sëê%1":"=m" (
v
->
cou¡î
),

80 "=qm" (
c
):"ú" (
i
), "m" (
v
->
cou¡î
):"memory");

81  
c
;

82 
	}
}

88 
__ölöe__
 

89 
	$©omic_öc
 (
©omic_t
 * 
v
)

91 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "ö˛ %0":"=m" (
v
->
cou¡î
):"m" (v->counter));

92 
	}
}

98 
__ölöe__
 

99 
	$©omic_dec
 (
©omic_t
 * 
v
)

101 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "de˛ %0":"=m" (
v
->
cou¡î
):"m" (v->counter));

102 
	}
}

111 
__ölöe__
 

112 
	$©omic_dec_™d_ã°
 (
©omic_t
 * 
v
)

114 
c
;

116 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "de˛ %0; sëê%1":"=m" (
v
->
cou¡î
),

117 "=qm" (
c
):"m" (
v
->
cou¡î
):"memory");

118  
c
 != 0;

119 
	}
}

128 
__ölöe__
 

129 
	$©omic_öc_™d_ã°
 (
©omic_t
 * 
v
)

131 
c
;

133 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "ö˛ %0; sëê%1":"=m" (
v
->
cou¡î
),

134 "=qm" (
c
):"m" (
v
->
cou¡î
):"memory");

135  
c
 != 0;

136 
	}
}

146 
__ölöe__
 

147 
	$©omic_add_√g©ive
 (
i
, 
©omic_t
 * 
v
)

149 
c
;

151 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "add»%2,%0; së†%1":"=m" (
v
->
cou¡î
),

152 "=qm" (
c
):"ú" (
i
), "m" (
v
->
cou¡î
):"memory");

153  
c
;

154 
	}
}

161 
__ölöe__
 

162 
	$©omic_add_ªtu∫
 (
i
, 
©omic_t
 * 
v
)

164 
__i
;

165 #ifde‡
CONFIG_M386


166 i‡(
	`u∆ikñy
 (
boŸ_˝u_d©a
.
x86
 == 3))

167 
no_xadd
;

170 
__i
 = 
i
;

171 
__asm__
 
	`__vﬁ©ûe__
 (
LOCK
 "xadd»%0, %1;":"Ù" (
i
):"m" (
v
->
cou¡î
),

172 "0" (
i
));

173  
i
 + 
__i
;

175 #ifde‡
CONFIG_M386


176 
no_xadd
:

177 
	`loˇl_úq_dißbÀ
 ();

178 
__i
 = 
	`©omic_ªad
 (
v
);

179 
	`©omic_£t
 (
v
, 
i
 + 
__i
);

180 
	`loˇl_úq_íabÀ
 ();

181  
i
 + 
__i
;

183 
	}
}

190 
__ölöe__
 

191 
	$©omic_sub_ªtu∫
 (
i
, 
©omic_t
 * 
v
)

193  
	`©omic_add_ªtu∫
 (-
i
, 
v
);

194 
	}
}

200 
	#©omic_öc_ªtu∫
(
v
Ë(
	`©omic_add_ªtu∫
(1,v))

	)

205 
	#©omic_dec_ªtu∫
(
v
Ë(
	`©omic_sub_ªtu∫
(1,v))

	)

208 
	#©omic_˛ór_mask
(
mask
, 
addr
) \

209 
__asm__
 
	`__vﬁ©ûe__
(
LOCK
 "andl %0,%1" \

210 : : "r" (~(
mask
)),"m" (*
addr
Ë: "mem‹y")

	)

212 
	#©omic_£t_mask
(
mask
, 
addr
) \

213 
__asm__
 
	`__vﬁ©ûe__
(
LOCK
 "orl %0,%1" \

214 : : "r" (
mask
),"m" (*(
addr
)Ë: "mem‹y")

	)

	@/usr/include/libtaomee/attr_api/attr_api.h

1 #i‚de‡
__ATTR_API_H__


2 
	#__ATTR_API_H__


	)

4 
	~<°döt.h
>

6 
	#ARRAY_SIZE
(
¨r
Ë(◊ºË/ (◊º)[0]))

	)

9 
	#__CAT_TOKEN
(
t1
,
t2
Ët1##
	)
t2

10 
	#CAT_TOKEN
(
t1
,
t2
Ë
	`__CAT_TOKEN
—1,t2)

	)

11 
	#COMPILE_ASSERT
(
x
) \

12 íum { 
	`CAT_TOKEN
 (
comp_as£π_©_löe_
, 
__LINE__
Ë1 / !!(
x
Ë};

	)

16 
	#ATTR_LIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

17 
	#ATTR_UNLIKELY
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

24 
	#SHM_KEY_ATTR
 (1000000Ë

	)

26 
	#MAX_ATTR_HT_ROW_NUM
 (100)

	)

28 
	#MAX_HT_NODES_NUM
 (1000000)

	)

33 
	#HTAB_LOOKUP
(
_hèb
, 
_©å
) \

34 
	`hash_èbÀ_lookup_node
(
_hèb
, (*)&
_©å
, _©å)

	)

36 
	#HTAB_LOOKUP_EX
(
_hèb
, 
_©å
, 
_exi°
) \

37 
	`hash_èbÀ_lookup_node_ex
(
_hèb
, (*)&
em±y_key
, (*)(&
_©å
), _©å, &
_exi°
)

	)

39 
	#ATTR_UPDATE_METHOD_INCR
 (0)

	)

40 
	#ATTR_UPDATE_METHOD_SET
 (1)

	)

43 
	s©å_node_t
 {

45 
uöt64_t
 
	mkey
;

47 
uöt64_t
 
	m©å
;

49 
öt64_t
 
	mvÆ
;

58 
upd©e_©å
(
uöt64_t
 
©å
, 
öt64_t
 
vÆ
, 
mëhod
, *
exi°
);

66 
gë_£lf_©å
(
uöt64_t
 
©å
, 
öt64_t
 *
vÆ
, *
exi°
);

68 
gë_©å
(
uöt64_t
 
key
, uöt64_à
©å
, 
öt64_t
 *
vÆ
, *
exi°
);

69 
gë_£lf_©å
(
uöt64_t
 
©å
, 
öt64_t
 *
vÆ
, *
exi°
);

71 
	#INCR_ATTR
(
_©å
, 
_vÆ
) \

72 
	`upd©e_©å
(
_©å
, 
_vÆ
, 
ATTR_UPDATE_METHOD_INCR
, 
NULL
)

	)

74 
	#SET_ATTR
(
_©å
, 
_vÆ
) \

75 
	`upd©e_©å
(
_©å
, 
_vÆ
, 
ATTR_UPDATE_METHOD_SET
, 
NULL
)

	)

77 
	#GET_SELF_ATTR
(
_©å
, 
_vÆ
) \

78 
	`gë_£lf_©å
(
_©å
, &
_vÆ
, 
NULL
)

	)

80 
	#INCR_ATTR_EXIST
(
_©å
, 
_vÆ
, 
_exi°
) \

81 
	`upd©e_©å
(
_©å
, 
_vÆ
, 
ATTR_UPDATE_METHOD_INCR
, &
_exi°
)

	)

83 
	#SET_ATTR_EXIST
(
_©å
, 
_vÆ
, 
_exi°
) \

84 
	`upd©e_©å
(
_©å
, 
_vÆ
, 
ATTR_UPDATE_METHOD_SET
, &
_exi°
)

	)

86 
	#GET_SELF_ATTR_EXIST
(
_©å
, 
_vÆ
, 
_exi°
) \

87 
	`gë_£lf_©å
(
_©å
, &
_vÆ
, &
_exi°
)

	)

	@/usr/include/libtaomee/bitmanip/bitmanip.h

14 #i‚de‡
LIBTAOMEE_BITMANIP_H_


15 
	#LIBTAOMEE_BITMANIP_H_


	)

18 
	~<as£π.h
>

19 
	~<°ddef.h
>

21 
	~<°döt.h
>

28 
ölöe
 

29 
	$nbôs_⁄8
(
uöt8_t
 
vÆ
)

31 
vÆ
 = ((val & 0xAA) >> 1) + (val & 0x55);

32 
vÆ
 = ((val & 0xCC) >> 2) + (val & 0x33);

33 
vÆ
 = ((val & 0xF0) >> 4) + (val & 0x0F);

35  
vÆ
;

36 
	}
}

39 
	#NBITS_ON
(
vÆ_
, 
∆o›s_
, 
˙t_
Ë\

	)

41 
	gi
 = 0; \

42 ; 
	gi
 !(
∆o›s_
); ++i) { \

43 (
	g˙t_
Ë+
nbôs_⁄8
–*(((
uöt8_t
*)&(
vÆ_
)Ë+ 
i
) ); \

52 
ölöe
 

53 
	$nbôs_⁄16
(
uöt16_t
 
vÆ
)

55 
˙t
 = 0;

56 
	`NBITS_ON
(
vÆ
, 2, 
˙t
);

58  
˙t
;

59 
	}
}

66 
ölöe
 

67 
	$nbôs_⁄32
(
uöt32_t
 
vÆ
)

69 
˙t
 = 0;

70 
	`NBITS_ON
(
vÆ
, 4, 
˙t
);

72  
˙t
;

73 
	}
}

80 
ölöe
 

81 
	$nbôs_⁄64
(
uöt64_t
 
vÆ
)

83 
˙t
 = 0;

84 
	`NBITS_ON
(
vÆ
, 8, 
˙t
);

86  
˙t
;

87 
	}
}

96 
ölöe
 

97 
	$£t_bô_⁄
(
uöt8_t
* 
¨r
, 
size_t
 
Àn
, 
pos
)

99 
	`as£π
(
pos
 > 0);

101 
pos
 -= 1;

103 
i
 = 
pos
 / 8;

104 
	`as£π
(
i
 < 
Àn
);

106 
¨r
[
i
] |(1u << (
pos
 % 8));

107 
	}
}

115 
ölöe
 
uöt32_t


116 
	$£t_bô_⁄32
(
uöt32_t
 
vÆ
, 
pos
)

118 
	`as£π
(
pos
 > 0);

120  (
vÆ
 | (1u << (
pos
 - 1)));

121 
	}
}

129 
ölöe
 
uöt64_t


130 
	$£t_bô_⁄64
(
uöt64_t
 
vÆ
, 
pos
)

132 
	`as£π
(
pos
 > 0);

134  (
vÆ
 | (1LLu << (
pos
 - 1)));

135 
	}
}

144 
ölöe
 

145 
	$£t_bô_off
(
uöt8_t
* 
¨r
, 
size_t
 
Àn
, 
pos
)

147 
	`as£π
(
pos
 > 0);

149 
pos
 -= 1;

151 
i
 = 
pos
 / 8;

152 
	`as£π
(
i
 < 
Àn
);

154 
¨r
[
i
] &~(1u << (
pos
 % 8));

155 
	}
}

163 
ölöe
 
uöt32_t


164 
	$£t_bô_off32
(
uöt32_t
 
vÆ
, 
pos
)

166 
	`as£π
(
pos
 > 0);

168  (
vÆ
 & ~(1u << (
pos
 - 1)));

169 
	}
}

177 
ölöe
 
uöt64_t


178 
	$£t_bô_off64
(
uöt64_t
 
vÆ
, 
pos
)

180 
	`as£π
(
pos
 > 0);

182  (
vÆ
 & ~(1LLu << (
pos
 - 1)));

183 
	}
}

192 
ölöe
 

193 
	$ã°_bô_⁄
(
uöt8_t
* 
¨r
, 
size_t
 
Àn
, 
pos
)

195 
	`as£π
(
pos
 > 0);

197 
pos
 -= 1;

199 
i
 = 
pos
 / 8;

200 
	`as£π
(
i
 < 
Àn
);

202  !!(
¨r
[
i
] & (1u << (
pos
 % 8)));

203 
	}
}

211 
ölöe
 

212 
	$ã°_bô_⁄32
(
uöt32_t
 
vÆ
, 
pos
)

214 
	`as£π
(
pos
 > 0);

216  !!(
vÆ
 & (1u << (
pos
 - 1)));

217 
	}
}

225 
ölöe
 

226 
	$ã°_bô_⁄64
(
uöt64_t
 
vÆ
, 
pos
)

228 
	`as£π
(
pos
 > 0);

230  !!(
vÆ
 & (1LLu << (
pos
 - 1)));

231 
	}
}

	@/usr/include/libtaomee/conf_parser/config.h

19 #i‚de‡
LIBTAOMEE_CONFIG_H_


20 
	#LIBTAOMEE_CONFIG_H_


	)

22 
	~<libèomì/lua/lua.h
>

23 
	~<libèomì/lua/œuxlib.h
>

24 
	~<libèomì/lua/luÆib.h
>

33 
c⁄fig_öô
(c⁄° * 
fûe_«me
);

42 
c⁄fig_upd©e
(c⁄° * 
fûe_«me
);

50 
c⁄fig_exô
();

53 
mm≠_c⁄fig_fûe
(c⁄° * 
fûe_«me
, ** 
buf
);

55 
°r_•lô
(c⁄° * 
ifs
, * 
löe
, * 
fõld
[], 
n
);

65 
c⁄fig_gë_ötvÆ
(c⁄° * 
key
, 
def
);

72 * 
c⁄fig_gë_°rvÆ
(c⁄° * 
key
);

81 
c⁄fig_upd©e_vÆue
(c⁄° * 
key
, c⁄° * 
vÆ
);

91 
c⁄fig_≠≥nd_vÆue
(c⁄° * 
key
, c⁄° * 
vÆ
);

98 
c⁄fig_dump_gë_cou¡
();

104 
c⁄fig_dump_lo›_ª£t
();

111 
c⁄fig_dump_lo›_√xt
(**
key
, **
vÆ
);

113 
lua_Sèã
* 
£t_c⁄fig_u£_lua
–
is_£t
 );

	@/usr/include/libtaomee/crypt/qdes.h

14 #i‚de‡
LIBTAOMEE_QDES_H_


15 
	#LIBTAOMEE_QDES_H_


	)

17 #ifde‡
__˝lu•lus


30 
des_í¸y±
(c⁄° * 
key
, c⁄° * 
s_ãxt
, * 
d_ãxt
);

41 
des_de¸y±
(c⁄° * 
key
, c⁄° * 
s_ãxt
, * 
d_ãxt
);

53 
des_í¸y±_n
(c⁄° * 
key
, c⁄° * 
s_ãxt
, * 
d_ãxt
, 
n
);

65 
des_de¸y±_n
(c⁄° * 
key
, c⁄° * 
s_ãxt
, * 
d_ãxt
, 
n
);

67 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/dataformatter/bin_str.h

16 #i‚de‡
TAOMEE_HEX_STR_H_


17 
	#TAOMEE_HEX_STR_H_


	)

19 
	~<˘y≥.h
>

20 
	~<°döt.h
>

21 
	~<°rög.h
>

31 
ölöe
 
uöt8_t


32 
	$ch¨2hex
(
fú°
, 
£c⁄d
)

34 
fú°
 = 
	`touµî
(first);

35 
£c⁄d
 = 
	`touµî
(second);

37 
uöt8_t
 
digô
 = (
fú°
 >= 'A' ? (first - 'A') + 10 : (first - '0')) * 16;

38 
digô
 +(
£c⁄d
 >= 'A' ? (second - 'A') + 10 : (second - '0'));

40  
digô
;

41 
	}
}

51 
ölöe
 

52 
	$hex2ch¨
(
uöt8_t
 
hex
, * 
de°°rög
)

54 c⁄° 
hex_m≠
[] = "0123456789ABCDEF";

56 * 
de°
 = (*)
de°°rög
;

58 
de°
[0] = 
hex_m≠
[
hex
 / 16];

59 
de°
[1] = 
hex_m≠
[
hex
 % 16];

60 
	}
}

73 
ölöe
 

74 
	$hex2°r
(c⁄° * 
§chex
, 
size_t
 
§˛í
, * 
de°°rög
)

76 c⁄° 
uöt8_t
* 
hex
 = (c⁄° uöt8_t*)
§chex
;

77 * 
de°
 = (*)
de°°rög
;

79 
size_t
 
i
;

80 
i
 = 0; i !
§˛í
; ++i) {

81 
	`hex2ch¨
(
hex
[
i
], &
de°
[i * 2]);

83 
de°
[
§˛í
 * 2] = '\0';

84 
	}
}

98 
ölöe
 

99 
	$hex2°r_s
(c⁄° * 
§chex
, 
size_t
 
§˛í
, * 
de°°rög
, c⁄° * 
£≥øt‹
)

101 c⁄° 
uöt8_t
* 
hex
 = (c⁄° uöt8_t*)
§chex
;

102 * 
de°
 = (*)
de°°rög
;

103 c⁄° * 
£p
 = (c⁄° *)
£≥øt‹
;

105 
size_t
 
ö¸
 = 
	`°æí
(
£p
) + 2;

106 
size_t
 
i
;

107 
i
 = 0; i !
§˛í
; ++i) {

108 
	`hex2ch¨
(
hex
[
i
], &
de°
[ò* 
ö¸
]);

109 i‡(
i
 !(
§˛í
 - 1)) {

110 
	`°r˝y
(&
de°
[
i
 * 
ö¸
 + 2], 
£p
);

113 
de°
[
§˛í
 * 
ö¸
] = '\0';

114 
	}
}

127 
ölöe
 

128 
	$°r2hex
(c⁄° * 
§c°rög
, 
size_t
 
§˛í
, * 
de°hex
)

130 c⁄° * 
§c
 = (c⁄° *)
§c°rög
;

131 
uöt8_t
* 
de°
 = (uöt8_t*)
de°hex
;

133 
size_t
 
i
;

134 
i
 = 0; i !
§˛í
; i += 2) {

135 
de°
[
i
 / 2] = 
	`ch¨2hex
(
§c
[i], src[i + 1]);

137 
	}
}

	@/usr/include/libtaomee/hash_algo.h

14 
	~<°döt.h
>

21 
ölöe
 
uöt32_t
 
	$r5hash
(c⁄° * 
p
)

23 
uöt32_t
 
h
 = 0;

24 *
p
) {

25 
h
 = h * 11 + (*
p
 << 4) + (*p >> 4);

26 
p
++;

28  
h
;

29 
	}
}

	@/usr/include/libtaomee/inet/inet_utils.h

14 #i‚de‡
LIBTAOMEE_INET_UTILS_H_


15 
	#LIBTAOMEE_INET_UTILS_H_


	)

17 
	~<°ddef.h
>

19 #ifde‡
__˝lu•lus


31 
gë_ù_addr
(c⁄° * 
nif
, 
af
, * 
ùaddr
, 
size_t
 
Àn
);

38 
ói_to_î∫o
(
ói
);

45 
is_ÀgÆ_ù
(c⁄° *
°r_ù
);

52 
is_ÀgÆ_p‹t
(c⁄° 
p‹t
);

54 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/inet/ipaddr_cat.h

14 #i‚de‡
LIBTAOMEE_IPADDR_CAT_H_


15 
	#LIBTAOMEE_IPADDR_CAT_H_


	)

17 
	~<¨∑/öë.h
>

18 
	~<√töë/ö.h
>

25 
ölöe
 
	$is_¥iv©e_ù2
(
ö_addr_t
 
ù
)

27  (((
ù
 & 0x0000FFFF) == 0xA8C0)

28 || ((
ù
 & 0x000000FF) == 0x0A)

29 || ((
ù
 & 0x0000F0FF) == 0x10AC));

30 
	}
}

37 
ölöe
 
	$is_¥iv©e_ù
(c⁄° * 
ù
)

39 
ö_addr_t
 
ùaddr
;

40 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

41  
	`is_¥iv©e_ù2
(
ùaddr
);

45 
	}
}

52 
ölöe
 
	$is_lo›back_ù2
(
ö_addr_t
 
ù
)

54  ((
ù
 & 0x000000FF) == 0x7F);

55 
	}
}

62 
ölöe
 
	$is_lo›back_ù
(c⁄° * 
ù
)

64 
ö_addr_t
 
ùaddr
;

65 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

66  
	`is_lo›back_ù2
(
ùaddr
);

70 
	}
}

77 
ölöe
 
	$is_zîo_ù2
(
ö_addr_t
 
ù
)

79  ((
ù
 & 0x000000FF) == 0x00);

80 
	}
}

87 
ölöe
 
	$is_zîo_ù
(c⁄° * 
ù
)

89 
ö_addr_t
 
ùaddr
;

90 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

91  
	`is_zîo_ù2
(
ùaddr
);

95 
	}
}

102 
ölöe
 
	$is_zîoc⁄f_ù2
(
ö_addr_t
 
ù
)

104  ((
ù
 & 0x0000FFFF) == 0xFEA9);

105 
	}
}

112 
ölöe
 
	$is_zîoc⁄f_ù
(c⁄° * 
ù
)

114 
ö_addr_t
 
ùaddr
;

115 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

116  
	`is_zîoc⁄f_ù2
(
ùaddr
);

120 
	}
}

127 
ölöe
 
	$is_mu…iˇ°_ù2
(
ö_addr_t
 
ù
)

129  ((
ù
 & 0x000000F0) == 0xE0);

130 
	}
}

137 
ölöe
 
	$is_mu…iˇ°_ù
(c⁄° * 
ù
)

139 
ö_addr_t
 
ùaddr
;

140 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

141  
	`is_mu…iˇ°_ù2
(
ùaddr
);

145 
	}
}

152 
ölöe
 
	$is_ª£rved_ù2
(
ö_addr_t
 
ù
)

154  ((
ù
 & 0x000000F0) == 0xF0);

155 
	}
}

162 
ölöe
 
	$is_ª£rved_ù
(c⁄° * 
ù
)

164 
ö_addr_t
 
ùaddr
;

165 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

166  
	`is_ª£rved_ù2
(
ùaddr
);

170 
	}
}

177 
ölöe
 
	$is_ªœy_ù2
(
ö_addr_t
 
ù
)

179  ((
ù
 & 0x00FFFFFF) == 0x6358C0);

180 
	}
}

187 
ölöe
 
	$is_ªœy_ù
(c⁄° * 
ù
)

189 
ö_addr_t
 
ùaddr
;

190 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

191  
	`is_ªœy_ù2
(
ùaddr
);

195 
	}
}

203 
ölöe
 
	$is_bíchm¨k_ù2
(
ö_addr_t
 
ù
)

205  ((
ù
 & 0x0000FEFF) == 0x12C6);

206 
	}
}

213 
ölöe
 
	$is_bíchm¨k_ù
(c⁄° * 
ù
)

215 
ö_addr_t
 
ùaddr
;

216 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

217  
	`is_bíchm¨k_ù2
(
ùaddr
);

221 
	}
}

228 
ölöe
 
	$is_doc_ù2
(
ö_addr_t
 
ù
)

230  ((
ù
 & 0x00FFFFFF) == 0x0200C0);

231 
	}
}

238 
ölöe
 
	$is_doc_ù
(c⁄° * 
ù
)

240 
ö_addr_t
 
ùaddr
;

241 i‡(
	`öë_±⁄
(
AF_INET
, 
ù
, &
ùaddr
) == 1) {

242  
	`is_doc_ù2
(
ùaddr
);

246 
	}
}

	@/usr/include/libtaomee/inet/mcast.h

14 #i‚de‡
LIBTAOMEE_MCAST_H_


15 
	#LIBTAOMEE_MCAST_H_


	)

17 
	~<¨∑/öë.h
>

19 #ifde‡
__˝lu•lus


26 
	emˇ°_Êag
 {

28 
mˇ°_rd⁄ly
 = 1,

30 
mˇ°_wr⁄ly
 = 2,

32 
mˇ°_rdwr
 = 
mˇ°_rd⁄ly
 | 
mˇ°_wr⁄ly


33 } 
	tmˇ°_Êag_t
;

47 
¸óã_mˇ°_sockë
(c⁄° * 
mˇ°_addr
, c⁄° * 
p‹t
, c⁄° * 
nif
,

48 
mˇ°_Êag_t
 
Êag
, 
sockaddr_°‹age
* 
ss
, 
sockÀn_t
* 
addæí
);

62 
mˇ°_joö
(
sockfd
, c⁄° 
sockaddr
* 
gΩ
, 
sockÀn_t
 
gΩÀn
, c⁄° * 
i‚ame
);

76 
mˇ°_Àave
(
sockfd
, c⁄° 
sockaddr
* 
gΩ
, 
sockÀn_t
 
gΩÀn
, c⁄° * 
i‚ame
);

87 
mˇ°_£t_if
(
sockfd
, 
Ámûy
, c⁄° * 
i‚ame
);

89 
mˇ°_gë_if
(
sockfd
, 
Ámûy
);

102 
mˇ°_£t_lo›
(
sockfd
, 
Ámûy
, 
⁄off
);

114 
mˇ°_gë_lo›
(
sockfd
, 
Ámûy
);

127 
mˇ°_£t_âl
(
sockfd
, 
Ámûy
, 
âl
);

139 
mˇ°_gë_âl
(
sockfd
, 
Ámûy
);

148 
mˇ°_block_sour˚
(
sockfd
, c⁄° 
sockaddr
* 
§c
, 
sockÀn_t
 
§˛í
, c⁄° sockaddr* 
gΩ
, sockÀn_à
gΩÀn
);

150 
mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
sockaddr
* 
§c
, 
sockÀn_t
 
§˛í
, c⁄° sockaddr* 
gΩ
, sockÀn_à
gΩÀn
);

152 
mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
sockaddr
* 
§c
, 
sockÀn_t
 
§˛í
, c⁄° sockaddr* 
gΩ
, sockÀn_à
gΩÀn
, c⁄° * 
i‚ame
);

154 
mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
sockaddr
 *
§c
, 
sockÀn_t
 
§˛í
, c⁄° sockaddr* 
gΩ
, sockÀn_à
gΩÀn
);

156 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/inet/tcp.h

14 #i‚de‡
TAOMEE_TCP_H_


15 
	#TAOMEE_TCP_H_


	)

17 
	~<√töë/ö.h
>

19 #ifde‡
__˝lu•lus


31 
£t_io_blockabûôy
(
fd
, 
n⁄block
);

42 
£t_sock_¢d_timeo
(
sockfd
, 
mûli£c
);

53 
£t_sock_rcv_timeo
(
sockfd
, 
mûli£c
);

64 
ß„_t˝_ac˚±
(
sockfd
, 
sockaddr_ö
* 
≥î
, 
n⁄block
);

77 
ß„_t˝_c⁄√˘
(c⁄° * 
ùaddr
, 
ö_p‹t_t
 
p‹t
, 
timeout
, 
n⁄block
);

92 
ß„_sockë_li°í
(c⁄° * 
ùaddr
, 
ö_p‹t_t
 
p‹t
, 
ty≥
, 
backlog
, 
bufsize
);

105 
¸óã_∑ssive_ídpoöt
(c⁄° * 
ho°
, c⁄° * 
£rv
, 
sockty≥
, 
backlog
, 
bufsize
);

116 
ß„_t˝_£nd_n
(
sockfd
, c⁄° * 
buf
, 
tŸÆ
);

127 
ß„_t˝_ªcv
(
sockfd
, * 
buf
, 
bufsize
);

138 
ß„_t˝_ªcv_n
(
sockfd
, * 
buf
, 
tŸÆ
);

140 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/interprocess/filelock.h

24 #i‚de‡
LIBTAOMEE_FILELOCK_H_


25 
	#LIBTAOMEE_FILELOCK_H_


	)

27 
	~<f˙é.h
>

30 
ölöe
 

31 
	$fûñock_lock
(
fd
, 
cmd
, 
ty≥
, 
off_t
 
off£t
, 
whí˚
, off_à
Àn
)

33 
Êock
 
lock
;

35 
lock
.
l_ty≥
 = 
ty≥
;

36 
lock
.
l_°¨t
 = 
off£t
;

37 
lock
.
l_whí˚
 = 
whí˚
;

38 
lock
.
l_Àn
 = 
Àn
;

40  
	`f˙é
(
fd
, 
cmd
, &
lock
);

41 
	}
}

52 
	#fûñock_æock
(
fd_
, 
off£t_
, 
whí˚_
, 
Àn_
) \

53 
	`fûñock_lock
((
fd_
), 
F_SETLKW
, 
F_RDLCK
, (
off£t_
), (
whí˚_
), (
Àn_
))

	)

65 
	#fûñock_åy_æock
(
fd_
, 
off£t_
, 
whí˚_
, 
Àn_
) \

66 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_RDLCK
, (
off£t_
), (
whí˚_
), (
Àn_
))

	)

72 
	#fûñock_æockfûe
(
fd_
) \

73 
	`fûñock_lock
((
fd_
), 
F_SETLKW
, 
F_RDLCK
, 0, 
SEEK_SET
, 0)

	)

79 
	#fûñock_åy_æockfûe
(
fd_
) \

80 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_RDLCK
, 0, 
SEEK_SET
, 0)

	)

90 
	#fûñock_wlock
(
fd_
, 
off£t_
, 
whí˚_
, 
Àn_
) \

91 
	`fûñock_lock
((
fd_
), 
F_SETLKW
, 
F_WRLCK
, (
off£t_
), (
whí˚_
), (
Àn_
))

	)

103 
	#fûñock_åy_wlock
(
fd_
, 
off£t_
, 
whí˚_
, 
Àn_
) \

104 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_WRLCK
, (
off£t_
), (
whí˚_
), (
Àn_
))

	)

110 
	#fûñock_wlockfûe
(
fd_
) \

111 
	`fûñock_lock
((
fd_
), 
F_SETLKW
, 
F_WRLCK
, 0, 
SEEK_SET
, 0)

	)

117 
	#fûñock_åy_wlockfûe
(
fd_
) \

118 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_WRLCK
, 0, 
SEEK_SET
, 0)

	)

128 
	#fûñock_u∆ock
(
fd_
, 
off£t_
, 
whí˚_
, 
Àn_
) \

129 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_UNLCK
, (
off£t_
), (
whí˚_
), (
Àn_
))

	)

135 
	#fûñock_u∆ockfûe
(
fd_
) \

136 
	`fûñock_lock
((
fd_
), 
F_SETLK
, 
F_UNLCK
, 0, 
SEEK_SET
, 0)

	)

	@/usr/include/libtaomee/interprocess/lock.h

1 #i‚de‡
LIBTAOMEE_LOCK_H_


2 
	#LIBTAOMEE_LOCK_H_


	)

4 
	u£mun
 {

5 
	mvÆ
;

6 
£mid_ds
* 
	mbuf
;

7 *
	m¨øy
;

9 
£möfo
 *
	m__buf
;

12 
£m_öô
(
key_t
 
key
);

13 
£m_u∆ock
(
£mid
);

14 
£m_lock
(
£mid
);

	@/usr/include/libtaomee/interprocess/shmq.h

15 #i‚de‡
TAOMEE_SHMQ_H_


16 
	#TAOMEE_SHMQ_H_


	)

18 
	~<°döt.h
>

20 
	~<libèomì/©omic.h
>

25 
	eshmq_c⁄°
 {

27 
	mshmq_«me_sz
 = 64

34 
	sshm_cq
 {

36 vﬁ©ûê
uöt32_t
 
	mhód
;

38 vﬁ©ûê
uöt32_t
 
	mèû
;

40 
uöt32_t
 
	mshm_size
;

42 
uöt32_t
 
	mñem_max_sz
;

44 
	m«me
[
shmq_«me_sz
];

52 
shm_cq
 
	tshm_cq_t
;

65 
shm_cq_t
* 
shm_cq_¸óã
(c⁄° * 
«me
, 
uöt32_t
 
cq_size
, uöt32_à
d©a_max_sz
);

72 
shm_cq_de°roy
(
shm_cq_t
* 
cq
);

79 
shm_cq_t
* 
shm_cq_©èch
(c⁄° * 
«me
);

86 
shm_cq_dëach
(
shm_cq_t
* 
cq
);

94 
uöt32_t
 
shm_cq_p›
(
shm_cq_t
* 
q
, ** 
d©a
);

103 
shm_cq_push
(
shm_cq_t
* 
q
, c⁄° * 
d©a
, 
uöt32_t
 
Àn
);

	@/usr/include/libtaomee/list.h

15 #i‚de‡
TAOMEE_H_LIST_H_


16 
	#TAOMEE_H_LIST_H_


	)

18 
	#__buûtö_¥e„tch
(
x
,
y
,
z
Ë1

	)

23 
	sli°_hód


25 
li°_hód
 *
	m√xt
, *
	m¥ev
;

30 
li°_hód
 
	tli°_hód_t
;

32 
	#LIST_HEAD_INIT
(
«me
Ë{ &“ame), &“ameË}

	)

34 
	#LIST_HEAD
(
«me
) \

35 
li°_hód
 
«me
 = 
	`LIST_HEAD_INIT
“ame)

	)

41 
	#INIT_LIST_HEAD
(
±r
) do { \

42 (
±r
)->
√xt
 = (±r); (±r)->
¥ev
 = (ptr); \

43 } 0)

	)

51 
ölöe
 

52 
	$__li°_add
 (
li°_hód
 *
√w_íåy
,

53 
li°_hód
 *
¥ev
, li°_hód *
√xt
)

55 
√xt
->
¥ev
 = 
√w_íåy
;

56 
√w_íåy
->
√xt
 =Çext;

57 
√w_íåy
->
¥ev
 =Örev;

58 
¥ev
->
√xt
 = 
√w_íåy
;

59 
	}
}

68 
ölöe
 

69 
	$li°_add
 (
li°_hód
 *
√w_íåy
, li°_hód *
hód
)

71 
	`__li°_add
 (
√w_íåy
, 
hód
, hód->
√xt
);

72 
	}
}

81 
ölöe
 

82 
	$li°_add_èû
 (
li°_hód
 *
√w_íåy
, li°_hód *
hód
)

84 
	`__li°_add
 (
√w_íåy
, 
hód
->
¥ev
, head);

85 
	}
}

94 
ölöe
 

95 
	$__li°_dñ
 (
li°_hód
 *
¥ev
, li°_hód *
√xt
)

97 
√xt
->
¥ev
 =Örev;

98 
¥ev
->
√xt
 =Çext;

99 
	}
}

106 
ölöe
 

107 
	$li°_dñ
 (
li°_hód
 *
íåy
)

109 
	`__li°_dñ
 (
íåy
->
¥ev
,É¡ry->
√xt
);

110 
íåy
->
√xt
 = 0;

111 
íåy
->
¥ev
 = 0;

112 
	}
}

118 
ölöe
 

119 
	$li°_dñ_öô
 (
li°_hód
 *
íåy
)

121 
	`__li°_dñ
 (
íåy
->
¥ev
,É¡ry->
√xt
);

122 
	`INIT_LIST_HEAD
 (
íåy
);

123 
	}
}

130 
ölöe
 

131 
	$li°_move
 (
li°_hód
 *
li°
, li°_hód *
hód
)

133 
	`__li°_dñ
 (
li°
->
¥ev
,Üi°->
√xt
);

134 
	`li°_add
 (
li°
, 
hód
);

135 
	}
}

142 
ölöe
 

143 
	$li°_move_èû
 (
li°_hód
 *
li°
, li°_hód *
hód
)

145 
	`__li°_dñ
 (
li°
->
¥ev
,Üi°->
√xt
);

146 
	`li°_add_èû
 (
li°
, 
hód
);

147 
	}
}

153 
ölöe
 

154 
	$li°_em±y
 (
li°_hód
 *
hód
)

156  
hód
->
√xt
 == head;

157 
	}
}

159 
ölöe
 

160 
	$__li°_•li˚
 (
li°_hód
 *
li°
, li°_hód *
hód
)

162 
li°_hód
 *
fú°
 = 
li°
->
√xt
;

163 
li°_hód
 *
œ°
 = 
li°
->
¥ev
;

164 
li°_hód
 *
©
 = 
hód
->
√xt
;

166 
fú°
->
¥ev
 = 
hód
;

167 
hód
->
√xt
 = 
fú°
;

169 
œ°
->
√xt
 = 
©
;

170 
©
->
¥ev
 = 
œ°
;

171 
	}
}

178 
ölöe
 

179 
	$li°_•li˚
 (
li°_hód
 *
li°
, li°_hód *
hód
)

181 i‡(!
	`li°_em±y
 (
li°
))

182 
	`__li°_•li˚
 (
li°
, 
hód
);

183 
	}
}

192 
ölöe
 

193 
	$li°_•li˚_öô
 (
li°_hód
 *
li°
, li°_hód *
hód
)

195 i‡(!
	`li°_em±y
 (
li°
))

197 
	`__li°_•li˚
 (
li°
, 
hód
);

198 
	`INIT_LIST_HEAD
 (
li°
);

200 
	}
}

208 
	#li°_íåy
(
±r
, 
ty≥
, 
membî
) \

209 ((
ty≥
 *)((*)(
±r
)-()(&(—y≥ *)0)->
membî
)))

	)

216 #ifde‡ 
__˝lu•lus


217 
	#li°_f‹_óch
(
pos
, 
hód
) \

218 
	`__li°_f‹_óch
(
pos
, 
hód
)

	)

220 
	#li°_f‹_óch
(
pos
, 
hód
) \

221 
pos
 = (
hód
)->
√xt
, 
	`__buûtö_¥e„tch
(pos->next,0,1); \

222 
pos
 !(
hód
); \

223 
pos
 =Öos->
√xt
, 
	`__buûtö_¥e„tch
’os->√xt,0,1))

	)

226 
	#__li°_f‹_óch
(
pos
, 
hód
) \

227 
pos
 = (
hód
)->
√xt
;Öo†!(hód);Öo†pos->√xt)

	)

233 
	#li°_f‹_óch_¥ev
(
pos
, 
hód
) \

234 
pos
 = (
hód
)->
¥ev
, 
	`__buûtö_¥e„tch
(pos->prev,0,1); \

235 
pos
 !(
hód
); \

236 
pos
 =Öos->
¥ev
, 
	`__buûtö_¥e„tch
’os->¥ev,0,1))

	)

238 
	#__li°_f‹_óch_¥ev
(
pos
, 
hód
) \

239 
pos
 = (
hód
)->
¥ev
;Öos != (head); \

240 
pos
 =Öos->
¥ev
)

	)

248 
	#li°_f‹_óch_ß„
(
pos
, 
n
, 
hód
) \

249 
pos
 = (
hód
)->
√xt
, 
n
 =Öos->next;Öos != (head); \

250 
pos
 = 
n
,Ç =Öos->
√xt
)

	)

258 #ifde‡ 
__˝lu•lus


259 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

260 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
); \

261 &
pos
->
membî
 !(
hód
); \

262 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), membî))

	)

264 
	#li°_f‹_óch_íåy
(
pos
, 
hód
, 
membî
) \

265 
pos
 = 
	`li°_íåy
((
hód
)->
√xt
, 
	`ty≥of
(*pos), 
membî
), \

266 
	`__buûtö_¥e„tch
(
pos
->
membî
.
√xt
,0,1); \

267 &
pos
->
membî
 !(
hód
); \

268 
pos
 = 
	`li°_íåy
’os->
membî
.
√xt
, 
	`ty≥of
(*pos), member), \

269 
	`__buûtö_¥e„tch
(
pos
->
membî
.
√xt
,0,1))

	)

	@/usr/include/libtaomee/log.h

17 #i‚de‡
LIBTAOMEE_LOG_H_


18 
	#LIBTAOMEE_LOG_H_


	)

20 #ifde‡
__˝lu•lus


24 #ifde‡ 
likñy


25 #unde‡
likñy


27 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

29 #ifde‡ 
u∆ikñy


30 #unde‡
u∆ikñy


32 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

34 #ifde‡
USE_TLOG


36 
	~<libèomì/log_ﬁd.h
>

37 
	~<libèomì/éog/éog.h
>

39 #ifde‡
EMERG_LOG


40 #unde‡
EMERG_LOG


42 
	#EMERG_LOG
(
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
(fmt, ##¨gs)

	)

44 #ifde‡
KEMERG_LOG


45 #unde‡
KEMERG_LOG


47 
	#KEMERG_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
("%u "fmt, key, ##¨gs)

	)

49 #ifde‡
ALERT_LOG


50 #unde‡
ALERT_LOG


52 
	#ALERT_LOG
(
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
(fmt, ##¨gs)

	)

54 #ifde‡
KALERT_LOG


55 #unde‡
KALERT_LOG


57 
	#KALERT_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
("%u "fmt, key, ##¨gs)

	)

59 #ifde‡
CRIT_LOG


60 #unde‡
CRIT_LOG


62 
	#CRIT_LOG
(
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
(fmt, ##¨gs)

	)

64 #ifde‡
KCRIT_LOG


65 #unde‡
KCRIT_LOG


67 
	#KCRIT_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`FATAL_TLOG
("%u "fmt, key, ##¨gs)

	)

69 #ifde‡
ERROR_LOG


70 #unde‡
ERROR_LOG


72 
	#ERROR_LOG
(
fmt
, 
¨gs
...Ë
	`ERROR_TLOG
(fmt, ##¨gs)

	)

74 #ifde‡
KERROR_LOG


75 #unde‡
KERROR_LOG


77 
	#KERROR_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`ERROR_TLOG
("%u "fmt, key, ##¨gs)

	)

79 #ifde‡
WARN_LOG


80 #unde‡
WARN_LOG


82 
	#WARN_LOG
(
fmt
, 
¨gs
...Ë
	`WARN_TLOG
(fmt, ##¨gs)

	)

84 #ifde‡
KWARN_LOG


85 #unde‡
KWARN_LOG


87 
	#KWARN_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`WARN_TLOG
("%u "fmt, key, ##¨gs)

	)

89 #ifde‡
NOTI_LOG


90 #unde‡
NOTI_LOG


92 
	#NOTI_LOG
(
fmt
, 
¨gs
...Ë
	`INFO_TLOG
(fmt, ##¨gs)

	)

94 #ifde‡
KNOTI_LOG


95 #unde‡
KNOTI_LOG


97 
	#KNOTI_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`INFO_TLOG
("%u "fmt, key, ##¨gs)

	)

99 #ifde‡
INFO_LOG


100 #unde‡
INFO_LOG


102 
	#INFO_LOG
(
fmt
, 
¨gs
...Ë
	`INFO_TLOG
(fmt, ##¨gs)

	)

104 #ifde‡
KINFO_LOG


105 #unde‡
KINFO_LOG


107 
	#KINFO_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`INFO_TLOG
("%u "fmt, key, ##¨gs)

	)

109 #ifde‡
DEBUG_LOG


110 #unde‡
DEBUG_LOG


112 
	#DEBUG_LOG
(
fmt
, 
¨gs
...Ë
	`DEBUG_TLOG
(fmt, ##¨gs)

	)

114 #ifde‡
KDEBUG_LOG


115 #unde‡
KDEBUG_LOG


117 
	#KDEBUG_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`DEBUG_TLOG
("%u "fmt, key, ##¨gs)

	)

119 #ifde‡
TRACE_LOG


120 #unde‡
TRACE_LOG


122 
	#TRACE_LOG
(
fmt
, 
¨gs
...Ë
	`TRACE_TLOG
(fmt, ##¨gs)

	)

124 #ifde‡
KTRACE_LOG


125 #unde‡
KTRACE_LOG


127 
	#KTRACE_LOG
(
key
, 
fmt
, 
¨gs
...Ë
	`TRACE_TLOG
("%u "fmt, key, ##¨gs)

	)

129 #ifde‡
BOOT_LOG


130 #unde‡
BOOT_LOG


132 
	#BOOT_LOG
(
OK
, 
fmt
, 
¨gs
...Ë
	`RT_BOOT_TLOG
(OK, fmt, ##¨gs)

	)

135 #ifde‡
BOOT_LOG2


136 #unde‡
BOOT_LOG2


138 
	#BOOT_LOG2
(
OK
, 
n
, 
fmt
, 
¨gs
...Ë
	`RT_BOOT_TLOG
(OK, fmt, ##¨gs)

	)

141 #ifde‡
ERROR_RETURN


142 #unde‡
ERROR_RETURN


143 
	#ERROR_RETURN
((
fmt
, 
¨gs
...), 
π
Ë
	`RT_ERROR_TLOG
‘t, fmt, ##¨gs)

	)

146 #ifde‡
ERROR_RETURN_VOID


147 #unde‡
ERROR_RETURN_VOID


148 
	#ERROR_RETURN_VOID
(
fmt
, 
¨gs
...Ë
	`RTV_ERROR_TLOG
(fmt, ##¨gs)

	)

151 #ifde‡
WARN_RETURN


152 #unde‡
WARN_RETURN


153 
	#WARN_RETURN
((
fmt
, 
¨gs
...), 
π
Ë
	`RT_WARN_TLOG
‘t, fmt, ##¨gs)

	)

156 #ifde‡
WARN_RETURN_VOID


157 #unde‡
WARN_RETURN_VOID


158 
	#WARN_RETURN_V0ID
(
fmt
, 
¨gs
...Ë
	`RTV_WARN_TLOG
(fmt, ##¨gs)

	)

161 #ifde‡
DEBUG_RETURN


162 #unde‡
DEBUG_RETURN


163 
	#DEBUG_RETURN
((
fmt
, 
¨gs
...), 
π
Ë
	`RT_DEBUG_TLOG
‘t, fmt, ##¨gs)

	)

166 #ifde‡
DEBUG_RETURN_VOID


167 #unde‡
DEBUG_RETURN_VOID


168 
	#DEBUG_RETURN_VOID
(
fmt
, 
¨gs
...Ë
	`RTV_DEBUG_TLOG
(fmt, ##¨gs)

	)

177 
	#ERROR_RETURN
(
X
, 
Y
) \

179 
ERROR_LOG
 
X
; \

180  
Y
; \

181 } 0)

	)

188 
	#ERROR_RETURN_VOID
(
fmt
, 
¨gs
...) \

190 
	`ERROR_LOG
(
fmt
, ##
¨gs
); \

192 } 0)

	)

199 
	#WARN_RETURN
(
msg_
, 
ªt_
) \

201 
WARN_LOG
 
msg_
; \

202  (
ªt_
); \

203 } 0)

	)

210 
	#WARN_RETURN_VOID
(
fmt
, 
¨gs
...) \

212 
	`WARN_LOG
(
fmt
, ##
¨gs
); \

214 } 0)

	)

221 
	#DEBUG_RETURN
(
msg_
, 
ªt_
) \

223 
DEBUG_LOG
 
msg_
; \

224  (
ªt_
); \

225 } 0)

	)

232 
	#DEBUG_RETURN_VOID
(
fmt
, 
¨gs
...) \

234 
	`DEBUG_LOG
(
fmt
, ##
¨gs
); \

236 } 0)

	)

239 
	~<libèomì/log_ﬁd.h
>

242 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/log_old.h

17 #i‚de‡
LIBTAOMEE_LOG_OLD_H_


18 
	#LIBTAOMEE_LOG_OLD_H_


	)

20 
	~<°döt.h
>

21 #ifde‡
__˝lu•lus


25 #ifde‡ 
likñy


26 #unde‡
likñy


28 
	#likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

30 #ifde‡ 
u∆ikñy


31 #unde‡
u∆ikñy


33 
	#u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

45 
	elog_lvl
 {

47 
log_lvl_emîg
,

49 
log_lvl_Æît
,

51 
log_lvl_¸ô
,

53 
log_lvl_îr‹
,

55 
log_lvl_w¨nög
,

57 
log_lvl_nŸi˚
,

59 
log_lvl_öfo
,

61 
log_lvl_debug
,

63 #i‚de‡
LOG_USE_SYSLOG


64 
log_lvl_åa˚
,

66 
log_lvl_åa˚
 = 
log_lvl_debug
,

69 
log_lvl_max


70 } 
	tlog_lvl_t
;

81 
	elog_de°
 {

83 
log_de°_ãrmöÆ
 = 1,

85 
log_de°_fûe
 = 2,

87 
log_de°_bŸh
 = 3

88 } 
	tlog_de°_t
;

105 
log_öô
(c⁄° * 
dú
, 
log_lvl_t
 
lvl
, 
uöt32_t
 
size
, 
maxfûes
, c⁄° * 
¥e_«me
);

119 
log_öô_t
(c⁄° * 
dú
, 
log_lvl_t
 
lvl
, c⁄° * 
¥e_«me
, 
logtime
);

125 
log_föi
();

135 
£t_log_de°
(
log_de°_t
 
de°
);

140 
íabÀ_mu…i_thªad
();

142 #ifde‡
__GNUC__


143 
	#LOG_CHECK_FMT
(
a
,
b
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,á, b)))

	)

145 
	#LOG_CHECK_FMT
(
a
,
b
)

	)

148 
wrôe_log
(
lvl
,
uöt32_t
 
key
, c⁄° * 
fmt
, ...Ë
LOG_CHECK_FMT
(3, 4);

149 
wrôe_sy¶og
(
lvl
, c⁄° * 
fmt
, ...Ë
LOG_CHECK_FMT
(2, 3);

150 
boŸ_log
(
ok
, 
dummy
, c⁄° * 
fmt
, ...Ë
LOG_CHECK_FMT
(3, 4);

152 #i‚de‡
LOG_USE_SYSLOG


153 
	#DETAIL
(
Àvñ
, 
key
, 
fmt
, 
¨gs
...) \

154 
	`wrôe_log
(
Àvñ
, 
key
, "[%s][%d]%s: " 
fmt
 "\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
)

	)

156 
	#DETAIL
(
Àvñ
, 
key
, 
fmt
, 
¨gs
...) \

157 
	`wrôe_sy¶og
(
Àvñ
, "[%s][%d]%s: " 
fmt
 "\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
)

	)

160 #i‚de‡
LOG_USE_SYSLOG


161 
	#SIMPLY
(
Àvñ
, 
key
, 
fmt
, 
¨gs
...) \

162 
	`wrôe_log
(
Àvñ
, 
key
, 
fmt
 "\n", ##
¨gs
)

	)

164 
	#SIMPLY
(
Àvñ
, 
key
, 
fmt
, 
¨gs
...) \

165 
	`wrôe_sy¶og
(
Àvñ
, 
fmt
 "\n", ##
¨gs
)

	)

178 #i‚de‡
DISABLE_EMERG_LOG


179 
	#EMERG_LOG
(
fmt
, 
¨gs
...) \

180 
	`DETAIL
(
log_lvl_emîg
, 0, 
fmt
, ##
¨gs
)

	)

181 
	#KEMERG_LOG
(
key
, 
fmt
, 
¨gs
...) \

182 
	`DETAIL
(
log_lvl_emîg
, 
key
, 
fmt
, ##
¨gs
)

	)

184 
	#EMERG_LOG
(
fmt
, 
¨gs
...)

	)

185 
	#KEMERG_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

199 #i‚de‡
DISABLE_ALERT_LOG


200 
	#ALERT_LOG
(
fmt
, 
¨gs
...) \

201 
	`DETAIL
(
log_lvl_Æît
, 0, 
fmt
, ##
¨gs
)

	)

202 
	#KALERT_LOG
(
key
, 
fmt
, 
¨gs
...) \

203 
	`DETAIL
(
log_lvl_Æît
, 
key
, 
fmt
, ##
¨gs
)

	)

205 
	#ALERT_LOG
(
fmt
, 
¨gs
...)

	)

206 
	#KALERT_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

221 #i‚de‡
DISABLE_CRIT_LOG


222 
	#CRIT_LOG
(
fmt
, 
¨gs
...) \

223 
	`DETAIL
(
log_lvl_¸ô
, 0, 
fmt
, ##
¨gs
)

	)

224 
	#KCRIT_LOG
(
key
, 
fmt
, 
¨gs
...) \

225 
	`DETAIL
(
log_lvl_¸ô
, 
key
, 
fmt
, ##
¨gs
)

	)

227 
	#CRIT_LOG
(
fmt
, 
¨gs
...)

	)

228 
	#KCRIT_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

242 #i‚de‡
DISABLE_ERROR_LOG


243 
	#ERROR_LOG
(
fmt
, 
¨gs
...) \

244 
	`DETAIL
(
log_lvl_îr‹
, 0, 
fmt
, ##
¨gs
)

	)

245 
	#KERROR_LOG
(
key
, 
fmt
, 
¨gs
...) \

246 
	`DETAIL
(
log_lvl_îr‹
, 
key
, 
fmt
, ##
¨gs
)

	)

248 
	#ERROR_LOG
(
fmt
, 
¨gs
...)

	)

249 
	#KERROR_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

264 #i‚de‡
DISABLE_WARN_LOG


265 
	#WARN_LOG
(
fmt
, 
¨gs
...) \

266 
	`SIMPLY
(
log_lvl_w¨nög
, 0, 
fmt
, ##
¨gs
)

	)

267 
	#KWARN_LOG
(
key
, 
fmt
, 
¨gs
...) \

268 
	`SIMPLY
(
log_lvl_w¨nög
, 
key
, 
fmt
, ##
¨gs
)

	)

270 
	#WARN_LOG
(
fmt
, 
¨gs
...)

	)

271 
	#KWARN_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

285 #i‚de‡
DISABLE_NOTI_LOG


286 
	#NOTI_LOG
(
fmt
, 
¨gs
...) \

287 
	`SIMPLY
(
log_lvl_nŸi˚
, 0, 
fmt
, ##
¨gs
)

	)

288 
	#KNOTI_LOG
(
key
, 
fmt
, 
¨gs
...) \

289 
	`SIMPLY
(
log_lvl_nŸi˚
, 
key
, 
fmt
, ##
¨gs
)

	)

291 
	#NOTI_LOG
(
fmt
, 
¨gs
...)

	)

292 
	#KNOTI_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

306 #i‚de‡
DISABLE_INFO_LOG


307 
	#INFO_LOG
(
fmt
, 
¨gs
...) \

308 
	`SIMPLY
(
log_lvl_öfo
, 0, 
fmt
, ##
¨gs
)

	)

309 
	#KINFO_LOG
(
key
, 
fmt
, 
¨gs
...) \

310 
	`SIMPLY
(
log_lvl_öfo
, 
key
, 
fmt
, ##
¨gs
)

	)

312 
	#INFO_LOG
(
fmt
, 
¨gs
...)

	)

313 
	#KINFO_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

327 #i‚de‡
DISABLE_DEBUG_LOG


328 
	#DEBUG_LOG
(
fmt
, 
¨gs
...) \

329 
	`SIMPLY
(
log_lvl_debug
, 0, 
fmt
, ##
¨gs
)

	)

330 
	#KDEBUG_LOG
(
key
, 
fmt
, 
¨gs
...) \

331 
	`SIMPLY
(
log_lvl_debug
, 
key
, 
fmt
, ##
¨gs
)

	)

333 
	#DEBUG_LOG
(
fmt
, 
¨gs
...)

	)

334 
	#KDEBUG_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

349 #ifde‡
ENABLE_TRACE_LOG


350 
	#TRACE_LOG
(
fmt
, 
¨gs
...) \

351 
	`DETAIL
(
log_lvl_åa˚
, 0, 
fmt
, ##
¨gs
)

	)

352 
	#KTRACE_LOG
(
key
, 
fmt
, 
¨gs
...) \

353 
	`DETAIL
(
log_lvl_åa˚
, 
key
, 
fmt
, ##
¨gs
)

	)

355 
	#TRACE_LOG
(
fmt
, 
¨gs
...)

	)

356 
	#KTRACE_LOG
(
key
, 
fmt
, 
¨gs
...)

	)

364 
	#BOOT_LOG
(
OK
, 
fmt
, 
¨gs
...) \

366 
	`boŸ_log
(
OK
, 0, 
fmt
, ##
¨gs
); \

367  
OK
; \

368 } 0)

	)

375 
	#BOOT_LOG2
(
OK
, 
n
, 
fmt
, 
¨gs
...) \

377 
	`boŸ_log
(
OK
, 
n
, 
fmt
, ##
¨gs
); \

378  
OK
; \

379 } 0)

	)

386 
	#ERROR_RETURN
(
X
, 
Y
) \

388 
ERROR_LOG
 
X
; \

389  
Y
; \

390 } 0)

	)

397 
	#ERROR_RETURN_VOID
(
fmt
, 
¨gs
...) \

399 
	`ERROR_LOG
(
fmt
, ##
¨gs
); \

401 } 0)

	)

408 
	#WARN_RETURN
(
msg_
, 
ªt_
) \

410 
WARN_LOG
 
msg_
; \

411  (
ªt_
); \

412 } 0)

	)

419 
	#WARN_RETURN_VOID
(
fmt
, 
¨gs
...) \

421 
	`WARN_LOG
(
fmt
, ##
¨gs
); \

423 } 0)

	)

430 
	#DEBUG_RETURN
(
msg_
, 
ªt_
) \

432 
DEBUG_LOG
 
msg_
; \

433  (
ªt_
); \

434 } 0)

	)

441 
	#DEBUG_RETURN_VOID
(
fmt
, 
¨gs
...) \

443 
	`DEBUG_LOG
(
fmt
, ##
¨gs
); \

445 } 0)

	)

447 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/lua/lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

18 #i‡
deföed
(
LUA_COMPAT_GETN
)

19 
LUALIB_API
 (
luaL_gën
Ë(
lua_Sèã
 *
L
, 
t
);

20 
LUALIB_API
 (
luaL_£ä
Ë(
lua_Sèã
 *
L
, 
t
, 
n
);

22 
	#luaL_gën
(
L
,
i
Ë(()
	`lua_objÀn
(L, i))

	)

23 
	#luaL_£ä
(
L
,
i
,
j
Ë(()0Ë

	)

26 #i‡
	`deföed
(
LUA_COMPAT_OPENLIB
)

27 
	#luaI_›ílib
 
luaL_›ílib


	)

32 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

35 
	sluaL_Reg
 {

36 c⁄° *
«me
;

37 
lua_CFun˘i⁄
 
func
;

38 } 
	tluaL_Reg
;

42 
LUALIB_API
 (
luaI_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

43 c⁄° 
luaL_Reg
 *
l
, 
nup
);

44 
LUALIB_API
 (
luaL_ªgi°î
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

45 c⁄° 
luaL_Reg
 *
l
);

46 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

47 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

48 
LUALIB_API
 (
luaL_ty≥º‹
Ë(
lua_Sèã
 *
L
, 
«rg
, c⁄° *
äame
);

49 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
num¨g
, c⁄° *
exåamsg
);

50 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
numArg
,

51 
size_t
 *
l
);

52 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
numArg
,

53 c⁄° *
def
, 
size_t
 *
l
);

54 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
numArg
);

55 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
nArg
, 
lua_Numbî
 
def
);

57 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
numArg
);

58 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
nArg
,

59 
lua_I¡egî
 
def
);

61 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

62 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
«rg
, 
t
);

63 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
«rg
);

65 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

66 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

68 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

69 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

71 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
«rg
, c⁄° *
def
,

72 c⁄° *c⁄° 
l°
[]);

74 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

75 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

77 
LUALIB_API
 (
luaL_lﬂdfûe
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
);

78 
LUALIB_API
 (
luaL_lﬂdbuf„r
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

79 c⁄° *
«me
);

80 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

82 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

85 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

86 c⁄° *
r
);

88 
LUALIB_API
 c⁄° *(
luaL_födèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
,

89 c⁄° *
‚ame
, 
szhöt
);

100 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
num¨g
,
exåamsg
) \

101 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
num¨g
), (
exåamsg
))))

	)

102 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

103 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

104 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

105 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

106 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

107 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

109 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

111 
	#luaL_dofûe
(
L
, 
‚
Ë(
	`luaL_lﬂdfûe
(L, fnË|| 
	`lua_pˇŒ
(L, 0, 0, 0))

	)

113 
	#luaL_do°rög
(
L
, 
s
Ë(
	`luaL_lﬂd°rög
(L, sË|| 
	`lua_pˇŒ
(L, 0, 0, 0))

	)

115 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

117 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

127 
	sluaL_Buf„r
 {

128 *
p
;

129 
lvl
;

130 
lua_Sèã
 *
L
;

131 
buf„r
[
LUAL_BUFFERSIZE
];

132 } 
	tluaL_Buf„r
;

134 
	#luaL_addch¨
(
B
,
c
) \

135 (()((
B
)->
p
 < ((B)->
buf„r
+
LUAL_BUFFERSIZE
Ë|| 
	`luaL_¥ïbuf„r
(B)), \

136 (*(
B
)->
p
++ = ()(
c
)))

	)

139 
	#luaL_putch¨
(
B
,
c
Ë
	`luaL_addch¨
(B,c)

	)

141 
	#luaL_addsize
(
B
,
n
Ë((B)->
p
 +“))

	)

143 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

144 
LUALIB_API
 *(
luaL_¥ïbuf„r
Ë(
luaL_Buf„r
 *
B
);

145 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

146 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

147 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

148 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

157 
	#LUA_NOREF
 (-2)

	)

158 
	#LUA_REFNIL
 (-1)

	)

160 
	#lua_ªf
(
L
,
lock
Ë(÷ockË? 
	`luaL_ªf
(L, 
LUA_REGISTRYINDEX
) : \

161 (
	`lua_push°rög
(
L
, "u∆ockedÑe„ªn˚†¨êobsﬁëe"), 
	`lua_îr‹
(L), 0))

	)

163 
	#lua_uƒef
(
L
,
ªf
Ë
	`luaL_uƒef
(L, 
LUA_REGISTRYINDEX
, (ªf))

	)

165 
	#lua_gëªf
(
L
,
ªf
Ë
	`lua_øwgëi
(L, 
LUA_REGISTRYINDEX
, (ªf))

	)

168 
	#luaL_ªg
 
luaL_Reg


	)

	@/usr/include/libtaomee/lua/lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION
 "Lu®5.1"

	)

20 
	#LUA_VERSION_NUM
 501

	)

21 
	#LUA_COPYRIGHT
 "C›yrighà(CË1994-2006 Lua.‹g, PUC-Rio"

	)

22 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedÿ& W. Cñes"

	)

26 
	#LUA_SIGNATURE
 "\033Lua"

	)

29 
	#LUA_MULTRET
 (-1)

	)

35 
	#LUA_REGISTRYINDEX
 (-10000)

	)

36 
	#LUA_ENVIRONINDEX
 (-10001)

	)

37 
	#LUA_GLOBALSINDEX
 (-10002)

	)

38 
	#lua_upvÆueödex
(
i
Ë(
LUA_GLOBALSINDEX
-(i))

	)

42 
	#LUA_YIELD
 1

	)

43 
	#LUA_ERRRUN
 2

	)

44 
	#LUA_ERRSYNTAX
 3

	)

45 
	#LUA_ERRMEM
 4

	)

46 
	#LUA_ERRERR
 5

	)

49 
lua_Sèã
 
	tlua_Sèã
;

51 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

57 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

59 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° * 
	tp
, 
	tsize_t
 
	tsz
, * 
	tud
);

65 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

71 
	#LUA_TNONE
 (-1)

	)

73 
	#LUA_TNIL
 0

	)

74 
	#LUA_TBOOLEAN
 1

	)

75 
	#LUA_TLIGHTUSERDATA
 2

	)

76 
	#LUA_TNUMBER
 3

	)

77 
	#LUA_TSTRING
 4

	)

78 
	#LUA_TTABLE
 5

	)

79 
	#LUA_TFUNCTION
 6

	)

80 
	#LUA_TUSERDATA
 7

	)

81 
	#LUA_TTHREAD
 8

	)

86 
	#LUA_MINSTACK
 20

	)

92 #i‡
	`deföed
(
LUA_USER_H
)

93 #ö˛udê
LUA_USER_H


98 
LUA_NUMBER
 
	tlua_Numbî
;

102 
LUA_INTEGER
 
	tlua_I¡egî
;

109 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

110 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

111 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

113 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

119 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

120 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

121 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

122 
LUA_API
 (
lua_ªmove
Ë(
lua_Sèã
 *
L
, 
idx
);

123 
LUA_API
 (
lua_ö£π
Ë(
lua_Sèã
 *
L
, 
idx
);

124 
LUA_API
 (
lua_ª∂a˚
Ë(
lua_Sèã
 *
L
, 
idx
);

125 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
);

127 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

134 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

135 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

136 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

137 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

138 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

139 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

141 
LUA_API
 (
lua_equÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

142 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

143 
LUA_API
 (
lua_Às°h™
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

145 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

146 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

147 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

148 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

149 
LUA_API
 
	$size_t
 (
lua_objÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

150 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

151 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

152 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

153 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

160 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

161 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

162 
LUA_API
 (
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
l
);

163 
LUA_API
 (
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

164 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

165 
va_li°
 
¨gp
);

166 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

167 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

168 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

169 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

170 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

176 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

178 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

179 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

180 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

181 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

182 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

183 
LUA_API
 (
lua_gë„nv
Ë(
lua_Sèã
 *
L
, 
idx
);

189 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

190 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

191 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

192 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

193 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

194 
LUA_API
 (
lua_£t„nv
Ë(
lua_Sèã
 *
L
, 
idx
);

200 
LUA_API
 (
lua_ˇŒ
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
);

201 
LUA_API
 (
lua_pˇŒ
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
);

202 
LUA_API
 (
lua_˝ˇŒ
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
func
, *
ud
);

203 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

204 c⁄° *
chunk«me
);

206 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
);

212 
LUA_API
 (
lua_yõld
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
);

213 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
, 
«rg
);

214 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

220 
	#LUA_GCSTOP
 0

	)

221 
	#LUA_GCRESTART
 1

	)

222 
	#LUA_GCCOLLECT
 2

	)

223 
	#LUA_GCCOUNT
 3

	)

224 
	#LUA_GCCOUNTB
 4

	)

225 
	#LUA_GCSTEP
 5

	)

226 
	#LUA_GCSETPAUSE
 6

	)

227 
	#LUA_GCSETSTEPMUL
 7

	)

229 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

236 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

238 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

240 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

242 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

243 
LUA_API
 
	`lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

253 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

255 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

257 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

259 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

261 
	#lua_°æí
(
L
,
i
Ë
	`lua_objÀn
(L, (i))

	)

263 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

264 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

265 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

266 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

267 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

268 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

269 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

270 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

272 
	#lua_pushlôîÆ
(
L
, 
s
) \

273 
	`lua_pushl°rög
(
L
, "" 
s
, ((s)/())-1)

	)

275 
	#lua_£tglobÆ
(
L
,
s
Ë
	`lua_£tfõld
(L, 
LUA_GLOBALSINDEX
, (s))

	)

276 
	#lua_gëglobÆ
(
L
,
s
Ë
	`lua_gëfõld
(L, 
LUA_GLOBALSINDEX
, (s))

	)

278 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

286 
	#lua_›í
(Ë
	`luaL_√w°©e
()

	)

288 
	#lua_gëªgi°ry
(
L
Ë
	`lua_pushvÆue
(L, 
LUA_REGISTRYINDEX
)

	)

290 
	#lua_gëgccou¡
(
L
Ë
	`lua_gc
(L, 
LUA_GCCOUNT
, 0)

	)

292 
	#lua_Chunkªadî
 
lua_Ródî


	)

293 
	#lua_Chunkwrôî
 
lua_Wrôî


	)

307 
	#LUA_HOOKCALL
 0

	)

308 
	#LUA_HOOKRET
 1

	)

309 
	#LUA_HOOKLINE
 2

	)

310 
	#LUA_HOOKCOUNT
 3

	)

311 
	#LUA_HOOKTAILRET
 4

	)

317 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

318 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

319 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

320 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

322 
lua_Debug
 
	tlua_Debug
;

326 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

329 
LUA_API
 
	`lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

330 
LUA_API
 
	`lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

331 
LUA_API
 c⁄° *
	`lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

332 
LUA_API
 c⁄° *
	`lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

333 
LUA_API
 c⁄° *
	`lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
);

334 
LUA_API
 c⁄° *
	`lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
);

336 
LUA_API
 
	`lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

337 
LUA_API
 
lua_Hook
 
	`lua_gëhook
 (
lua_Sèã
 *
L
);

338 
LUA_API
 
	`lua_gëhookmask
 (
lua_Sèã
 *
L
);

339 
LUA_API
 
	`lua_gëhookcou¡
 (
lua_Sèã
 *
L
);

342 
	slua_Debug
 {

343 
evít
;

344 c⁄° *
«me
;

345 c⁄° *
«mewh©
;

346 c⁄° *
wh©
;

347 c⁄° *
sour˚
;

348 
cuºíéöe
;

349 
nups
;

350 
löedeföed
;

351 
œ°löedeföed
;

352 
sh‹t_§c
[
LUA_IDSIZE
];

354 
i_ci
;

	@/usr/include/libtaomee/lua/luaconf.h

8 #i‚de‡
lc⁄fig_h


9 
	#lc⁄fig_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

27 #i‡
deföed
(
__STRICT_ANSI__
)

28 
	#LUA_ANSI


	)

32 #i‡!
deföed
(
LUA_ANSI
Ë&& deföed(
_WIN32
)

33 
	#LUA_WIN


	)

36 #i‡
deföed
(
LUA_USE_LINUX
)

37 
	#LUA_USE_POSIX


	)

38 
	#LUA_USE_DLOPEN


	)

39 
	#LUA_USE_READLINE


	)

42 #i‡
deföed
(
LUA_USE_MACOSX
)

43 
	#LUA_USE_POSIX


	)

44 
	#LUA_DL_DYLD


	)

54 #i‡
deföed
(
LUA_USE_POSIX
)

55 
	#LUA_USE_MKSTEMP


	)

56 
	#LUA_USE_ISATTY


	)

57 
	#LUA_USE_POPEN


	)

58 
	#LUA_USE_ULONGJMP


	)

71 #i‡
deföed
(
_WIN32
)

76 
	#LUA_LDIR
 "!\\lua\\"

	)

77 
	#LUA_CDIR
 "!\\"

	)

78 
	#LUA_PATH_DEFAULT
 \

79 ".\\?.lua;" 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

80 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\öô.lua"

	)

81 
	#LUA_CPATH_DEFAULT
 \

82 ".\\?.dŒ;" 
LUA_CDIR
"?.dŒ;" LUA_CDIR"lﬂdÆl.dŒ"

	)

85 
	#LUA_ROOT
 "/u§/loˇl/"

	)

86 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/5.1/"

	)

87 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/5.1/"

	)

88 
	#LUA_PATH_DEFAULT
 \

89 "./?.lua;" 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

90 
LUA_CDIR
"?.lua;" LUA_CDIR"?/öô.lua"

	)

91 
	#LUA_CPATH_DEFAULT
 \

92 "./?.so;" 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so"

	)

101 #i‡
deföed
(
_WIN32
)

102 
	#LUA_DIRSEP
 "\\"

	)

104 
	#LUA_DIRSEP
 "/"

	)

120 
	#LUA_PATHSEP
 ";"

	)

121 
	#LUA_PATH_MARK
 "?"

	)

122 
	#LUA_EXECDIR
 "!"

	)

123 
	#LUA_IGMARK
 "-"

	)

131 
	#LUA_INTEGER
 
±rdiff_t


	)

142 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

144 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

145 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

147 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

152 
	#LUA_API
 

	)

157 
	#LUALIB_API
 
LUA_API


	)

169 #i‡
deföed
(
luØŒ_c
)

170 
	#LUAI_FUNC
 

	)

171 
	#LUAI_DATA


	)

173 #ñi‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

174 
	$deföed
(
__ELF__
)

175 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

176 
	#LUAI_DATA
 
LUAI_FUNC


	)

179 
	#LUAI_FUNC
 

	)

180 
	#LUAI_DATA
 

	)

189 
	#LUA_QL
(
x
Ë"'" x "'"

	)

190 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

198 
	#LUA_IDSIZE
 60

	)

207 #i‡
	`deföed
(
lua_c
Ë|| deföed(
luØŒ_c
)

215 #i‡
	`deföed
(
LUA_USE_ISATTY
)

216 
	~<uni°d.h
>

217 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

218 #ñi‡
	`deföed
(
LUA_WIN
)

219 
	~<io.h
>

220 
	~<°dio.h
>

221 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

223 
	#lua_°dö_is_ây
(Ë1

	)

233 
	#LUA_PROMPT
 "> "

	)

234 
	#LUA_PROMPT2
 ">> "

	)

242 
	#LUA_PROGNAME
 "lua"

	)

250 
	#LUA_MAXINPUT
 512

	)

261 #i‡
	`deföed
(
LUA_USE_READLINE
)

262 
	~<°dio.h
>

263 
	~<ªadlöe/ªadlöe.h
>

264 
	~<ªadlöe/hi°‹y.h
>

265 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

266 
	#lua_ßvñöe
(
L
,
idx
) \

267 i‡(
	`lua_°æí
(
L
,
idx
) > 0) \

268 
	`add_hi°‹y
(
	`lua_to°rög
(
L
, 
idx
));

	)

269 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

271 
	#lua_ªadlöe
(
L
,
b
,
p
) \

272 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

273 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

274 
	#lua_ßvñöe
(
L
,
idx
Ë{ ()L; ()idx; 
	}

	)
}

275 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

290 
	#LUAI_GCPAUSE
 200

	)

301 
	#LUAI_GCMUL
 200

	)

310 #unde‡
LUA_COMPAT_GETN


317 #unde‡
LUA_COMPAT_LOADLIB


324 
	#LUA_COMPAT_VARARG


	)

331 
	#LUA_COMPAT_MOD


	)

339 
	#LUA_COMPAT_LSTR
 1

	)

346 
	#LUA_COMPAT_GFIND


	)

354 
	#LUA_COMPAT_OPENLIB


	)

365 #i‡
deföed
(
LUA_USE_APICHECK
)

366 
	~<as£π.h
>

367 
	#luai_≠icheck
(
L
,
o
Ë{ ()L; 
	`as£π
(o); }

	)

369 
	#luai_≠icheck
(
L
,
o
Ë{ ()L; }

	)

379 #i‡
INT_MAX
-20 < 32760

380 
	#LUAI_BITSINT
 16

	)

381 #ñi‡
INT_MAX
 > 2147483640L

383 
	#LUAI_BITSINT
 32

	)

401 #i‡
LUAI_BITSINT
 >= 32

402 
	#LUAI_UINT32
 

	)

403 
	#LUAI_INT32
 

	)

404 
	#LUAI_MAXINT32
 
INT_MAX


	)

405 
	#LUAI_UMEM
 
size_t


	)

406 
	#LUAI_MEM
 
±rdiff_t


	)

409 
	#LUAI_UINT32
 

	)

410 
	#LUAI_INT32
 

	)

411 
	#LUAI_MAXINT32
 
LONG_MAX


	)

412 
	#LUAI_UMEM
 

	)

413 
	#LUAI_MEM
 

	)

423 
	#LUAI_MAXCALLS
 20000

	)

433 
	#LUAI_MAXCSTACK
 2048

	)

455 
	#LUAI_MAXCCALLS
 200

	)

462 
	#LUAI_MAXVARS
 200

	)

469 
	#LUAI_MAXUPVALUES
 60

	)

475 
	#LUAL_BUFFERSIZE
 
BUFSIZ


	)

491 
	#LUA_NUMBER_DOUBLE


	)

492 
	#LUA_NUMBER
 

	)

498 
	#LUAI_UACNUMBER
 

	)

508 
	#LUA_NUMBER_SCAN
 "%lf"

	)

509 
	#LUA_NUMBER_FMT
 "%.14g"

	)

510 
	#lua_numbî2°r
(
s
,
n
Ë
	`•rötf
((s), 
LUA_NUMBER_FMT
, (n))

	)

511 
	#LUAI_MAXNUMBER2STR
 32

	)

512 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

518 #i‡
deföed
(
LUA_CORE
)

519 
	~<m©h.h
>

520 
	#luai_numadd
(
a
,
b
Ë(◊)+(b))

	)

521 
	#luai_numsub
(
a
,
b
Ë(◊)-(b))

	)

522 
	#luai_nummul
(
a
,
b
Ë(◊)*(b))

	)

523 
	#luai_numdiv
(
a
,
b
Ë(◊)/(b))

	)

524 
	#luai_nummod
(
a
,
b
Ë(◊Ë- 
	`Êo‹
(◊)/(b))*(b))

	)

525 
	#luai_numpow
(
a
,
b
Ë(
	`pow
◊,b))

	)

526 
	#luai_numunm
(
a
Ë(-◊))

	)

527 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

528 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

529 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

530 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

544 #i‡
deföed
(
LUA_NUMBER_DOUBLE
Ë&& !deföed(
LUA_ANSI
Ë&& !deföed(
__SSE2__
) && \

545 (
deföed
(
__i386
Ë|| deföed (
_M_IX86
Ë|| 
	$deföed
(
__i386__
))

546 
	uluai_Ca°
 { 
l_d
; 
l_l
; };

547 
	#lua_numbî2öt
(
i
,
d
) \

548 { vﬁ©ûê
luai_Ca°
 
u
; u.
l_d
 = (
d
Ë+ 6755399441055744.0; (
i
Ëu.
l_l
; 
	}

	)
}

549 
	#lua_numbî2öãgî
(
i
,
n
Ë
	`lua_numbî2öt
(i,Ç)

	)

553 
	#lua_numbî2öt
(
i
,
d
Ë((i)=()(d))

	)

554 
	#lua_numbî2öãgî
(
i
,
d
Ë((i)=(
lua_I¡egî
)(d))

	)

568 
	#LUAI_USER_ALIGNMENT_T
 uni⁄ { 
u
; *
s
; 
l
; }

	)

579 #i‡
deföed
(
__˝lu•lus
)

581 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

582 
	#LUAI_TRY
(
L
,
c
,
a
Ë
åy
 {á } 
	`ˇtch
(...) \

583 { i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

584 
	#luai_jmpbuf
 

	)

586 #ñi‡
deföed
(
LUA_USE_ULONGJMP
)

588 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

589 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

590 
	#luai_jmpbuf
 
jmp_buf


	)

594 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

595 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

596 
	#luai_jmpbuf
 
jmp_buf


	)

606 
	#LUA_MAXCAPTURES
 32

	)

617 #i‡
deföed
(
lo¶ib_c
Ë|| deföed(
luØŒ_c
)

619 #i‡
deföed
(
LUA_USE_MKSTEMP
)

620 
	~<uni°d.h
>

621 
	#LUA_TMPNAMBUFSIZE
 32

	)

622 
	#lua_tm≤am
(
b
,
e
) { \

623 
	`°r˝y
(
b
, "/tmp/lua_XXXXXX"); \

624 
e
 = 
	`mk°emp
(
b
); \

625 i‡(
e
 !-1Ë
	`˛o£
(e); \

626 
e
 = (ê=-1); }

	)

629 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

630 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

641 #i‡
deföed
(
LUA_USE_POPEN
)

643 
	#lua_p›í
(
L
,
c
,
m
Ë(()L, 
	`p›í
(c,m))

	)

644 
	#lua_p˛o£
(
L
,
fûe
Ë(()L, (
	`p˛o£
(fûeË!-1))

	)

646 #ñi‡
deföed
(
LUA_WIN
)

648 
	#lua_p›í
(
L
,
c
,
m
Ë(()L, 
	`_p›í
(c,m))

	)

649 
	#lua_p˛o£
(
L
,
fûe
Ë(()L, (
	`_p˛o£
(fûeË!-1))

	)

653 
	#lua_p›í
(
L
,
c
,
m
) (()(()c, m), \

654 
	`luaL_îr‹
(
L
, 
	`LUA_QL
("p›í"Ë"ÇŸ suµ‹ãd"), (
FILE
*)0)

	)

655 
	#lua_p˛o£
(
L
,
fûe
Ë(()(()L, fûe), 0)

	)

673 #i‡
deföed
(
LUA_USE_DLOPEN
)

674 
	#LUA_DL_DLOPEN


	)

677 #i‡
deföed
(
LUA_WIN
)

678 
	#LUA_DL_DLL


	)

688 
	#LUAI_EXTRASPACE
 0

	)

696 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

697 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

698 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

699 
	#luai_u£r°©e‰ì
(
L
Ë(()L)

	)

700 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

701 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

712 #i‡
deföed
(
LUA_USELONGLONG
)

714 
	#LUA_INTFRMLEN
 "Œ"

	)

715 
	#LUA_INTFRM_T
 

	)

719 
	#LUA_INTFRMLEN
 "l"

	)

720 
	#LUA_INTFRM_T
 

	)

	@/usr/include/libtaomee/lua/lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
	#LUA_FILEHANDLE
 "FILE*"

	)

18 
	#LUA_COLIBNAME
 "c‹outöe"

	)

19 
LUALIB_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

21 
	#LUA_TABLIBNAME
 "èbÀ"

	)

22 
LUALIB_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

24 
	#LUA_IOLIBNAME
 "io"

	)

25 
LUALIB_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

27 
	#LUA_OSLIBNAME
 "os"

	)

28 
LUALIB_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

30 
	#LUA_STRLIBNAME
 "°rög"

	)

31 
LUALIB_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

33 
	#LUA_MATHLIBNAME
 "m©h"

	)

34 
LUALIB_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

36 
	#LUA_DBLIBNAME
 "debug"

	)

37 
LUALIB_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

39 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

40 
LUALIB_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

44 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

48 #i‚de‡
lua_as£π


49 
	#lua_as£π
(
x
Ë(()0)

	)

	@/usr/include/libtaomee/project/constants.h

14 #i‚de‡
TAOMEE_PRJ_CONSTANTS_H_


15 
	#TAOMEE_PRJ_CONSTANTS_H_


	)

17 #ifde‡
__˝lu•lus


23 
ba£_u£r_id
 = 50000,

25 
ba£_gue°_id
 = 2000000001

28 #ifde‡
LOGIN_DES_KEY


29 #unde‡
LOGIN_DES_KEY


35 #ifde‡
TW_VER


36 
	#LOGIN_DES_KEY
 ",.è0me>"

	)

38 
	#LOGIN_DES_KEY
 "!tA:mEv,"

	)

41 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/project/stat_agent/msglog.h

16 #i‚de‡
TAOMEE_PRJ_MSGLOG_H_


17 
	#TAOMEE_PRJ_MSGLOG_H_


	)

19 #ifde‡
__˝lu•lus


23 
	~<°döt.h
>

25 
	smesßge_hódî
 {

26 
uöt16_t
 
Àn
;

27 
hÀn
;

28 
Êag0
;

29 
uöt32_t
 
Êag
;

30 
uöt32_t
 
ßddr
;

31 
uöt32_t
 
£qno
;

32 
uöt32_t
 
ty≥
;

33 
uöt32_t
 
time°amp
;

36 
mesßge_hódî
 
	tmesßge_hódî_t
;

47 
msglog
(c⁄° * 
logfûe
, 
uöt32_t
 
ty≥
, uöt32_à
time°amp
, c⁄° * 
d©a
, 
Àn
);

49 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/project/types.h

14 #i‚de‡
TAOMEE_PRJ_TYPES_H_


15 
	#TAOMEE_PRJ_TYPES_H_


	)

17 #ifde‡
__˝lu•lus


21 
	~<°döt.h
>

26 
uöt32_t
 
	tu£rid_t
;

28 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/project/utilities.h

14 #i‚de‡
TAOMEE_PRJ_UTILITIES_H_


15 
	#TAOMEE_PRJ_UTILITIES_H_


	)

17 #ifde‡
__˝lu•lus


21 
	~<time.h
>

23 
	~<libèomì/¸y±/qdes.h
>

25 
	~"c⁄°™ts.h
"

26 
	~"ty≥s.h
"

33 
ölöe
 
is_gue°_id
(
u£rid_t
 
uid
)

35  (
uid
 >
ba£_gue°_id
);

43 
ölöe
 
is_vÆid_uid
(
u£rid_t
 
uid
)

45  ((
uid
 < 
ba£_gue°_id
Ë&& (uid >
ba£_u£r_id
));

56 
ölöe
 
í¸y±_logö_£ssi⁄
(* 
buf
, 
buÊí
, 
u£rid_t
 
uid
, 
uöt32_t
 
ù
)

58 
uöt32_t
 
öbuf
[4];

60 
öbuf
[0] = 
ù
;

61 
öbuf
[1] = 
time
(0);

62 
öbuf
[2] = 
uid
;

63 
öbuf
[3] = inbuf[1];

65 
des_í¸y±_n
(
LOGIN_DES_KEY
, 
öbuf
, 
buf
, 2);

67  (
öbuf
);

76 
ölöe
 
vîify_logö_£ssi⁄
(
u£rid_t
 
uid
, c⁄° * 
£ss
)

78 
uöt32_t
 
outbuf
[4];

79 
des_de¸y±_n
(
LOGIN_DES_KEY
, 
£ss
, 
outbuf
, 2);

81 
time_t
 
diff
 = 
time
(0Ë- 
outbuf
[1];

84 i‡((
outbuf
[2] !
uid
Ë|| (outbuf[1] !outbuf[3]Ë|| (
diff
 > 1800) || (diff < -1800)) {

91 #ifde‡
__˝lu•lus


	@/usr/include/libtaomee/random/random.h

14 #i‚de‡
LIBTAOMEE_RANDOM_HPP_


15 
	#LIBTAOMEE_RANDOM_HPP_


	)

17 
	~<°dlib.h
>

25 
ölöe
 
	$ønged_øndom
(
mö
, 
max
)

28  (
	`ønd
(Ë% (
max
 - 
mö
 + 1)) + min;

29 
	}
}

	@/usr/include/libtaomee/time/time.h

14 #i‚de‡
LIBTAOMEE_TIME_H_


15 
	#LIBTAOMEE_TIME_H_


	)

17 
	~<time.h
>

26 
ölöe
 
time_t


27 
	$mk_öãgøl_tm_hr
(
tm
 
tm_cur
)

29 
tm_cur
.
tm_mö
 = 0;

30 
tm_cur
.
tm_£c
 = 0;

32  
	`mktime
(&
tm_cur
);

33 
	}
}

46 
time_t
 
mk_öãgøl_tm_day
(
tm
 
tm_cur
, 
mday
, 
m⁄th
);

	@/usr/include/libtaomee/timer.h

14 #i‚de‡
TAOMEE_TIMER_H_


15 
	#TAOMEE_TIMER_H_


	)

18 
	~<°dlib.h
>

19 
	~<time.h
>

21 
	~<°döt.h
>

23 
	~<sys/time.h
>

25 
	~<glib.h
>

27 
	~<libèomì/li°.h
>

30 
timevÆ
 
now
;

31 
tm
 
tm_cur
;

37 (*
	ttimî_cb_func_t
)(*, *);

48 
	stimî_°ru˘
 {

49 
li°_hód
 
íåy
;

50 
li°_hód
 
•rôe_li°
;

52 
time_t
 
expúe
;

53 * 
ow√r
;

54 * 
d©a
;

55 
timî_cb_func_t
 
fun˘i⁄
;

56 
func_ödx
;

57 } 
	ttimî_°ru˘_t
 ;

68 
	smi¸o_timî_°ru˘
 {

69 
li°_hód
 
íåy
;

71 
timevÆ
 
tv
;

72 * 
ow√r
;

73 * 
d©a
;

74 
timî_cb_func_t
 
fun˘i⁄
;

75 
func_ödx
;

76 } 
	tmi¸o_timî_°ru˘_t
 ;

88 
	etimî_add_mode
 {

90 
timî_add_√w_timî
,

92 
timî_ª∂a˚_timî
,

94 
ADD_EVENT
 = 
timî_add_√w_timî
,

95 
ADD_EVENT_REPLACE_UNCONDITIONALLY
 = 
timî_ª∂a˚_timî


96 } 
	ttimî_add_mode_t
;

102 
	`£tup_timî
();

107 
	`de°roy_timî
();

109 
	`sˇn_£c⁄ds_timî
();

110 
	`sˇn_mi¸o£c⁄ds_timî
();

111 
ölöe
 
	`ª√w_now
();

117 
ölöe
 

118 
	$h™dÀ_timî
()

120 
time_t
 
œ°
 = 0;

122 
	`ª√w_now
();

124 i‡(
œ°
 !
now
.
tv_£c
) {

125 
œ°
 = 
now
.
tv_£c
;

126 
	`sˇn_£c⁄ds_timî
();

129 
	`sˇn_mi¸o£c⁄ds_timî
();

130 
	}
}

147 
timî_°ru˘_t
*

148 
add_evít
(
li°_hód_t
* 
hód
, 
timî_cb_func_t
 
func
, * 
ow√r
, * 
d©a
, 
time_t
 
expúe
, 
timî_add_mode_t
 
Êag
);

165 
timî_°ru˘_t
*

166 
add_evít_ex
(
li°_hód_t
* 
hód
, 
fidx
, * 
ow√r
, * 
d©a
, 
time_t
 
expúe
, 
timî_add_mode_t
 
Êag
);

181 
	#ADD_TIMER_EVENT
(
ow√r_
, 
func_
, 
d©a_
, 
ex±m_
) \

182 
	`add_evít
–&((
ow√r_
)->
timî_li°
), (
func_
), (ow√r_), (
d©a_
), (
ex±m_
), 
timî_add_√w_timî
)

	)

197 
	#ADD_TIMER_EVENT_EX
(
ow√r_
, 
fidx_
, 
d©a_
, 
ex±m_
) \

198 
	`add_evít_ex
–&((
ow√r_
)->
timî_li°
), (
fidx_
), (ow√r_), (
d©a_
), (
ex±m_
), 
timî_add_√w_timî
)

	)

206 
mod_expúe_time
(
timî_°ru˘_t
* 
tmr
, 
time_t
 
ex±m
);

208 
ölöe
 

209 
	$do_ªmove_timî
(
timî_°ru˘_t
* 
t
, 
‰ìd
)

211 i‡(
t
->
•rôe_li°
.
√xt
 != 0) {

212 
	`li°_dñ
(&
t
->
•rôe_li°
);

214 i‡(
‰ìd
) {

215 
	`li°_dñ
(&
t
->
íåy
);

216 
	`g_¶i˚_‰ì1
( *
t
,Å);

218 
t
->
fun˘i⁄
 = 0;

219 
t
->
func_ödx
 = 0;

221 
	}
}

228 
ölöe
 

229 
	$ªmove_timîs
(
li°_hód_t
* 
hód
)

231 
timî_°ru˘_t
 *
t
;

232 
li°_hód_t
 *
l
, *
m
;

234 
	`li°_f‹_óch_ß„
 (
l
, 
m
, 
hód
) {

235 
t
 = 
	`li°_íåy
 (
l
, 
timî_°ru˘_t
, 
•rôe_li°
);

236 
	`do_ªmove_timî
(
t
, 0);

238 
	}
}

246 
	#REMOVE_TIMER
(
timî_
) \

247 
	`do_ªmove_timî
((
timî_
), 0)

	)

258 
mi¸o_timî_°ru˘_t
*

259 
add_mi¸o_evít
(
timî_cb_func_t
 
func
, c⁄° 
timevÆ
* 
tv
, * 
ow√r
, * 
d©a
);

270 
mi¸o_timî_°ru˘_t
*

271 
add_mi¸o_evít_ex
(
fidx
, c⁄° 
timevÆ
* 
tv
, * 
ow√r
, * 
d©a
);

273 
ölöe
 

274 
	$ªmove_mi¸o_timî
(
mi¸o_timî_°ru˘_t
 *
t
, 
‰ìd
)

276 i‡(
‰ìd
) {

277 
	`li°_dñ_öô
(&
t
->
íåy
);

278 
	`g_¶i˚_‰ì1
( *
t
,Å);

280 
t
->
fun˘i⁄
 = 0;

281 
t
->
func_ödx
 = 0;

283 
	}
}

290 
ªmove_mi¸o_timîs
(* 
ow√r
);

298 
	#REMOVE_MICRO_TIMER
(
timî_
) \

299 
	`ªmove_mi¸o_timî
((
timî_
), 0)

	)

307 
	#REMOVE_TIMERS
(
ow√r_
) \

308 
	`ªmove_timîs
(&((
ow√r_
)->
timî_li°
)), 
	`ªmove_mi¸o_timîs
((ow√r_))

	)

314 
ölöe
 

315 
	$ª√w_now
()

317 
	`gëtimeofday
(&
now
, 0);

318 
	`loˇ…ime_r
(&
now
.
tv_£c
, &
tm_cur
);

319 
	}
}

328 
ölöe
 c⁄° 
timevÆ
*

329 
	$gë_now_tv
()

331  &
now
;

332 
	}
}

341 
ölöe
 c⁄° 
tm
*

342 
	$gë_now_tm
()

344  &
tm_cur
;

345 
	}
}

353 
ªgi°î_timî_ˇŒback
(
nbr
, 
timî_cb_func_t
 
cb
);

358 
uƒegi°î_timîs_ˇŒback
();

363 
ª‰esh_timîs_ˇŒback
();

	@/usr/include/libtaomee/tlog/fileutils.h

1 #i‚de‡
__FILEUTILS_H__


2 
	#__FILEUTILS_H__


	)

6 
	mFILE_ERROR_EXIST
,

7 
	mFILE_ERROR_ISDIR
,

8 
	mFILE_ERROR_ACCES
,

9 
	mFILE_ERROR_NAMETOOLONG
,

10 
	mFILE_ERROR_NOENT
,

11 
	mFILE_ERROR_NOTDIR
,

12 
	mFILE_ERROR_NXIO
,

13 
	mFILE_ERROR_NODEV
,

14 
	mFILE_ERROR_ROFS
,

15 
	mFILE_ERROR_TXTBSY
,

16 
	mFILE_ERROR_FAULT
,

17 
	mFILE_ERROR_LOOP
,

18 
	mFILE_ERROR_NOSPC
,

19 
	mFILE_ERROR_NOMEM
,

20 
	mFILE_ERROR_MFILE
,

21 
	mFILE_ERROR_NFILE
,

22 
	mFILE_ERROR_BADF
,

23 
	mFILE_ERROR_INVAL
,

24 
	mFILE_ERROR_PIPE
,

25 
	mFILE_ERROR_AGAIN
,

26 
	mFILE_ERROR_INTR
,

27 
	mFILE_ERROR_IO
,

28 
	mFILE_ERROR_PERM
,

29 
	mFILE_ERROR_NOSYS
,

30 
	mFILE_ERROR_FAILED


31 } 
	tTFûeEº‹
;

38 
	mFILE_TEST_IS_REGULAR
 = 1 << 0,

39 
	mFILE_TEST_IS_SYMLINK
 = 1 << 1,

40 
	mFILE_TEST_IS_DIR
 = 1 << 2,

41 
	mFILE_TEST_IS_EXECUTABLE
 = 1 << 3,

42 
	mFILE_TEST_EXISTS
 = 1 << 4

43 } 
	tTFûeTe°
;

45 
	#DIR_SEPARATOR
 '/'

	)

46 
	#IS_DIR_SEPARATOR
(
_c
Ë((_cË=
DIR_SEPARATOR
)

	)

55 
éog_is_absﬁuã_∑th
 (c⁄° *
fûe_«me
);

64 *
éog_∑th_skù_roŸ
 (c⁄° *
fûe_«me
);

73 
éog_fûe_ã°
 (c⁄° *
fûíame
, 
TFûeTe°
 
ã°
);

86 
éog_mkdú_wôh_∑ª¡s
 (c⁄° *
∑th«me
, 
mode
);

	@/usr/include/libtaomee/tlog/netutils.h

1 #i‚de‡
__NETUTILS_H__


2 
	#__NETUTILS_H__


	)

5 
	~"éog_de˛.h
"

8 
	eloggî_cmd
 {

9 
	mlc_£t_åa˚_uid
 = 1001,

10 
	mlc_un£t_åa˚_uid
 = 1002,

11 
	mlc_£t_åa˚_addr
 = 1003,

12 
	mlc_£t_øã_limô
 = 1004,

16 #¥agm®
∑ck
(1)

18 
	s_loggî_˘æ_pkg
 {

19 
uöt32_t
 
	mÀn
;

20 
uöt32_t
 
	mvî
;

21 
uöt32_t
 
	mcmd
;

22 
uöt32_t
 
	muid
;

23 
uöt32_t
 
	m£q
;

24 
uöt8_t
 
	mbody
[];

25 } 
	tloggî_˘æ_pkg_t
;

27 
	s_pkg_åa˚_uid
 {

29 
uöt32_t
 
	muid
;

31 
öt32_t
 
	mli„_time
;

32 } 
	tpkg_åa˚_uid_t
;

34 
	s_loggî_£t_åa˚_uid
 {

36 
uöt32_t
 
	mcou¡
;

37 
pkg_åa˚_uid_t
 
	mpkg_åa˚_uid
[];

38 } 
	tloggî_£t_åa˚_uid_t
;

40 
	s_loggî_£t_åa˚_addr
 {

41 
	mù
[
INET_ADDRSTRLEN
];

42 
uöt16_t
 
	mp‹t
;

43 } 
	tloggî_£t_åa˚_addr
;

45 
	s_loggî_£t_øã_limô
 {

46 
öt32_t
 
	mlimô
;

47 } 
	tloggî_£t_øã_limô
;

50 #¥agm®
∑ck
()

55 
éog_£t_sockë_n⁄block
(
sock
);

56 
éog_£t_sockë_ªu£addr
(
sock
);

57 
add_to_åa˚_uid_li°
(
time_t
 
now
, 
pkg_åa˚_uid_t
 *
pkg_åa˚_uid
);

58 
do_£t_åa˚_uid
(
fd
, 
time_t
 
now
, 
loggî_˘æ_pkg_t
 *
pkg
,

59 
sockaddr_ö
 *
‰om
, 
sockÀn_t
 
‰omÀn
);

60 
¥oc_loggî_pkg
(
fd
, 
time_t
 
now
, *
ªcvbuf
, 
ssize_t
 
Àn
,

61 
sockaddr_ö
 *
‰om
, 
sockÀn_t
 
‰omÀn
);

63 
éog_⁄_idÀ
();

65 
éog_mˇ°_joö
(
mfd
, c⁄° 
sockaddr
 *
gΩaddr
,

66 
sockÀn_t
 
gΩaddæí
, c⁄° *
ëhx
);

67 
éog_¸óã_mˇ°_sockë
(c⁄° *
mˇ°_ù
, 
gameid
, c⁄° *
ëhx
);

69 *
udp_sök_£rvî
(*
¨gs
);

71 
upd©e_udp_sök_sockaddr
();

72 
öô_loggî_udp_sök_£ndfd
();

74 
£ndlog_to_udp_sök
(c⁄° *
buf„r
, 
Àn
);

75 
éog_gë_loˇl_ëh_ù
(c⁄° *
ëh
, 
ö_addr
 *
addr
);

76 
éog_gë_loˇl_ëh_ù°r
(c⁄° *
ëh
, *
ùbuf
);

	@/usr/include/libtaomee/tlog/tlog.h

1 #i‚de‡
__TLOG_H__


2 
	#__TLOG_H__


	)

5 
	~"éog_ma¸os.h
"

6 
	~"éog_de˛.h
"

10 
	#INIT_DEFAULT_LOGGER_SYSTEM
(
_logdú
, 
_pfx
, 
_svc
, 
_gameid
, 
_svπp
) \

12 
_ªt
; \

13 
_ªt
 = 
	`öô_loggî_˘æ_cfg
(
def_log_Àvñ
, 
def_daûy_max_fûes
, \

14 
def_max_⁄e_size
, 
def_°›_if_diskfuŒ
, 
def_time_¶i˚_£cs
); \

15 i‡(
_ªt
 < 0Ë{ 
	`Ârötf
(
°dîr
, "FaûedÅÿöô cål_cfg\n"); 
	`exô
(-1); } \

16 
_ªt
 = 
	`öô_loogî_svc_öfo
(
_svc
, 
_gameid
, 
_svπp
); \

17 i‡(
_ªt
 < 0Ë{ 
	`Ârötf
(
°dîr
, "FaûedÅÿöô svc_öfo\n"); 
	`exô
(-1); } \

18 
_ªt
 = 
	`öô_loggî
(
_logdú
, 
_pfx
); \

19 i‡(
_ªt
 < 0Ë{ 
	`Ârötf
(
°dîr
, "FaûedÅÿöô_loggî\n"); 
	`exô
(-1); } \

20 } 0)

	)

26 
öô_loggî_˘æ_cfg
(
lvl
, 
daûy_max_fûes
, 
size_t
 
max_⁄e_size
,

27 
°›_if_diskfuŒ
, 
time_¶i˚_£cs
);

28 
öô_loogî_svc_öfo
(c⁄° *
sv˙ame
, 
gameid
, c⁄° *
svπy≥
);

29 
öô_loggî
(c⁄° *
dú
, c⁄° *
¥efix
);

31 
wrôe_to_loggî
(
lvl
, c⁄° *
logty≥
,

32 
uöt32_t
 
uid
, uöt32_à
Êag
, c⁄° *
fmt
, ...);

34 
boŸ_éog
(
ok
, 
dummy
, c⁄° *
fmt
, ...);

38 
is_åa˚d_uid
(
uöt32_t
 
uid
);

39 
gí_time°rög
(*
buf
, 
maxÀn
, 
logfûe_t
 *
logfûe
, *
d©edú
);

40 
éog_gë_ho°_«me
(*
ho°«me
, 
maxÀn
);

41 
éog_my_u£r_«me
(*
u£∫ame
, 
maxÀn
);

	@/usr/include/libtaomee/tlog/tlog_decl.h

1 #i‚de‡
__TLOG_DECL_H__


2 
	#__TLOG_DECL_H__


	)

4 
	~<°dio.h
>

5 
	~<f˙é.h
>

6 
	~<î∫o.h
>

7 
	~<îr‹.h
>

8 
	~<uni°d.h
>

9 
	~<sys/ut¢ame.h
>

10 
	~<°rög.h
>

11 
	~<°d¨g.h
>

12 
	~<°dlib.h
>

13 
	~<as£π.h
>

14 
	~<time.h
>

15 
	~<±hªad.h
>

16 
	~<°döt.h
>

17 
	~<sys/ty≥s.h
>

18 
	~<sys/ïﬁl.h
>

19 
	~<√töë/t˝.h
>

20 
	~<√töë/ö.h
>

21 
	~<sys/sockë.h
>

22 
	~<¨∑/öë.h
>

23 
	~<√t/if.h
>

24 
	~<sys/io˘l.h
>

25 
	~<sys/°©.h
>

29 
	#DP
(
_fmt
, 
_¨gs
...) \

31 
	`¥ötf
(
_fmt
"\n", ##
_¨gs
); \

32 } 0)

	)

34 
	#DP
(
_fmt
, 
_¨gs
...Ëdÿ{} 0)

	)

37 
	#éog_likñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 1)

	)

38 
	#éog_u∆ikñy
(
x
Ë
	`__buûtö_ex≥˘
(!!(x), 0)

	)

42 
	#MAX_TRACE_UID_NUM
 (8)

	)

47 
	#MAX_ONE_LOG_SIZE
 (2000)

	)

50 
	#MIN_ONE_LOG_SIZE
 (10)

51 

	)

53 
	#DAILY_MAX_FILES
 (100000)

	)

56 
	#MAX_SLICE_NO
 (9999)

	)

59 
	#TLOG_BUF_SIZE
 (8*1024)

	)

61 
	#MAX_PREFIX_LEN
 (16)

	)

62 
	#MAX_PROCNAME_LEN
 (64)

	)

63 
	#MAX_HOSTNAME_LEN
 (64)

	)

64 
	#MAX_USERNAME_LEN
 (32)

	)

65 
	#MAX_TIMESTR_LEN
 (64)

	)

66 
	#MAX_SVC_NAME_LEN
 (32)

	)

67 
	#MAX_SVRTYPE_LEN
 (32)

	)

68 
	#MAX_BASENAME_LEN
 (
MAX_PROCNAME_LEN
 + 16)

69 
	#MAX_INFOSTR_LEN
 (
MAX_SVC_NAME_LEN
 + 
MAX_SVRTYPE_LEN
 + 
MAX_HOSTNAME_LEN
)

	)

72 
	#CHECK_DISKFULL_DUR
 (10)

	)

75 
	#NIL
 "nû"

	)

79 
	#DONT_SHIFT
 (0)

	)

81 
	#DO_SHIFT
 (1)

	)

84 
	#MIN_TRACE_TIME
 (3)

	)

86 
	#MAX_TRACE_TIME
 (86400)

	)

90 
	#MAX_GAMEID
 (1000)

	)

94 
	#MIN_WAIT_UDP_SINK_TIME
 (2)

	)

96 
	#TLOG_ETH0
 "ëh0"

	)

97 
	#TLOG_ETH1
 "ëh1"

	)

98 
	#TLOG_ETH2
 "ëh2"

	)

100 
	#UDP_SINK_BIND_IP
 "239.0.0.100"

101 
	#BASE_SINK_BIND_PORT
 (31000)

102 
	#UDP_SINK_SEND_PORT
 (27182)

103 

	)

106 
	#MAX_RATE_LIMIT
 (1024*1024)

	)

108 
	#DEF_RATE_LIMIT
 (128*1024)

	)

110 
	#MIN_RATE_LIMIT
 (1024)

	)

112 
	#LOGTYPE_HEAD
 "LOGHEAD"

	)

116 
	eloggî_°©us_t
 {

117 
	mloggî_°©us_nŸöô
 = 0,

118 
	mloggî_°©us_wrôög
 = 1,

119 
	mloggî_°©us_°›
 = 2,

122 
	eloggî_Êag_t
 {

123 
	mloggî_Êag_fûe
 = 0x1,

124 
	mloggî_Êag_udp
 = 0x2,

126 
	mloggî_Êag_f‹˚Êush
 = 0x80000000,

133 
	eéog_lvl
 {

134 
	méog_lvl_mö
 = 0,

137 
	méog_lvl_l⁄g
 = 0,

139 
	méog_lvl_uåa˚
 = 1,

141 
	méog_lvl_Áèl
 = 2,

143 
	méog_lvl_îr‹
 = 3,

145 
	méog_lvl_w¨n
 = 4,

147 
	méog_lvl_öfo
 = 5,

149 
	méog_lvl_debug
 = 6,

151 
	méog_lvl_åa˚
 = 7,

153 
	méog_lvl_max
,

154 } 
	téog_lvl_t
;

156 
	edef_˘æ_cfg_t
 {

157 
	mdef_log_Àvñ
 = 
éog_lvl_debug
,

158 
	mdef_daûy_max_fûes
 = 0,

159 
	mdef_max_⁄e_size
 = 100,

160 
	mdef_°›_if_diskfuŒ
 = 1,

161 
	mdef_time_¶i˚_£cs
 = 900,

166 
	s_loggî_svc_öfo
 {

168 
	möô
;

170 
	msv˙ame
[
MAX_SVC_NAME_LEN
];

172 
	mgameid
;

174 
	msvπy≥
[
MAX_SVRTYPE_LEN
];

176 
	m¥o˙ame
[
MAX_PROCNAME_LEN
];

177 
	mho°«me
[
MAX_HOSTNAME_LEN
];

178 } 
	tloggî_svc_öfo_t
;

181 
	s_loggî_˘æ_cfg
 {

183 
	möô
;

185 
éog_lvl_t
 
	mlog_Àvñ
;

187 
öt32_t
 
	mdaûy_max_fûes
;

189 
size_t
 
	mmax_⁄e_size
;

191 
	m°›_if_diskfuŒ
;

193 
öt32_t
 
	mtime_¶i˚_£cs
;

194 } 
	tloggî_˘æ_cfg_t
;

196 
	s_logfûe_öfo
 {

198 
éog_lvl_t
 
	mmy_lvl
;

200 
	mfd
;

203 
öt32_t
 
	mdaûy_£q
;

205 
öt32_t
 
	mtime_¶i˚_£q
;

207 
öt32_t
 
	mtime_¶i˚_no
;

209 
öt32_t
 
	mtm_yday
;

212 
	mba£«me
[
MAX_BASENAME_LEN
];

214 
	mba£Àn
;

217 
	möfo°r
[
MAX_INFOSTR_LEN
];

219 
	möfo°æí
;

222 
öt64_t
 
	mfûe_Àn
;

223 } 
	tlogfûe_t
;

228 
	s_loggî
 {

230 
uöt32_t
 
	m°©us
;

232 
time_t
 
	mœ°_check_diskfuŒ_time
;

235 
	mlogdú
[
FILENAME_MAX
];

237 
	m¥efix
[
MAX_PREFIX_LEN
];

240 
uöt8_t
 
	mu£_√t_˘æ
;

243 
±hªad_t
 
	mthªad
;

246 
time_t
 
	mnow
;

248 
tm
 
	mtm_now
;

251 
logfûe_t
 
	mlogfûe
[
éog_lvl_max
];

253 } 
	tloggî_t
;

259 
	s_åa˚_uid
 {

261 
uöt32_t
 
	muid
;

263 
öt32_t
 
	mexpúe_time
;

264 } 
	tåa˚_uid_t
;

266 
	s_øã_limô
 {

268 
time_t
 
	mœ°_øã_time
;

270 
öt32_t
 
	mtokí
;

272 
öt32_t
 
	mlimô
;

274 
öt32_t
 
	mchg_limô
;

275 } 
	tøã_limô_t
;

278 
	s_loggî_udp_sök
 {

280 
	m£ndfd
;

282 
sockaddr_ö
 
	mtﬂddr
;

284 
	mù
[
INET_ADDRSTRLEN
];

286 
uöt16_t
 
	mp‹t
;

289 
	maddr_ch™ged
;

292 
øã_limô_t
 
	møã_limô
;

294 
åa˚_uid_t
 
	måa˚_uid_li°
[
MAX_TRACE_UID_NUM
];

295 
	mªcvbuf
[8192];

296 
	m£ndbuf
[8192];

297 } 
	tloggî_udp_sök_t
;

300 
loggî_˘æ_cfg_t
 *
˘æ_cfg
;

301 
loggî_svc_öfo_t
 *
svc_öfo
;

302 
loggî_udp_sök_t
 *
udp_sök
;

303 
loggî_t
 *
loggî
;

	@/usr/include/libtaomee/tlog/tlog_macros.h

1 #i‚de‡
__TLOG_MACROS_H__


2 
	#__TLOG_MACROS_H__


	)

26 
	#TLOG_EVERY_N_VARNAME_CONCAT
(
ba£
, 
löe
Ëba£ ## 
	)
line

27 
	#TLOG_EVERY_N_VARNAME
(
ba£
, 
löe
Ë
	`TLOG_EVERY_N_VARNAME_CONCAT
(ba£,Üöe)

	)

28 
	#TLOG_LINE_VARNAME
 
	`TLOG_EVERY_N_VARNAME
(
occuºí˚s_
, 
__LINE__
)

	)

29 
	#TLOG_LINE_VARNAME_MOD_N
 
	`TLOG_EVERY_N_VARNAME
(
occuºí˚s_mod_n_
, 
__LINE__
)

	)

31 
	#TLOG_EVERY_N
(
lvl
, 
n
, 
Êag
, 
fmt
, 
¨gs
...) \

33 
TLOG_LINE_VARNAME
 = 0, 
TLOG_LINE_VARNAME_MOD_N
 = 0; \

34 ++
TLOG_LINE_VARNAME
; \

35 i‡(++
TLOG_LINE_VARNAME_MOD_N
 > 
n
) TLOG_LINE_VARNAME_MOD_N -=Ç; \

36 i‡(
TLOG_LINE_VARNAME_MOD_N
 == 1) { \

37 
	`wrôe_to_loggî
(
lvl
, 
NULL
, 0, 
Êag
, 
fmt
, ##
¨gs
); \

39 } 0)

	)

41 
	#TLOG_FIRST_N
(
lvl
, 
n
, 
Êag
, 
fmt
, 
¨gs
...) \

43 
TLOG_LINE_VARNAME
 = 0; \

44 i‡(
TLOG_LINE_VARNAME
 < 
n
) {\

45 ++
TLOG_LINE_VARNAME
; \

46 
	`wrôe_to_loggî
(
lvl
, 
NULL
, 0, 
Êag
, 
fmt
, ##
¨gs
); \

48 } 0)

	)

50 
	#TLOG_IF
(
lvl
, 
c⁄dôi⁄
, 
Êag
, 
fmt
, 
¨gs
...) \

51 !(
c⁄dôi⁄
Ë? (Ë0 : 
	`wrôe_to_loggî
(
lvl
, 
NULL
, 0, 
Êag
, 
fmt
, ##
¨gs
)

	)

60 
	#BOOT_TLOG
(
fmt
, 
¨gs
...) \

62 
	`boŸ_éog
(0, 0, 
fmt
, ##
¨gs
); \

63 } 0)

	)

67 
	#RT_BOOT_TLOG
(
π
, 
fmt
, 
¨gs
...) \

69 
	`boŸ_éog
(
π
, 0, 
fmt
, ##
¨gs
); \

70  
π
; \

71 } 0)

	)

80 
	#LONG_TLOG
(
logty≥
, 
uid
, 
fmt
, 
¨gs
...) \

82 
	`wrôe_to_loggî
(
éog_lvl_l⁄g
, 
logty≥
, 
uid
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

83 } 0)

	)

92 
	#UTRACE_TLOG
(
uid
, 
fmt
, 
¨gs
...) \

94 i‡(
	`is_åa˚d_uid
(
uid
)) { \

95 
uöt32_t
 
__Êag
 = 
loggî_Êag_fûe
 | 
loggî_Êag_udp
; \

96 
	`wrôe_to_loggî
(
éog_lvl_uåa˚
, 
NULL
, 
uid
, 
__Êag
, 
fmt
"\n", ##
¨gs
); \

98 } 0)

	)

107 
	#FATAL_TLOG
(
fmt
, 
¨gs
...) \

109 
	`wrôe_to_loggî
(
éog_lvl_Áèl
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

110 } 0)

	)

113 
	#RT_FATAL_TLOG
(
π
, 
fmt
, 
¨gs
...) \

115 
	`wrôe_to_loggî
(
éog_lvl_Áèl
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

116  
π
; \

117 } 0)

	)

120 
	#RTV_FATAL_TLOG
(
fmt
, 
¨gs
...) \

122 
	`wrôe_to_loggî
(
éog_lvl_Áèl
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

124 } 0)

	)

127 
	#EXIT_FATAL_TLOG
(
ex
, 
fmt
, 
¨gs
...) \

129 
	`wrôe_to_loggî
(
éog_lvl_Áèl
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

130 
	`exô
(
ex
); \

131 } 0)

	)

134 
	#FATAL_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

136 
	`TLOG_EVERY_N
(
éog_lvl_Áèl
, 
n
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

137 } 0)

	)

140 
	#FATAL_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

142 
	`TLOG_FIRST_N
(
éog_lvl_Áèl
, 
n
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

143 } 0)

	)

146 
	#FATAL_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

148 
	`TLOG_IF
(
éog_lvl_Áèl
, 
c⁄d
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

149 } 0)

	)

158 
	#ERROR_TLOG
(
fmt
, 
¨gs
...) \

160 
	`wrôe_to_loggî
(
éog_lvl_îr‹
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

161 } 0)

	)

164 
	#RT_ERROR_TLOG
(
π
, 
fmt
, 
¨gs
...) \

166 
	`wrôe_to_loggî
(
éog_lvl_îr‹
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

167  
π
; \

168 } 0)

	)

171 
	#RTV_ERROR_TLOG
(
fmt
, 
¨gs
...) \

173 
	`wrôe_to_loggî
(
éog_lvl_îr‹
, 
NULL
, 0, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

175 } 0)

	)

178 
	#ERROR_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

180 
	`TLOG_EVERY_N
(
éog_lvl_îr‹
, 
n
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

181 } 0)

	)

184 
	#ERROR_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

186 
	`TLOG_FIRST_N
(
éog_lvl_îr‹
, 
n
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

187 } 0)

	)

190 
	#ERROR_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

192 
	`TLOG_IF
(
éog_lvl_îr‹
, 
c⁄d
, 
loggî_Êag_fûe
, "[%s][%d]%s: "
fmt
"\n", 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, ##
¨gs
); \

193 } 0)

	)

202 
	#WARN_TLOG
(
fmt
, 
¨gs
...) \

204 
	`wrôe_to_loggî
(
éog_lvl_w¨n
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

205 } 0)

	)

208 
	#RT_WARN_TLOG
(
π
, 
fmt
, 
¨gs
...) \

210 
	`wrôe_to_loggî
(
éog_lvl_w¨n
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

211  
π
; \

212 } 0)

	)

215 
	#RTV_WARN_TLOG
(
fmt
, 
¨gs
...) \

217 
	`wrôe_to_loggî
(
éog_lvl_w¨n
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

219 } 0)

	)

222 
	#WARN_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

224 
	`TLOG_EVERY_N
(
éog_lvl_w¨n
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

225 } 0)

	)

228 
	#WARN_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

230 
	`TLOG_FIRST_N
(
éog_lvl_w¨n
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

231 } 0)

	)

234 
	#WARN_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

236 
	`TLOG_IF
(
éog_lvl_w¨n
, 
c⁄d
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

237 } 0)

	)

246 
	#INFO_TLOG
(
fmt
, 
¨gs
...) \

248 
	`wrôe_to_loggî
(
éog_lvl_öfo
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

249 } 0)

	)

252 
	#RT_INFO_TLOG
(
π
, 
fmt
, 
¨gs
...) \

254 
	`wrôe_to_loggî
(
éog_lvl_öfo
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

255  
π
; \

256 } 0)

	)

259 
	#RTV_INFO_TLOG
(
fmt
, 
¨gs
...) \

261 
	`wrôe_to_loggî
(
éog_lvl_öfo
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

263 } 0)

	)

266 
	#INFO_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

268 
	`TLOG_EVERY_N
(
éog_lvl_öfo
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

269 } 0)

	)

272 
	#INFO_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

274 
	`TLOG_FIRST_N
(
éog_lvl_öfo
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

275 } 0)

	)

278 
	#INFO_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

280 
	`TLOG_IF
(
éog_lvl_öfo
, 
c⁄d
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

281 } 0)

	)

290 
	#DEBUG_TLOG
(
fmt
, 
¨gs
...) \

292 
	`wrôe_to_loggî
(
éog_lvl_debug
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

293 } 0)

	)

296 
	#RT_DEBUG_TLOG
(
π
, 
fmt
, 
¨gs
...) \

298 
	`wrôe_to_loggî
(
éog_lvl_debug
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

299  
π
; \

300 } 0)

	)

303 
	#RTV_DEBUG_TLOG
(
fmt
, 
¨gs
...) \

305 
	`wrôe_to_loggî
(
éog_lvl_debug
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

307 } 0)

	)

310 
	#DEBUG_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

312 
	`TLOG_EVERY_N
(
éog_lvl_debug
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

313 } 0)

	)

316 
	#DEBUG_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

318 
	`TLOG_FIRST_N
(
éog_lvl_debug
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

319 } 0)

	)

322 
	#DEBUG_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

324 
	`TLOG_IF
(
éog_lvl_debug
, 
c⁄d
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

325 } 0)

	)

334 
	#TRACE_TLOG
(
fmt
, 
¨gs
...) \

336 
	`wrôe_to_loggî
(
éog_lvl_åa˚
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

337 } 0)

	)

340 
	#RT_TRACE_TLOG
(
π
, 
fmt
, 
¨gs
...) \

342 
	`wrôe_to_loggî
(
éog_lvl_åa˚
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

343  
π
; \

344 } 0)

	)

347 
	#RTV_TRACE_TLOG
(
fmt
, 
¨gs
...) \

349 
	`wrôe_to_loggî
(
éog_lvl_åa˚
, 
NULL
, 0, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

351 } 0)

	)

354 
	#TRACE_TLOG_EVERY_N
(
n
, 
fmt
, 
¨gs
...) \

356 
	`TLOG_EVERY_N
(
éog_lvl_åa˚
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

357 } 0)

	)

360 
	#TRACE_TLOG_FIRST_N
(
n
, 
fmt
, 
¨gs
...) \

362 
	`TLOG_FIRST_N
(
éog_lvl_åa˚
, 
n
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

363 } 0)

	)

366 
	#TRACE_TLOG_IF
(
c⁄d
, 
fmt
, 
¨gs
...) \

368 
	`TLOG_IF
(
éog_lvl_åa˚
, 
c⁄d
, 
loggî_Êag_fûe
, 
fmt
"\n", ##
¨gs
); \

369 } 0)

	)

376 
	#SET_LOG_LEVEL
(
lvl
) \

378 i‡((
lvl
 >
éog_lvl_mö
Ë&& (lv»< 
éog_lvl_max
)) { \

379 
˘æ_cfg
->
log_Àvñ
 = 
lvl
; \

381 } 0)

	)

383 
	#SET_DAILY_MAX_FILES
(
max
) \

385 i‡(
max
 >0 && max <
DAILY_MAX_FILES
) { \

386 
˘æ_cfg
->
daûy_max_fûes
 = 
max
; \

388 } 0)

	)

390 
	#SET_MAX_ONE_SIZE
(
max
) \

392 i‡(
max
 >
MIN_ONE_LOG_SIZE
 && max <
MAX_ONE_LOG_SIZE
) { \

393 
˘æ_cfg
->
max_⁄e_size
 = 
max
; \

395 } 0)

	)

397 
	#SET_STOP_IF_DISKFULL
(
⁄off
) \

399 i‡(
⁄off
 == 0 || onoff == 1) { \

400 
˘æ_cfg
->
°›_if_diskfuŒ
 = 
⁄off
; \

402 } 0)

	)

404 
	#SET_TIME_SLICE_SECS
(
£cs
) \

406 i‡(
£cs
 >= 0) { \

407 
˘æ_cfg
->
time_¶i˚_£cs
 = 
£cs
; \

409 } 0)

	)

	@/usr/include/libtaomee/tm_dirty/acsm.h

25 #i‚de‡ 
_ACSM_H


26 
	#_ACSM_H


	)

28 
	~<°dio.h
>

29 
	~<°dlib.h
>

30 
	~<°rög.h
>

35 #i‚def 
ALPHABET_SIZE


36 
	#ALPHABET_SIZE
 (256)

	)

40 
	#MAX_STR_BUFFER
 (1000000)

41 
	#ACSM_FAIL_STATE
 (-1)

42 
	#MAX_KEYWORD_LEN
 (256)

43 
	#MAX_PATTERNS
 (81920)

44 
	#MAX_ADS_LEN
 (4096)

45 
	#MAX_ADS
 (2048)

46 
	#MAX_STATE
 (256 * 1024)

47 

	)

48 
	#PATTERNS_TABLE_LEN
 ((
ACSM_PATTERN
Ë* 
MAX_PATTERNS
)

	)

49 
	#ADS_TABLE_LEN
 0

50 
	#STATE_TABLE_LEN
 ((
ACSM_STATETABLE
Ë* 
MAX_STATE
)

	)

52 
	s_acsm_∑âîn
 {

53 
	m∑ån
[
MAX_KEYWORD_LEN
];

55 
	mn
;

57 } 
	tACSM_PATTERN
;

59 
	s_acsm_∑âîn_ads
 {

60 
	m∑ån
[
MAX_KEYWORD_LEN
];

62 
	mn
;

64 } 
	tACSM_ADS
;

69 
	mNextSèã
[ 
ALPHABET_SIZE
 ];

72 
	mFaûSèã
;

75 
	ml⁄ge°_∑âîn_ödex
;

77 }
	tACSM_STATETABLE
;

85 
	macsmMaxSèãs
;

86 
	macsmNumSèãs
;

88 
	mtŸÆ_∑âîn
;

89 
	mÊag
;

90 
ACSM_PATTERN
 *
	macsmP©ã∫s
;

91 
ACSM_STATETABLE
 *
	macsmSèãTabÀ
;

93 }
	tACSM_STRUCT
;

95 
	skeyw‹d_öfo


97 
	mkey_°r
[
MAX_KEYWORD_LEN
];

98 
	mkey_posôi⁄
;

99 }
	tkeyw‹d_öfo
;

104 
ACSM_STRUCT
 * 
acsmNew
();

106 
acsmNew_wôh_fd
(
fd
, 
ACSM_STRUCT
 **
h™dÀ1
, ACSM_STRUCT **
h™dÀ2
);

108 
acsmAddP©ã∫
–
ACSM_STRUCT
 * 
p
, * 
∑t
, 
n
);

109 
acsmCompûe
 ( 
ACSM_STRUCT
 * 
acsm
 );

110 
acsmSórch
 (
ACSM_STRUCT
 * 
acsm
, *
Tx
, 
n
, 
jump_èg
);

111 
acsmFªe
 ( 
ACSM_STRUCT
 * 
acsm
 );

112 
acsm_gë_fú°_dúty_w‹d
(
ACSM_STRUCT
 * 
acsm
, *
Tx
, 
n
, *
ªtbuf
, 
jump_èg
);

114 
acsm_∑âîn_ª∂a˚
(
ACSM_STRUCT
 * 
acsm
, *
Tx
, 
n
, 
jump_èg
);

	@/usr/include/libtaomee/tm_dirty/tm_dirty.h

11 #i‚de‡
_TM_DIRTY_H


12 
	#_TM_DIRTY_H


	)

14 
	~<sys/ùc.h
>

15 
	~<sys/ty≥s.h
>

16 
	~<°döt.h
>

17 
	~<ic⁄v.h
>

19 
	#USE_CODE
 "UTF-8"

	)

22 
	#MAX_MSG_LEN
 (1000000)

	)

25 
	#ICONV_START
(
‰omcode
) \

26 
ic⁄v_t
 
cd
 = 
	`ic⁄v_›í
("UTF-8", 
‰omcode
);\

27 
size_t
 
öÀn
;\

28 
size_t
 
ouéí
;\

29 *
pö
, *
pout
;

	)

32 
	#ICONV_PROC
(
outbuf
,
öbuf
)\

34 
öÀn
 = 
	`°æí
(
öbuf
);\

35 
ouéí
 = 
MAX_MSG_LEN
;\

36 
pö
 = (*)
öbuf
;\

37 
outbuf
 = (*)
	`ˇŒoc
(
ouéí
, 1);\

38 
pout
 = 
outbuf
;\

39 
	`mem£t
(
outbuf
, 0, 
ouéí
);\

40 
	`ic⁄v
(
cd
, &
pö
, &
öÀn
, &
pout
, &
ouéí
);\

41 }0);

	)

43 
	#ICONV_END
 \

45 
	`‰ì
(
outbuf
);\

46 
	`ic⁄v_˛o£
(
cd
);\

47 }0);

	)

49 
	#C_MAX_WORD_LEN
 256

	)

50 
	#C_MAX_TABLE_LEN
 256*256

	)

51 
	#C_MAX_WORD_NUM
 3000

	)

52 
	#E_MAX_WORD_NUM
 (
C_MAX_WORD_NUM
/5)

	)

55 
	#IS_DOUBLE_CHAR
(
ch
Ë–ch>0x80&&ch<0xFF)

	)

56 
	#IS_ENGLISH_CHAR
(
ch
Ë–(ch>='a'&&ch<='z'Ë|| (ch>='A'&&ch<='Z'Ë)

	)

58 
	#IS_CHINESE_CHAR
(
lo
,
hi
Ë–÷o>0x80 &&Üo<0xffË&& ((hi>0x3‡&& hi<0x7f)||(hi>0x7‡&& hi<0xff)))

	)

60 
	#IS_CHINESE_PUNC
(
lo
,
hi
Ë–÷o>0xa0 &&Üo<0xb0Ë&& (hi>0x3‡&& hi<0xff))

	)

61 
	#IS_ENGLISH_DOUBLE
(
lo
,
hi
Ë–÷o==0xA3Ë&&–(hi<=0xDA && hi>=0xC1Ë|| (hi<=0xFA && hi>=0xE1Ë))

	)

62 
	#IS_DIGIT_DOUBLE
(
lo
,
hi
Ë–÷o==0xA3Ë&&(hi>=0xB0 && hi<=0xB9Ë)

	)

63 
	#IS_DIGIT
(
ch
Ë(
	`isdigô
(ch))

	)

65 
	#CONVERT_DOUBLE_TO_SINGLE
(
ch
,
lo
,
hi
Ëch=(hi>=0xC1&&hi<=0xDA)?(hi-0x80):(hi-0xA0)

	)

66 
	#CONVERT_DOUBLE_DIGIT_TO_SINGLE
(
ch
,
lo
,
hi
Ëch=hi-0x80

	)

67 
	#CONVERT_CAPITAL_CHAR
(
ch
,
lo
Ëch=÷o>='a'&&lo<='z')?lo-0x20:
	)
lo

69 
	#EQUAL_ENGLISH_CHAR
(
lo
,
hi
Ë÷o==hò||Üo==(hi-0x20))

	)

72 
	#IS_SHOW_ENG
(
ch
Ë(ch>=0x20 && ch<=0x7E)

	)

74 
	#CHAR_KEYWORD_DELI
 '|'

	)

76 
	#CAL_INDEX_OFFSET
(
off£t
,
hi
,
lo
Ëoff£t=(hi-0x80)*256+lo;

	)

77 
	#CAL_INDEX_OFFSET2
(
off£t
,
hi
,
lo
Ëoff£t=(hi-0x80)*256+lo;

	)

79 
	#LOAD_CHAR_FLAG_CHN
 'c'

	)

80 
	#LOAD_CHAR_FLAG_ENG
 'e'

	)

85 
	s_DIRTY_CN_RECORD


88 
	mÀvñ
;

90 
	mdúty_°r
[
C_MAX_WORD_LEN
 + 1];

92 
	mkey_w‹d
[3];

94 
	mkey_off£t
;

96 
	m√xt_key_ªc
;

97 } 
	tDIRTY_CN_RECORD
;

102 
	s_DIRTY_ENG_RECORD


105 
	mÀvñ
;

107 
	mdúty_°r
[
C_MAX_WORD_LEN
 + 1];

108 } 
	tDIRTY_ENG_RECORD
;

113 
	s_DIRTY_CN_INDEX


115 
	mdúty_idx_èbÀ
[
C_MAX_TABLE_LEN
];

116 } 
	tDIRTY_CN_INDEX
;

121 
	s_DIRTY_CORE


124 
	míabÀ
;

126 
	m˙_ªc_cou¡
;

128 
	mí_ªc_cou¡
;

131 
DIRTY_CN_INDEX
 
	mdúty_˙_idx_mng
;

133 
DIRTY_CN_RECORD
 
	mdúty_˙_ªc
[
C_MAX_WORD_NUM
];

135 
DIRTY_ENG_RECORD
 
	mdúty_í_ªc
[
E_MAX_WORD_NUM
];

136 } 
	tDIRTY_CORE
;

147 
	stm_dúty_ads_ªp‹t
 {

148 
uöt32_t
 
	mgameid
;

149 
uöt32_t
 
	mu£rid
;

150 
uöt32_t
 
	mªcvid
;

151 
uöt32_t
 
	m⁄löeid
;

152 
uöt32_t
 
	mtime°amp
;

153 
uöt32_t
 
	mmsgÀn
;

154 } 
	t__©åibuã__
((
	t∑cked
)Ë
	ttm_dúty_ads_ªp‹t_t
;

161 (*
	ttm_dúty_w¨nög_cb_func_t
)(c⁄° *, 
	tuöt32_t
, const *);

163 
DIRTY_CN_INDEX
 *
p_dúty_˙_idx_mng
;

164 
DIRTY_ENG_RECORD
 *
p_dúty_í_ªc
;

165 
DIRTY_CORE
 *
p_dúty_c‹e
;

170 
	`åim_bœnk
(*
s
);

183 
	`tm_dúty_check
(
Àvñ
, *
msg
);

184 
	`tm_dúty_check_jump_èg
(
Àvñ
, *
msg
, 
jump_èg
);

194 
	`tm_dúty_ª∂a˚
(*
msg
);

195 
	`tm_dúty_ª∂a˚_jump_èg
(*
msg
, 
jump_èg
);

208 
	`tm_dúty_check_whîe
(
Àvñ
, *
msg
, *
ªtbuf
);

209 
	`tm_dúty_check_whîe_jump_èg
(
Àvñ
, *
msg
, *
ªtbuf
, 
jump_èg
);

214 
	`tm_lﬂd_dúty
(c⁄° *
c⁄f_fûe_∑th
);

226 
	`tm_dúty_d´m⁄
(

227 c⁄° *
loˇl_dúty_fûe_∑th
,

228 c⁄° *
£rvî_addr
,

229 
uöt32_t
 
upd©e_cy˛e
,

230 
tm_dúty_w¨nög_cb_func_t
 
w¨nög_fun˘i⁄
);

237 
±hªad_t
 
	`tm_dúty_d´m⁄_wôh_«med_mm≠
(

238 c⁄° *
loˇl_dúty_fûe_∑th
,

239 c⁄° *
£rvî_addr
,

240 c⁄° *
tm_dúty_sh¨e_fûe_∑th
,

241 
uöt32_t
 
upd©e_cy˛e
,

242 
tm_dúty_w¨nög_cb_func_t
 
w¨nög_fun˘i⁄
);

249 
	`tm_dúty_li°_w‹d
(
ch¨_£t
);

255 
	`tm_dúty_w‹d_cou¡
();

260 
	`tm_dúty_‰ì
();

265 
	`©èch_to_dúty_shm
(* 
tm_dúty_fûe
);

274 
	`öô_ads_ªp‹t_udp_sockë
(c⁄° *
ads_ªp‹t_udp_ù
, 
uöt16_t
 
ads_ªp‹t_udp_p‹t
);

283 
	`£nd_udp_ads_ªp‹t_to_db
(
tm_dúty_ads_ªp‹t_t
 *
ads_öfo_hód
, c⁄° *
msg
);

	@/usr/include/libtaomee/tm_dirty/utf8_punc.h

15 #i‚def 
_UTF8_PUNC_H


16 
	#_UTF8_PUNC_H


	)

18 
	~<°döt.h
>

21 
	#GENERAL_PUNC_PART1_START
 0xE28080

	)

22 
	#GENERAL_PUNC_PART1_END
 0xE280BF

	)

23 
	#GENERAL_PUNC_PART2_START
 0xE28180

	)

24 
	#GENERAL_PUNC_PART2_END
 0xE281AF

	)

27 
	#CJK_PUNC_START
 0xE38080

	)

28 
	#CJK_PUNC_END
 0xE380BF

	)

31 
	#ASCII_START
 0x0

	)

32 
	#ASCII_END
 0x7F

	)

35 
	#ASCII_SBC_PART1_START
 0xEFBC81

	)

36 
	#ASCII_SBC_PART1_END
 0xEFBCBF

	)

37 
	#ASCII_SBC_PART2_START
 0xEFBD80

	)

38 
	#ASCII_SBC_PART2_END
 0xEFBD9F

	)

41 
	#SMALL_LATIN_PUNC_START
 0xEFB990

	)

42 
	#SMALL_LATIN_PUNC_END
 0xEFB9AF

	)

45 
	#LATIN_PUNC_START
 0xC2A0

	)

46 
	#LATIN_PUNC_END
 0xC2BF

	)

47 
	#LATIN_PUNC_MULTIPLY
 0xC397

	)

48 
	#LATIN_PUNC_DIVID
 0xC3B7

	)

50 
	#ASCII_NUMBER_START
 0x31

	)

51 
	#ASCII_NUMBER_END
 0x39

	)

52 
	#ASCII_ALPHA_UPPER_START
 0x41

	)

53 
	#ASCII_ALPHA_UPPER_END
 0x5A

	)

54 
	#ASCII_ALPHA_LOWER_START
 0x61

	)

55 
	#ASCII_ALPHA_LOWER_END
 0x7A

	)

57 
	#IS_ASCII_NUMBER
(
c
Ë((cË>0x31 && (cË<0x39)

	)

58 
	#IS_ASCII_UPPER_ALPHA
(
c
Ë((cË>0x41 && (cË<0x5A)

	)

59 
	#IS_ASCII_LOWER_ALPHA
(
c
Ë((cË>0x61 && (cË<0x7A)

	)

60 
	#IS_ASCII_ALPHA
(
c
Ë((
	`IS_ASCII_UPPER_ALPHA
((c))Ë|| (
	`IS_ASCII_LOWER_ALPHA
((c))))

	)

61 
	#IS_ASCII_ALPHA_OR_NUMBER
(
c
Ë((
	`IS_ASCII_NUMBER
((c))Ë|| (
	`IS_ASCII_ALPHA
((c))))

	)

62 
	#IS_ASCII_PUNC_OR_SYMBOL
(
c
Ë((cË<0x7F && !(
	`IS_ASCII_ALPHA_OR_NUMBER
((c))))

	)

72 
°rög_fûãr
(* 
d
, *
s
, *
m
, 
Êag
);

81 
°rög_ª∂a˚
(* 
d
, *
s
, 
Àn
);

87 
ª∂a˚_ch¨_ö_™gÀ_bøckës
(*
d
, *
s
, 
Àn
);

90 
	#UNICODE_DBC_SP
 0x20

	)

91 
	#UNICODE_DBC_START
 0x21

	)

92 
	#UNICODE_DBC_END
 0x7e

	)

93 
	#UNICODE_SBC_SP
 0x3000

	)

94 
	#UNICODE_SBC_START
 0xFF01

	)

95 
	#UNICODE_SBC_END
 0xFF5E

	)

96 
	#SUB_SBC_DBC
 0xFEE0

	)

98 
	#UTF8_3_t
 0xE0

	)

99 
	#UTF8_2_t
 0x80

	)

100 
	#UTF8_1_t
 0x80

	)

102 
	sd_s_utf8
 {

103 
uöt8_t
 
	mdbc
;

104 
uöt8_t
 
	msbc
[3];

105 }
	td_s_utf8_t
;

111 
dbc_sbc_exch™ge
(
d_s_utf8_t
 *
p
, 
Êag
);

117 
xœtˇ£
[256];

123 
öô_xœtˇ£
 ();

	@/usr/include/libtaomee/tm_shm/tm_shm.h

1 #i‚de‡
__TM_SHM_H__


2 
	#__TM_SHM_H__


	)

4 
	~<sys/ty≥s.h
>

6 
	#FILE_PATH_LEN
 4096

	)

8 
	stm_shm_mgr_t
 {

10 
key_t
 
	mkey
;

11 
	mshmid
;

12 
size_t
 
	msize
;

13 *
	mshm
;

22 
do_tm_shm_¸óã_öô
(
key_t
 
key
, 
size_t
 
size
, *
öô_buf
, size_à
öô_buf_Àn
);

34 
tm_shm_¸óã
(
key_t
 
key
, 
size_t
 
size
);

43 
tm_shm_¸óã_öô
(
key_t
 
key
, 
size_t
 
size
, *
öô_buf
, size_à
öô_buf_Àn
);

49 
tm_shm_¸óã_√w
(
key_t
 
key
, 
size_t
 
size
);

61 
tm_shm_¸óã_√w_öô
(
key_t
 
key
, 
size_t
 
size
, *
öô_buf
, size_à
öô_buf_Àn
);

67 
tm_shm_upd©e_©èch
(
tm_shm_mgr_t
 *
shm_mgr
);

73 
tm_shm_ã°_shm_exi°
(
key_t
 
key
);

76 (*
	tˇŒ_back_func_t
)(* 
	taddr
, c⁄° * 
	t∑th
);

78 
	scfg_öfo
{

79 
size_t
 
mem_size
;

80 
size_t
 
mëa_size
;

81 *
cfg_mm≠_fûe_∑th
;

82 *
cfg_fûe_∑th
;

83 
ˇŒ_back_func_t
 
ˇŒ_back
;

84 *
addr
;

85 } 
	tcfg_öfo_t
;

93 
	`öô_cfg_⁄_mm≠
(
cfg_öfo_t
 *
c_öfo
);

98 
	`de°roy_cfg_‰om_mm≠
(
cfg_öfo_t
* 
c_öfo
);

103 
	`upd©e_cfg_⁄_mm≠
(
cfg_öfo_t
 *
c_öfo
);

105 
	`©èch_cfg_to_mm≠
(
cfg_öfo_t
 *
c_öfo
);

106 
	`dëach_cfg_‰om_mm≠
(
cfg_öfo_t
 *
c_öfo
);

	@/usr/include/libtaomee/utils.h

14 #i‚de‡
LIBTAOMEE_UTILS_H_


15 
	#LIBTAOMEE_UTILS_H_


	)

21 #ifde‡ 
¨øy_ñem_num


22 #unde‡
¨øy_ñem_num


24 
	#¨øy_ñem_num
(
¨r_
Ë(◊º_Ë/ (◊º_)[0]))

	)

30 #ifde‡ 
¨øy_ñem_size


31 #unde‡
¨øy_ñem_size


33 
	#¨øy_ñem_size
(
¨r_
Ë(◊º_)[0])

	)

38 
ölöe
 const *

39 
	$libèomì_gë_vîsi⁄
()

42 
	}
}

	@/usr/local/include/async_serv/bindconf.h

1 #i‚de‡
ASYNC_SERVER_BIND_CONF_H_


2 
	#ASYNC_SERVER_BIND_CONF_H_


	)

4 #ifde‡
__˝lu•lus


9 
	~<√töë/ö.h
>

11 
	~"shmq.h
"

12 
	~"libèomì/lua/lua.h
"

15 
max_li°í_fds
 = 500

18 
	sböd_c⁄fig_ñem
 {

19 
uöt32_t
 
⁄löe_id
;

20 
⁄löe_«me
[16];

21 
böd_ù
[16];

22 
ö_p‹t_t
 
böd_p‹t
;

23 
uöt8_t
 
ª°¨t_˙t
;

24 
shm_queue_t
 
£ndq
;

25 
shm_queue_t
 
ªcvq
;

26 } 
	tböd_c⁄fig_ñem_t
;

28 
	sböd_c⁄fig
 {

29 
böd_num
;

30 
böd_c⁄fig_ñem_t
 
c⁄figs
[
max_li°í_fds
];

31 } 
	tböd_c⁄fig_t
;

33 
böd_c⁄fig_t
 
bödc⁄f
;

35 
lﬂd_böd_fûe
(c⁄° * 
fûe_«me
);

37 
ölöe
 
böd_c⁄fig_t
*

38 
gë_böd_c⁄f
()

40  &
	gbödc⁄f
;

43 
ölöe
 

44 
gë_böd_c⁄f_idx
(c⁄° 
böd_c⁄fig_ñem_t
* 
bc_ñem
)

46  (
	gbc_ñem
 - &(
	gbödc⁄f
.
	gc⁄figs
[0]));

49 
lﬂd_böd_‰om_lua
(
lua_Sèã
 * 
L
 );

50 
gënumbî_by_ödex
(
lua_Sèã
* 
L
 , 
ödex
 );

51 c⁄° * 
gë°rög_by_ödex
(
lua_Sèã
* 
L
 , 
ödex
 );

53 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/daemon.h

1 #i‚de‡
ASYNC_SERVER_DAEMON_H_


2 
	#ASYNC_SERVER_DAEMON_H_


	)

4 #ifde‡
__˝lu•lus


9 
	~<°dlib.h
>

11 
	~<libèomì/©omic.h
>

13 
	~"bödc⁄f.h
"

15 
max_fd_num
;

17 vﬁ©ûê
°›
;

18 vﬁ©ûê
ª°¨t
;

19 vﬁ©ûê
ãrm_sig«l
;

21 * 
¥og_«me
;

22 * 
cuºít_dú
;

23 ** 
ßved_¨gv
;

25 
d´m⁄_°¨t
(
¨gc
, ** 
¨gv
);

26 
d´m⁄_°›
();

27 
d´m⁄_£t_tôÀ
(c⁄° * 
fmt
, ...);

29 
ªgi°e_pid
();

30 
uƒegi°e_pid
();

32 
ölöe
 

33 
‰ì_¨gv
()

35 ** 
	g¨gv
;

36  
	g¨gv
 = 
ßved_¨gv
; *argv; ++argv ) {

37 
‰ì
(*
¨gv
);

39 
‰ì
(
ßved_¨gv
);

40 
	gßved_¨gv
 = 
NULL
;

43 
˛ón_chûd_pids
();

44 
kûœŒ_chûdªn
();

46 
©omic_t
 
chûd_pids
[
max_li°í_fds
];

48 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/dll.h

14 #i‚de‡
ASYNC_SERVER_DLL_H_


15 
	#ASYNC_SERVER_DLL_H_


	)

17 #ifde‡
__˝lu•lus


21 
	~<sys/ty≥s.h
>

23 
	~"£rvi˚.h
"

30 
	sAsyncSîvI¡îÁ˚
 {

31 * 
d©a_h™dÀ
;

32 * 
h™dÀ
;

40 (*
¥oc_evíts
)();

46 (*
¥oc_pkg_‰om_˛õ¡
)(* 
pkg
, 
pkgÀn
, c⁄° 
fd£ssi⁄_t
* 
fd£ss
);

48 (*
¥oc_pkg_‰om_£rv
)(
fd
, * 
pkg
, 
pkgÀn
);

50 (*
¥oc_mˇ°_pkg
)(c⁄° * 
d©a
, 
Àn
);

52 (*
⁄_˛õ¡_c⁄n_˛o£d
)(
fd
);

54 (*
⁄_fd_˛o£d
)(
fd
);

65 (*
öô_£rvi˚
)(
i•¨ít
);

73 (*
föi_£rvi˚
)(
i•¨ít
);

82 (*
gë_pkg_Àn
)(
fd
, c⁄° * 
avaû_d©a
, 
avaû_Àn
, 
i•¨ít
);

84 (*
¥oc_udp_pkg
)(
fd
, c⁄° * 
avaû_d©a
, 
avaû_Àn
 ,
sockaddr_ö
 * 
‰om
, 
sockÀn_t
 
‰omÀn
 );

90 (*
ªlﬂd_globÆ_d©a
)();

99 (*
sync_£rvi˚_öfo
)(
uöt32_t
 
svr_id
, c⁄° * 
svr_«me
, c⁄° * 
svr_ù
, 
ö_p‹t_t
 
p‹t
, 
Êag
);

108 (*
bef‹e_ªlﬂd
)(
i•¨ít
);

113 (*
∂a˚hﬁdî
[9])();

114 } 
	tasync_£rv_if_t
;

116 
async_£rv_if_t
 
dŒ
;

122 
ölöe
 
uöt32_t
 
gë_£rvî_id
()

124  
	gc⁄fig_ˇche
.
	gbc_ñem
->
	g⁄löe_id
;

131 
ölöe
 c⁄° * 
gë_£rvî_«me
()

133  
	gc⁄fig_ˇche
.
	gbc_ñem
->
	g⁄löe_«me
;

140 
ölöe
 c⁄° * 
gë_£rvî_ù
()

142  
	gc⁄fig_ˇche
.
	gbc_ñem
->
	gböd_ù
;

149 
ölöe
 
ö_p‹t_t
 
gë_£rvî_p‹t
()

151  
	gc⁄fig_ˇche
.
	gbc_ñem
->
	gböd_p‹t
;

159 
ölöe
 
uöt32_t


160 
gë_˛i_ù
(c⁄° 
fd£ssi⁄_t
* 
fd£ss
)

162  
	gfd£ss
->
	gªmŸe_ù
;

170 
ölöe
 
uöt32_t


171 
gë_˛i_p‹t
(c⁄° 
fd£ssi⁄_t
* 
fd£ss
)

173  
	gfd£ss
->
	gªmŸe_p‹t
;

176 
ölöe
 
uöt32_t


177 
gë_˛i_ù2
(
fd
)

179 
fd£ssi⁄_t
* 
	gfd£ss
 = (fd£ssi⁄_t*)
g_hash_èbÀ_lookup
(
fds
.
˙
, &
fd
);

180  (
	gfd£ss
 ? fd£ss->
	gªmŸe_ù
 : 0);

183 
ªgi°î_d©a_∂ugö
(c⁄° * 
fûe_«me
);

184 
ªgi°î_∂ugö
(c⁄° * 
fûe_«me
, 
Êag
);

185 
uƒegi°î_d©a_∂ugö
();

186 
uƒegi°î_∂ugö
();

188 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/mcast.h

14 #i‚de‡
ASYNC_SERVER_MCAST_H_


15 
	#ASYNC_SERVER_MCAST_H_


	)

17 
	~<time.h
>

19 #ifde‡
__˝lu•lus


24 
mˇ°_nŸify_addr
 = 0,

25 
mˇ°_ªlﬂd_ãxt
 = 1

29 
addr_mˇ°_1°_pkg
 = 1,

30 
addr_mˇ°_syn_pkg
 = 2

33 
	saddr_node
 {

34 
uöt32_t
 
svr_id
;

35 
ù
[16];

36 
p‹t
;

37 
time_t
 
œ°_syn_tm
;

40 
addr_node
 
	taddr_node_t
;

42 
time_t
 
√xt_syn_addr_tm
;

43 
time_t
 
√xt_dñ_addrs_tm
;

45 
¸óã_addr_mˇ°_sockë
();

46 
£nd_addr_mˇ°_pkg
(
uöt32_t
 
pkg_ty≥
);

47 
addr_node_t
* 
gë_£rvi˚_ùp‹t
(c⁄° * 
£rvi˚
, 
svr_id
);

49 
dñ_expúed_addrs
();

50 
async£rv_¥oc_mˇ°_pkg
(* 
d©a
, 
Àn
);

54 
asynsvr_¸óã_mˇ°_sockë
();

65 
£nd_mˇ°_pkg
(c⁄° * 
d©a
, 
Àn
);

67 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/net.h

1 #i‚de‡
ASYNC_SERVER_NET_H_


2 
	#ASYNC_SERVER_NET_H_


	)

4 #ifde‡
__˝lu•lus


9 
	~<time.h
>

11 
	~<°döt.h
>

13 
	~<√töë/ö.h
>

14 
	~<sys/sockë.h
>

16 
	~<sys/ïﬁl.h
>

18 
	~<libèomì/li°.h
>

20 
	#CN_NEED_CLOSE
 0x01

	)

21 
	#CN_NEED_POLLIN
 0x02

	)

25 
def_∑ge_size
 = 8192

28 
	sc⁄n_buf
 {

29 
uöt32_t
 
rcv¥ŸÀn
;

30 
uöt32_t
 
ªcvÀn
;

31 
uöt32_t
 
£ndÀn
;

32 
uöt32_t
 
¢dbufsz
;

33 
uöt8_t
* 
ªcv±r
;

34 
uöt8_t
* 
£nd±r
;

35 } 
	tc⁄n_buf_t
;

37 
	ssköfo
 {

38 
uöt16_t
 
ªmŸe_p‹t
;

39 
uöt32_t
 
ªmŸe_ù
;

40 
uöt32_t
 
œ°_tm
;

41 } 
	t__©åibuã__
((
	t∑cked
)Ë
	tsköfo_t
;

44 
fd_ty≥_unu£d
 = 0,

45 
fd_ty≥_li°í
,

46 
fd_ty≥_pùe
,

47 
fd_ty≥_ªmŸe
,

48 
fd_ty≥_mˇ°
,

49 
fd_ty≥_addr_mˇ°
,

50 
fd_ty≥_udp
,

51 
fd_ty≥_asyn_c⁄√˘


54 
böd_c⁄fig_ñem
;

56 
	sfdöfo
 {

57 
uöt32_t
 
id
;

58 
sockfd
;

59 
uöt8_t
 
ty≥
;

60 
uöt8_t
 
Êag
;

61 
c⁄n_buf_t
 
cb
;

62 
sköfo_t
 
sk
;

63 
böd_c⁄fig_ñem
* 
bc_ñem
;

65 (*
ˇŒback
)(
fd
, * 
¨g
);

66 * 
¨g
;

68 
li°_hód_t
 
li°
;

69 } 
	tfdöfo_t
;

71 
	sïöfo
 {

72 
fdöfo_t
* 
fds
;

73 
ïﬁl_evít
* 
evs
;

74 
li°_hód_t
 
˛o£_hód
;

75 
li°_hód_t
 
ëö_hód
;

76 
ïfd
;

77 
maxfd
;

78 
max_ev_num
;

79 
cou¡
;

82 
ïöfo
 
ïi
;

83 
time_t
 
sockë_timeout
;

84 
∑ge_size
;

85 
g_li°í_p‹t
;

86 
g_li°í_ù
[16];

87 
uöt32_t
 
g_£nd_buf_limô_size
;

89 
√t_öô
(
size
, 
maxevíts
);

90 
√t_lo›
(
timeout
, 
max_Àn
, 
is_c⁄n
);

91 
√t_°¨t
(c⁄° *
li°í_ù
, 
uöt16_t
 
li°í_p‹t
, 
böd_c⁄fig_ñem
* 
bc_ñem
);

92 
√t_exô
();

94 
mod_evíts
(
ïfd
, 
fd
, 
uöt32_t
 
Êag
);

95 
do_wrôe_c⁄n
(
fd
);

96 
do_add_c⁄n
(
fd
, 
uöt8_t
 
ty≥
, 
sockaddr_ö
 *
≥î
, 
böd_c⁄fig_ñem
* 
bc_ñem
);

97 
do_dñ_c⁄n
(
fd
, 
is_c⁄n
);

101 
böd_udp_sockë
–c⁄° * 
ùaddr
, 
ö_p‹t_t
 
p‹t
 );

103 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/net_if.h

14 #i‚de‡
ASYNC_SERVER_NET_INTERFACE_H_


15 
	#ASYNC_SERVER_NET_INTERFACE_H_


	)

17 #ifde‡
__˝lu•lus


21 
	~<°döt.h
>

23 
	~"£rvi˚.h
"

28 
	sù_p‹t
 {

30 
ù
[16];

32 
ö_addr_t
 
p‹t
;

33 } 
	tù_p‹t_t
;

45 
c⁄√˘_to_svr
(c⁄° * 
ùaddr
, 
ö_addr_t
 
p‹t
, 
bufsz
, 
timeout
);

57 
c⁄√˘_to_£rvi˚
(c⁄° * 
£rvi˚_«me
, 
uöt32_t
 
svr_id
, 
bufsz
, 
timeout
);

75 
asyn_c⁄√˘_to_svr
(c⁄° * 
ùaddr
, 
ö_addr_t
 
p‹t
, 
bufsz
, (*
ˇŒback
)(
fd
, * 
¨g
), *árg);

93 
asyn_c⁄√˘_to_£rvi˚
(c⁄° * 
£rvi˚_«me
, 
uöt32_t
 
svr_id
, 
bufsz
, (*
ˇŒback
)(
fd
, * 
¨g
), *árg);

100 
˛o£_svr
(
svrfd
);

111 
¸óã_udp_sockë
(
sockaddr_ö
* 
addr
, c⁄° * 
ù
, 
ö_p‹t_t
 
p‹t
);

122 
asynsvr_£nd_w¨nög_msg
(c⁄° * 
svr
, 
uöt32_t
 
uid
, uöt32_à
cmdid
, uöt32_à
ishex
, c⁄° * 
ù
);

132 c⁄° * 
ªsﬁve_£rvi˚_«me
(c⁄° * 
£rvi˚_«me
, 
uöt32_t
 
svr_id
);

139 c⁄° 
ù_p‹t_t
* 
gë_œ°_c⁄√˘ög_£rvi˚
();

146 
ölöe


147 
uöt32_t
 
gë_ªmŸe_ù
(
fd
)

149 i‡((
fd
 >0Ë&& (fd <
ïi
.
maxfd
Ë&& (ïi.
fds
[fd].
ty≥
 !
fd_ty≥_unu£d
)) {

150  
ïi
.
fds
[
fd
].
sk
.
ªmŸe_ù
;

165 
√t_£nd
(
fd
, c⁄° * 
d©a
, 
uöt32_t
 
Àn
);

176 
£nd_pkg_to_˛õ¡
(c⁄° 
fd£ssi⁄_t
* 
fd£ss
, c⁄° * 
pkg
, c⁄° 
pkgÀn
);

185 
˛o£_˛õ¡_c⁄n
(
fd
);

187 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/service.h

1 #i‚de‡
ASYNC_SERVER_SERVICE_H_


2 
	#ASYNC_SERVER_SERVICE_H_


	)

4 #ifde‡
__˝lu•lus


8 
	~<time.h
>

10 
	~<glib.h
>

12 
	~"bödc⁄f.h
"

13 
	~"d´m⁄.h
"

15 
shm_queue
;

16 
shm_block
;

18 
	sfd£ssi⁄
 {

19 
fd
;

20 
uöt32_t
 
id
;

21 
uöt16_t
 
ªmŸe_p‹t
;

22 
uöt32_t
 
ªmŸe_ù
;

23 } 
	tfd£ssi⁄_t
;

25 
	sfd_¨øy_£ssi⁄
 {

26 
cou¡
;

27 
GHashTabÀ
* 
˙
;

28 } 
	tfd_¨øy_£ssi⁄_t
;

31 
idÀ_timeout
;

32 
böd_c⁄fig_ñem_t
* 
bc_ñem
;

33 } 
	tc⁄fig_ˇche_t
;

35 
is_∑ª¡
;

36 
fd_¨øy_£ssi⁄_t
 
fds
;

37 
c⁄fig_ˇche_t
 
c⁄fig_ˇche
;

39 
h™dÀ_ªcv_queue
();

40 
h™dÀ_˛o£
(
fd
);

42 
run_w‹kî_¥o˚ss
(
böd_c⁄fig_t
* 
bc
, 
bc_ñem_idx
, 
n_öôed_bc
);

43 
ª°¨t_chûd_¥o˚ss
(
böd_c⁄fig_ñem_t
* 
bc_ñem
);

45 
ölöe
 c⁄° 
fd£ssi⁄_t
*

46 
gë_fd£ss
(
fd
)

48  (
	gfd£ssi⁄_t
*)
g_hash_èbÀ_lookup
(
fds
.
˙
, &
fd
);

51 #ifde‡
__˝lu•lus


	@/usr/local/include/async_serv/shmq.h

1 #i‚de‡
ASYNC_SERVER__SHMQ_H_


2 
	#ASYNC_SERVER__SHMQ_H_


	)

4 #ifde‡
__˝lu•lus


8 
	~<°döt.h
>

9 
	~<sys/ùc.h
>

10 
	~<sys/£m.h
>

11 
	~<uni°d.h
>

13 
	~<libèomì/©omic.h
>

15 
	~"√t.h
"

17 
	#LOCKED_MASK
 0x01

	)

18 
	#SLEEP_MASK
 0x02

	)

19 
	#SHM_BLOCK_LEN_MAX
 1<<23

	)

22 
DATA_BLOCK
 = 0,

23 
PAD_BLOCK
,

24 
FIN_BLOCK
,

25 
OPEN_BLOCK
,

26 
CLOSE_BLOCK


29 
	sshm_hód
 {

30 vﬁ©ûê
hód
;

31 vﬁ©ûê
èû
;

32 
©omic_t
 
blk_˙t
;

33 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tshm_hód_t
;

35 
	sshm_queue
 {

36 
shm_hód_t
* 
addr
;

37 
u_öt
 
Àngth
;

38 
pùe_h™dÀs
[2];

39 } 
	tshm_queue_t
;

41 
	sshm_block
 {

42 
uöt32_t
 
id
;

43 
uöt32_t
 
fd
;

44 
uöt32_t
 
Àngth
;

45 
ty≥
;

46 
uöt8_t
 
d©a
[];

47 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tshm_block_t
;

49 
böd_c⁄fig_ñem
;

50 
böd_c⁄fig
;

52 
shmq_¸óã
(
böd_c⁄fig_ñem
* 
bc_ñem
);

53 
do_de°roy_shmq
(
böd_c⁄fig_ñem
* 
bc_ñem
);

54 
shmq_de°roy
(c⁄° 
böd_c⁄fig_ñem
* 
ex˛u_bc_ñem
, 
max_shmq_num
);

55 
shmq_push
(
shm_queue_t
* 
q
, 
shm_block_t
* 
mb
, c⁄° * 
d©a
);

56 
shmq_p›
(
shm_queue
 *
q
, 
shm_block
 **
mb
);

57 * 
shmblk_dump
(c⁄° 
shm_block
 *
mb
);

59 
ölöe
 

60 
ïi2shm
(
fd
, 
shm_block
 *
mb
)

62 
mb
->
id
 = 
ïi
.
fds
[
fd
].id;

63 
mb
->
fd
 = fd;

64 
mb
->
ty≥
 = 
DATA_BLOCK
;

65 
mb
->
Àngth
 = 
ïi
.
fds
[
fd
].
cb
.
rcv¥ŸÀn
 +  (
shm_block
);

68 
˛o£_shmq_pùe
(
böd_c⁄fig
* 
bc
, 
idx
, 
is_chûd
);

70 #ifde‡
__˝lu•lus


	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/boost/any.hpp

3 #i‚de‡
BOOST_ANY_INCLUDED


4 
	#BOOST_ANY_INCLUDED


	)

13 
	~<Æg‹ôhm
>

14 
	~<ty≥öfo
>

16 
	~"boo°/c⁄fig.hµ
"

17 
	~<boo°/ty≥_åaôs/ªmove_ª„ªn˚.hµ
>

18 
	~<boo°/ty≥_åaôs/is_ª„ªn˚.hµ
>

19 
	~<boo°/throw_ex˚±i⁄.hµ
>

20 
	~<boo°/°©ic_as£π.hµ
>

22 
«me•a˚
 
	gboo°


24 ˛as†
	c™y


26 
	gpublic
:

28 
™y
()

29 : 
c⁄ã¡
(0)

33 
ãm∂©e
<
ty≥«me
 
VÆueTy≥
>

34 
™y
(c⁄° 
VÆueTy≥
 & 
vÆue
)

35 : 
c⁄ã¡
(
√w
 
hﬁdî
<
VÆueTy≥
>(
vÆue
))

39 
™y
(c⁄°ány & 
Ÿhî
)

40 : 
c⁄ã¡
(
Ÿhî
.c⁄ã¡ ? othî.c⁄ã¡->
˛⁄e
() : 0)

44 ~
™y
()

46 
dñëe
 
c⁄ã¡
;

49 
	gpublic
:

51 
™y
 & 
sw≠
◊ny & 
rhs
)

53 
°d
::
sw≠
(
c⁄ã¡
, 
rhs
.content);

54  *
	gthis
;

57 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

58 
	g™y
 & 
	g›î©‹
=(c⁄° 
VÆueTy≥
 & 
rhs
)

60 
™y
(
rhs
).
sw≠
(*
this
);

61  *
	gthis
;

64 
	g™y
 & 
	g›î©‹
=(c⁄° 
™y
 & 
rhs
)

66 
™y
(
rhs
).
sw≠
(*
this
);

67  *
	gthis
;

70 
	gpublic
:

72 
boﬁ
 
em±y
() const

74  !
c⁄ã¡
;

77 c⁄° 
	g°d
::
ty≥_öfo
 & 
ty≥
() const

79  
c⁄ã¡
 ? c⁄ã¡->
ty≥
(Ë: 
ty≥id
();

82 #i‚de‡
BOOST_NO_MEMBER_TEMPLATE_FRIENDS


83 
	g¥iv©e
:

85 
public
:

88 ˛as†
	c∂a˚hﬁdî


90 
public
:

92 
vútuÆ
 ~
∂a˚hﬁdî
()

96 
public
:

98 
vútuÆ
 c⁄° 
°d
::
ty≥_öfo
 & 
ty≥
() const = 0;

100 
vútuÆ
 
∂a˚hﬁdî
 * 
˛⁄e
() const = 0;

104 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

105 ˛as†
	chﬁdî
 : 
public
 
∂a˚hﬁdî


107 
public
:

109 
hﬁdî
(c⁄° 
VÆueTy≥
 & 
vÆue
)

110 : 
hñd
(
vÆue
)

114 
public
:

116 
vútuÆ
 c⁄° 
°d
::
ty≥_öfo
 & 
ty≥
() const

118  
ty≥id
(
VÆueTy≥
);

121 
vútuÆ
 
∂a˚hﬁdî
 * 
˛⁄e
() const

123  
√w
 
hﬁdî
(
hñd
);

126 
	gpublic
:

128 
VÆueTy≥
 
hñd
;

132 #i‚de‡
BOOST_NO_MEMBER_TEMPLATE_FRIENDS


134 
	g¥iv©e
:

136 
ãm∂©e
<
ty≥«me
 
VÆueTy≥
>

137 
‰õnd
 
VÆueTy≥
 * 
™y_ˇ°
(
™y
 *);

139 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

140 
‰õnd
 
VÆueTy≥
 * 
unß„_™y_ˇ°
(
™y
 *);

144 
	gpublic
:

148 
∂a˚hﬁdî
 * 
c⁄ã¡
;

152 ˛as†
	cbad_™y_ˇ°
 : 
public
 
°d
::
bad_ˇ°


154 
public
:

155 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
()

162 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

163 
VÆueTy≥
 * 
	$™y_ˇ°
(
™y
 * 
›î™d
)

165  
›î™d
 && o≥ønd->
	`ty≥
(Ë=
	`ty≥id
(
VÆueTy≥
)

166 ? &
°©ic_ˇ°
<
™y
::
hﬁdî
<
VÆueTy≥
> *>(
›î™d
->
c⁄ã¡
)->
hñd


168 
	}
}

170 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

171 
ölöe
 c⁄° 
VÆueTy≥
 * 
	$™y_ˇ°
(c⁄° 
™y
 * 
›î™d
)

173  
™y_ˇ°
<
VÆueTy≥
>(
c⁄°_ˇ°
<
™y
 *>(
›î™d
));

174 
	}
}

176 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

177 
VÆueTy≥
 
	$™y_ˇ°
(
™y
 & 
›î™d
)

179 
BOOST_DEDUCED_TYPENAME
 
	tªmove_ª„ªn˚
<
	tVÆueTy≥
>::
	tty≥
 
	tn⁄ªf
;

181 #ifde‡
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION


188 
	`BOOST_STATIC_ASSERT
(!
is_ª„ªn˚
<
n⁄ªf
>::
vÆue
);

191 
n⁄ªf
 * 
ªsu…
 = 
™y_ˇ°
<n⁄ªf>(&
›î™d
);

192 if(!
ªsu…
)

193 
boo°
::
	`throw_ex˚±i⁄
(
	`bad_™y_ˇ°
());

194  *
ªsu…
;

195 
	}
}

197 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

198 
ölöe
 
VÆueTy≥
 
	$™y_ˇ°
(c⁄° 
™y
 & 
›î™d
)

200 
BOOST_DEDUCED_TYPENAME
 
	tªmove_ª„ªn˚
<
	tVÆueTy≥
>::
	tty≥
 
	tn⁄ªf
;

202 #ifde‡
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION


205 
	`BOOST_STATIC_ASSERT
(!
is_ª„ªn˚
<
n⁄ªf
>::
vÆue
);

208  
™y_ˇ°
<c⁄° 
n⁄ªf
 &>(
c⁄°_ˇ°
<
™y
 &>(
›î™d
));

209 
	}
}

216 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

217 
ölöe
 
VÆueTy≥
 * 
	$unß„_™y_ˇ°
(
™y
 * 
›î™d
)

219  &
°©ic_ˇ°
<
™y
::
hﬁdî
<
VÆueTy≥
> *>(
›î™d
->
c⁄ã¡
)->
hñd
;

220 
	}
}

222 
	gãm∂©e
<
ty≥«me
 
	gVÆueTy≥
>

223 
ölöe
 c⁄° 
VÆueTy≥
 * 
	$unß„_™y_ˇ°
(c⁄° 
™y
 * 
›î™d
)

225  
unß„_™y_ˇ°
<
VÆueTy≥
>(
c⁄°_ˇ°
<
™y
 *>(
›î™d
));

226 
	}
}

	@/usr/include/byteswap.h

19 #i‚de‡
_BYTESWAP_H


20 
	#_BYTESWAP_H
 1

	)

23 
	~<bôs/byãsw≠.h
>

30 
	#bsw≠_16
(
x
Ë
	`__bsw≠_16
 (x)

	)

33 
	#bsw≠_32
(
x
Ë
	`__bsw≠_32
 (x)

	)

35 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

37 
	#bsw≠_64
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_GNU


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

20 #i‚de‡
_ERROR_H


21 
	#_ERROR_H
 1

	)

23 
	~<„©uªs.h
>

26 
__BEGIN_DECLS


32 
	$îr‹
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__f‹m©
, ...)

33 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

35 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__‚ame
,

36 
__löío
, 
__c⁄°
 *
__f‹m©
, ...)

37 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

42 (*
îr‹_¥öt_¥og«me
) ();

45 
îr‹_mesßge_cou¡
;

49 
îr‹_⁄e_≥r_löe
;

52 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


53 
	~<bôs/îr‹.h
>

56 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #ifde‡
__USE_XOPEN


38 
	~<sys/°©.h
>

41 #ifdef 
__USE_MISC


42 #i‚de‡
R_OK


45 
	#R_OK
 4

	)

46 
	#W_OK
 2

	)

47 
	#X_OK
 1

	)

48 
	#F_OK
 0

	)

53 #ifde‡
__USE_XOPEN


54 
	#SEEK_SET
 0

	)

55 
	#SEEK_CUR
 1

	)

56 
	#SEEK_END
 2

	)

59 #ifde‡
__USE_ATFILE


60 
	#AT_FDCWD
 -100

	)

63 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

64 
	#AT_REMOVEDIR
 0x200

	)

66 
	#AT_SYMLINK_FOLLOW
 0x400

	)

67 
	#AT_EACCESS
 0x200

	)

76 
f˙é
 (
__fd
, 
__cmd
, ...);

84 #i‚de‡
__USE_FILE_OFFSET64


85 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

87 #ifde‡
__REDIRECT


88 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

89 
	`__n⁄nuŒ
 ((1));

91 
	#›í
 
›í64


	)

94 #ifde‡
__USE_LARGEFILE64


95 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

98 #ifde‡
__USE_ATFILE


108 #i‚de‡
__USE_FILE_OFFSET64


109 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

110 
	`__n⁄nuŒ
 ((2));

112 #ifde‡
__REDIRECT


113 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

114 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

116 
	#›í©
 
›í©64


	)

120 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

121 
	`__n⁄nuŒ
 ((2));

129 #i‚de‡
__USE_FILE_OFFSET64


130 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__REDIRECT


133 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

134 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

136 
	#¸ót
 
¸ót64


	)

139 #ifde‡
__USE_LARGEFILE64


140 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

143 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

144 && !
deföed
 
__USE_POSIX
))

153 
	#F_ULOCK
 0

	)

154 
	#F_LOCK
 1

	)

155 
	#F_TLOCK
 2

	)

156 
	#F_TEST
 3

	)

158 #i‚de‡
__USE_FILE_OFFSET64


159 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

164 
	#lockf
 
lockf64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

172 #ifde‡
__USE_XOPEN2K


175 #i‚de‡
__USE_FILE_OFFSET64


176 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

177 
__advi£
Ë
__THROW
;

179 #ifde‡
__REDIRECT_NTH


180 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

181 
__off64_t
 
__Àn
, 
__advi£
),

182 
posix_Ádvi£64
);

184 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

187 #ifde‡
__USE_LARGEFILE64


188 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

189 
__advi£
Ë
__THROW
;

197 #i‚de‡
__USE_FILE_OFFSET64


198 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

200 #ifde‡
__REDIRECT


201 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

202 
__off64_t
 
__Àn
),

203 
posix_ÁŒoˇã64
);

205 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

208 #ifde‡
__USE_LARGEFILE64


209 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

215 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

216 && 
deföed
 
__va_¨g_∑ck_Àn


217 
	~<bôs/f˙é2.h
>

220 
__END_DECLS


	@/usr/include/google/protobuf/descriptor.h

54 #i‚de‡
GOOGLE_PROTOBUF_DESCRIPTOR_H__


55 
	#GOOGLE_PROTOBUF_DESCRIPTOR_H__


	)

57 
	~<°rög
>

58 
	~<ve˘‹
>

59 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

62 #ifde‡
TYPE_BOOL


63 #unde‡
TYPE_BOOL


66 
«me•a˚
 
	ggoogÀ
 {

67 
«me•a˚
 
	g¥Ÿobuf
 {

70 
˛ass
 
	gDes¸ùt‹
;

71 
˛ass
 
	gFõldDes¸ùt‹
;

72 
˛ass
 
	gEnumDes¸ùt‹
;

73 
˛ass
 
	gEnumVÆueDes¸ùt‹
;

74 
˛ass
 
	gSîvi˚Des¸ùt‹
;

75 
˛ass
 
	gMëhodDes¸ùt‹
;

76 
˛ass
 
	gFûeDes¸ùt‹
;

77 
˛ass
 
	gDes¸ùt‹D©aba£
;

78 
˛ass
 
	gDes¸ùt‹Poﬁ
;

81 
˛ass
 
	gDes¸ùt‹PrŸo
;

82 
˛ass
 
	gFõldDes¸ùt‹PrŸo
;

83 
˛ass
 
	gEnumDes¸ùt‹PrŸo
;

84 
˛ass
 
	gEnumVÆueDes¸ùt‹PrŸo
;

85 
˛ass
 
	gSîvi˚Des¸ùt‹PrŸo
;

86 
˛ass
 
	gMëhodDes¸ùt‹PrŸo
;

87 
˛ass
 
	gFûeDes¸ùt‹PrŸo
;

88 
˛ass
 
	gMesßgeO±i⁄s
;

89 
˛ass
 
	gFõldO±i⁄s
;

90 
˛ass
 
	gEnumO±i⁄s
;

91 
˛ass
 
	gEnumVÆueO±i⁄s
;

92 
˛ass
 
	gSîvi˚O±i⁄s
;

93 
˛ass
 
	gMëhodO±i⁄s
;

94 
˛ass
 
	gFûeO±i⁄s
;

95 
˛ass
 
	gUnöãΩªãdO±i⁄
;

96 
˛ass
 
	gSour˚CodeInfo
;

99 
˛ass
 
	gMesßge
;

102 
˛ass
 
	gDes¸ùt‹Buûdî
;

103 
˛ass
 
	gFûeDes¸ùt‹TabÀs
;

106 
˛ass
 
	gUnknownFõld
;

109 
	sSour˚Loˇti⁄
 {

110 
	g°¨t_löe
;

111 
	gíd_löe
;

112 
	g°¨t_cﬁumn
;

113 
	gíd_cﬁumn
;

118 
°rög
 
	gÀadög_commíts
;

119 
°rög
 
	gåaûög_commíts
;

127 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gDes¸ùt‹
 {

128 
	gpublic
:

130 c⁄° 
°rög
& 
«me
() const;

137 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

141 
ödex
() const;

144 c⁄° 
FûeDes¸ùt‹
* 
fûe
() const;

148 c⁄° 
Des¸ùt‹
* 
c⁄èöög_ty≥
() const;

155 c⁄° 
	gMesßgeO±i⁄s
& 
›ti⁄s
() const;

160 
C›yTo
(
Des¸ùt‹PrŸo
* 
¥Ÿo
) const;

164 
°rög
 
DebugSåög
() const;

169 
fõld_cou¡
() const;

172 c⁄° 
FõldDes¸ùt‹
* 
fõld
(
ödex
) const;

176 c⁄° 
FõldDes¸ùt‹
* 
FödFõldByNumbî
(
numbî
) const;

178 c⁄° 
FõldDes¸ùt‹
* 
FödFõldByName
(c⁄° 
°rög
& 
«me
) const;

183 c⁄° 
FõldDes¸ùt‹
* 
FödFõldByLowîˇ£Name
(

184 c⁄° 
°rög
& 
lowîˇ£_«me
) const;

190 c⁄° 
FõldDes¸ùt‹
* 
FödFõldByCamñˇ£Name
(

191 c⁄° 
°rög
& 
ˇmñˇ£_«me
) const;

196 
√°ed_ty≥_cou¡
() const;

199 c⁄° 
Des¸ùt‹
* 
√°ed_ty≥
(
ödex
) const;

203 c⁄° 
Des¸ùt‹
* 
FödNe°edTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

208 
íum_ty≥_cou¡
() const;

211 c⁄° 
EnumDes¸ùt‹
* 
íum_ty≥
(
ödex
) const;

214 c⁄° 
EnumDes¸ùt‹
* 
FödEnumTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

218 c⁄° 
EnumVÆueDes¸ùt‹
* 
FödEnumVÆueByName
(c⁄° 
°rög
& 
«me
) const;

224 
	sExãnsi⁄R™ge
 {

225 
	g°¨t
;

226 
	gíd
;

230 
exãnsi⁄_ønge_cou¡
() const;

234 c⁄° 
Exãnsi⁄R™ge
* 
exãnsi⁄_ønge
(
ödex
) const;

237 
boﬁ
 
IsExãnsi⁄Numbî
(
numbî
) const;

241 
exãnsi⁄_cou¡
() const;

244 c⁄° 
FõldDes¸ùt‹
* 
exãnsi⁄
(
ödex
) const;

248 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByName
(c⁄° 
°rög
& 
«me
) const;

252 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByLowîˇ£Name
(c⁄° 
°rög
& 
«me
) const;

256 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByCamñˇ£Name
(c⁄° 
°rög
& 
«me
) const;

263 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

265 
	g¥iv©e
:

266 
MesßgeO±i⁄s
 
	tO±i⁄sTy≥
;

270 
DebugSåög
(
dïth
, 
°rög
 *
c⁄ã¡s
) const;

274 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

276 c⁄° 
°rög
* 
	g«me_
;

277 c⁄° 
°rög
* 
	gfuŒ_«me_
;

278 c⁄° 
FûeDes¸ùt‹
* 
	gfûe_
;

279 c⁄° 
Des¸ùt‹
* 
	gc⁄èöög_ty≥_
;

280 c⁄° 
MesßgeO±i⁄s
* 
	g›ti⁄s_
;

283 
boﬁ
 
	gis_∂a˚hﬁdî_
;

285 
boﬁ
 
	gis_unquÆifõd_∂a˚hﬁdî_
;

287 
	gfõld_cou¡_
;

288 
FõldDes¸ùt‹
* 
	gfõlds_
;

289 
	g√°ed_ty≥_cou¡_
;

290 
Des¸ùt‹
* 
	g√°ed_ty≥s_
;

291 
	gíum_ty≥_cou¡_
;

292 
EnumDes¸ùt‹
* 
	gíum_ty≥s_
;

293 
	gexãnsi⁄_ønge_cou¡_
;

294 
Exãnsi⁄R™ge
* 
	gexãnsi⁄_ønges_
;

295 
	gexãnsi⁄_cou¡_
;

296 
FõldDes¸ùt‹
* 
	gexãnsi⁄s_
;

302 
Des¸ùt‹
() {}

303 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

304 
‰õnd
 
˛ass
 
	gEnumDes¸ùt‹
;

305 
‰õnd
 
˛ass
 
	gFõldDes¸ùt‹
;

306 
‰õnd
 
˛ass
 
	gMëhodDes¸ùt‹
;

307 
‰õnd
 
˛ass
 
	gFûeDes¸ùt‹
;

308 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Des¸ùt‹
);

323 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gFõldDes¸ùt‹
 {

324 
	gpublic
:

327 
	eTy≥
 {

328 
TYPE_DOUBLE
 = 1,

329 
	gTYPE_FLOAT
 = 2,

330 
	gTYPE_INT64
 = 3,

333 
	gTYPE_UINT64
 = 4,

334 
	gTYPE_INT32
 = 5,

337 
	gTYPE_FIXED64
 = 6,

338 
	gTYPE_FIXED32
 = 7,

339 
	gTYPE_BOOL
 = 8,

340 
	gTYPE_STRING
 = 9,

341 
	gTYPE_GROUP
 = 10,

342 
	gTYPE_MESSAGE
 = 11,

344 
	gTYPE_BYTES
 = 12,

345 
	gTYPE_UINT32
 = 13,

346 
	gTYPE_ENUM
 = 14,

347 
	gTYPE_SFIXED32
 = 15,

348 
	gTYPE_SFIXED64
 = 16,

349 
	gTYPE_SINT32
 = 17,

350 
	gTYPE_SINT64
 = 18,

352 
	gMAX_TYPE
 = 18,

359 
	eCµTy≥
 {

360 
	gCPPTYPE_INT32
 = 1,

361 
	gCPPTYPE_INT64
 = 2,

362 
	gCPPTYPE_UINT32
 = 3,

363 
	gCPPTYPE_UINT64
 = 4,

364 
	gCPPTYPE_DOUBLE
 = 5,

365 
	gCPPTYPE_FLOAT
 = 6,

366 
	gCPPTYPE_BOOL
 = 7,

367 
	gCPPTYPE_ENUM
 = 8,

368 
	gCPPTYPE_STRING
 = 9,

369 
	gCPPTYPE_MESSAGE
 = 10,

371 
	gMAX_CPPTYPE
 = 10,

377 
	eLabñ
 {

378 
	gLABEL_OPTIONAL
 = 1,

379 
	gLABEL_REQUIRED
 = 2,

380 
	gLABEL_REPEATED
 = 3,

382 
	gMAX_LABEL
 = 3,

387 c⁄° 
	gkMaxNumbî
 = (1 << 29) - 1;

391 c⁄° 
	gkFú°Re£rvedNumbî
 = 19000;

394 c⁄° 
	gkLa°Re£rvedNumbî
 = 19999;

396 c⁄° 
	g°rög
& 
«me
() const;

397 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

398 c⁄° 
FûeDes¸ùt‹
* 
fûe
() const;

399 
boﬁ
 
is_exãnsi⁄
() const;

400 
numbî
() const;

408 c⁄° 
	g°rög
& 
lowîˇ£_«me
() const;

419 c⁄° 
	g°rög
& 
ˇmñˇ£_«me
() const;

421 
Ty≥
 
ty≥
() const;

422 c⁄° * 
ty≥_«me
() const;

423 
CµTy≥
 
˝p_ty≥
() const;

424 c⁄° * 
˝p_ty≥_«me
() const;

425 
Labñ
 
œbñ
() const;

427 
boﬁ
 
is_ªquúed
() const;

428 
boﬁ
 
is_›ti⁄Æ
() const;

429 
boﬁ
 
is_ª≥©ed
() const;

430 
boﬁ
 
is_∑ckabÀ
() const;

432 
boﬁ
 
is_∑cked
() const;

437 
ödex
() const;

440 
boﬁ
 
has_deÁu…_vÆue
() const;

444 
öt32
 
deÁu…_vÆue_öt32
() const;

447 
öt64
 
deÁu…_vÆue_öt64
() const;

450 
uöt32
 
deÁu…_vÆue_uöt32
() const;

453 
uöt64
 
deÁu…_vÆue_uöt64
() const;

456 
deÁu…_vÆue_Êﬂt
() const;

459 
deÁu…_vÆue_doubÀ
() const;

462 
boﬁ
 
deÁu…_vÆue_boﬁ
() const;

467 c⁄° 
EnumVÆueDes¸ùt‹
* 
deÁu…_vÆue_íum
() const;

470 c⁄° 
	g°rög
& 
deÁu…_vÆue_°rög
() const;

474 c⁄° 
Des¸ùt‹
* 
c⁄èöög_ty≥
() const;

481 c⁄° 
Des¸ùt‹
* 
exãnsi⁄_sc›e
() const;

485 c⁄° 
Des¸ùt‹
* 
mesßge_ty≥
() const;

488 c⁄° 
EnumDes¸ùt‹
* 
íum_ty≥
() const;

494 c⁄° 
FõldDes¸ùt‹
* 
ex≥rimíèl_m≠_key
() const;

502 c⁄° 
	gFõldO±i⁄s
& 
›ti⁄s
() const;

505 
C›yTo
(
FõldDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

508 
°rög
 
DebugSåög
() const;

511 
CµTy≥
 
Ty≥ToCµTy≥
(
Ty≥
 
ty≥
);

514 
ölöe
 
boﬁ
 
IsTy≥PackabÀ
(
Ty≥
 
fõld_ty≥
);

521 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

523 
	g¥iv©e
:

524 
FõldO±i⁄s
 
	tO±i⁄sTy≥
;

527 
DebugSåög
(
dïth
, 
°rög
 *
c⁄ã¡s
) const;

532 
°rög
 
DeÁu…VÆueAsSåög
(
boﬁ
 
quŸe_°rög_ty≥
) const;

536 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

538 c⁄° 
°rög
* 
	g«me_
;

539 c⁄° 
°rög
* 
	gfuŒ_«me_
;

540 c⁄° 
°rög
* 
	glowîˇ£_«me_
;

541 c⁄° 
°rög
* 
	gˇmñˇ£_«me_
;

542 c⁄° 
FûeDes¸ùt‹
* 
	gfûe_
;

543 
	gnumbî_
;

544 
Ty≥
 
	gty≥_
;

545 
Labñ
 
	gœbñ_
;

546 
boﬁ
 
	gis_exãnsi⁄_
;

547 c⁄° 
Des¸ùt‹
* 
	gc⁄èöög_ty≥_
;

548 c⁄° 
Des¸ùt‹
* 
	gexãnsi⁄_sc›e_
;

549 c⁄° 
Des¸ùt‹
* 
	gmesßge_ty≥_
;

550 c⁄° 
EnumDes¸ùt‹
* 
	gíum_ty≥_
;

551 c⁄° 
FõldDes¸ùt‹
* 
	gex≥rimíèl_m≠_key_
;

552 c⁄° 
FõldO±i⁄s
* 
	g›ti⁄s_
;

557 
boﬁ
 
	ghas_deÁu…_vÆue_
;

559 
öt32
 
	gdeÁu…_vÆue_öt32_
;

560 
öt64
 
	gdeÁu…_vÆue_öt64_
;

561 
uöt32
 
	gdeÁu…_vÆue_uöt32_
;

562 
uöt64
 
	gdeÁu…_vÆue_uöt64_
;

563 
	gdeÁu…_vÆue_Êﬂt_
;

564 
	gdeÁu…_vÆue_doubÀ_
;

565 
boﬁ
 
	gdeÁu…_vÆue_boﬁ_
;

567 c⁄° 
EnumVÆueDes¸ùt‹
* 
	gdeÁu…_vÆue_íum_
;

568 c⁄° 
°rög
* 
	gdeÁu…_vÆue_°rög_
;

571 c⁄° 
CµTy≥
 
	gkTy≥ToCµTy≥M≠
[
MAX_TYPE
 + 1];

573 c⁄° * c⁄° 
	gkTy≥ToName
[
MAX_TYPE
 + 1];

575 c⁄° * c⁄° 
	gkCµTy≥ToName
[
MAX_CPPTYPE
 + 1];

577 c⁄° * c⁄° 
	gkLabñToName
[
MAX_LABEL
 + 1];

580 
FõldDes¸ùt‹
() {}

581 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

582 
‰õnd
 
˛ass
 
	gFûeDes¸ùt‹
;

583 
‰õnd
 
˛ass
 
	gDes¸ùt‹
;

584 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
FõldDes¸ùt‹
);

590 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gEnumDes¸ùt‹
 {

591 
	gpublic
:

593 c⁄° 
°rög
& 
«me
() const;

596 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

599 
ödex
() const;

602 c⁄° 
FûeDes¸ùt‹
* 
fûe
() const;

606 
vÆue_cou¡
() const;

609 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
(
ödex
) const;

612 c⁄° 
EnumVÆueDes¸ùt‹
* 
FödVÆueByName
(c⁄° 
°rög
& 
«me
) const;

615 c⁄° 
EnumVÆueDes¸ùt‹
* 
FödVÆueByNumbî
(
numbî
) const;

619 c⁄° 
Des¸ùt‹
* 
c⁄èöög_ty≥
() const;

625 c⁄° 
	gEnumO±i⁄s
& 
›ti⁄s
() const;

628 
C›yTo
(
EnumDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

631 
°rög
 
DebugSåög
() const;

638 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

640 
	g¥iv©e
:

641 
EnumO±i⁄s
 
	tO±i⁄sTy≥
;

644 
DebugSåög
(
dïth
, 
°rög
 *
c⁄ã¡s
) const;

648 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

650 c⁄° 
°rög
* 
	g«me_
;

651 c⁄° 
°rög
* 
	gfuŒ_«me_
;

652 c⁄° 
FûeDes¸ùt‹
* 
	gfûe_
;

653 c⁄° 
Des¸ùt‹
* 
	gc⁄èöög_ty≥_
;

654 c⁄° 
EnumO±i⁄s
* 
	g›ti⁄s_
;

657 
boﬁ
 
	gis_∂a˚hﬁdî_
;

659 
boﬁ
 
	gis_unquÆifõd_∂a˚hﬁdî_
;

661 
	gvÆue_cou¡_
;

662 
EnumVÆueDes¸ùt‹
* 
	gvÆues_
;

668 
EnumDes¸ùt‹
() {}

669 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

670 
‰õnd
 
˛ass
 
	gDes¸ùt‹
;

671 
‰õnd
 
˛ass
 
	gFõldDes¸ùt‹
;

672 
‰õnd
 
˛ass
 
	gEnumVÆueDes¸ùt‹
;

673 
‰õnd
 
˛ass
 
	gFûeDes¸ùt‹
;

674 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
EnumDes¸ùt‹
);

682 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gEnumVÆueDes¸ùt‹
 {

683 
	gpublic
:

684 c⁄° 
°rög
& 
«me
() const;

685 
ödex
() const;

686 
numbî
() const;

693 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

696 c⁄° 
EnumDes¸ùt‹
* 
ty≥
() const;

703 c⁄° 
	gEnumVÆueO±i⁄s
& 
›ti⁄s
() const;

706 
C›yTo
(
EnumVÆueDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

709 
°rög
 
DebugSåög
() const;

716 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

718 
	g¥iv©e
:

719 
EnumVÆueO±i⁄s
 
	tO±i⁄sTy≥
;

722 
DebugSåög
(
dïth
, 
°rög
 *
c⁄ã¡s
) const;

726 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

728 c⁄° 
°rög
* 
	g«me_
;

729 c⁄° 
°rög
* 
	gfuŒ_«me_
;

730 
	gnumbî_
;

731 c⁄° 
EnumDes¸ùt‹
* 
	gty≥_
;

732 c⁄° 
EnumVÆueO±i⁄s
* 
	g›ti⁄s_
;

738 
EnumVÆueDes¸ùt‹
() {}

739 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

740 
‰õnd
 
˛ass
 
	gEnumDes¸ùt‹
;

741 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
EnumVÆueDes¸ùt‹
);

748 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gSîvi˚Des¸ùt‹
 {

749 
	gpublic
:

751 c⁄° 
°rög
& 
«me
() const;

753 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

755 
ödex
() const;

758 c⁄° 
FûeDes¸ùt‹
* 
fûe
() const;

765 c⁄° 
	gSîvi˚O±i⁄s
& 
›ti⁄s
() const;

768 
mëhod_cou¡
() const;

771 c⁄° 
MëhodDes¸ùt‹
* 
mëhod
(
ödex
) const;

774 c⁄° 
MëhodDes¸ùt‹
* 
FödMëhodByName
(c⁄° 
°rög
& 
«me
) const;

776 
C›yTo
(
Sîvi˚Des¸ùt‹PrŸo
* 
¥Ÿo
) const;

779 
°rög
 
DebugSåög
() const;

786 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

788 
	g¥iv©e
:

789 
Sîvi˚O±i⁄s
 
	tO±i⁄sTy≥
;

792 
DebugSåög
(
°rög
 *
c⁄ã¡s
) const;

796 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

798 c⁄° 
°rög
* 
	g«me_
;

799 c⁄° 
°rög
* 
	gfuŒ_«me_
;

800 c⁄° 
FûeDes¸ùt‹
* 
	gfûe_
;

801 c⁄° 
Sîvi˚O±i⁄s
* 
	g›ti⁄s_
;

802 
	gmëhod_cou¡_
;

803 
MëhodDes¸ùt‹
* 
	gmëhods_
;

809 
Sîvi˚Des¸ùt‹
() {}

810 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

811 
‰õnd
 
˛ass
 
	gFûeDes¸ùt‹
;

812 
‰õnd
 
˛ass
 
	gMëhodDes¸ùt‹
;

813 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Sîvi˚Des¸ùt‹
);

820 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMëhodDes¸ùt‹
 {

821 
	gpublic
:

823 c⁄° 
°rög
& 
«me
() const;

825 c⁄° 
	g°rög
& 
fuŒ_«me
() const;

827 
ödex
() const;

830 c⁄° 
Sîvi˚Des¸ùt‹
* 
£rvi˚
() const;

833 c⁄° 
Des¸ùt‹
* 
öput_ty≥
() const;

835 c⁄° 
Des¸ùt‹
* 
ouçut_ty≥
() const;

842 c⁄° 
	gMëhodO±i⁄s
& 
›ti⁄s
() const;

845 
C›yTo
(
MëhodDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

848 
°rög
 
DebugSåög
() const;

855 
boﬁ
 
GëSour˚Loˇti⁄
(
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

857 
	g¥iv©e
:

858 
MëhodO±i⁄s
 
	tO±i⁄sTy≥
;

861 
DebugSåög
(
dïth
, 
°rög
 *
c⁄ã¡s
) const;

865 
GëLoˇti⁄P©h
(
ve˘‹
<>* 
ouçut
) const;

867 c⁄° 
°rög
* 
	g«me_
;

868 c⁄° 
°rög
* 
	gfuŒ_«me_
;

869 c⁄° 
Sîvi˚Des¸ùt‹
* 
	g£rvi˚_
;

870 c⁄° 
Des¸ùt‹
* 
	göput_ty≥_
;

871 c⁄° 
Des¸ùt‹
* 
	gouçut_ty≥_
;

872 c⁄° 
MëhodO±i⁄s
* 
	g›ti⁄s_
;

878 
MëhodDes¸ùt‹
() {}

879 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

880 
‰õnd
 
˛ass
 
	gSîvi˚Des¸ùt‹
;

881 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
MëhodDes¸ùt‹
);

888 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gFûeDes¸ùt‹
 {

889 
	gpublic
:

892 c⁄° 
°rög
& 
«me
() const;

895 c⁄° 
	g°rög
& 
∑ckage
() const;

899 c⁄° 
Des¸ùt‹Poﬁ
* 
poﬁ
() const;

902 
dïídícy_cou¡
() const;

905 c⁄° 
FûeDes¸ùt‹
* 
dïídícy
(
ödex
) const;

909 
public_dïídícy_cou¡
() const;

913 c⁄° 
FûeDes¸ùt‹
* 
public_dïídícy
(
ödex
) const;

917 
wók_dïídícy_cou¡
() const;

921 c⁄° 
FûeDes¸ùt‹
* 
wók_dïídícy
(
ödex
) const;

925 
mesßge_ty≥_cou¡
() const;

928 c⁄° 
Des¸ùt‹
* 
mesßge_ty≥
(
ödex
) const;

932 
íum_ty≥_cou¡
() const;

935 c⁄° 
EnumDes¸ùt‹
* 
íum_ty≥
(
ödex
) const;

938 
£rvi˚_cou¡
() const;

941 c⁄° 
Sîvi˚Des¸ùt‹
* 
£rvi˚
(
ödex
) const;

945 
exãnsi⁄_cou¡
() const;

948 c⁄° 
FõldDes¸ùt‹
* 
exãnsi⁄
(
ödex
) const;

955 c⁄° 
	gFûeO±i⁄s
& 
›ti⁄s
() const;

958 c⁄° 
Des¸ùt‹
* 
FödMesßgeTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

960 c⁄° 
EnumDes¸ùt‹
* 
FödEnumTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

963 c⁄° 
EnumVÆueDes¸ùt‹
* 
FödEnumVÆueByName
(c⁄° 
°rög
& 
«me
) const;

965 c⁄° 
Sîvi˚Des¸ùt‹
* 
FödSîvi˚ByName
(c⁄° 
°rög
& 
«me
) const;

967 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByName
(c⁄° 
°rög
& 
«me
) const;

970 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByLowîˇ£Name
(c⁄° 
°rög
& 
«me
) const;

973 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByCamñˇ£Name
(c⁄° 
°rög
& 
«me
) const;

979 
C›yTo
(
FûeDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

982 
C›ySour˚CodeInfoTo
(
FûeDes¸ùt‹PrŸo
* 
¥Ÿo
) const;

985 
°rög
 
DebugSåög
() const;

987 
	g¥iv©e
:

995 
boﬁ
 
GëSour˚Loˇti⁄
(c⁄° 
ve˘‹
<>& 
∑th
,

996 
Sour˚Loˇti⁄
* 
out_loˇti⁄
) const;

998 
FûeO±i⁄s
 
	tO±i⁄sTy≥
;

1000 c⁄° 
°rög
* 
	g«me_
;

1001 c⁄° 
°rög
* 
	g∑ckage_
;

1002 c⁄° 
Des¸ùt‹Poﬁ
* 
	gpoﬁ_
;

1003 
	gdïídícy_cou¡_
;

1004 c⁄° 
FûeDes¸ùt‹
** 
	gdïídícõs_
;

1005 
	gpublic_dïídícy_cou¡_
;

1006 * 
	gpublic_dïídícõs_
;

1007 
	gwók_dïídícy_cou¡_
;

1008 * 
	gwók_dïídícõs_
;

1009 
	gmesßge_ty≥_cou¡_
;

1010 
Des¸ùt‹
* 
	gmesßge_ty≥s_
;

1011 
	gíum_ty≥_cou¡_
;

1012 
EnumDes¸ùt‹
* 
	gíum_ty≥s_
;

1013 
	g£rvi˚_cou¡_
;

1014 
Sîvi˚Des¸ùt‹
* 
	g£rvi˚s_
;

1015 
	gexãnsi⁄_cou¡_
;

1016 
FõldDes¸ùt‹
* 
	gexãnsi⁄s_
;

1017 c⁄° 
FûeO±i⁄s
* 
	g›ti⁄s_
;

1019 c⁄° 
FûeDes¸ùt‹TabÀs
* 
	gèbÀs_
;

1020 c⁄° 
Sour˚CodeInfo
* 
	gsour˚_code_öfo_
;

1025 
FûeDes¸ùt‹
() {}

1026 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

1027 
‰õnd
 
˛ass
 
	gDes¸ùt‹
;

1028 
‰õnd
 
˛ass
 
	gFõldDes¸ùt‹
;

1029 
‰õnd
 
˛ass
 
	gEnumDes¸ùt‹
;

1030 
‰õnd
 
˛ass
 
	gEnumVÆueDes¸ùt‹
;

1031 
‰õnd
 
˛ass
 
	gMëhodDes¸ùt‹
;

1032 
‰õnd
 
˛ass
 
	gSîvi˚Des¸ùt‹
;

1033 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
FûeDes¸ùt‹
);

1062 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gDes¸ùt‹Poﬁ
 {

1063 
	gpublic
:

1065 
Des¸ùt‹Poﬁ
();

1086 
˛ass
 
	gEº‹CﬁÀ˘‹
;

1087 
ex∂icô
 
Des¸ùt‹Poﬁ
(
Des¸ùt‹D©aba£
* 
ÁŒback_d©aba£
,

1088 
Eº‹CﬁÀ˘‹
* 
îr‹_cﬁÀ˘‹
 = 
NULL
);

1090 ~
Des¸ùt‹Poﬁ
();

1095 c⁄° 
Des¸ùt‹Poﬁ
* 
gíî©ed_poﬁ
();

1099 c⁄° 
FûeDes¸ùt‹
* 
FödFûeByName
(c⁄° 
°rög
& 
«me
) const;

1105 c⁄° 
FûeDes¸ùt‹
* 
FödFûeC⁄èöögSymbﬁ
(

1106 c⁄° 
°rög
& 
symbﬁ_«me
) const;

1113 c⁄° 
Des¸ùt‹
* 
FödMesßgeTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

1114 c⁄° 
FõldDes¸ùt‹
* 
FödFõldByName
(c⁄° 
°rög
& 
«me
) const;

1115 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByName
(c⁄° 
°rög
& 
«me
) const;

1116 c⁄° 
EnumDes¸ùt‹
* 
FödEnumTy≥ByName
(c⁄° 
°rög
& 
«me
) const;

1117 c⁄° 
EnumVÆueDes¸ùt‹
* 
FödEnumVÆueByName
(c⁄° 
°rög
& 
«me
) const;

1118 c⁄° 
Sîvi˚Des¸ùt‹
* 
FödSîvi˚ByName
(c⁄° 
°rög
& 
«me
) const;

1119 c⁄° 
MëhodDes¸ùt‹
* 
FödMëhodByName
(c⁄° 
°rög
& 
«me
) const;

1123 c⁄° 
FõldDes¸ùt‹
* 
FödExãnsi⁄ByNumbî
(c⁄° 
Des¸ùt‹
* 
exãndì
,

1124 
numbî
) const;

1131 
FödAŒExãnsi⁄s
(c⁄° 
Des¸ùt‹
* 
exãndì
,

1132 
ve˘‹
<c⁄° 
FõldDes¸ùt‹
*>* 
out
) const;

1139 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gEº‹CﬁÀ˘‹
 {

1140 
	gpublic
:

1141 
ölöe
 
Eº‹CﬁÀ˘‹
() {}

1142 
vútuÆ
 ~
Eº‹CﬁÀ˘‹
();

1147 
	eEº‹Loˇti⁄
 {

1148 
	gNAME
,

1149 
	gNUMBER
,

1150 
	gTYPE
,

1151 
	gEXTENDEE
,

1152 
	gDEFAULT_VALUE
,

1153 
	gINPUT_TYPE
,

1154 
	gOUTPUT_TYPE
,

1155 
	gOPTION_NAME
,

1156 
	gOPTION_VALUE
,

1157 
	gOTHER


1161 
vútuÆ
 
AddEº‹
(

1162 c⁄° 
°rög
& 
fûíame
,

1163 c⁄° 
°rög
& 
ñemít_«me
,

1164 c⁄° 
Mesßge
* 
des¸ùt‹
,

1165 
Eº‹Loˇti⁄
 
loˇti⁄
,

1166 c⁄° 
°rög
& 
mesßge


1169 
	g¥iv©e
:

1170 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Eº‹CﬁÀ˘‹
);

1178 c⁄° 
FûeDes¸ùt‹
* 
BuûdFûe
(c⁄° 
FûeDes¸ùt‹PrŸo
& 
¥Ÿo
);

1181 c⁄° 
FûeDes¸ùt‹
* 
BuûdFûeCﬁÀ˘ögEº‹s
(

1182 c⁄° 
FûeDes¸ùt‹PrŸo
& 
¥Ÿo
,

1183 
Eº‹CﬁÀ˘‹
* 
îr‹_cﬁÀ˘‹
);

1200 
AŒowUnknownDïídícõs
(Ë{ 
	gÆlow_unknown_
 = 
åue
; }

1227 
ex∂icô
 
Des¸ùt‹Poﬁ
(c⁄° Des¸ùt‹Poﬁ* 
undîœy
);

1232 
I¡î«lAddGíî©edFûe
(

1233 c⁄° * 
ícoded_fûe_des¸ùt‹
, 
size
);

1240 
Des¸ùt‹Poﬁ
* 
öã∫Æ_gíî©ed_poﬁ
();

1245 
I¡î«lD⁄tEnf‹˚Dïídícõs
();

1248 
öã∫Æ_£t_undîœy
(c⁄° 
Des¸ùt‹Poﬁ
* 
undîœy
) {

1249 
	gundîœy_
 = 
undîœy
;

1255 
boﬁ
 
I¡î«lIsFûeLﬂded
(c⁄° 
°rög
& 
fûíame
) const;

1257 
	g¥iv©e
:

1258 
‰õnd
 
˛ass
 
Des¸ùt‹
;

1259 
‰õnd
 
˛ass
 
	gFõldDes¸ùt‹
;

1260 
‰õnd
 
˛ass
 
	gEnumDes¸ùt‹
;

1261 
‰õnd
 
˛ass
 
	gSîvi˚Des¸ùt‹
;

1262 
‰õnd
 
˛ass
 
	gFûeDes¸ùt‹
;

1263 
‰õnd
 
˛ass
 
	gDes¸ùt‹Buûdî
;

1268 
boﬁ
 
IsSubSymbﬁOfBuûtTy≥
(c⁄° 
°rög
& 
«me
) const;

1274 
boﬁ
 
TryFödFûeInFÆlbackD©aba£
(c⁄° 
°rög
& 
«me
) const;

1275 
boﬁ
 
TryFödSymbﬁInFÆlbackD©aba£
(c⁄° 
°rög
& 
«me
) const;

1276 
boﬁ
 
TryFödExãnsi⁄InFÆlbackD©aba£
(c⁄° 
Des¸ùt‹
* 
c⁄èöög_ty≥
,

1277 
fõld_numbî
) const;

1282 c⁄° 
FûeDes¸ùt‹
* 
BuûdFûeFromD©aba£
(

1283 c⁄° 
FûeDes¸ùt‹PrŸo
& 
¥Ÿo
) const;

1287 
Muãx
* 
	gmuãx_
;

1290 
Des¸ùt‹D©aba£
* 
	gÁŒback_d©aba£_
;

1291 
Eº‹CﬁÀ˘‹
* 
	gdeÁu…_îr‹_cﬁÀ˘‹_
;

1292 c⁄° 
Des¸ùt‹Poﬁ
* 
	gundîœy_
;

1296 
˛ass
 
	gTabÀs
;

1297 
	gsc›ed_±r
<
	gTabÀs
> 
	gèbÀs_
;

1299 
boﬁ
 
	gíf‹˚_dïídícõs_
;

1300 
boﬁ
 
	gÆlow_unknown_
;

1302 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Des¸ùt‹Poﬁ
);

1308 
	#PROTOBUF_DEFINE_ACCESSOR
(
CLASS
, 
FIELD
, 
TYPE
) \

1309 
ölöe
 
TYPE
 
CLASS
::
	`FIELD
(Ëc⁄° {  
FIELD
##
_
; }

	)

1312 
	#PROTOBUF_DEFINE_STRING_ACCESSOR
(
CLASS
, 
FIELD
) \

1313 
ölöe
 c⁄° 
°rög
& 
CLASS
::
	`FIELD
(Ëc⁄° {  *
FIELD
##
_
; }

	)

1316 
	#PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
CLASS
, 
FIELD
, 
TYPE
) \

1317 
ölöe
 
TYPE
 
CLASS
::
	`FIELD
(
ödex
Ëc⁄° {  
FIELD
##
s_
 + index; }

	)

1319 
	#PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
CLASS
, 
TYPE
) \

1320 
ölöe
 c⁄° 
TYPE
& 
CLASS
::
	`›ti⁄s
(Ëc⁄° {  *
›ti⁄s_
; }

	)

1322 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
Des¸ùt‹
, 
«me
)

1323 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
Des¸ùt‹
, 
fuŒ_«me
)

1324 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
fûe
, c⁄° 
FûeDes¸ùt‹
*)

1325 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
c⁄èöög_ty≥
, const Descriptor*)

1327 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
fõld_cou¡
, )

1328 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
√°ed_ty≥_cou¡
, )

1329 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
íum_ty≥_cou¡
, )

1331 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Des¸ùt‹
, 
fõld
, c⁄° 
FõldDes¸ùt‹
*)

1332 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Des¸ùt‹
, 
√°ed_ty≥
, const Descriptor*)

1333 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Des¸ùt‹
, 
íum_ty≥
, c⁄° 
EnumDes¸ùt‹
*)

1335 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
exãnsi⁄_ønge_cou¡
, )

1336 
PROTOBUF_DEFINE_ACCESSOR
(
Des¸ùt‹
, 
exãnsi⁄_cou¡
, )

1337 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Des¸ùt‹
, 
exãnsi⁄_ønge
,

1338 c⁄° 
Des¸ùt‹
::
Exãnsi⁄R™ge
*)

1339 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Des¸ùt‹
, 
exãnsi⁄
,

1340 c⁄° 
FõldDes¸ùt‹
*)

1341 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
Des¸ùt‹
, 
MesßgeO±i⁄s
)

1343 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FõldDes¸ùt‹
, 
«me
)

1344 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FõldDes¸ùt‹
, 
fuŒ_«me
)

1345 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FõldDes¸ùt‹
, 
lowîˇ£_«me
)

1346 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FõldDes¸ùt‹
, 
ˇmñˇ£_«me
)

1347 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
fûe
, c⁄° 
FûeDes¸ùt‹
*)

1348 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
numbî
, )

1349 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
is_exãnsi⁄
, 
boﬁ
)

1350 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
ty≥
, FõldDes¸ùt‹::
Ty≥
)

1351 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
œbñ
, FõldDes¸ùt‹::
Labñ
)

1352 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
c⁄èöög_ty≥
, c⁄° 
Des¸ùt‹
*)

1353 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
exãnsi⁄_sc›e
, c⁄° 
Des¸ùt‹
*)

1354 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
mesßge_ty≥
, c⁄° 
Des¸ùt‹
*)

1355 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
íum_ty≥
, c⁄° 
EnumDes¸ùt‹
*)

1356 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
ex≥rimíèl_m≠_key
,

1357 c⁄° 
FõldDes¸ùt‹
*)

1358 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
FõldDes¸ùt‹
, 
FõldO±i⁄s
)

1359 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
has_deÁu…_vÆue
, 
boﬁ
)

1360 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_öt32
 , 
öt32
 )

1361 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_öt64
 , 
öt64
 )

1362 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_uöt32
, 
uöt32
)

1363 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_uöt64
, 
uöt64
)

1364 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_Êﬂt
 , )

1365 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_doubÀ
, )

1366 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_boﬁ
 , 
boﬁ
 )

1367 
PROTOBUF_DEFINE_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_íum
,

1368 c⁄° 
EnumVÆueDes¸ùt‹
*)

1369 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FõldDes¸ùt‹
, 
deÁu…_vÆue_°rög
)

1371 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
EnumDes¸ùt‹
, 
«me
)

1372 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
EnumDes¸ùt‹
, 
fuŒ_«me
)

1373 
PROTOBUF_DEFINE_ACCESSOR
(
EnumDes¸ùt‹
, 
fûe
, c⁄° 
FûeDes¸ùt‹
*)

1374 
PROTOBUF_DEFINE_ACCESSOR
(
EnumDes¸ùt‹
, 
c⁄èöög_ty≥
, c⁄° 
Des¸ùt‹
*)

1375 
PROTOBUF_DEFINE_ACCESSOR
(
EnumDes¸ùt‹
, 
vÆue_cou¡
, )

1376 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
EnumDes¸ùt‹
, 
vÆue
,

1377 c⁄° 
EnumVÆueDes¸ùt‹
*)

1378 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
EnumDes¸ùt‹
, 
EnumO±i⁄s
)

1380 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
EnumVÆueDes¸ùt‹
, 
«me
)

1381 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
EnumVÆueDes¸ùt‹
, 
fuŒ_«me
)

1382 
PROTOBUF_DEFINE_ACCESSOR
(
EnumVÆueDes¸ùt‹
, 
numbî
, )

1383 
PROTOBUF_DEFINE_ACCESSOR
(
EnumVÆueDes¸ùt‹
, 
ty≥
, c⁄° 
EnumDes¸ùt‹
*)

1384 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
EnumVÆueDes¸ùt‹
, 
EnumVÆueO±i⁄s
)

1386 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
«me
)

1387 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
fuŒ_«me
)

1388 
PROTOBUF_DEFINE_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
fûe
, c⁄° 
FûeDes¸ùt‹
*)

1389 
PROTOBUF_DEFINE_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
mëhod_cou¡
, )

1390 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
mëhod
,

1391 c⁄° 
MëhodDes¸ùt‹
*)

1392 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
Sîvi˚Des¸ùt‹
, 
Sîvi˚O±i⁄s
)

1394 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
MëhodDes¸ùt‹
, 
«me
)

1395 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
MëhodDes¸ùt‹
, 
fuŒ_«me
)

1396 
PROTOBUF_DEFINE_ACCESSOR
(
MëhodDes¸ùt‹
, 
£rvi˚
, c⁄° 
Sîvi˚Des¸ùt‹
*)

1397 
PROTOBUF_DEFINE_ACCESSOR
(
MëhodDes¸ùt‹
, 
öput_ty≥
, c⁄° 
Des¸ùt‹
*)

1398 
PROTOBUF_DEFINE_ACCESSOR
(
MëhodDes¸ùt‹
, 
ouçut_ty≥
, c⁄° 
Des¸ùt‹
*)

1399 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
MëhodDes¸ùt‹
, 
MëhodO±i⁄s
)

1400 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FûeDes¸ùt‹
, 
«me
)

1401 
PROTOBUF_DEFINE_STRING_ACCESSOR
(
FûeDes¸ùt‹
, 
∑ckage
)

1402 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
poﬁ
, c⁄° 
Des¸ùt‹Poﬁ
*)

1403 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
dïídícy_cou¡
, )

1404 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
public_dïídícy_cou¡
, )

1405 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
wók_dïídícy_cou¡
, )

1406 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
mesßge_ty≥_cou¡
, )

1407 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
íum_ty≥_cou¡
, )

1408 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
£rvi˚_cou¡
, )

1409 
PROTOBUF_DEFINE_ACCESSOR
(
FûeDes¸ùt‹
, 
exãnsi⁄_cou¡
, )

1410 
PROTOBUF_DEFINE_OPTIONS_ACCESSOR
(
FûeDes¸ùt‹
, 
FûeO±i⁄s
)

1412 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
FûeDes¸ùt‹
, 
mesßge_ty≥
, c⁄° 
Des¸ùt‹
*)

1413 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
FûeDes¸ùt‹
, 
íum_ty≥
, c⁄° 
EnumDes¸ùt‹
*)

1414 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
FûeDes¸ùt‹
, 
£rvi˚
,

1415 c⁄° 
Sîvi˚Des¸ùt‹
*)

1416 
PROTOBUF_DEFINE_ARRAY_ACCESSOR
(
FûeDes¸ùt‹
, 
exãnsi⁄
,

1417 c⁄° 
FõldDes¸ùt‹
*)

1419 #unde‡
PROTOBUF_DEFINE_ACCESSOR


1420 #unde‡
PROTOBUF_DEFINE_STRING_ACCESSOR


1421 #unde‡
PROTOBUF_DEFINE_ARRAY_ACCESSOR


1425 
ölöe
 
boﬁ
 
	gFõldDes¸ùt‹
::
is_ªquúed
() const {

1426  
œbñ
(Ë=
LABEL_REQUIRED
;

1429 
ölöe
 
boﬁ
 
	gFõldDes¸ùt‹
::
is_›ti⁄Æ
() const {

1430  
œbñ
(Ë=
LABEL_OPTIONAL
;

1433 
ölöe
 
boﬁ
 
	gFõldDes¸ùt‹
::
is_ª≥©ed
() const {

1434  
œbñ
(Ë=
LABEL_REPEATED
;

1437 
ölöe
 
boﬁ
 
	gFõldDes¸ùt‹
::
is_∑ckabÀ
() const {

1438  
is_ª≥©ed
(Ë&& 
IsTy≥PackabÀ
(
ty≥
());

1443 
ölöe
 
	gFõldDes¸ùt‹
::
ödex
() const {

1444 i‡(!
is_exãnsi⁄_
) {

1445  
this
 - 
c⁄èöög_ty≥_
->
fõlds_
;

1446 } i‡(
	gexãnsi⁄_sc›e_
 !
NULL
) {

1447  
this
 - 
exãnsi⁄_sc›e_
->
exãnsi⁄s_
;

1449  
	gthis
 - 
	gfûe_
->
	gexãnsi⁄s_
;

1453 
ölöe
 
	gDes¸ùt‹
::
ödex
() const {

1454 i‡(
c⁄èöög_ty≥_
 =
NULL
) {

1455  
this
 - 
fûe_
->
mesßge_ty≥s_
;

1457  
	gthis
 - 
	gc⁄èöög_ty≥_
->
	g√°ed_ty≥s_
;

1461 
ölöe
 
	gEnumDes¸ùt‹
::
ödex
() const {

1462 i‡(
c⁄èöög_ty≥_
 =
NULL
) {

1463  
this
 - 
fûe_
->
íum_ty≥s_
;

1465  
	gthis
 - 
	gc⁄èöög_ty≥_
->
	gíum_ty≥s_
;

1469 
ölöe
 
	gEnumVÆueDes¸ùt‹
::
ödex
() const {

1470  
this
 - 
ty≥_
->
vÆues_
;

1473 
ölöe
 
	gSîvi˚Des¸ùt‹
::
ödex
() const {

1474  
this
 - 
fûe_
->
£rvi˚s_
;

1477 
ölöe
 
	gMëhodDes¸ùt‹
::
ödex
() const {

1478  
this
 - 
£rvi˚_
->
mëhods_
;

1481 
ölöe
 c⁄° * 
	gFõldDes¸ùt‹
::
ty≥_«me
() const {

1482  
kTy≥ToName
[
ty≥_
];

1485 
ölöe
 
	gFõldDes¸ùt‹
::
CµTy≥
 
FõldDes¸ùt‹
::
˝p_ty≥
() const {

1486  
kTy≥ToCµTy≥M≠
[
ty≥_
];

1489 
ölöe
 c⁄° * 
	gFõldDes¸ùt‹
::
˝p_ty≥_«me
() const {

1490  
kCµTy≥ToName
[
kTy≥ToCµTy≥M≠
[
ty≥_
]];

1493 
ölöe
 
	gFõldDes¸ùt‹
::
CµTy≥
 
FõldDes¸ùt‹
::
Ty≥ToCµTy≥
(
Ty≥
 
ty≥
) {

1494  
kTy≥ToCµTy≥M≠
[
ty≥
];

1497 
ölöe
 
boﬁ
 
	gFõldDes¸ùt‹
::
IsTy≥PackabÀ
(
Ty≥
 
fõld_ty≥
) {

1498  (
fõld_ty≥
 !
FõldDes¸ùt‹
::
TYPE_STRING
 &&

1499 
fõld_ty≥
 !
FõldDes¸ùt‹
::
TYPE_GROUP
 &&

1500 
fõld_ty≥
 !
FõldDes¸ùt‹
::
TYPE_MESSAGE
 &&

1501 
fõld_ty≥
 !
FõldDes¸ùt‹
::
TYPE_BYTES
);

1504 
ölöe
 c⁄° 
FûeDes¸ùt‹
* 
	gFûeDes¸ùt‹
::
dïídícy
(
ödex
) const {

1505  
dïídícõs_
[
ödex
];

1508 
ölöe
 c⁄° 
FûeDes¸ùt‹
* 
	gFûeDes¸ùt‹
::
public_dïídícy
(

1509 
ödex
) const {

1510  
dïídícõs_
[
public_dïídícõs_
[
ödex
]];

1513 
ölöe
 c⁄° 
FûeDes¸ùt‹
* 
	gFûeDes¸ùt‹
::
wók_dïídícy
(

1514 
ödex
) const {

1515  
dïídícõs_
[
wók_dïídícõs_
[
ödex
]];

	@/usr/include/google/protobuf/extension_set.h

38 #i‚de‡
GOOGLE_PROTOBUF_EXTENSION_SET_H__


39 
	#GOOGLE_PROTOBUF_EXTENSION_SET_H__


	)

41 
	~<ve˘‹
>

42 
	~<m≠
>

43 
	~<utûôy
>

44 
	~<°rög
>

47 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

49 
«me•a˚
 
	ggoogÀ
 {

51 
«me•a˚
 
	g¥Ÿobuf
 {

52 
˛ass
 
	gDes¸ùt‹
;

53 
˛ass
 
	gFõldDes¸ùt‹
;

54 
˛ass
 
	gDes¸ùt‹Poﬁ
;

55 
˛ass
 
	gMesßgeLôe
;

56 
˛ass
 
	gMesßge
;

57 
˛ass
 
	gMesßgeFa˘‹y
;

58 
˛ass
 
	gUnknownFõldSë
;

59 
«me•a˚
 
	gio
 {

60 
˛ass
 
	gCodedI≈utSåóm
;

61 
˛ass
 
	gCodedOuçutSåóm
;

63 
«me•a˚
 
	göã∫Æ
 {

64 
˛ass
 
	gFõldSkù≥r
;

65 
˛ass
 
	gRïóãdPåFõldBa£
;

67 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
> 
˛ass
 
	gRïóãdFõld
;

68 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
> 
˛ass
 
	gRïóãdPåFõld
;

71 
«me•a˚
 
	g¥Ÿobuf
 {

72 
«me•a˚
 
	göã∫Æ
 {

78 
uöt8
 
	tFõldTy≥
;

83 
boﬁ
 
	tEnumVÆidôyFunc
(
	tnumbî
);

87 
boﬁ
 
	tEnumVÆidôyFuncWôhArg
(c⁄° * 
	t¨g
, 
	tnumbî
);

90 
	sExãnsi⁄Info
 {

91 
ölöe
 
Exãnsi⁄Info
() {}

92 
ölöe
 
Exãnsi⁄Info
(
FõldTy≥
 
ty≥_∑øm
, 
boﬁ
 
i§ïóãd
, boﬁ 
i•acked
)

93 : 
ty≥
(
ty≥_∑øm
), 
is_ª≥©ed
(
i§ïóãd
), 
is_∑cked
(
i•acked
),

94 
des¸ùt‹
(
NULL
) {}

96 
FõldTy≥
 
	gty≥
;

97 
boﬁ
 
	gis_ª≥©ed
;

98 
boﬁ
 
	gis_∑cked
;

100 
	sEnumVÆidôyCheck
 {

101 
EnumVÆidôyFuncWôhArg
* 
	gfunc
;

102 c⁄° * 
	g¨g
;

106 
EnumVÆidôyCheck
 
	gíum_vÆidôy_check
;

107 c⁄° 
MesßgeLôe
* 
	gmesßge_¥ŸŸy≥
;

113 c⁄° 
FõldDes¸ùt‹
* 
	gdes¸ùt‹
;

118 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gExãnsi⁄Födî
 {

119 
	gpublic
:

120 
vútuÆ
 ~
Exãnsi⁄Födî
();

123 
vútuÆ
 
boﬁ
 
Föd
(
numbî
, 
Exãnsi⁄Info
* 
ouçut
) = 0;

128 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gGíî©edExãnsi⁄Födî
 : 
public
 
Exãnsi⁄Födî
 {

129 
public
:

130 
Gíî©edExãnsi⁄Födî
(c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
)

131 : 
c⁄èöög_ty≥_
(
c⁄èöög_ty≥
) {}

132 
vútuÆ
 ~
Gíî©edExãnsi⁄Födî
() {}

135 
vútuÆ
 
boﬁ
 
Föd
(
numbî
, 
Exãnsi⁄Info
* 
ouçut
);

137 
	g¥iv©e
:

138 c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥_
;

155 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gExãnsi⁄Së
 {

156 
	gpublic
:

157 
Exãnsi⁄Së
();

158 ~
Exãnsi⁄Së
();

165 
Regi°îExãnsi⁄
(c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
,

166 
numbî
, 
FõldTy≥
 
ty≥
,

167 
boﬁ
 
is_ª≥©ed
, boﬁ 
is_∑cked
);

168 
Regi°îEnumExãnsi⁄
(c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
,

169 
numbî
, 
FõldTy≥
 
ty≥
,

170 
boﬁ
 
is_ª≥©ed
, boﬁ 
is_∑cked
,

171 
EnumVÆidôyFunc
* 
is_vÆid
);

172 
Regi°îMesßgeExãnsi⁄
(c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
,

173 
numbî
, 
FõldTy≥
 
ty≥
,

174 
boﬁ
 
is_ª≥©ed
, boﬁ 
is_∑cked
,

175 c⁄° 
MesßgeLôe
* 
¥ŸŸy≥
);

181 
AµídToLi°
(c⁄° 
Des¸ùt‹
* 
c⁄èöög_ty≥
,

182 c⁄° 
Des¸ùt‹Poﬁ
* 
poﬁ
,

183 
ve˘‹
<c⁄° 
FõldDes¸ùt‹
*>* 
ouçut
) const;

215 
boﬁ
 
Has
(
numbî
) const;

216 
Exãnsi⁄Size
(
numbî
) const;

217 
NumExãnsi⁄s
() const;

218 
FõldTy≥
 
Exãnsi⁄Ty≥
(
numbî
) const;

219 
CÀ¨Exãnsi⁄
(
numbî
);

223 
öt32
 
GëI¡32
 (
numbî
, i¡32 
deÁu…_vÆue
) const;

224 
öt64
 
GëI¡64
 (
numbî
, i¡64 
deÁu…_vÆue
) const;

225 
uöt32
 
GëUI¡32
(
numbî
, uöt32 
deÁu…_vÆue
) const;

226 
uöt64
 
GëUI¡64
(
numbî
, uöt64 
deÁu…_vÆue
) const;

227 
GëFlﬂt
 (
numbî
, 
deÁu…_vÆue
) const;

228 
GëDoubÀ
(
numbî
, 
deÁu…_vÆue
) const;

229 
boﬁ
 
GëBoﬁ
 (
numbî
, boﬁ 
deÁu…_vÆue
) const;

230 
GëEnum
 (
numbî
, 
deÁu…_vÆue
) const;

231 c⁄° 
	g°rög
 & 
GëSåög
 (
numbî
, c⁄° 
°rög
& 
deÁu…_vÆue
) const;

232 c⁄° 
	gMesßgeLôe
& 
GëMesßge
(
numbî
,

233 c⁄° 
MesßgeLôe
& 
deÁu…_vÆue
) const;

234 c⁄° 
	gMesßgeLôe
& 
GëMesßge
(
numbî
, c⁄° 
Des¸ùt‹
* 
mesßge_ty≥
,

235 
MesßgeFa˘‹y
* 
Á˘‹y
) const;

240 
	#desc
 c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹


241 
	`SëI¡32
 (
numbî
, 
FõldTy≥
 
ty≥
, 
öt32
 
vÆue
, 
desc
);

	)

242 
SëI¡64
 (
numbî
, 
FõldTy≥
 
ty≥
, 
öt64
 
vÆue
, 
desc
);

243 
SëUI¡32
(
numbî
, 
FõldTy≥
 
ty≥
, 
uöt32
 
vÆue
, 
desc
);

244 
SëUI¡64
(
numbî
, 
FõldTy≥
 
ty≥
, 
uöt64
 
vÆue
, 
desc
);

245 
SëFlﬂt
 (
numbî
, 
FõldTy≥
 
ty≥
, 
vÆue
, 
desc
);

246 
SëDoubÀ
(
numbî
, 
FõldTy≥
 
ty≥
, 
vÆue
, 
desc
);

247 
SëBoﬁ
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
vÆue
, 
desc
);

248 
SëEnum
 (
numbî
, 
FõldTy≥
 
ty≥
, 
vÆue
, 
desc
);

249 
SëSåög
(
numbî
, 
FõldTy≥
 
ty≥
, c⁄° 
°rög
& 
vÆue
, 
desc
);

250 
°rög
 * 
MuèbÀSåög
 (
numbî
, 
FõldTy≥
 
ty≥
, 
desc
);

251 
MesßgeLôe
* 
MuèbÀMesßge
(
numbî
, 
FõldTy≥
 
ty≥
,

252 c⁄° 
MesßgeLôe
& 
¥ŸŸy≥
, 
desc
);

253 
MesßgeLôe
* 
MuèbÀMesßge
(c⁄° 
FõldDes¸ùt‹
* 
dec§ùt‹
,

254 
MesßgeFa˘‹y
* 
Á˘‹y
);

258 
SëAŒoˇãdMesßge
(
numbî
, 
FõldTy≥
 
ty≥
,

259 c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
,

260 
MesßgeLôe
* 
mesßge
);

261 
MesßgeLôe
* 
Rñó£Mesßge
(
numbî
, c⁄° MesßgeLôe& 
¥ŸŸy≥
);

262 
MesßgeLôe
* 
Rñó£Mesßge
(c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
,

263 
MesßgeFa˘‹y
* 
Á˘‹y
);

264 #unde‡
desc


268 * 
MuèbÀRawRïóãdFõld
(
numbî
);

270 
öt32
 
GëRïóãdI¡32
 (
numbî
, 
ödex
) const;

271 
öt64
 
GëRïóãdI¡64
 (
numbî
, 
ödex
) const;

272 
uöt32
 
GëRïóãdUI¡32
(
numbî
, 
ödex
) const;

273 
uöt64
 
GëRïóãdUI¡64
(
numbî
, 
ödex
) const;

274 
GëRïóãdFlﬂt
 (
numbî
, 
ödex
) const;

275 
GëRïóãdDoubÀ
(
numbî
, 
ödex
) const;

276 
boﬁ
 
GëRïóãdBoﬁ
 (
numbî
, 
ödex
) const;

277 
GëRïóãdEnum
 (
numbî
, 
ödex
) const;

278 c⁄° 
	g°rög
 & 
GëRïóãdSåög
 (
numbî
, 
ödex
) const;

279 c⁄° 
	gMesßgeLôe
& 
GëRïóãdMesßge
(
numbî
, 
ödex
) const;

281 
SëRïóãdI¡32
 (
numbî
, 
ödex
, 
öt32
 
vÆue
);

282 
SëRïóãdI¡64
 (
numbî
, 
ödex
, 
öt64
 
vÆue
);

283 
SëRïóãdUI¡32
(
numbî
, 
ödex
, 
uöt32
 
vÆue
);

284 
SëRïóãdUI¡64
(
numbî
, 
ödex
, 
uöt64
 
vÆue
);

285 
SëRïóãdFlﬂt
 (
numbî
, 
ödex
, 
vÆue
);

286 
SëRïóãdDoubÀ
(
numbî
, 
ödex
, 
vÆue
);

287 
SëRïóãdBoﬁ
 (
numbî
, 
ödex
, 
boﬁ
 
vÆue
);

288 
SëRïóãdEnum
 (
numbî
, 
ödex
, 
vÆue
);

289 
SëRïóãdSåög
(
numbî
, 
ödex
, c⁄° 
°rög
& 
vÆue
);

290 
°rög
 * 
MuèbÀRïóãdSåög
 (
numbî
, 
ödex
);

291 
MesßgeLôe
* 
MuèbÀRïóãdMesßge
(
numbî
, 
ödex
);

293 
	#desc
 c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹


294 
	`AddI¡32
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
öt32
 
vÆue
, 
desc
);

	)

295 
AddI¡64
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
öt64
 
vÆue
, 
desc
);

296 
AddUI¡32
(
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
uöt32
 
vÆue
, 
desc
);

297 
AddUI¡64
(
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
uöt64
 
vÆue
, 
desc
);

298 
AddFlﬂt
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
vÆue
, 
desc
);

299 
AddDoubÀ
(
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
vÆue
, 
desc
);

300 
AddBoﬁ
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, boﬁ 
vÆue
, 
desc
);

301 
AddEnum
 (
numbî
, 
FõldTy≥
 
ty≥
, 
boﬁ
 
∑cked
, 
vÆue
, 
desc
);

302 
AddSåög
(
numbî
, 
FõldTy≥
 
ty≥
, c⁄° 
°rög
& 
vÆue
, 
desc
);

303 
°rög
 * 
AddSåög
 (
numbî
, 
FõldTy≥
 
ty≥
, 
desc
);

304 
MesßgeLôe
* 
AddMesßge
(
numbî
, 
FõldTy≥
 
ty≥
,

305 c⁄° 
MesßgeLôe
& 
¥ŸŸy≥
, 
desc
);

306 
MesßgeLôe
* 
AddMesßge
(c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
,

307 
MesßgeFa˘‹y
* 
Á˘‹y
);

308 #unde‡
desc


310 
RemoveLa°
(
numbî
);

311 
MesßgeLôe
* 
Rñó£La°
(
numbî
);

312 
Sw≠EÀmíts
(
numbî
, 
ödex1
, 
ödex2
);

323 
CÀ¨
();

324 
MîgeFrom
(c⁄° 
Exãnsi⁄Së
& 
Ÿhî
);

325 
Sw≠
(
Exãnsi⁄Së
* 
Ÿhî
);

326 
boﬁ
 
IsInôülized
() const;

330 
boﬁ
 
P¨£Fõld
(
uöt32
 
èg
, 
io
::
CodedI≈utSåóm
* 
öput
,

331 
Exãnsi⁄Födî
* 
exãnsi⁄_födî
,

332 
FõldSkù≥r
* 
fõld_skù≥r
);

340 
boﬁ
 
P¨£Fõld
(
uöt32
 
èg
, 
io
::
CodedI≈utSåóm
* 
öput
,

341 c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
);

342 
boﬁ
 
P¨£Fõld
(
uöt32
 
èg
, 
io
::
CodedI≈utSåóm
* 
öput
,

343 c⁄° 
Mesßge
* 
c⁄èöög_ty≥
,

344 
UnknownFõldSë
* 
unknown_fõlds
);

348 
boﬁ
 
P¨£MesßgeSë
(
io
::
CodedI≈utSåóm
* 
öput
,

349 
Exãnsi⁄Födî
* 
exãnsi⁄_födî
,

350 
FõldSkù≥r
* 
fõld_skù≥r
);

354 
boﬁ
 
P¨£MesßgeSë
(
io
::
CodedI≈utSåóm
* 
öput
,

355 c⁄° 
MesßgeLôe
* 
c⁄èöög_ty≥
);

356 
boﬁ
 
P¨£MesßgeSë
(
io
::
CodedI≈utSåóm
* 
öput
,

357 c⁄° 
Mesßge
* 
c⁄èöög_ty≥
,

358 
UnknownFõldSë
* 
unknown_fõlds
);

364 
SîülizeWôhCachedSizes
(
°¨t_fõld_numbî
,

365 
íd_fõld_numbî
,

366 
io
::
CodedOuçutSåóm
* 
ouçut
) const;

373 
uöt8
* 
SîülizeWôhCachedSizesToAºay
(
°¨t_fõld_numbî
,

374 
íd_fõld_numbî
,

375 
uöt8
* 
èrgë
) const;

378 
SîülizeMesßgeSëWôhCachedSizes
(
io
::
CodedOuçutSåóm
* 
ouçut
) const;

379 
uöt8
* 
SîülizeMesßgeSëWôhCachedSizesToAºay
(uöt8* 
èrgë
) const;

382 
ByãSize
() const;

385 
MesßgeSëByãSize
() const;

394 
S∑˚U£dEx˛udögSñf
() const;

396 
	g¥iv©e
:

399 ˛as†
	cLIBPROTOBUF_EXPORT
 
LazyMesßgeExãnsi⁄
 {

400 
public
:

401 
LazyMesßgeExãnsi⁄
() {}

402 
vútuÆ
 ~
LazyMesßgeExãnsi⁄
() {}

404 
vútuÆ
 
LazyMesßgeExãnsi⁄
* 
New
() const = 0;

405 
vútuÆ
 c⁄° 
	gMesßgeLôe
& 
GëMesßge
(

406 c⁄° 
MesßgeLôe
& 
¥ŸŸy≥
) const = 0;

407 
vútuÆ
 
MesßgeLôe
* 
MuèbÀMesßge
(c⁄° MesßgeLôe& 
¥ŸŸy≥
) = 0;

408 
vútuÆ
 
SëAŒoˇãdMesßge
(
MesßgeLôe
 *
mesßge
) = 0;

409 
vútuÆ
 
MesßgeLôe
* 
Rñó£Mesßge
(c⁄° MesßgeLôe& 
¥ŸŸy≥
) = 0;

411 
vútuÆ
 
boﬁ
 
IsInôülized
() const = 0;

412 
vútuÆ
 
ByãSize
() const = 0;

413 
vútuÆ
 
S∑˚U£d
() const = 0;

415 
vútuÆ
 
MîgeFrom
(c⁄° 
LazyMesßgeExãnsi⁄
& 
Ÿhî
) = 0;

416 
vútuÆ
 
CÀ¨
() = 0;

418 
vútuÆ
 
boﬁ
 
RódMesßge
(c⁄° 
MesßgeLôe
& 
¥ŸŸy≥
,

419 
io
::
CodedI≈utSåóm
* 
öput
) = 0;

420 
vútuÆ
 
WrôeMesßge
(
numbî
,

421 
io
::
CodedOuçutSåóm
* 
ouçut
) const = 0;

422 
vútuÆ
 
uöt8
* 
WrôeMesßgeToAºay
(
numbî
, uöt8* 
èrgë
) const = 0;

423 
	g¥iv©e
:

424 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
LazyMesßgeExãnsi⁄
);

426 
	sExãnsi⁄
 {

430 
öt32
 
	göt32_vÆue
;

431 
öt64
 
	göt64_vÆue
;

432 
uöt32
 
	guöt32_vÆue
;

433 
uöt64
 
	guöt64_vÆue
;

434 
	gÊﬂt_vÆue
;

435 
	gdoubÀ_vÆue
;

436 
boﬁ
 
	gboﬁ_vÆue
;

437 
	gíum_vÆue
;

438 
°rög
* 
	g°rög_vÆue
;

439 
MesßgeLôe
* 
	gmesßge_vÆue
;

440 
LazyMesßgeExãnsi⁄
* 
	gœzymesßge_vÆue
;

442 
	gRïóãdFõld
 <
	göt32
 >* 
	gª≥©ed_öt32_vÆue
;

443 
	gRïóãdFõld
 <
	göt64
 >* 
	gª≥©ed_öt64_vÆue
;

444 
	gRïóãdFõld
 <
	guöt32
 >* 
	gª≥©ed_uöt32_vÆue
;

445 
	gRïóãdFõld
 <
	guöt64
 >* 
	gª≥©ed_uöt64_vÆue
;

446 
	gRïóãdFõld
 <>* 
	gª≥©ed_Êﬂt_vÆue
;

447 
	gRïóãdFõld
 <>* 
	gª≥©ed_doubÀ_vÆue
;

448 
	gRïóãdFõld
 <
	gboﬁ
 >* 
	gª≥©ed_boﬁ_vÆue
;

449 
	gRïóãdFõld
 <>* 
	gª≥©ed_íum_vÆue
;

450 
	gRïóãdPåFõld
<
	g°rög
 >* 
	gª≥©ed_°rög_vÆue
;

451 
	gRïóãdPåFõld
<
	gMesßgeLôe
>* 
	gª≥©ed_mesßge_vÆue
;

454 
FõldTy≥
 
	gty≥
;

455 
boﬁ
 
	gis_ª≥©ed
;

463 
boﬁ
 
	gis_˛óªd
 : 4;

470 
boﬁ
 
	gis_œzy
 : 4;

473 
boﬁ
 
	gis_∑cked
;

478 
muèbÀ
 
	gˇched_size
;

483 c⁄° 
FõldDes¸ùt‹
* 
	gdes¸ùt‹
;

486 
SîülizeFõldWôhCachedSizes
(

487 
numbî
,

488 
io
::
CodedOuçutSåóm
* 
ouçut
) const;

489 
uöt8
* 
SîülizeFõldWôhCachedSizesToAºay
(

490 
numbî
,

491 
uöt8
* 
èrgë
) const;

492 
SîülizeMesßgeSëIãmWôhCachedSizes
(

493 
numbî
,

494 
io
::
CodedOuçutSåóm
* 
ouçut
) const;

495 
uöt8
* 
SîülizeMesßgeSëIãmWôhCachedSizesToAºay
(

496 
numbî
,

497 
uöt8
* 
èrgë
) const;

498 
ByãSize
(
numbî
) const;

499 
MesßgeSëIãmByãSize
(
numbî
) const;

500 
CÀ¨
();

501 
GëSize
() const;

502 
Fªe
();

503 
S∑˚U£dEx˛udögSñf
() const;

508 
boﬁ
 
FödExãnsi⁄InfoFromTag
(
uöt32
 
èg
, 
Exãnsi⁄Födî
* 
exãnsi⁄_födî
,

509 * 
fõld_numbî
, 
Exãnsi⁄Info
* 
exãnsi⁄
);

515 
boﬁ
 
P¨£FõldWôhExãnsi⁄Info
(
fõld_numbî
,

516 c⁄° 
Exãnsi⁄Info
& 
exãnsi⁄
,

517 
io
::
CodedI≈utSåóm
* 
öput
,

518 
FõldSkù≥r
* 
fõld_skù≥r
);

522 
boﬁ
 
P¨£FõldMaybeLazûy
(
uöt32
 
èg
, 
io
::
CodedI≈utSåóm
* 
öput
,

523 
Exãnsi⁄Födî
* 
exãnsi⁄_födî
,

524 
FõldSkù≥r
* 
fõld_skù≥r
);

528 
boﬁ
 
MaybeNewExãnsi⁄
(
numbî
, c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
,

529 
Exãnsi⁄
** 
ªsu…
);

533 
boﬁ
 
P¨£MesßgeSëIãm
(
io
::
CodedI≈utSåóm
* 
öput
,

534 
Exãnsi⁄Födî
* 
exãnsi⁄_födî
,

535 
FõldSkù≥r
* 
fõld_skù≥r
);

545 
ölöe
 
RïóãdMesßge_S∑˚U£dEx˛udögSñf
(

546 
RïóãdPåFõldBa£
* 
fõld
);

554 
	g°d
::
m≠
<, 
	gExãnsi⁄
> 
	gexãnsi⁄s_
;

556 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Exãnsi⁄Së
);

560 
ölöe
 
	gExãnsi⁄Së
::
SëSåög
(
numbî
, 
FõldTy≥
 
ty≥
,

561 c⁄° 
°rög
& 
vÆue
,

562 c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
) {

563 
MuèbÀSåög
(
numbî
, 
ty≥
, 
des¸ùt‹
)->
assign
(
vÆue
);

565 
ölöe
 
	gExãnsi⁄Së
::
SëRïóãdSåög
(
numbî
, 
ödex
,

566 c⁄° 
°rög
& 
vÆue
) {

567 
MuèbÀRïóãdSåög
(
numbî
, 
ödex
)->
assign
(
vÆue
);

569 
ölöe
 
	gExãnsi⁄Së
::
AddSåög
(
numbî
, 
FõldTy≥
 
ty≥
,

570 c⁄° 
°rög
& 
vÆue
,

571 c⁄° 
FõldDes¸ùt‹
* 
des¸ùt‹
) {

572 
AddSåög
(
numbî
, 
ty≥
, 
des¸ùt‹
)->
assign
(
vÆue
);

624 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

625 ˛as†
	cPrimôiveTy≥Tøôs
 {

626 
	gpublic
:

627 
Ty≥
 
	tC⁄°Ty≥
;

629 
ölöe
 
C⁄°Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
,

630 
C⁄°Ty≥
 
deÁu…_vÆue
);

631 
ölöe
 
Së
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

632 
C⁄°Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
);

635 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

636 ˛as†
	cRïóãdPrimôiveTy≥Tøôs
 {

637 
	gpublic
:

638 
Ty≥
 
	tC⁄°Ty≥
;

640 
ölöe
 
Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
, 
ödex
);

641 
ölöe
 
Së
(
numbî
, 
ödex
, 
Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
);

642 
ölöe
 
Add
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

643 
boﬁ
 
is_∑cked
, 
Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
);

646 
	#PROTOBUF_DEFINE_PRIMITIVE_TYPE
(
TYPE
, 
METHOD
) \

647 
ãm∂©e
<> 
ölöe
 
TYPE
 
PrimôiveTy≥Tøôs
<TYPE>::
	`Gë
( \

648 
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
, 
TYPE
 
deÁu…_vÆue
) { \

649  
£t
.
Gë
##
	`METHOD
(
numbî
, 
deÁu…_vÆue
); \

651 
ãm∂©e
<> 
ölöe
 
PrimôiveTy≥Tøôs
<
TYPE
>::
	`Së
( \

652 
numbî
, 
FõldTy≥
 
fõld_ty≥
, 
TYPE
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) { \

653 
£t
->
Së
##
	`METHOD
(
numbî
, 
fõld_ty≥
, 
vÆue
, 
NULL
); \

656 
ãm∂©e
<> 
ölöe
 
TYPE
 
RïóãdPrimôiveTy≥Tøôs
<TYPE>::
	`Gë
( \

657 
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
, 
ödex
) { \

658  
£t
.
GëRïóãd
##
	`METHOD
(
numbî
, 
ödex
); \

660 
ãm∂©e
<> 
ölöe
 
RïóãdPrimôiveTy≥Tøôs
<
TYPE
>::
	`Së
( \

661 
numbî
, 
ödex
, 
TYPE
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) { \

662 
£t
->
SëRïóãd
##
	`METHOD
(
numbî
, 
ödex
, 
vÆue
); \

664 
ãm∂©e
<> 
ölöe
 
RïóãdPrimôiveTy≥Tøôs
<
TYPE
>::
	`Add
( \

665 
numbî
, 
FõldTy≥
 
fõld_ty≥
, 
boﬁ
 
is_∑cked
, \

666 
TYPE
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) { \

667 
£t
->
Add
##
	`METHOD
(
numbî
, 
fõld_ty≥
, 
is_∑cked
, 
vÆue
, 
NULL
); \

668 }

	)

670 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
–
öt32
, 
I¡32
)

671 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
–
öt64
, 
I¡64
)

672 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
(
uöt32
, 
UI¡32
)

673 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
(
uöt64
, 
UI¡64
)

674 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
–, 
Flﬂt
)

675 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
(, 
DoubÀ
)

676 
PROTOBUF_DEFINE_PRIMITIVE_TYPE
–
boﬁ
, 
Boﬁ
)

678 #unde‡
PROTOBUF_DEFINE_PRIMITIVE_TYPE


684 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gSåögTy≥Tøôs
 {

685 
	gpublic
:

686 c⁄° 
	t°rög
& 
	tC⁄°Ty≥
;

687 
°rög
* 
	tMuèbÀTy≥
;

689 
ölöe
 c⁄° 
	g°rög
& 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
,

690 
C⁄°Ty≥
 
deÁu…_vÆue
) {

691  
	g£t
.
GëSåög
(
numbî
, 
deÁu…_vÆue
);

693 
ölöe
 
Së
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

694 c⁄° 
°rög
& 
vÆue
, 
Exãnsi⁄Së
* 
£t
) {

695 
	g£t
->
SëSåög
(
numbî
, 
fõld_ty≥
, 
vÆue
, 
NULL
);

697 
ölöe
 
°rög
* 
MuèbÀ
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

698 
Exãnsi⁄Së
* 
£t
) {

699  
	g£t
->
MuèbÀSåög
(
numbî
, 
fõld_ty≥
, 
NULL
);

703 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gRïóãdSåögTy≥Tøôs
 {

704 
	gpublic
:

705 c⁄° 
	t°rög
& 
	tC⁄°Ty≥
;

706 
°rög
* 
	tMuèbÀTy≥
;

708 
ölöe
 c⁄° 
	g°rög
& 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
,

709 
ödex
) {

710  
	g£t
.
GëRïóãdSåög
(
numbî
, 
ödex
);

712 
ölöe
 
Së
(
numbî
, 
ödex
,

713 c⁄° 
°rög
& 
vÆue
, 
Exãnsi⁄Së
* 
£t
) {

714 
	g£t
->
SëRïóãdSåög
(
numbî
, 
ödex
, 
vÆue
);

716 
ölöe
 
°rög
* 
MuèbÀ
(
numbî
, 
ödex
, 
Exãnsi⁄Së
* 
£t
) {

717  
	g£t
->
MuèbÀRïóãdSåög
(
numbî
, 
ödex
);

719 
ölöe
 
Add
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

720 
boﬁ
 , c⁄° 
°rög
& 
vÆue
,

721 
Exãnsi⁄Së
* 
£t
) {

722 
	g£t
->
AddSåög
(
numbî
, 
fõld_ty≥
, 
vÆue
, 
NULL
);

724 
ölöe
 
°rög
* 
Add
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

725 
Exãnsi⁄Së
* 
£t
) {

726  
	g£t
->
AddSåög
(
numbî
, 
fõld_ty≥
, 
NULL
);

735 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
, 
boﬁ
 
IsVÆid
()>

736 ˛as†
	cEnumTy≥Tøôs
 {

737 
	gpublic
:

738 
Ty≥
 
	tC⁄°Ty≥
;

740 
ölöe
 
C⁄°Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
,

741 
C⁄°Ty≥
 
deÁu…_vÆue
) {

742  
	g°©ic_ˇ°
<
	gTy≥
>(
	g£t
.
GëEnum
(
numbî
, 
deÁu…_vÆue
));

744 
ölöe
 
Së
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

745 
C⁄°Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) {

746 
GOOGLE_DCHECK
(
IsVÆid
(
vÆue
));

747 
	g£t
->
SëEnum
(
numbî
, 
fõld_ty≥
, 
vÆue
, 
NULL
);

751 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
, 
boﬁ
 
IsVÆid
()>

752 ˛as†
	cRïóãdEnumTy≥Tøôs
 {

753 
	gpublic
:

754 
Ty≥
 
	tC⁄°Ty≥
;

756 
ölöe
 
C⁄°Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
, 
ödex
) {

757  
	g°©ic_ˇ°
<
	gTy≥
>(
	g£t
.
GëRïóãdEnum
(
numbî
, 
ödex
));

759 
ölöe
 
Së
(
numbî
, 
ödex
,

760 
C⁄°Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) {

761 
GOOGLE_DCHECK
(
IsVÆid
(
vÆue
));

762 
	g£t
->
SëRïóãdEnum
(
numbî
, 
ödex
, 
vÆue
);

764 
ölöe
 
Add
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

765 
boﬁ
 
is_∑cked
, 
C⁄°Ty≥
 
vÆue
, 
Exãnsi⁄Së
* 
£t
) {

766 
GOOGLE_DCHECK
(
IsVÆid
(
vÆue
));

767 
	g£t
->
AddEnum
(
numbî
, 
fõld_ty≥
, 
is_∑cked
, 
vÆue
, 
NULL
);

777 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

778 ˛as†
	cMesßgeTy≥Tøôs
 {

779 
	gpublic
:

780 c⁄° 
	tTy≥
& 
	tC⁄°Ty≥
;

781 
Ty≥
* 
	tMuèbÀTy≥
;

783 
ölöe
 
C⁄°Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
,

784 
C⁄°Ty≥
 
deÁu…_vÆue
) {

785  
	g°©ic_ˇ°
<c⁄° 
	gTy≥
&>(

786 
	g£t
.
GëMesßge
(
numbî
, 
deÁu…_vÆue
));

788 
ölöe
 
MuèbÀTy≥
 
MuèbÀ
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

789 
Exãnsi⁄Së
* 
£t
) {

790  
	g°©ic_ˇ°
<
	gTy≥
*>(

791 
	g£t
->
MuèbÀMesßge
(
numbî
, 
fõld_ty≥
, 
Ty≥
::
deÁu…_ö°™˚
(), 
NULL
));

793 
ölöe
 
SëAŒoˇãd
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

794 
MuèbÀTy≥
 
mesßge
, 
Exãnsi⁄Së
* 
£t
) {

795 
	g£t
->
SëAŒoˇãdMesßge
(
numbî
, 
fõld_ty≥
, 
NULL
, 
mesßge
);

797 
ölöe
 
MuèbÀTy≥
 
Rñó£
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

798 
Exãnsi⁄Së
* 
£t
) {

799  
	g°©ic_ˇ°
<
	gTy≥
*>(
	g£t
->
Rñó£Mesßge
(

800 
numbî
, 
Ty≥
::
deÁu…_ö°™˚
()));

804 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

805 ˛as†
	cRïóãdMesßgeTy≥Tøôs
 {

806 
	gpublic
:

807 c⁄° 
	tTy≥
& 
	tC⁄°Ty≥
;

808 
Ty≥
* 
	tMuèbÀTy≥
;

810 
ölöe
 
C⁄°Ty≥
 
Gë
(
numbî
, c⁄° 
Exãnsi⁄Së
& 
£t
, 
ödex
) {

811  
	g°©ic_ˇ°
<c⁄° 
	gTy≥
&>(
	g£t
.
GëRïóãdMesßge
(
numbî
, 
ödex
));

813 
ölöe
 
MuèbÀTy≥
 
MuèbÀ
(
numbî
, 
ödex
, 
Exãnsi⁄Së
* 
£t
) {

814  
	g°©ic_ˇ°
<
	gTy≥
*>(
	g£t
->
MuèbÀRïóãdMesßge
(
numbî
, 
ödex
));

816 
ölöe
 
MuèbÀTy≥
 
Add
(
numbî
, 
FõldTy≥
 
fõld_ty≥
,

817 
Exãnsi⁄Së
* 
£t
) {

818  
	g°©ic_ˇ°
<
	gTy≥
*>(

819 
	g£t
->
AddMesßge
(
numbî
, 
fõld_ty≥
, 
Ty≥
::
deÁu…_ö°™˚
(), 
NULL
));

840 
	gãm∂©e
 <
ty≥«me
 
	gExãndìTy≥
,Åy≥«mê
	gTy≥TøôsTy≥
,

841 
FõldTy≥
 
	gfõld_ty≥
, 
boﬁ
 
	gis_∑cked
>

842 ˛as†
	cExãnsi⁄Idítifõr
 {

843 
	gpublic
:

844 
Ty≥TøôsTy≥
 
	tTy≥Tøôs
;

845 
ExãndìTy≥
 
	tExãndì
;

847 
Exãnsi⁄Idítifõr
(
numbî
, 
ty≥«me
 
Ty≥Tøôs
::
C⁄°Ty≥
 
deÁu…_vÆue
)

848 : 
numbî_
(
numbî
), 
deÁu…_vÆue_
(
deÁu…_vÆue
) {}

849 
ölöe
 
numbî
(Ëc⁄° {  
	gnumbî_
; }

850 
ty≥«me
 
	gTy≥Tøôs
::
C⁄°Ty≥
 
deÁu…_vÆue
() const {

851  
deÁu…_vÆue_
;

854 
	g¥iv©e
:

855 c⁄° 
numbî_
;

856 
ty≥«me
 
	gTy≥Tøôs
::
C⁄°Ty≥
 
deÁu…_vÆue_
;

872 
	#GOOGLE_PROTOBUF_EXTENSION_ACCESSORS
(
CLASSNAME
) \

874 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

875 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

876 
boﬁ
 
_is_∑cked
> \

877 
ölöe
 
boﬁ
 
	`HasExãnsi⁄
( \

878 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

879 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) const { \

880  
_exãnsi⁄s_
.
	`Has
(
id
.
	`numbî
()); \

883 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

884 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

885 
boﬁ
 
_is_∑cked
> \

886 
ölöe
 
	`CÀ¨Exãnsi⁄
( \

887 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

888 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) { \

889 
_exãnsi⁄s_
.
	`CÀ¨Exãnsi⁄
(
id
.
	`numbî
()); \

892 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

893 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

894 
boﬁ
 
_is_∑cked
> \

895 
ölöe
 
	`Exãnsi⁄Size
( \

896 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

897 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) const { \

898  
_exãnsi⁄s_
.
	`Exãnsi⁄Size
(
id
.
	`numbî
()); \

902 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

903 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

904 
boﬁ
 
_is_∑cked
> \

905 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
C⁄°Ty≥
 
	`GëExãnsi⁄
( \

906 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

907 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) const { \

908  
_¥Ÿo_Ty≥Tøôs
::
	`Gë
(
id
.
	`numbî
(), 
_exãnsi⁄s_
, \

909 
id
.
	`deÁu…_vÆue
()); \

912 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

913 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

914 
boﬁ
 
_is_∑cked
> \

915 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
MuèbÀTy≥
 
	`MuèbÀExãnsi⁄
( \

916 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

917 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) { \

918  
_¥Ÿo_Ty≥Tøôs
::
	`MuèbÀ
(
id
.
	`numbî
(), 
_fõld_ty≥
, \

919 &
_exãnsi⁄s_
); \

922 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

923 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

924 
boﬁ
 
_is_∑cked
> \

925 
ölöe
 
	`SëExãnsi⁄
( \

926 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

927 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

928 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
C⁄°Ty≥
 
vÆue
) { \

929 
_¥Ÿo_Ty≥Tøôs
::
	`Së
(
id
.
	`numbî
(), 
_fõld_ty≥
, 
vÆue
, &
_exãnsi⁄s_
); \

932 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

933 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

934 
boﬁ
 
_is_∑cked
> \

935 
ölöe
 
	`SëAŒoˇãdExãnsi⁄
( \

936 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

937 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

938 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
MuèbÀTy≥
 
vÆue
) { \

939 
_¥Ÿo_Ty≥Tøôs
::
	`SëAŒoˇãd
(
id
.
	`numbî
(), 
_fõld_ty≥
, \

940 
vÆue
, &
_exãnsi⁄s_
); \

942 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

943 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

944 
boﬁ
 
_is_∑cked
> \

945 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
MuèbÀTy≥
 
	`Rñó£Exãnsi⁄
( \

946 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

947 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) { \

948  
_¥Ÿo_Ty≥Tøôs
::
	`Rñó£
(
id
.
	`numbî
(), 
_fõld_ty≥
, \

949 &
_exãnsi⁄s_
); \

953 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

954 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

955 
boﬁ
 
_is_∑cked
> \

956 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
C⁄°Ty≥
 
	`GëExãnsi⁄
( \

957 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

958 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

959 
ödex
) const { \

960  
_¥Ÿo_Ty≥Tøôs
::
	`Gë
(
id
.
	`numbî
(), 
_exãnsi⁄s_
, 
ödex
); \

963 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

964 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

965 
boﬁ
 
_is_∑cked
> \

966 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
MuèbÀTy≥
 
	`MuèbÀExãnsi⁄
( \

967 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

968 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

969 
ödex
) { \

970  
_¥Ÿo_Ty≥Tøôs
::
	`MuèbÀ
(
id
.
	`numbî
(), 
ödex
, &
_exãnsi⁄s_
); \

973 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

974 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

975 
boﬁ
 
_is_∑cked
> \

976 
ölöe
 
	`SëExãnsi⁄
( \

977 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

978 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

979 
ödex
, 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
C⁄°Ty≥
 
vÆue
) { \

980 
_¥Ÿo_Ty≥Tøôs
::
	`Së
(
id
.
	`numbî
(), 
ödex
, 
vÆue
, &
_exãnsi⁄s_
); \

983 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

984 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

985 
boﬁ
 
_is_∑cked
> \

986 
ölöe
 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
MuèbÀTy≥
 
	`AddExãnsi⁄
( \

987 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

988 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
) { \

989  
_¥Ÿo_Ty≥Tøôs
::
	`Add
(
id
.
	`numbî
(), 
_fõld_ty≥
, &
_exãnsi⁄s_
); \

992 
ãm∂©e
 <
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
, \

993 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
FõldTy≥
 
_fõld_ty≥
, \

994 
boﬁ
 
_is_∑cked
> \

995 
ölöe
 
	`AddExãnsi⁄
( \

996 c⁄° ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
Exãnsi⁄Idítifõr
< \

997 
CLASSNAME
, 
_¥Ÿo_Ty≥Tøôs
, 
_fõld_ty≥
, 
_is_∑cked
>& 
id
, \

998 
ty≥«me
 
_¥Ÿo_Ty≥Tøôs
::
C⁄°Ty≥
 
vÆue
) { \

999 
_¥Ÿo_Ty≥Tøôs
::
	`Add
(
id
.
	`numbî
(), 
_fõld_ty≥
, 
_is_∑cked
, \

1000 
vÆue
, &
_exãnsi⁄s_
); \

1001 }

	)

	@/usr/include/google/protobuf/generated_message_reflection.h

38 #i‚de‡
GOOGLE_PROTOBUF_GENERATED_MESSAGE_REFLECTION_H__


39 
	#GOOGLE_PROTOBUF_GENERATED_MESSAGE_REFLECTION_H__


	)

41 
	~<°rög
>

42 
	~<ve˘‹
>

43 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

46 
	~<googÀ/¥Ÿobuf/gíî©ed_íum_ªÊe˘i⁄.h
>

47 
	~<googÀ/¥Ÿobuf/mesßge.h
>

48 
	~<googÀ/¥Ÿobuf/unknown_fõld_£t.h
>

51 
«me•a˚
 
	ggoogÀ
 {

52 
«me•a˚
 
	gupb
 {

53 
«me•a˚
 
	ggoogÀ_›ísour˚
 {

54 
˛ass
 
	gGMR_H™dÀrs
;

58 
«me•a˚
 
	g¥Ÿobuf
 {

59 
˛ass
 
	gDes¸ùt‹Poﬁ
;

62 
«me•a˚
 
	g¥Ÿobuf
 {

63 
«me•a˚
 
	göã∫Æ
 {

66 
˛ass
 
	gGíî©edMesßgeReÊe˘i⁄
;

69 
˛ass
 
	gExãnsi⁄Së
;

95 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gGíî©edMesßgeReÊe˘i⁄
 : 
public
 
ReÊe˘i⁄
 {

96 
public
:

128 
Gíî©edMesßgeReÊe˘i⁄
(c⁄° 
Des¸ùt‹
* 
des¸ùt‹
,

129 c⁄° 
Mesßge
* 
deÁu…_ö°™˚
,

130 c⁄° 
off£ts
[],

131 
has_bôs_off£t
,

132 
unknown_fõlds_off£t
,

133 
exãnsi⁄s_off£t
,

134 c⁄° 
Des¸ùt‹Poﬁ
* 
poﬁ
,

135 
MesßgeFa˘‹y
* 
Á˘‹y
,

136 
obje˘_size
);

137 ~
Gíî©edMesßgeReÊe˘i⁄
();

141 c⁄° 
	gUnknownFõldSë
& 
GëUnknownFõlds
(c⁄° 
Mesßge
& 
mesßge
) const;

142 
UnknownFõldSë
* 
MuèbÀUnknownFõlds
(
Mesßge
* 
mesßge
) const;

144 
S∑˚U£d
(c⁄° 
Mesßge
& 
mesßge
) const;

146 
boﬁ
 
HasFõld
(c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

147 
FõldSize
(c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

148 
CÀ¨Fõld
(
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

149 
RemoveLa°
(
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

150 
Mesßge
* 
Rñó£La°
(Mesßge* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

151 
Sw≠
(
Mesßge
* 
mesßge1
, Mesßge* 
mesßge2
) const;

152 
Sw≠EÀmíts
(
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

153 
ödex1
, 
ödex2
) const;

154 
Li°Fõlds
(c⁄° 
Mesßge
& 
mesßge
,

155 
ve˘‹
<c⁄° 
FõldDes¸ùt‹
*>* 
ouçut
) const;

157 
öt32
 
GëI¡32
 (c⁄° 
Mesßge
& 
mesßge
,

158 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

159 
öt64
 
GëI¡64
 (c⁄° 
Mesßge
& 
mesßge
,

160 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

161 
uöt32
 
GëUI¡32
(c⁄° 
Mesßge
& 
mesßge
,

162 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

163 
uöt64
 
GëUI¡64
(c⁄° 
Mesßge
& 
mesßge
,

164 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

165 
GëFlﬂt
 (c⁄° 
Mesßge
& 
mesßge
,

166 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

167 
GëDoubÀ
(c⁄° 
Mesßge
& 
mesßge
,

168 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

169 
boﬁ
 
GëBoﬁ
 (c⁄° 
Mesßge
& 
mesßge
,

170 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

171 
°rög
 
GëSåög
(c⁄° 
Mesßge
& 
mesßge
,

172 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

173 c⁄° 
	g°rög
& 
GëSåögRe„ªn˚
(c⁄° 
Mesßge
& 
mesßge
,

174 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

175 
°rög
* 
s¸©ch
) const;

176 c⁄° 
EnumVÆueDes¸ùt‹
* 
GëEnum
(c⁄° 
Mesßge
& 
mesßge
,

177 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

178 c⁄° 
	gMesßge
& 
GëMesßge
(c⁄° 
Mesßge
& 
mesßge
,

179 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

180 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const;

182 
SëI¡32
 (
Mesßge
* 
mesßge
,

183 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt32
 
vÆue
) const;

184 
SëI¡64
 (
Mesßge
* 
mesßge
,

185 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt64
 
vÆue
) const;

186 
SëUI¡32
(
Mesßge
* 
mesßge
,

187 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt32
 
vÆue
) const;

188 
SëUI¡64
(
Mesßge
* 
mesßge
,

189 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt64
 
vÆue
) const;

190 
SëFlﬂt
 (
Mesßge
* 
mesßge
,

191 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const;

192 
SëDoubÀ
(
Mesßge
* 
mesßge
,

193 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const;

194 
SëBoﬁ
 (
Mesßge
* 
mesßge
,

195 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
boﬁ
 
vÆue
) const;

196 
SëSåög
(
Mesßge
* 
mesßge
,

197 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

198 c⁄° 
°rög
& 
vÆue
) const;

199 
SëEnum
 (
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

200 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const;

201 
Mesßge
* 
MuèbÀMesßge
(Mesßge* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

202 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const;

203 
Mesßge
* 
Rñó£Mesßge
(Mesßge* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

204 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const;

206 
öt32
 
GëRïóãdI¡32
 (c⁄° 
Mesßge
& 
mesßge
,

207 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

208 
öt64
 
GëRïóãdI¡64
 (c⁄° 
Mesßge
& 
mesßge
,

209 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

210 
uöt32
 
GëRïóãdUI¡32
(c⁄° 
Mesßge
& 
mesßge
,

211 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

212 
uöt64
 
GëRïóãdUI¡64
(c⁄° 
Mesßge
& 
mesßge
,

213 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

214 
GëRïóãdFlﬂt
 (c⁄° 
Mesßge
& 
mesßge
,

215 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

216 
GëRïóãdDoubÀ
(c⁄° 
Mesßge
& 
mesßge
,

217 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

218 
boﬁ
 
GëRïóãdBoﬁ
 (c⁄° 
Mesßge
& 
mesßge
,

219 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

220 
°rög
 
GëRïóãdSåög
(c⁄° 
Mesßge
& 
mesßge
,

221 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const;

222 c⁄° 
	g°rög
& 
GëRïóãdSåögRe„ªn˚
(c⁄° 
Mesßge
& 
mesßge
,

223 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

224 
ödex
, 
°rög
* 
s¸©ch
) const;

225 c⁄° 
EnumVÆueDes¸ùt‹
* 
GëRïóãdEnum
(c⁄° 
Mesßge
& 
mesßge
,

226 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

227 
ödex
) const;

228 c⁄° 
	gMesßge
& 
GëRïóãdMesßge
(c⁄° 
Mesßge
& 
mesßge
,

229 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

230 
ödex
) const;

233 
SëRïóãdI¡32
 (
Mesßge
* 
mesßge
,

234 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
öt32
 
vÆue
) const;

235 
SëRïóãdI¡64
 (
Mesßge
* 
mesßge
,

236 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
öt64
 
vÆue
) const;

237 
SëRïóãdUI¡32
(
Mesßge
* 
mesßge
,

238 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
uöt32
 
vÆue
) const;

239 
SëRïóãdUI¡64
(
Mesßge
* 
mesßge
,

240 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
uöt64
 
vÆue
) const;

241 
SëRïóãdFlﬂt
 (
Mesßge
* 
mesßge
,

242 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
vÆue
) const;

243 
SëRïóãdDoubÀ
(
Mesßge
* 
mesßge
,

244 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
vÆue
) const;

245 
SëRïóãdBoﬁ
 (
Mesßge
* 
mesßge
,

246 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
, 
boﬁ
 
vÆue
) const;

247 
SëRïóãdSåög
(
Mesßge
* 
mesßge
,

248 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
,

249 c⁄° 
°rög
& 
vÆue
) const;

250 
SëRïóãdEnum
(
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

251 
ödex
, c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const;

253 
Mesßge
* 
MuèbÀRïóãdMesßge
(Mesßge* 
mesßge
,

254 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

255 
ödex
) const;

257 
AddI¡32
 (
Mesßge
* 
mesßge
,

258 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt32
 
vÆue
) const;

259 
AddI¡64
 (
Mesßge
* 
mesßge
,

260 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt64
 
vÆue
) const;

261 
AddUI¡32
(
Mesßge
* 
mesßge
,

262 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt32
 
vÆue
) const;

263 
AddUI¡64
(
Mesßge
* 
mesßge
,

264 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt64
 
vÆue
) const;

265 
AddFlﬂt
 (
Mesßge
* 
mesßge
,

266 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const;

267 
AddDoubÀ
(
Mesßge
* 
mesßge
,

268 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const;

269 
AddBoﬁ
 (
Mesßge
* 
mesßge
,

270 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
boﬁ
 
vÆue
) const;

271 
AddSåög
(
Mesßge
* 
mesßge
,

272 c⁄° 
FõldDes¸ùt‹
* 
fõld
, c⁄° 
°rög
& 
vÆue
) const;

273 
AddEnum
(
Mesßge
* 
mesßge
,

274 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

275 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const;

276 
Mesßge
* 
AddMesßge
(Mesßge* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

277 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const;

279 c⁄° 
FõldDes¸ùt‹
* 
FödKnownExãnsi⁄ByName
(c⁄° 
°rög
& 
«me
) const;

280 c⁄° 
FõldDes¸ùt‹
* 
FödKnownExãnsi⁄ByNumbî
(
numbî
) const;

282 
	g¥Ÿe˘ed
:

283 
vútuÆ
 * 
MuèbÀRawRïóãdFõld
(

284 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
, FõldDes¸ùt‹::
CµTy≥
,

285 
˘y≥
, c⁄° 
Des¸ùt‹
* 
desc
) const;

287 
	g¥iv©e
:

288 
‰õnd
 
˛ass
 
Gíî©edMesßge
;

292 
‰õnd
 
˛ass
 
LIBPROTOBUF_EXPORT
 
	gupb
::
googÀ_›ísour˚
::
GMR_H™dÀrs
;

294 c⁄° 
Des¸ùt‹
* 
	gdes¸ùt‹_
;

295 c⁄° 
Mesßge
* 
	gdeÁu…_ö°™˚_
;

296 c⁄° * 
	goff£ts_
;

298 
	ghas_bôs_off£t_
;

299 
	gunknown_fõlds_off£t_
;

300 
	gexãnsi⁄s_off£t_
;

301 
	gobje˘_size_
;

303 c⁄° 
Des¸ùt‹Poﬁ
* 
	gdes¸ùt‹_poﬁ_
;

304 
MesßgeFa˘‹y
* 
	gmesßge_Á˘‹y_
;

306 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

307 
ölöe
 c⁄° 
	gTy≥
& 
GëRaw
(c⁄° 
Mesßge
& 
mesßge
,

308 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

309 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

310 
ölöe
 
Ty≥
* 
MuèbÀRaw
(
Mesßge
* 
mesßge
,

311 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

312 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

313 
ölöe
 c⁄° 
	gTy≥
& 
DeÁu…Raw
(c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

315 
ölöe
 c⁄° 
uöt32
* 
GëHasBôs
(c⁄° 
Mesßge
& 
mesßge
) const;

316 
ölöe
 
uöt32
* 
MuèbÀHasBôs
(
Mesßge
* 
mesßge
) const;

317 
ölöe
 c⁄° 
	gExãnsi⁄Së
& 
GëExãnsi⁄Së
(c⁄° 
Mesßge
& 
mesßge
) const;

318 
ölöe
 
Exãnsi⁄Së
* 
MuèbÀExãnsi⁄Së
(
Mesßge
* 
mesßge
) const;

320 
ölöe
 
boﬁ
 
HasBô
(c⁄° 
Mesßge
& 
mesßge
,

321 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

322 
ölöe
 
SëBô
(
Mesßge
* 
mesßge
,

323 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

324 
ölöe
 
CÀ¨Bô
(
Mesßge
* 
mesßge
,

325 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

327 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

328 
ölöe
 c⁄° 
	gTy≥
& 
GëFõld
(c⁄° 
Mesßge
& 
mesßge
,

329 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

330 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

331 
ölöe
 
SëFõld
(
Mesßge
* 
mesßge
,

332 c⁄° 
FõldDes¸ùt‹
* 
fõld
, c⁄° 
Ty≥
& 
vÆue
) const;

333 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

334 
ölöe
 
Ty≥
* 
MuèbÀFõld
(
Mesßge
* 
mesßge
,

335 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

336 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

337 
ölöe
 c⁄° 
	gTy≥
& 
GëRïóãdFõld
(c⁄° 
Mesßge
& 
mesßge
,

338 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

339 
ödex
) const;

340 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

341 
ölöe
 c⁄° 
	gTy≥
& 
GëRïóãdPåFõld
(c⁄° 
Mesßge
& 
mesßge
,

342 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

343 
ödex
) const;

344 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

345 
ölöe
 
SëRïóãdFõld
(
Mesßge
* 
mesßge
,

346 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
,

347 
Ty≥
 
vÆue
) const;

348 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

349 
ölöe
 
Ty≥
* 
MuèbÀRïóãdFõld
(
Mesßge
* 
mesßge
,

350 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

351 
ödex
) const;

352 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

353 
ölöe
 
AddFõld
(
Mesßge
* 
mesßge
,

354 c⁄° 
FõldDes¸ùt‹
* 
fõld
, c⁄° 
Ty≥
& 
vÆue
) const;

355 
	gãm∂©e
 <
ty≥«me
 
	gTy≥
>

356 
ölöe
 
Ty≥
* 
AddFõld
(
Mesßge
* 
mesßge
,

357 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const;

359 
GëExãnsi⁄NumbîOrDõ
(c⁄° 
Des¸ùt‹
* 
ty≥
) const;

361 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Gíî©edMesßgeReÊe˘i⁄
);

377 
	#GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET
(
TYPE
, 
FIELD
) \

378 
°©ic_ˇ°
<>( \

379 
ªöãΩªt_ˇ°
<const *>( \

380 &
ªöãΩªt_ˇ°
<c⁄° 
TYPE
*>(16)->
FIELD
) - \

381 
ªöãΩªt_ˇ°
<c⁄° *>(16))

	)

406 
	gãm∂©e
<
ty≥«me
 
	gTo
,Åy≥«mê
	gFrom
>

407 
ölöe
 
To
 
dy«mic_ˇ°_if_avaûabÀ
(
From
 
‰om
) {

408 #i‡
deföed
(
GOOGLE_PROTOBUF_NO_RTTI
Ë|| (deföed(
_MSC_VER
)&&!deföed(
_CPPRTTI
))

409  
	gNULL
;

411  
	gdy«mic_ˇ°
<
	gTo
>(
	g‰om
);

	@/usr/include/google/protobuf/generated_message_util.h

38 #i‚de‡
GOOGLE_PROTOBUF_GENERATED_MESSAGE_UTIL_H__


39 
	#GOOGLE_PROTOBUF_GENERATED_MESSAGE_UTIL_H__


	)

41 
	~<°rög
>

43 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

44 
«me•a˚
 
	ggoogÀ
 {

45 
«me•a˚
 
	g¥Ÿobuf
 {

46 
«me•a˚
 
	göã∫Æ
 {

54 #unde‡
DEPRECATED_PROTOBUF_FIELD


55 
	#PROTOBUF_DEPRECATED


	)

59 
LIBPROTOBUF_EXPORT
 
Inföôy
();

60 
LIBPROTOBUF_EXPORT
 
NaN
();

63 
LIBPROTOBUF_EXPORT
 c⁄° ::
°d
::
°rög
 
kEm±ySåög
;

71 
LIBPROTOBUF_EXPORT
 
SåögS∑˚U£dEx˛udögSñf
(c⁄° 
°rög
& 
°r
);

	@/usr/include/google/protobuf/repeated_field.h

46 #i‚de‡
GOOGLE_PROTOBUF_REPEATED_FIELD_H__


47 
	#GOOGLE_PROTOBUF_REPEATED_FIELD_H__


	)

49 
	~<Æg‹ôhm
>

50 
	~<°rög
>

51 
	~<ôî©‹
>

52 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

53 
	~<googÀ/¥Ÿobuf/°ubs/ty≥_åaôs.h
>

54 
	~<googÀ/¥Ÿobuf/gíî©ed_mesßge_utû.h
>

55 
	~<googÀ/¥Ÿobuf/mesßge_lôe.h
>

57 
«me•a˚
 
	ggoogÀ
 {

59 
«me•a˚
 
	gupb
 {

60 
«me•a˚
 
	ggoogÀ_›ísour˚
 {

61 
˛ass
 
	gGMR_H™dÀrs
;

65 
«me•a˚
 
	g¥Ÿobuf
 {

67 
˛ass
 
	gMesßge
;

69 
«me•a˚
 
	göã∫Æ
 {

71 c⁄° 
	gkMöRïóãdFõldAŒoˇti⁄Size
 = 4;

74 
LogIndexOutOfBounds
(
ödex
, 
size
);

82 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

83 ˛as†
	cRïóãdFõld
 {

84 
	gpublic
:

85 
RïóãdFõld
();

86 
RïóãdFõld
(c⁄° RïóãdFõld& 
Ÿhî
);

87 
	gãm∂©e
 <
ty≥«me
 
	gIãr
>

88 
RïóãdFõld
(
Iãr
 
begö
, c⁄° Iãr& 
íd
);

89 ~
RïóãdFõld
();

91 
	gRïóãdFõld
& 
	g›î©‹
=(c⁄° 
RïóãdFõld
& 
Ÿhî
);

93 
size
() const;

95 c⁄° 
	gEÀmít
& 
Gë
(
ödex
) const;

96 
EÀmít
* 
MuèbÀ
(
ödex
);

97 
Së
(
ödex
, c⁄° 
EÀmít
& 
vÆue
);

98 
Add
(c⁄° 
EÀmít
& 
vÆue
);

99 
EÀmít
* 
Add
();

101 
RemoveLa°
();

107 
Exåa˘Subønge
(
°¨t
, 
num
, 
EÀmít
* 
ñemíts
);

109 
CÀ¨
();

110 
MîgeFrom
(c⁄° 
RïóãdFõld
& 
Ÿhî
);

111 
C›yFrom
(c⁄° 
RïóãdFõld
& 
Ÿhî
);

115 
Re£rve
(
√w_size
);

118 
Trunˇã
(
√w_size
);

120 
AddAÃódyRe£rved
(c⁄° 
EÀmít
& 
vÆue
);

121 
EÀmít
* 
AddAÃódyRe£rved
();

122 
C≠acôy
() const;

126 
EÀmít
* 
muèbÀ_d©a
();

127 c⁄° 
EÀmít
* 
d©a
() const;

130 
Sw≠
(
RïóãdFõld
* 
Ÿhî
);

133 
Sw≠EÀmíts
(
ödex1
, 
ödex2
);

136 
EÀmít
* 
	tôî©‹
;

137 c⁄° 
	tEÀmít
* 
	tc⁄°_ôî©‹
;

138 
EÀmít
 
	tvÆue_ty≥
;

139 
	gvÆue_ty≥
& 
	tª„ªn˚
;

140 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

141 
vÆue_ty≥
* 
	tpoöãr
;

142 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

143 
	tsize_ty≥
;

144 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

146 
ôî©‹
 
begö
();

147 
c⁄°_ôî©‹
 
begö
() const;

148 
ôî©‹
 
íd
();

149 
c⁄°_ôî©‹
 
íd
() const;

152 
	g°d
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

153 
	g°d
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

154 
ªvî£_ôî©‹
 
rbegö
() {

155  
ªvî£_ôî©‹
(
íd
());

157 
c⁄°_ªvî£_ôî©‹
 
rbegö
() const {

158  
c⁄°_ªvî£_ôî©‹
(
íd
());

160 
ªvî£_ôî©‹
 
ªnd
() {

161  
ªvî£_ôî©‹
(
begö
());

163 
c⁄°_ªvî£_ôî©‹
 
ªnd
() const {

164  
c⁄°_ªvî£_ôî©‹
(
begö
());

169 
S∑˚U£dEx˛udögSñf
() const;

171 
	g¥iv©e
:

172 c⁄° 
kInôülSize
 = 0;

174 
EÀmít
* 
	gñemíts_
;

175 
	gcuºít_size_
;

176 
	gtŸÆ_size_
;

181 
MoveAºay
(
EÀmít
 
to
[], EÀmíà
‰om
[], 
size
);

184 
C›yAºay
(
EÀmít
 
to
[], c⁄° EÀmíà
‰om
[], 
size
);

187 
«me•a˚
 
	göã∫Æ
 {

188 
	gãm∂©e
 <
ty≥«me
 
	gIt
> 
˛ass
 
	gRïóãdPåIãøt‹
;

189 
	gãm∂©e
 <
ty≥«me
 
	gIt
,Åy≥«mê
	gVoidPå
> 
˛ass
 
	gRïóãdPåOvîPåsIãøt‹
;

192 
«me•a˚
 
	göã∫Æ
 {

198 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
,

199 
boﬁ
 
	gHasTrivülC›y
 = 
has_åivül_c›y
<
EÀmít
>::
vÆue
>

200 
	sEÀmítC›õr
 {

201 
›î©‹
()(
EÀmít
 
to
[], c⁄° EÀmíà
‰om
[], 
¨øy_size
);

206 
«me•a˚
 
	göã∫Æ
 {

224 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gRïóãdPåFõldBa£
 {

225 
	g¥Ÿe˘ed
:

229 
‰õnd
 
˛ass
 
Gíî©edMesßgeReÊe˘i⁄
;

236 
‰õnd
 
˛ass
 
	gExãnsi⁄Së
;

240 
‰õnd
 
˛ass
 
LIBPROTOBUF_EXPORT
 
	gupb
::
googÀ_›ísour˚
::
GMR_H™dÀrs
;

242 
RïóãdPåFõldBa£
();

245 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

246 
De°roy
();

248 
size
() const;

250 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

251 c⁄° 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
& 
Gë
(
ödex
) const;

252 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

253 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
MuèbÀ
(
ödex
);

254 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

255 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
Add
();

256 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

257 
RemoveLa°
();

258 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

259 
CÀ¨
();

260 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

261 
MîgeFrom
(c⁄° 
RïóãdPåFõldBa£
& 
Ÿhî
);

262 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

263 
C›yFrom
(c⁄° 
RïóãdPåFõldBa£
& 
Ÿhî
);

265 
Clo£G≠
(
°¨t
, 
num
) {

267 
	gi
 = 
°¨t
 + 
num
; i < 
	gÆloˇãd_size_
; ++i)

268 
	gñemíts_
[
i
 - 
num
] = 
ñemíts_
[i];

269 
	gcuºít_size_
 -
num
;

270 
	gÆloˇãd_size_
 -
num
;

273 
Re£rve
(
√w_size
);

275 
C≠acôy
() const;

278 * c⁄°* 
øw_d©a
() const;

279 ** 
øw_muèbÀ_d©a
() const;

281 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

282 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
** 
muèbÀ_d©a
();

283 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

284 c⁄° 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* c⁄°* 
d©a
() const;

286 
Sw≠
(
RïóãdPåFõldBa£
* 
Ÿhî
);

288 
Sw≠EÀmíts
(
ödex1
, 
ödex2
);

290 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

291 
S∑˚U£dEx˛udögSñf
() const;

297 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

298 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
AddFromCÀ¨ed
();

300 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

301 
AddAŒoˇãd
(
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
* 
vÆue
);

302 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

303 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
Rñó£La°
();

305 
CÀ¨edCou¡
() const;

306 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

307 
AddCÀ¨ed
(
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
* 
vÆue
);

308 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

309 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
Rñó£CÀ¨ed
();

311 
	g¥iv©e
:

312 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
RïóãdPåFõldBa£
);

314 c⁄° 
	gkInôülSize
 = 0;

316 ** 
	gñemíts_
;

317 
	gcuºít_size_
;

318 
	gÆloˇãd_size_
;

319 
	gtŸÆ_size_
;

321 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

322 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
ˇ°
(* 
ñemít
) {

323  
ªöãΩªt_ˇ°
<
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
*>(
ñemít
);

325 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

326 
ölöe
 c⁄° 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
ˇ°
(c⁄° * 
ñemít
) {

327  
ªöãΩªt_ˇ°
<c⁄° 
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
*>(
ñemít
);

331 
	gãm∂©e
 <
ty≥«me
 
	gGíîicTy≥
>

332 ˛as†
	cGíîicTy≥H™dÀr
 {

333 
	gpublic
:

334 
GíîicTy≥
 
	tTy≥
;

335 
GíîicTy≥
* 
New
(Ë{  
√w
 
	gGíîicTy≥
; }

336 
Dñëe
(
GíîicTy≥
* 
vÆue
Ë{ 
dñëe
 
	gvÆue
; }

337 
CÀ¨
(
GíîicTy≥
* 
vÆue
Ë{ 
	gvÆue
->Clear(); }

338 
Mîge
(c⁄° 
GíîicTy≥
& 
‰om
, GíîicTy≥* 
to
) {

339 
	gto
->
MîgeFrom
(
‰om
);

341 
S∑˚U£d
(c⁄° 
GíîicTy≥
& 
vÆue
Ë{  
	gvÆue
.SpaceUsed(); }

342 c⁄° 
	gTy≥
& 
deÁu…_ö°™˚
() {  Type::default_instance(); }

345 
	gãm∂©e
 <>

346 
ölöe
 
	gGíîicTy≥H™dÀr
<
	gMesßgeLôe
>::
Mîge
(

347 c⁄° 
MesßgeLôe
& 
‰om
, MesßgeLôe* 
to
) {

348 
	gto
->
CheckTy≥AndMîgeFrom
(
‰om
);

351 
	gãm∂©e
 <>

352 
ölöe
 c⁄° 
	gMesßgeLôe
& 
	gGíîicTy≥H™dÀr
<MesßgeLôe>::
deÁu…_ö°™˚
() {

356 
MesßgeLôe
* 
nuŒ
 = 
NULL
;

357  *
	gnuŒ
;

360 
	gãm∂©e
 <>

361 
ölöe
 c⁄° 
	gMesßge
& 
	gGíîicTy≥H™dÀr
<Mesßge>::
deÁu…_ö°™˚
() {

365 
Mesßge
* 
nuŒ
 = 
NULL
;

366  *
	gnuŒ
;

378 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gSåögTy≥H™dÀrBa£
 {

379 
	gpublic
:

380 
°rög
 
	tTy≥
;

381 
°rög
* 
New
();

382 
Dñëe
(
°rög
* 
vÆue
);

383 
CÀ¨
(
°rög
* 
vÆue
Ë{ 
	gvÆue
->
˛ór
(); }

384 
Mîge
(c⁄° 
°rög
& 
‰om
, såög* 
to
Ë{ *
	gto
 = from; }

385 c⁄° 
	gTy≥
& 
deÁu…_ö°™˚
() {

386  ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kEm±ySåög
;

390 ˛as†
	cSåögTy≥H™dÀr
 : 
public
 
SåögTy≥H™dÀrBa£
 {

391 
public
:

392 
S∑˚U£d
(c⁄° 
°rög
& 
vÆue
) {

393  (
vÆue
Ë+ 
SåögS∑˚U£dEx˛udögSñf
(value);

402 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

403 ˛as†
	cRïóãdPåFõld
 : 
public
 
öã∫Æ
::
RïóãdPåFõldBa£
 {

404 
public
:

405 
RïóãdPåFõld
();

406 
RïóãdPåFõld
(c⁄° RïóãdPåFõld& 
Ÿhî
);

407 
	gãm∂©e
 <
ty≥«me
 
	gIãr
>

408 
RïóãdPåFõld
(
Iãr
 
begö
, c⁄° Iãr& 
íd
);

409 ~
RïóãdPåFõld
();

411 
	gRïóãdPåFõld
& 
	g›î©‹
=(c⁄° 
RïóãdPåFõld
& 
Ÿhî
);

413 
size
() const;

415 c⁄° 
	gEÀmít
& 
Gë
(
ödex
) const;

416 
EÀmít
* 
MuèbÀ
(
ödex
);

417 
EÀmít
* 
Add
();

421 
RemoveLa°
();

426 
DñëeSubønge
(
°¨t
, 
num
);

428 
CÀ¨
();

429 
MîgeFrom
(c⁄° 
RïóãdPåFõld
& 
Ÿhî
);

430 
C›yFrom
(c⁄° 
RïóãdPåFõld
& 
Ÿhî
);

435 
Re£rve
(
√w_size
);

437 
C≠acôy
() const;

441 
EÀmít
** 
muèbÀ_d©a
();

442 c⁄° 
EÀmít
* c⁄°* 
d©a
() const;

445 
Sw≠
(
RïóãdPåFõld
* 
Ÿhî
);

448 
Sw≠EÀmíts
(
ödex1
, 
ödex2
);

451 
	göã∫Æ
::
	tRïóãdPåIãøt‹
<
	tEÀmít
> 
	tôî©‹
;

452 
	göã∫Æ
::
	tRïóãdPåIãøt‹
<c⁄° 
	tEÀmít
> 
	tc⁄°_ôî©‹
;

453 
EÀmít
 
	tvÆue_ty≥
;

454 
	gvÆue_ty≥
& 
	tª„ªn˚
;

455 c⁄° 
	tvÆue_ty≥
& 
	tc⁄°_ª„ªn˚
;

456 
vÆue_ty≥
* 
	tpoöãr
;

457 c⁄° 
	tvÆue_ty≥
* 
	tc⁄°_poöãr
;

458 
	tsize_ty≥
;

459 
±rdiff_t
 
	tdif„ªn˚_ty≥
;

461 
ôî©‹
 
begö
();

462 
c⁄°_ôî©‹
 
begö
() const;

463 
ôî©‹
 
íd
();

464 
c⁄°_ôî©‹
 
íd
() const;

467 
	g°d
::
	tªvî£_ôî©‹
<
	tc⁄°_ôî©‹
> 
	tc⁄°_ªvî£_ôî©‹
;

468 
	g°d
::
	tªvî£_ôî©‹
<
	tôî©‹
>Ñeverse_iterator;

469 
ªvî£_ôî©‹
 
rbegö
() {

470  
ªvî£_ôî©‹
(
íd
());

472 
c⁄°_ªvî£_ôî©‹
 
rbegö
() const {

473  
c⁄°_ªvî£_ôî©‹
(
íd
());

475 
ªvî£_ôî©‹
 
ªnd
() {

476  
ªvî£_ôî©‹
(
begö
());

478 
c⁄°_ªvî£_ôî©‹
 
ªnd
() const {

479  
c⁄°_ªvî£_ôî©‹
(
begö
());

484 
	göã∫Æ
::
	tRïóãdPåOvîPåsIãøt‹
<
	tEÀmít
, *>

485 
	tpoöãr_ôî©‹
;

486 
	göã∫Æ
::
	tRïóãdPåOvîPåsIãøt‹
<c⁄° 
	tEÀmít
, const *>

487 
	tc⁄°_poöãr_ôî©‹
;

488 
poöãr_ôî©‹
 
poöãr_begö
();

489 
c⁄°_poöãr_ôî©‹
 
poöãr_begö
() const;

490 
poöãr_ôî©‹
 
poöãr_íd
();

491 
c⁄°_poöãr_ôî©‹
 
poöãr_íd
() const;

495 
S∑˚U£dEx˛udögSñf
() const;

503 
AddAŒoˇãd
(
EÀmít
* 
vÆue
);

506 
EÀmít
* 
Rñó£La°
();

517 
Exåa˘Subønge
(
°¨t
, 
num
, 
EÀmít
** 
ñemíts
);

529 
CÀ¨edCou¡
() const;

533 
AddCÀ¨ed
(
EÀmít
* 
vÆue
);

537 
EÀmít
* 
Rñó£CÀ¨ed
();

539 
	g¥Ÿe˘ed
:

544 
˛ass
 
Ty≥H™dÀr
;

550 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

551 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
RïóãdFõld
()

552 : 
ñemíts_
(
NULL
),

553 
cuºít_size_
(0),

554 
tŸÆ_size_
(
kInôülSize
) {

557 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

558 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
RïóãdFõld
(c⁄° RïóãdFõld& 
Ÿhî
)

559 : 
ñemíts_
(
NULL
),

560 
cuºít_size_
(0),

561 
tŸÆ_size_
(
kInôülSize
) {

562 
C›yFrom
(
Ÿhî
);

565 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

566 
	gãm∂©e
 <
ty≥«me
 
	gIãr
>

567 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
RïóãdFõld
(
Iãr
 
begö
, c⁄° Iãr& 
íd
)

568 : 
ñemíts_
(
NULL
),

569 
cuºít_size_
(0),

570 
tŸÆ_size_
(
kInôülSize
) {

571 ; 
	gbegö
 !
íd
; ++begin) {

572 
Add
(*
begö
);

576 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

577 
	gRïóãdFõld
<
	gEÀmít
>::~
RïóãdFõld
() {

578 
dñëe
 [] 
ñemíts_
;

581 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

582 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>&

583 
	gRïóãdFõld
<
	gEÀmít
>::
›î©‹
=(c⁄° 
RïóãdFõld
& 
Ÿhî
) {

584 i‡(
this
 !&
Ÿhî
)

585 
C›yFrom
(
Ÿhî
);

586  *
	gthis
;

589 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

590 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
size
() const {

591  
cuºít_size_
;

594 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

595 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
C≠acôy
() const {

596  
tŸÆ_size_
;

599 
	gãm∂©e
<
ty≥«me
 
	gEÀmít
>

600 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
AddAÃódyRe£rved
(c⁄° 
EÀmít
& 
vÆue
) {

601 
GOOGLE_DCHECK_LT
(
size
(), 
C≠acôy
());

602 
	gñemíts_
[
cuºít_size_
++] = 
vÆue
;

605 
	gãm∂©e
<
ty≥«me
 
	gEÀmít
>

606 
ölöe
 
EÀmít
* 
	gRïóãdFõld
<
	gEÀmít
>::
AddAÃódyRe£rved
() {

607 
GOOGLE_DCHECK_LT
(
size
(), 
C≠acôy
());

608  &
	gñemíts_
[
cuºít_size_
++];

611 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

612 
ölöe
 c⁄° 
	gEÀmít
& 
	gRïóãdFõld
<EÀmít>::
Gë
(
ödex
) const {

613 
GOOGLE_DCHECK_LT
(
ödex
, 
size
());

614  
	gñemíts_
[
ödex
];

617 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

618 
ölöe
 
EÀmít
* 
	gRïóãdFõld
<
	gEÀmít
>::
MuèbÀ
(
ödex
) {

619 
GOOGLE_DCHECK_LT
(
ödex
, 
size
());

620  
	gñemíts_
 + 
	gödex
;

623 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

624 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
Së
(
ödex
, c⁄° 
EÀmít
& 
vÆue
) {

625 
GOOGLE_DCHECK_LT
(
ödex
, 
size
());

626 
	gñemíts_
[
ödex
] = 
vÆue
;

629 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

630 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
Add
(c⁄° 
EÀmít
& 
vÆue
) {

631 i‡(
cuºít_size_
 =
tŸÆ_size_
Ë
Re£rve
(total_size_ + 1);

632 
	gñemíts_
[
cuºít_size_
++] = 
vÆue
;

635 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

636 
ölöe
 
EÀmít
* 
	gRïóãdFõld
<
	gEÀmít
>::
Add
() {

637 i‡(
cuºít_size_
 =
tŸÆ_size_
Ë
Re£rve
(total_size_ + 1);

638  &
	gñemíts_
[
cuºít_size_
++];

641 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

642 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
RemoveLa°
() {

643 
GOOGLE_DCHECK_GT
(
cuºít_size_
, 0);

644 --
	gcuºít_size_
;

647 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

648 
	gRïóãdFõld
<
	gEÀmít
>::
Exåa˘Subønge
(

649 
°¨t
, 
num
, 
EÀmít
* 
ñemíts
) {

650 
GOOGLE_DCHECK_GE
(
°¨t
, 0);

651 
GOOGLE_DCHECK_GE
(
num
, 0);

652 
GOOGLE_DCHECK_LE
(
°¨t
 + 
num
, 
this
->
size
());

655 i‡(
	gñemíts
 !
NULL
) {

656 
i
 = 0; 
	gi
 < 
	gnum
; ++i)

657 
	gñemíts
[
i
] = 
this
->
Gë
(ò+ 
°¨t
);

661 i‡(
	gnum
 > 0) {

662 
	gi
 = 
°¨t
 + 
num
; i < 
	gthis
->
size
(); ++i)

663 
	gthis
->
Së
(
i
 - 
num
, 
this
->
Gë
(i));

664 
	gthis
->
Trunˇã
(
this
->
size
(Ë- 
num
);

668 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

669 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
CÀ¨
() {

670 
cuºít_size_
 = 0;

673 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

674 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
MîgeFrom
(c⁄° 
RïóãdFõld
& 
Ÿhî
) {

675 i‡(
Ÿhî
.
cuºít_size_
 != 0) {

676 
Re£rve
(
cuºít_size_
 + 
Ÿhî
.current_size_);

677 
C›yAºay
(
ñemíts_
 + 
cuºít_size_
, 
Ÿhî
.elements_, other.current_size_);

678 
	gcuºít_size_
 +
Ÿhî
.
cuºít_size_
;

682 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

683 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
C›yFrom
(c⁄° 
RïóãdFõld
& 
Ÿhî
) {

684 
CÀ¨
();

685 
MîgeFrom
(
Ÿhî
);

688 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

689 
ölöe
 
EÀmít
* 
	gRïóãdFõld
<
	gEÀmít
>::
muèbÀ_d©a
() {

690  
ñemíts_
;

693 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

694 
ölöe
 c⁄° 
EÀmít
* 
	gRïóãdFõld
<
	gEÀmít
>::
d©a
() const {

695  
ñemíts_
;

699 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

700 
	gRïóãdFõld
<
	gEÀmít
>::
Sw≠
(
RïóãdFõld
* 
Ÿhî
) {

701 i‡(
this
 =
Ÿhî
) ;

702 
EÀmít
* 
	gsw≠_ñemíts
 = 
ñemíts_
;

703 
	gsw≠_cuºít_size
 = 
cuºít_size_
;

704 
	gsw≠_tŸÆ_size
 = 
tŸÆ_size_
;

706 
	gñemíts_
 = 
Ÿhî
->
ñemíts_
;

707 
	gcuºít_size_
 = 
Ÿhî
->
cuºít_size_
;

708 
	gtŸÆ_size_
 = 
Ÿhî
->
tŸÆ_size_
;

710 
	gŸhî
->
	gñemíts_
 = 
sw≠_ñemíts
;

711 
	gŸhî
->
	gcuºít_size_
 = 
sw≠_cuºít_size
;

712 
	gŸhî
->
	gtŸÆ_size_
 = 
sw≠_tŸÆ_size
;

715 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

716 
	gRïóãdFõld
<
	gEÀmít
>::
Sw≠EÀmíts
(
ödex1
, 
ödex2
) {

717 
	g°d
::
sw≠
(
ñemíts_
[
ödex1
],ÉÀmíts_[
ödex2
]);

720 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

721 
ölöe
 
ty≥«me
 
	gRïóãdFõld
<
	gEÀmít
>::
ôî©‹


722 
RïóãdFõld
<
EÀmít
>::
begö
() {

723  
ñemíts_
;

725 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

726 
ölöe
 
ty≥«me
 
	gRïóãdFõld
<
	gEÀmít
>::
c⁄°_ôî©‹


727 
RïóãdFõld
<
EÀmít
>::
begö
() const {

728  
ñemíts_
;

730 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

731 
ölöe
 
ty≥«me
 
	gRïóãdFõld
<
	gEÀmít
>::
ôî©‹


732 
RïóãdFõld
<
EÀmít
>::
íd
() {

733  
ñemíts_
 + 
cuºít_size_
;

735 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

736 
ölöe
 
ty≥«me
 
	gRïóãdFõld
<
	gEÀmít
>::
c⁄°_ôî©‹


737 
RïóãdFõld
<
EÀmít
>::
íd
() const {

738  
ñemíts_
 + 
cuºít_size_
;

741 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

742 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
S∑˚U£dEx˛udögSñf
() const {

743  (
ñemíts_
 !
NULL
Ë? 
tŸÆ_size_
 * (elements_[0]) : 0;

748 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

749 
	gRïóãdFõld
<
	gEÀmít
>::
Re£rve
(
√w_size
) {

750 i‡(
tŸÆ_size_
 >
√w_size
) ;

752 
EÀmít
* 
	gﬁd_ñemíts
 = 
ñemíts_
;

753 
	gtŸÆ_size_
 = 
max
(
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
kMöRïóãdFõldAŒoˇti⁄Size
,

754 
max
(
tŸÆ_size_
 * 2, 
√w_size
));

755 
	gñemíts_
 = 
√w
 
EÀmít
[
tŸÆ_size_
];

756 i‡(
	gﬁd_ñemíts
 !
NULL
) {

757 
MoveAºay
(
ñemíts_
, 
ﬁd_ñemíts
, 
cuºít_size_
);

758 
	gdñëe
 [] 
	gﬁd_ñemíts
;

762 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

763 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
Trunˇã
(
√w_size
) {

764 
GOOGLE_DCHECK_LE
(
√w_size
, 
cuºít_size_
);

765 
	gcuºít_size_
 = 
√w_size
;

768 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

769 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
MoveAºay
(

770 
EÀmít
 
to
[], EÀmíà
‰om
[], 
¨øy_size
) {

771 
C›yAºay
(
to
, 
‰om
, 
¨øy_size
);

774 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

775 
ölöe
 
	gRïóãdFõld
<
	gEÀmít
>::
C›yAºay
(

776 
EÀmít
 
to
[], c⁄° EÀmíà
‰om
[], 
¨øy_size
) {

777 
	göã∫Æ
::
EÀmítC›õr
<
EÀmít
>()(
to
, 
	g‰om
, 
	g¨øy_size
);

780 
«me•a˚
 
	göã∫Æ
 {

782 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
, 
boﬁ
 
	gHasTrivülC›y
>

783 
	gEÀmítC›õr
<
	gEÀmít
, 
	gHasTrivülC›y
>::
›î©‹
()(

784 
EÀmít
 
to
[], c⁄° EÀmíà
	g‰om
[], 
	g¨øy_size
) {

785 
	g°d
::
c›y
(
‰om
, from + 
¨øy_size
, 
to
);

788 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

789 
	gEÀmítC›õr
<
	gEÀmít
, 
	gåue
> {

790 
›î©‹
()(
EÀmít
 
	gto
[], c⁄° EÀmíà
	g‰om
[], 
	g¨øy_size
) {

791 
mem˝y
(
to
, 
‰om
, 
¨øy_size
 * (
EÀmít
));

800 
«me•a˚
 
	göã∫Æ
 {

802 
ölöe
 
	gRïóãdPåFõldBa£
::
RïóãdPåFõldBa£
()

803 : 
ñemíts_
(
NULL
),

804 
cuºít_size_
(0),

805 
Æloˇãd_size_
(0),

806 
tŸÆ_size_
(
kInôülSize
) {

809 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

810 
	gRïóãdPåFõldBa£
::
De°roy
() {

811 
i
 = 0; 
	gi
 < 
	gÆloˇãd_size_
; i++) {

812 
	gTy≥H™dÀr
::
Dñëe
(
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[
i
]));

814 
	gdñëe
 [] 
	gñemíts_
;

817 
ölöe
 
	gRïóãdPåFõldBa£
::
size
() const {

818  
cuºít_size_
;

821 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

822 
ölöe
 c⁄° 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
&

823 
RïóãdPåFõldBa£
::
Gë
(
ödex
) const {

824 
GOOGLE_DCHECK_LT
(
ödex
, 
size
());

825  *
	gˇ°
<
	gTy≥H™dÀr
>(
	gñemíts_
[
ödex
]);

829 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

830 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
*

831 
RïóãdPåFõldBa£
::
MuèbÀ
(
ödex
) {

832 
GOOGLE_DCHECK_LT
(
ödex
, 
size
());

833  
	gˇ°
<
	gTy≥H™dÀr
>(
	gñemíts_
[
ödex
]);

836 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

837 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
RïóãdPåFõldBa£
::
Add
() {

838 i‡(
cuºít_size_
 < 
Æloˇãd_size_
) {

839  
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[
cuºít_size_
++]);

841 i‡(
	gÆloˇãd_size_
 =
tŸÆ_size_
Ë
Re£rve
(total_size_ + 1);

842 ++
	gÆloˇãd_size_
;

843 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
ªsu…
 = 
Ty≥H™dÀr
::
New
();

844 
	gñemíts_
[
cuºít_size_
++] = 
ªsu…
;

845  
	gªsu…
;

848 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

849 
ölöe
 
	gRïóãdPåFõldBa£
::
RemoveLa°
() {

850 
GOOGLE_DCHECK_GT
(
cuºít_size_
, 0);

851 
	gTy≥H™dÀr
::
CÀ¨
(
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[--
cuºít_size_
]));

854 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

855 
	gRïóãdPåFõldBa£
::
CÀ¨
() {

856 
i
 = 0; 
	gi
 < 
	gcuºít_size_
; i++) {

857 
	gTy≥H™dÀr
::
CÀ¨
(
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[
i
]));

859 
	gcuºít_size_
 = 0;

862 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

863 
ölöe
 
	gRïóãdPåFõldBa£
::
MîgeFrom
(c⁄° 
RïóãdPåFõldBa£
& 
Ÿhî
) {

864 
Re£rve
(
cuºít_size_
 + 
Ÿhî
.current_size_);

865 
	gi
 = 0; i < 
	gŸhî
.
	gcuºít_size_
; i++) {

866 
	gTy≥H™dÀr
::
Mîge
(
Ÿhî
.
ãm∂©e
 
Gë
<
Ty≥H™dÀr
>(
i
), 
Add
<TypeHandler>());

870 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

871 
ölöe
 
	gRïóãdPåFõldBa£
::
C›yFrom
(c⁄° 
RïóãdPåFõldBa£
& 
Ÿhî
) {

872 
RïóãdPåFõldBa£
::
CÀ¨
<
Ty≥H™dÀr
>();

873 
	gRïóãdPåFõldBa£
::
MîgeFrom
<
Ty≥H™dÀr
>(
Ÿhî
);

876 
ölöe
 
	gRïóãdPåFõldBa£
::
C≠acôy
() const {

877  
tŸÆ_size_
;

880 
ölöe
 * c⁄°* 
	gRïóãdPåFõldBa£
::
øw_d©a
() const {

881  
ñemíts_
;

884 
ölöe
 ** 
	gRïóãdPåFõldBa£
::
øw_muèbÀ_d©a
() const {

885  
ñemíts_
;

888 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

889 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
** 
RïóãdPåFõldBa£
::
muèbÀ_d©a
() {

892  
ªöãΩªt_ˇ°
<
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
**>(
ñemíts_
);

895 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

896 
ölöe
 c⁄° 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* const*

897 
RïóãdPåFõldBa£
::
d©a
() const {

900  
ªöãΩªt_ˇ°
<c⁄° 
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
* c⁄°*>(
ñemíts_
);

903 
ölöe
 
	gRïóãdPåFõldBa£
::
Sw≠EÀmíts
(
ödex1
, 
ödex2
) {

904 
	g°d
::
sw≠
(
ñemíts_
[
ödex1
],ÉÀmíts_[
ödex2
]);

907 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

908 
ölöe
 
	gRïóãdPåFõldBa£
::
S∑˚U£dEx˛udögSñf
() const {

909 
Æloˇãd_byãs
 =

910 (
ñemíts_
 !
NULL
Ë? 
tŸÆ_size_
 * (elements_[0]) : 0;

911 
	gi
 = 0; i < 
	gÆloˇãd_size_
; ++i) {

912 
	gÆloˇãd_byãs
 +
Ty≥H™dÀr
::
S∑˚U£d
(*
ˇ°
<Ty≥H™dÀr>(
ñemíts_
[
i
]));

914  
	gÆloˇãd_byãs
;

917 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

918 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
RïóãdPåFõldBa£
::
AddFromCÀ¨ed
() {

919 i‡(
cuºít_size_
 < 
Æloˇãd_size_
) {

920  
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[
cuºít_size_
++]);

922  
	gNULL
;

926 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

927 
	gRïóãdPåFõldBa£
::
AddAŒoˇãd
(

928 
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
* 
vÆue
) {

930 i‡(
cuºít_size_
 =
tŸÆ_size_
) {

932 
Re£rve
(
tŸÆ_size_
 + 1);

933 ++
	gÆloˇãd_size_
;

934 } i‡(
	gÆloˇãd_size_
 =
tŸÆ_size_
) {

939 
Ty≥H™dÀr
::
Dñëe
(
ˇ°
<Ty≥H™dÀr>(
ñemíts_
[
cuºít_size_
]));

940 } i‡(
	gcuºít_size_
 < 
	gÆloˇãd_size_
) {

943 
	gñemíts_
[
Æloˇãd_size_
] = 
ñemíts_
[
cuºít_size_
];

944 ++
	gÆloˇãd_size_
;

947 ++
	gÆloˇãd_size_
;

950 
	gñemíts_
[
cuºít_size_
++] = 
vÆue
;

953 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

954 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
RïóãdPåFõldBa£
::
Rñó£La°
() {

955 
GOOGLE_DCHECK_GT
(
cuºít_size_
, 0);

956 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
ªsu…
 =

957 
ˇ°
<
Ty≥H™dÀr
>(
ñemíts_
[--
cuºít_size_
]);

958 --
	gÆloˇãd_size_
;

959 i‡(
	gcuºít_size_
 < 
	gÆloˇãd_size_
) {

962 
	gñemíts_
[
cuºít_size_
] = 
ñemíts_
[
Æloˇãd_size_
];

964  
	gªsu…
;

967 
ölöe
 
	gRïóãdPåFõldBa£
::
CÀ¨edCou¡
() const {

968  
Æloˇãd_size_
 - 
cuºít_size_
;

971 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

972 
ölöe
 
	gRïóãdPåFõldBa£
::
AddCÀ¨ed
(

973 
ty≥«me
 
Ty≥H™dÀr
::
Ty≥
* 
vÆue
) {

974 i‡(
Æloˇãd_size_
 =
tŸÆ_size_
Ë
Re£rve
(total_size_ + 1);

975 
	gñemíts_
[
Æloˇãd_size_
++] = 
vÆue
;

978 
	gãm∂©e
 <
ty≥«me
 
	gTy≥H™dÀr
>

979 
ölöe
 
ty≥«me
 
	gTy≥H™dÀr
::
Ty≥
* 
RïóãdPåFõldBa£
::
Rñó£CÀ¨ed
() {

980 
GOOGLE_DCHECK_GT
(
Æloˇãd_size_
, 
cuºít_size_
);

981  
	gˇ°
<
	gTy≥H™dÀr
>(
	gñemíts_
[--
Æloˇãd_size_
]);

988 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

989 
˛ass
 
	gRïóãdPåFõld
<
	gEÀmít
>::
Ty≥H™dÀr


990 : 
public
 
öã∫Æ
::
GíîicTy≥H™dÀr
<
EÀmít
> {

993 
	gãm∂©e
 <>

994 
˛ass
 
	gRïóãdPåFõld
<
	g°rög
>::
Ty≥H™dÀr


995 : 
public
 
öã∫Æ
::
SåögTy≥H™dÀr
 {

999 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1000 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
RïóãdPåFõld
() {}

1002 
ãm∂©e
 <
ty≥«me
 
EÀmít
>

1003 
ölöe
 
RïóãdPåFõld
<
EÀmít
>::RepeatedPtrField(

1004 c⁄° 
RïóãdPåFõld
& 
Ÿhî
) {

1005 
C›yFrom
(
Ÿhî
);

1008 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1009 
	gãm∂©e
 <
ty≥«me
 
	gIãr
>

1010 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
RïóãdPåFõld
(

1011 
Iãr
 
begö
, c⁄° Iãr& 
íd
) {

1012 ; 
	gbegö
 !
íd
; ++begin) {

1013 *
Add
(Ë*
begö
;

1017 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1018 
	gRïóãdPåFõld
<
	gEÀmít
>::~
RïóãdPåFõld
() {

1019 
De°roy
<
Ty≥H™dÀr
>();

1022 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1023 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>& RïóãdPåFõld<EÀmít>::
›î©‹
=(

1024 c⁄° 
RïóãdPåFõld
& 
Ÿhî
) {

1025 i‡(
this
 !&
Ÿhî
)

1026 
C›yFrom
(
Ÿhî
);

1027  *
	gthis
;

1030 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1031 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
size
() const {

1032  
RïóãdPåFõldBa£
::
size
();

1035 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1036 
ölöe
 c⁄° 
	gEÀmít
& 
	gRïóãdPåFõld
<EÀmít>::
Gë
(
ödex
) const {

1037  
RïóãdPåFõldBa£
::
Gë
<
Ty≥H™dÀr
>(
ödex
);

1041 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1042 
ölöe
 
EÀmít
* 
	gRïóãdPåFõld
<
	gEÀmít
>::
MuèbÀ
(
ödex
) {

1043  
RïóãdPåFõldBa£
::
MuèbÀ
<
Ty≥H™dÀr
>(
ödex
);

1046 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1047 
ölöe
 
EÀmít
* 
	gRïóãdPåFõld
<
	gEÀmít
>::
Add
() {

1048  
RïóãdPåFõldBa£
::
Add
<
Ty≥H™dÀr
>();

1051 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1052 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
RemoveLa°
() {

1053 
RïóãdPåFõldBa£
::
RemoveLa°
<
Ty≥H™dÀr
>();

1056 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1057 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
DñëeSubønge
(
°¨t
, 
num
) {

1058 
GOOGLE_DCHECK_GE
(
°¨t
, 0);

1059 
GOOGLE_DCHECK_GE
(
num
, 0);

1060 
GOOGLE_DCHECK_LE
(
°¨t
 + 
num
, 
size
());

1061 
	gi
 = 0; i < 
	gnum
; ++i)

1062 
dñëe
 
	gRïóãdPåFõldBa£
::
MuèbÀ
<
Ty≥H™dÀr
>(
°¨t
 + 
i
);

1063 
Exåa˘Subønge
(
°¨t
, 
num
, 
NULL
);

1066 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1067 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
Exåa˘Subønge
(

1068 
°¨t
, 
num
, 
EÀmít
** 
ñemíts
) {

1069 
GOOGLE_DCHECK_GE
(
°¨t
, 0);

1070 
GOOGLE_DCHECK_GE
(
num
, 0);

1071 
GOOGLE_DCHECK_LE
(
°¨t
 + 
num
, 
size
());

1073 i‡(
	gnum
 > 0) {

1075 i‡(
	gñemíts
 !
NULL
) {

1076 
i
 = 0; 
	gi
 < 
	gnum
; ++i)

1077 
	gñemíts
[
i
] = 
RïóãdPåFõldBa£
::
MuèbÀ
<
Ty≥H™dÀr
>(ò+ 
°¨t
);

1079 
Clo£G≠
(
°¨t
, 
num
);

1083 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1084 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
CÀ¨
() {

1085 
RïóãdPåFõldBa£
::
CÀ¨
<
Ty≥H™dÀr
>();

1088 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1089 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
MîgeFrom
(

1090 c⁄° 
RïóãdPåFõld
& 
Ÿhî
) {

1091 
RïóãdPåFõldBa£
::
MîgeFrom
<
Ty≥H™dÀr
>(
Ÿhî
);

1094 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1095 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
C›yFrom
(

1096 c⁄° 
RïóãdPåFõld
& 
Ÿhî
) {

1097 
RïóãdPåFõldBa£
::
C›yFrom
<
Ty≥H™dÀr
>(
Ÿhî
);

1100 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1101 
ölöe
 
EÀmít
** 
	gRïóãdPåFõld
<
	gEÀmít
>::
muèbÀ_d©a
() {

1102  
RïóãdPåFõldBa£
::
muèbÀ_d©a
<
Ty≥H™dÀr
>();

1105 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1106 
ölöe
 c⁄° 
EÀmít
* c⁄°* 
	gRïóãdPåFõld
<
	gEÀmít
>::
d©a
() const {

1107  
RïóãdPåFõldBa£
::
d©a
<
Ty≥H™dÀr
>();

1110 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1111 
	gRïóãdPåFõld
<
	gEÀmít
>::
Sw≠
(
RïóãdPåFõld
* 
Ÿhî
) {

1112 
RïóãdPåFõldBa£
::
Sw≠
(
Ÿhî
);

1115 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1116 
	gRïóãdPåFõld
<
	gEÀmít
>::
Sw≠EÀmíts
(
ödex1
, 
ödex2
) {

1117 
	gRïóãdPåFõldBa£
::
Sw≠EÀmíts
(
ödex1
, 
ödex2
);

1120 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1121 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
S∑˚U£dEx˛udögSñf
() const {

1122  
RïóãdPåFõldBa£
::
S∑˚U£dEx˛udögSñf
<
Ty≥H™dÀr
>();

1125 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1126 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
AddAŒoˇãd
(
EÀmít
* 
vÆue
) {

1127 
RïóãdPåFõldBa£
::
AddAŒoˇãd
<
Ty≥H™dÀr
>(
vÆue
);

1130 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1131 
ölöe
 
EÀmít
* 
	gRïóãdPåFõld
<
	gEÀmít
>::
Rñó£La°
() {

1132  
RïóãdPåFõldBa£
::
Rñó£La°
<
Ty≥H™dÀr
>();

1136 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1137 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
CÀ¨edCou¡
() const {

1138  
RïóãdPåFõldBa£
::
CÀ¨edCou¡
();

1141 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1142 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
AddCÀ¨ed
(
EÀmít
* 
vÆue
) {

1143  
RïóãdPåFõldBa£
::
AddCÀ¨ed
<
Ty≥H™dÀr
>(
vÆue
);

1146 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1147 
ölöe
 
EÀmít
* 
	gRïóãdPåFõld
<
	gEÀmít
>::
Rñó£CÀ¨ed
() {

1148  
RïóãdPåFõldBa£
::
Rñó£CÀ¨ed
<
Ty≥H™dÀr
>();

1151 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1152 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
Re£rve
(
√w_size
) {

1153  
RïóãdPåFõldBa£
::
Re£rve
(
√w_size
);

1156 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1157 
ölöe
 
	gRïóãdPåFõld
<
	gEÀmít
>::
C≠acôy
() const {

1158  
RïóãdPåFõldBa£
::
C≠acôy
();

1163 
«me•a˚
 
	göã∫Æ
 {

1176 
	gãm∂©e
<
ty≥«me
 
	gEÀmít
>

1177 
˛ass
 
	gRïóãdPåIãøt‹


1178 : 
public
 
°d
::
ôî©‹
<

1179 
°d
::
øndom_ac˚ss_ôî©‹_èg
, 
	gEÀmít
> {

1180 
	gpublic
:

1181 
RïóãdPåIãøt‹
<
	tEÀmít
> 
	tôî©‹
;

1182 
	g°d
::
	tôî©‹
<

1183 
	t°d
::
	tøndom_ac˚ss_ôî©‹_èg
, 
	tEÀmít
> 
	tsu≥r˛ass
;

1187 
ty≥«me
 
	tsu≥r˛ass
::
	tª„ªn˚
Ñeference;

1188 
ty≥«me
 
	tsu≥r˛ass
::
	tpoöãr
Öointer;

1189 
ty≥«me
 
	tsu≥r˛ass
::
	tdif„ªn˚_ty≥
 difference_type;

1191 
RïóãdPåIãøt‹
(Ë: 
ô_
(
NULL
) {}

1192 
ex∂icô
 
RïóãdPåIãøt‹
(* c⁄°* 
ô
Ë: 
ô_
(it) {}

1196 
ãm∂©e
<
ty≥«me
 
OthîEÀmít
>

1197 
RïóãdPåIãøt‹
(c⁄° RïóãdPåIãøt‹<
OthîEÀmít
>& 
Ÿhî
)

1198 : 
ô_
(
Ÿhî
.it_) {

1200 i‡(
Ál£
) {

1201 
im∂icô_ˇ°
<
EÀmít
*, 
	gOthîEÀmít
*>(0);

1206 
ª„ªn˚
 
	g›î©‹
*(Ëc⁄° {  *
	gªöãΩªt_ˇ°
<
	gEÀmít
*>(*
	gô_
); }

1207 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

1210 
	gôî©‹
& 
	g›î©‹
++(Ë{ ++
	gô_
;  *
	gthis
; }

1211 
ôî©‹
 
	g›î©‹
++(Ë{  iãøt‹(
ô_
++); }

1212 
	gôî©‹
& 
	g›î©‹
--(Ë{ --
	gô_
;  *
	gthis
; }

1213 
ôî©‹
 
	g›î©‹
--(Ë{  iãøt‹(
ô_
--); }

1216 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 == x.it_; }

1217 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 != x.it_; }

1220 
boﬁ
 
	g›î©‹
<(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 < x.it_; }

1221 
boﬁ
 
	g›î©‹
<=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 <= x.it_; }

1222 
boﬁ
 
	g›î©‹
>(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 > x.it_; }

1223 
boﬁ
 
	g›î©‹
>=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 >= x.it_; }

1226 
	gôî©‹
& 
	g›î©‹
+=(
dif„ªn˚_ty≥
 
d
) {

1227 
ô_
 +
d
;

1228  *
	gthis
;

1230 
‰õnd
 
ôî©‹
 
	g›î©‹
+(ôî©‹ 
	gô
, 
dif„ªn˚_ty≥
 
	gd
) {

1231 
	gô
 +
d
;

1232  
	gô
;

1234 
‰õnd
 
ôî©‹
 
	g›î©‹
+(
dif„ªn˚_ty≥
 
	gd
, iãøt‹ 
	gô
) {

1235 
	gô
 +
d
;

1236  
	gô
;

1238 
	gôî©‹
& 
	g›î©‹
-=(
dif„ªn˚_ty≥
 
d
) {

1239 
ô_
 -
d
;

1240  *
	gthis
;

1242 
‰õnd
 
ôî©‹
 
	g›î©‹
-(ôî©‹ 
	gô
, 
dif„ªn˚_ty≥
 
	gd
) {

1243 
	gô
 -
d
;

1244  
	gô
;

1248 
ª„ªn˚
 
	g›î©‹
[](
dif„ªn˚_ty≥
 
	gd
Ëc⁄° {  *(*
	gthis
 + d); }

1251 
dif„ªn˚_ty≥
 
	g›î©‹
-(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 - x.it_; }

1253 
	g¥iv©e
:

1254 
ãm∂©e
<
ty≥«me
 
OthîEÀmít
>

1255 
‰õnd
 
˛ass
 
RïóãdPåIãøt‹
;

1258 * c⁄°* 
	gô_
;

1268 
	gãm∂©e
<
ty≥«me
 
	gEÀmít
,Åy≥«mê
	gVoidPå
>

1269 
˛ass
 
	gRïóãdPåOvîPåsIãøt‹


1270 : 
public
 
°d
::
ôî©‹
<°d::
øndom_ac˚ss_ôî©‹_èg
, 
	gEÀmít
*> {

1271 
	gpublic
:

1272 
RïóãdPåOvîPåsIãøt‹
<
	tEÀmít
, 
	tVoidPå
> 
	tôî©‹
;

1273 
	g°d
::
	tôî©‹
<

1274 
	t°d
::
	tøndom_ac˚ss_ôî©‹_èg
, 
	tEÀmít
*> 
	tsu≥r˛ass
;

1278 
ty≥«me
 
	tsu≥r˛ass
::
	tª„ªn˚
Ñeference;

1279 
ty≥«me
 
	tsu≥r˛ass
::
	tpoöãr
Öointer;

1280 
ty≥«me
 
	tsu≥r˛ass
::
	tdif„ªn˚_ty≥
 difference_type;

1282 
RïóãdPåOvîPåsIãøt‹
(Ë: 
ô_
(
NULL
) {}

1283 
ex∂icô
 
RïóãdPåOvîPåsIãøt‹
(
VoidPå
* 
ô
Ë: 
ô_
(it) {}

1286 
ª„ªn˚
 
›î©‹
*(Ëc⁄° {  *
ªöãΩªt_ˇ°
<
EÀmít
**>(
ô_
); }

1287 
poöãr
 
	g›î©‹
->() const {  &(operator*()); }

1290 
	gôî©‹
& 
	g›î©‹
++(Ë{ ++
	gô_
;  *
	gthis
; }

1291 
ôî©‹
 
	g›î©‹
++(Ë{  iãøt‹(
ô_
++); }

1292 
	gôî©‹
& 
	g›î©‹
--(Ë{ --
	gô_
;  *
	gthis
; }

1293 
ôî©‹
 
	g›î©‹
--(Ë{  iãøt‹(
ô_
--); }

1296 
boﬁ
 
	g›î©‹
==(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 == x.it_; }

1297 
boﬁ
 
	g›î©‹
!=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 != x.it_; }

1300 
boﬁ
 
	g›î©‹
<(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 < x.it_; }

1301 
boﬁ
 
	g›î©‹
<=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 <= x.it_; }

1302 
boﬁ
 
	g›î©‹
>(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 > x.it_; }

1303 
boﬁ
 
	g›î©‹
>=(c⁄° 
ôî©‹
& 
x
Ëc⁄° {  
ô_
 >= x.it_; }

1306 
	gôî©‹
& 
	g›î©‹
+=(
dif„ªn˚_ty≥
 
d
) {

1307 
ô_
 +
d
;

1308  *
	gthis
;

1310 
‰õnd
 
ôî©‹
 
	g›î©‹
+(ôî©‹ 
	gô
, 
dif„ªn˚_ty≥
 
	gd
) {

1311 
	gô
 +
d
;

1312  
	gô
;

1314 
‰õnd
 
ôî©‹
 
	g›î©‹
+(
dif„ªn˚_ty≥
 
	gd
, iãøt‹ 
	gô
) {

1315 
	gô
 +
d
;

1316  
	gô
;

1318 
	gôî©‹
& 
	g›î©‹
-=(
dif„ªn˚_ty≥
 
d
) {

1319 
ô_
 -
d
;

1320  *
	gthis
;

1322 
‰õnd
 
ôî©‹
 
	g›î©‹
-(ôî©‹ 
	gô
, 
dif„ªn˚_ty≥
 
	gd
) {

1323 
	gô
 -
d
;

1324  
	gô
;

1328 
ª„ªn˚
 
	g›î©‹
[](
dif„ªn˚_ty≥
 
	gd
Ëc⁄° {  *(*
	gthis
 + d); }

1331 
dif„ªn˚_ty≥
 
	g›î©‹
-(c⁄° 
	gôî©‹
& 
	gx
Ëc⁄° {  
	gô_
 - x.it_; }

1333 
	g¥iv©e
:

1334 
ãm∂©e
<
ty≥«me
 
OthîEÀmít
>

1335 
‰õnd
 
˛ass
 
RïóãdPåIãøt‹
;

1338 
VoidPå
* 
	gô_
;

1343 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1344 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
ôî©‹


1345 
RïóãdPåFõld
<
EÀmít
>::
begö
() {

1346  
ôî©‹
(
øw_d©a
());

1348 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1349 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
c⁄°_ôî©‹


1350 
RïóãdPåFõld
<
EÀmít
>::
begö
() const {

1351  
ôî©‹
(
øw_d©a
());

1353 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1354 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
ôî©‹


1355 
RïóãdPåFõld
<
EÀmít
>::
íd
() {

1356  
ôî©‹
(
øw_d©a
(Ë+ 
size
());

1358 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1359 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
c⁄°_ôî©‹


1360 
RïóãdPåFõld
<
EÀmít
>::
íd
() const {

1361  
ôî©‹
(
øw_d©a
(Ë+ 
size
());

1364 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1365 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
poöãr_ôî©‹


1366 
RïóãdPåFõld
<
EÀmít
>::
poöãr_begö
() {

1367  
poöãr_ôî©‹
(
øw_muèbÀ_d©a
());

1369 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1370 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
c⁄°_poöãr_ôî©‹


1371 
RïóãdPåFõld
<
EÀmít
>::
poöãr_begö
() const {

1372  
c⁄°_poöãr_ôî©‹
(
c⁄°_ˇ°
<c⁄° **>(
øw_muèbÀ_d©a
()));

1374 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1375 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
poöãr_ôî©‹


1376 
RïóãdPåFõld
<
EÀmít
>::
poöãr_íd
() {

1377  
poöãr_ôî©‹
(
øw_muèbÀ_d©a
(Ë+ 
size
());

1379 
	gãm∂©e
 <
ty≥«me
 
	gEÀmít
>

1380 
ölöe
 
ty≥«me
 
	gRïóãdPåFõld
<
	gEÀmít
>::
c⁄°_poöãr_ôî©‹


1381 
RïóãdPåFõld
<
EÀmít
>::
poöãr_íd
() const {

1382  
c⁄°_poöãr_ôî©‹
(

1383 
c⁄°_ˇ°
<c⁄° **>(
øw_muèbÀ_d©a
(Ë+ 
size
()));

1396 
«me•a˚
 
	göã∫Æ
 {

1398 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRïóãdFõldBackIn£πIãøt‹


1399 : 
public
 
°d
::
ôî©‹
<°d::
ouçut_ôî©‹_èg
, 
	gT
> {

1400 
	gpublic
:

1401 
ex∂icô
 
RïóãdFõldBackIn£πIãøt‹
(

1402 
RïóãdFõld
<
T
>* c⁄° 
muèbÀ_fõld
)

1403 : 
fõld_
(
muèbÀ_fõld
) {

1405 
RïóãdFõldBackIn£πIãøt‹
<
T
>& 
›î©‹
=(c⁄° T& 
vÆue
) {

1406 
fõld_
->
Add
(
vÆue
);

1407  *
	gthis
;

1409 
	gRïóãdFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
*() {

1410  *
	gthis
;

1412 
	gRïóãdFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++() {

1413  *
	gthis
;

1415 
	gRïóãdFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++() {

1416  *
	gthis
;

1419 
	g¥iv©e
:

1420 
RïóãdFõld
<
T
>* 
fõld_
;

1424 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gRïóãdPåFõldBackIn£πIãøt‹


1425 : 
public
 
°d
::
ôî©‹
<°d::
ouçut_ôî©‹_èg
, 
	gT
> {

1426 
	gpublic
:

1427 
RïóãdPåFõldBackIn£πIãøt‹
(

1428 
RïóãdPåFõld
<
T
>* c⁄° 
muèbÀ_fõld
)

1429 : 
fõld_
(
muèbÀ_fõld
) {

1431 
RïóãdPåFõldBackIn£πIãøt‹
<
T
>& 
›î©‹
=(c⁄° T& 
vÆue
) {

1432 *
fõld_
->
Add
(Ë
vÆue
;

1433  *
	gthis
;

1435 
	gRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
=(

1436 c⁄° 
T
* c⁄° 
±r_to_vÆue
) {

1437 *
fõld_
->
Add
(Ë*
±r_to_vÆue
;

1438  *
	gthis
;

1440 
	gRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
*() {

1441  *
	gthis
;

1443 
	gRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++() {

1444  *
	gthis
;

1446 
	gRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++() {

1447  *
	gthis
;

1450 
	g¥iv©e
:

1451 
RïóãdPåFõld
<
T
>* 
fõld_
;

1456 
	gãm∂©e
<
ty≥«me
 
	gT
> 
˛ass
 
	gAŒoˇãdRïóãdPåFõldBackIn£πIãøt‹


1457 : 
public
 
°d
::
ôî©‹
<°d::
ouçut_ôî©‹_èg
, 
	gT
> {

1458 
	gpublic
:

1459 
ex∂icô
 
AŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
(

1460 
RïóãdPåFõld
<
T
>* c⁄° 
muèbÀ_fõld
)

1461 : 
fõld_
(
muèbÀ_fõld
) {

1463 
AŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
T
>& 
›î©‹
=(

1464 
T
* c⁄° 
±r_to_vÆue
) {

1465 
fõld_
->
AddAŒoˇãd
(
±r_to_vÆue
);

1466  *
	gthis
;

1468 
	gAŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
*() {

1469  *
	gthis
;

1471 
	gAŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++() {

1472  *
	gthis
;

1474 
	gAŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
	gT
>& 
	g›î©‹
++(

1476  *
	gthis
;

1479 
	g¥iv©e
:

1480 
RïóãdPåFõld
<
T
>* 
fõld_
;

1486 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	göã∫Æ
::
RïóãdFõldBackIn£πIãøt‹
<
T
>

1487 
RïóãdFõldBackIn£πî
(
RïóãdFõld
<
T
>* c⁄° 
muèbÀ_fõld
) {

1488  
öã∫Æ
::
RïóãdFõldBackIn£πIãøt‹
<
T
>(
muèbÀ_fõld
);

1493 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	göã∫Æ
::
RïóãdPåFõldBackIn£πIãøt‹
<
T
>

1494 
RïóãdPåFõldBackIn£πî
(
RïóãdPåFõld
<
T
>* c⁄° 
muèbÀ_fõld
) {

1495  
öã∫Æ
::
RïóãdPåFõldBackIn£πIãøt‹
<
T
>(
muèbÀ_fõld
);

1501 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	göã∫Æ
::
RïóãdPåFõldBackIn£πIãøt‹
<
T
>

1502 
RïóãdFõldBackIn£πî
(
RïóãdPåFõld
<
T
>* c⁄° 
muèbÀ_fõld
) {

1503  
öã∫Æ
::
RïóãdPåFõldBackIn£πIãøt‹
<
T
>(
muèbÀ_fõld
);

1509 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	göã∫Æ
::
AŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
T
>

1510 
AŒoˇãdRïóãdPåFõldBackIn£πî
(

1511 
RïóãdPåFõld
<
T
>* c⁄° 
muèbÀ_fõld
) {

1512  
öã∫Æ
::
AŒoˇãdRïóãdPåFõldBackIn£πIãøt‹
<
T
>(

1513 
muèbÀ_fõld
);

	@/usr/include/google/protobuf/stubs/common.h

35 #i‚de‡
GOOGLE_PROTOBUF_COMMON_H__


36 
	#GOOGLE_PROTOBUF_COMMON_H__


	)

38 
	~<as£π.h
>

39 
	~<°dlib.h
>

40 
	~<c°ddef
>

41 
	~<°rög
>

42 
	~<°rög.h
>

43 #i‡
deföed
(
__osf__
)

46 
	~<öây≥s.h
>

47 #ñi‡!
deföed
(
_MSC_VER
)

48 
	~<°döt.h
>

51 #i‚de‡
PROTOBUF_USE_EXCEPTIONS


52 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
_CPPUNWIND
)

53 
	#PROTOBUF_USE_EXCEPTIONS
 1

	)

54 #ñi‡
deföed
(
__EXCEPTIONS
)

55 
	#PROTOBUF_USE_EXCEPTIONS
 1

	)

57 
	#PROTOBUF_USE_EXCEPTIONS
 0

	)

61 #i‡
PROTOBUF_USE_EXCEPTIONS


62 
	~<ex˚±i⁄
>

65 #i‡
deföed
(
_WIN32
Ë&& deföed(
GëMesßge
)

69 
ölöe
 
BOOL
 
	$GëMesßge_Wö32
(

70 
LPMSG
 
ÕMsg
, 
HWND
 
hWnd
,

71 
UINT
 
wMsgFûãrMö
, UINT 
wMsgFûãrMax
) {

72  
	`GëMesßge
(
ÕMsg
, 
hWnd
, 
wMsgFûãrMö
, 
wMsgFûãrMax
);

73 
	}
}

74 #unde‡
GëMesßge


75 
ölöe
 
BOOL
 
	$GëMesßge
(

76 
LPMSG
 
ÕMsg
, 
HWND
 
hWnd
,

77 
UINT
 
wMsgFûãrMö
, UINT 
wMsgFûãrMax
) {

78  
	`GëMesßge_Wö32
(
ÕMsg
, 
hWnd
, 
wMsgFûãrMö
, 
wMsgFûãrMax
);

79 
	}
}

83 
«me•a˚
 
	g°d
 {}

85 
«me•a˚
 
	ggoogÀ
 {

86 
«me•a˚
 
	g¥Ÿobuf
 {

88 #unde‡
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS


89 
	#GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Ty≥Name
) \

90 
	`Ty≥Name
(c⁄° 
Ty≥Name
&); \

91 
›î©‹
=(c⁄° 
Ty≥Name
&)

	)

93 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
PROTOBUF_USE_DLLS
)

94 #ifde‡
LIBPROTOBUF_EXPORTS


95 
	#LIBPROTOBUF_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

97 
	#LIBPROTOBUF_EXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

99 #ifde‡
LIBPROTOC_EXPORTS


100 
	#LIBPROTOC_EXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

102 
	#LIBPROTOC_EXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

105 
	#LIBPROTOBUF_EXPORT


	)

106 
	#LIBPROTOC_EXPORT


	)

109 
«me•a˚
 
	göã∫Æ
 {

116 
	#GOOGLE_PROTOBUF_VERSION
 2005000

	)

120 
	#GOOGLE_PROTOBUF_MIN_LIBRARY_VERSION
 2005000

	)

125 c⁄° 
	gkMöHódîVîsi⁄F‹Libøry
 = 2005000;

129 
	#GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
 2005000

	)

133 c⁄° 
	gkMöHódîVîsi⁄F‹PrŸoc
 = 2005000;

137 
LIBPROTOBUF_EXPORT
 
VîifyVîsi⁄
(
hódîVîsi⁄
, 
möLibøryVîsi⁄
,

138 c⁄° * 
fûíame
);

141 
	g°d
::
°rög
 
LIBPROTOBUF_EXPORT
 
Vîsi⁄Såög
(
vîsi⁄
);

149 
	#GOOGLE_PROTOBUF_VERIFY_VERSION
 \

150 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
	`VîifyVîsi⁄
( \

151 
GOOGLE_PROTOBUF_VERSION
, 
GOOGLE_PROTOBUF_MIN_LIBRARY_VERSION
, \

152 
__FILE__
)

	)

157 
	tuöt
;

159 #ifde‡
_MSC_VER


160 
__öt8
 
	töt8
;

161 
__öt16
 
	töt16
;

162 
__öt32
 
	töt32
;

163 
__öt64
 
	töt64
;

165 
	t__öt8
 
	tuöt8
;

166 
	t__öt16
 
	tuöt16
;

167 
	t__öt32
 
	tuöt32
;

168 
	t__öt64
 
	tuöt64
;

170 
öt8_t
 
	töt8
;

171 
öt16_t
 
	töt16
;

172 
öt32_t
 
	töt32
;

173 
öt64_t
 
	töt64
;

175 
uöt8_t
 
	tuöt8
;

176 
uöt16_t
 
	tuöt16
;

177 
uöt32_t
 
	tuöt32
;

178 
uöt64_t
 
	tuöt64
;

183 #unde‡
GOOGLE_LONGLONG


184 #unde‡
GOOGLE_ULONGLONG


185 #unde‡
GOOGLE_LL_FORMAT


187 #ifde‡
_MSC_VER


188 
	#GOOGLE_LONGLONG
(
x
Ëx##
I64


	)

189 
	#GOOGLE_ULONGLONG
(
x
Ëx##
UI64


	)

190 
	#GOOGLE_LL_FORMAT
 "I64"

191 #ñ£

	)

192 
	#GOOGLE_LONGLONG
(
x
Ëx##
LL


	)

193 
	#GOOGLE_ULONGLONG
(
x
Ëx##
ULL


	)

194 
	#GOOGLE_LL_FORMAT
 "ll"

196 

	)

197 c⁄° 
öt32
 
	gköt32max
 = 0x7FFFFFFF;

198 c⁄° 
öt32
 
	gköt32mö
 = -
köt32max
 - 1;

199 c⁄° 
öt64
 
	gköt64max
 = 
GOOGLE_LONGLONG
(0x7FFFFFFFFFFFFFFF);

200 c⁄° 
öt64
 
	gköt64mö
 = -
köt64max
 - 1;

201 c⁄° 
uöt32
 
	gkuöt32max
 = 0xFFFFFFFFu;

202 c⁄° 
uöt64
 
	gkuöt64max
 = 
GOOGLE_ULONGLONG
(0xFFFFFFFFFFFFFFFF);

210 #i‚de‡
GOOGLE_ATTRIBUTE_ALWAYS_INLINE


211 #i‡
deföed
(
__GNUC__
Ë&& (__GNUC__ > 3 ||(__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1))

214 
	#GOOGLE_ATTRIBUTE_ALWAYS_INLINE
 
	`__©åibuã__
 ((
Æways_ölöe
))

	)

217 
	#GOOGLE_ATTRIBUTE_ALWAYS_INLINE


	)

221 #i‚de‡
GOOGLE_ATTRIBUTE_DEPRECATED


222 #ifde‡
__GNUC__


224 
	#GOOGLE_ATTRIBUTE_DEPRECATED
 
	`__©åibuã__
((
dïªˇãd
))

	)

226 
	#GOOGLE_ATTRIBUTE_DEPRECATED


	)

230 #i‚de‡
GOOGLE_PREDICT_TRUE


231 #ifde‡
__GNUC__


233 
	#GOOGLE_PREDICT_TRUE
(
x
Ë(
	`__buûtö_ex≥˘
(!!(x), 1))

	)

235 
	#GOOGLE_PREDICT_TRUE


	)

242 #i‚de‡
GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN


243 
	#GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN
()

	)

245 #i‚de‡
GOOGLE_SAFE_CONCURRENT_WRITES_END


246 
	#GOOGLE_SAFE_CONCURRENT_WRITES_END
()

	)

286 #unde‡
GOOGLE_ARRAYSIZE


287 
	#GOOGLE_ARRAYSIZE
(
a
) \

288 (((
a
) / (*(a))) / \

289 
°©ic_ˇ°
<
size_t
>(!((
a
Ë% (*◊)))))

	)

291 
«me•a˚
 
	göã∫Æ
 {

310 
	gãm∂©e
<
ty≥«me
 
	gTo
,Åy≥«mê
	gFrom
>

311 
ölöe
 
To
 
im∂icô_ˇ°
(
From
 c⁄° &
f
) {

312  
	gf
;

333 
	gãm∂©e
<
ty≥«me
 
	gTo
,Åy≥«mê
	gFrom
>

334 
ölöe
 
To
 
down_ˇ°
(
From
* 
f
) {

339 i‡(
	gÁl£
) {

340 
	gim∂icô_ˇ°
<
	gFrom
*, 
	gTo
>(0);

343 #i‡!
deföed
(
NDEBUG
Ë&& !deföed(
GOOGLE_PROTOBUF_NO_RTTI
)

344 
as£π
(
f
 =
NULL
 || 
dy«mic_ˇ°
<
To
>(f) != NULL);

346  
	g°©ic_ˇ°
<
	gTo
>(
	gf
);

353 
usög
 
	göã∫Æ
::
im∂icô_ˇ°
;

354 
usög
 
	göã∫Æ
::
down_ˇ°
;

371 
«me•a˚
 
	göã∫Æ
 {

373 
	gãm∂©e
 <
	gboﬁ
>

374 
	sCompûeAs£π
 {

379 #unde‡
GOOGLE_COMPILE_ASSERT


380 
	#GOOGLE_COMPILE_ASSERT
(
ex¥
, 
msg
) \

381 ::
googÀ
::
	t¥Ÿobuf
::
	töã∫Æ
::
	tCompûeAs£π
<(
	tboﬁ
(
	tex¥
))> \

382 
	tmsg
[
	`boﬁ
(
ex¥
Ë? 1 : -1]

	)

429 
	t«me•a˚
 
	töã∫Æ
 {

435 
	gãm∂©e
 <
˛ass
 
	gC
> cœs†
	gsc›ed_±r
;

436 
	gãm∂©e
 <
˛ass
 
	gC
> cœs†
	gsc›ed_¨øy
;

445 
	gãm∂©e
 <
˛ass
 
	gC
>

446 ˛as†
	csc›ed_±r
 {

447 
	gpublic
:

450 
C
 
	tñemít_ty≥
;

455 
ex∂icô
 
sc›ed_±r
(
C
* 
p
 = 
NULL
Ë: 
±r_
(p) { }

459 ~
sc›ed_±r
() {

460 íum { 
ty≥_mu°_be_com∂ëe
 = (
C
) };

461 
dñëe
 
	g±r_
;

467 
ª£t
(
C
* 
p
 = 
NULL
) {

468 i‡(
p
 !
±r_
) {

469 íum { 
ty≥_mu°_be_com∂ëe
 = (
C
) };

470 
dñëe
 
	g±r_
;

471 
	g±r_
 = 
p
;

477 
	gC
& 
	g›î©‹
*() const {

478 
as£π
(
±r_
 !
NULL
);

479  *
	g±r_
;

481 
C
* 
	g›î©‹
->() const {

482 
as£π
(
±r_
 !
NULL
);

483  
	g±r_
;

485 
C
* 
gë
(Ëc⁄° {  
	g±r_
; }

490 
boﬁ
 
	g›î©‹
==(
C
* 
p
Ëc⁄° {  
±r_
 ==Ö; }

491 
boﬁ
 
	g›î©‹
!=(
C
* 
p
Ëc⁄° {  
±r_
 !=Ö; }

494 
sw≠
(
sc›ed_±r
& 
p2
) {

495 
C
* 
	gtmp
 = 
±r_
;

496 
	g±r_
 = 
p2
.
±r_
;

497 
	gp2
.
	g±r_
 = 
tmp
;

505 
C
* 
ªÀa£
() {

506 
C
* 
	gªtVÆ
 = 
±r_
;

507 
	g±r_
 = 
NULL
;

508  
	gªtVÆ
;

511 
	g¥iv©e
:

512 
C
* 
±r_
;

517 
	gãm∂©e
 <
˛ass
 
	gC2
> 
boﬁ
 
	g›î©‹
==(
sc›ed_±r
<
C2
> c⁄°& 
p2
) const;

518 
	gãm∂©e
 <
˛ass
 
	gC2
> 
boﬁ
 
	g›î©‹
!=(
sc›ed_±r
<
C2
> c⁄°& 
p2
) const;

521 
sc›ed_±r
(const scoped_ptr&);

522 
	g›î©‹
=(c⁄° 
sc›ed_±r
&);

532 
	gãm∂©e
 <
˛ass
 
	gC
>

533 ˛as†
	csc›ed_¨øy
 {

534 
	gpublic
:

537 
C
 
	tñemít_ty≥
;

542 
ex∂icô
 
sc›ed_¨øy
(
C
* 
p
 = 
NULL
Ë: 
¨øy_
(p) { }

546 ~
sc›ed_¨øy
() {

547 íum { 
ty≥_mu°_be_com∂ëe
 = (
C
) };

548 
	gdñëe
[] 
	g¨øy_
;

554 
ª£t
(
C
* 
p
 = 
NULL
) {

555 i‡(
p
 !
¨øy_
) {

556 íum { 
ty≥_mu°_be_com∂ëe
 = (
C
) };

557 
	gdñëe
[] 
	g¨øy_
;

558 
	g¨øy_
 = 
p
;

564 
	gC
& 
	g›î©‹
[](
	g°d
::
±rdiff_t
 
i
) const {

565 
as£π
(
i
 >= 0);

566 
as£π
(
¨øy_
 !
NULL
);

567  
	g¨øy_
[
i
];

572 
C
* 
gë
() const {

573  
	g¨øy_
;

579 
boﬁ
 
	g›î©‹
==(
C
* 
p
Ëc⁄° {  
¨øy_
 ==Ö; }

580 
boﬁ
 
	g›î©‹
!=(
C
* 
p
Ëc⁄° {  
¨øy_
 !=Ö; }

583 
sw≠
(
sc›ed_¨øy
& 
p2
) {

584 
C
* 
	gtmp
 = 
¨øy_
;

585 
	g¨øy_
 = 
p2
.
¨øy_
;

586 
	gp2
.
	g¨øy_
 = 
tmp
;

594 
C
* 
ªÀa£
() {

595 
C
* 
	gªtVÆ
 = 
¨øy_
;

596 
	g¨øy_
 = 
NULL
;

597  
	gªtVÆ
;

600 
	g¥iv©e
:

601 
C
* 
¨øy_
;

604 
	gãm∂©e
 <
˛ass
 
	gC2
> 
boﬁ
 
	g›î©‹
==(
sc›ed_¨øy
<
C2
> c⁄°& 
p2
) const;

605 
	gãm∂©e
 <
˛ass
 
	gC2
> 
boﬁ
 
	g›î©‹
!=(
sc›ed_¨øy
<
C2
> c⁄°& 
p2
) const;

608 
sc›ed_¨øy
(const scoped_array&);

609 
	g›î©‹
=(c⁄° 
sc›ed_¨øy
&);

616 
usög
 
	göã∫Æ
::
sc›ed_±r
;

617 
usög
 
	göã∫Æ
::
sc›ed_¨øy
;

622 
	eLogLevñ
 {

623 
	gLOGLEVEL_INFO
,

625 
	gLOGLEVEL_WARNING
,

629 
	gLOGLEVEL_ERROR
,

631 
	gLOGLEVEL_FATAL
,

636 #ifde‡
NDEBUG


637 
	gLOGLEVEL_DFATAL
 = 
LOGLEVEL_ERROR


639 
LOGLEVEL_DFATAL
 = 
LOGLEVEL_FATAL


643 
«me•a˚
 
	göã∫Æ
 {

645 
˛ass
 
	gLogFöishî
;

647 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gLogMesßge
 {

648 
	gpublic
:

649 
LogMesßge
(
LogLevñ
 
Àvñ
, c⁄° * 
fûíame
, 
löe
);

650 ~
LogMesßge
();

652 
	gLogMesßge
& 
	g›î©‹
<<(c⁄° 
	g°d
::
°rög
& 
vÆue
);

653 
	gLogMesßge
& 
	g›î©‹
<<(c⁄° * 
	gvÆue
);

654 
	gLogMesßge
& 
	g›î©‹
<<(
	gvÆue
);

655 
	gLogMesßge
& 
	g›î©‹
<<(
	gvÆue
);

656 
	gLogMesßge
& 
	g›î©‹
<<(
uöt
 
	gvÆue
);

657 
	gLogMesßge
& 
	g›î©‹
<<(
	gvÆue
);

658 
	gLogMesßge
& 
	g›î©‹
<<(
	gvÆue
);

659 
	gLogMesßge
& 
	g›î©‹
<<(
	gvÆue
);

661 
	g¥iv©e
:

662 
‰õnd
 
˛ass
 
LogFöishî
;

663 
Föish
();

665 
LogLevñ
 
	gÀvñ_
;

666 c⁄° * 
	gfûíame_
;

667 
	glöe_
;

668 
	g°d
::
°rög
 
mesßge_
;

673 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gLogFöishî
 {

674 
	gpublic
:

675 
›î©‹
=(
LogMesßge
& 
Ÿhî
);

684 #unde‡
GOOGLE_LOG


685 #unde‡
GOOGLE_LOG_IF


687 #unde‡
GOOGLE_CHECK


688 #unde‡
GOOGLE_CHECK_EQ


689 #unde‡
GOOGLE_CHECK_NE


690 #unde‡
GOOGLE_CHECK_LT


691 #unde‡
GOOGLE_CHECK_LE


692 #unde‡
GOOGLE_CHECK_GT


693 #unde‡
GOOGLE_CHECK_GE


694 #unde‡
GOOGLE_CHECK_NOTNULL


696 #unde‡
GOOGLE_DLOG


697 #unde‡
GOOGLE_DCHECK


698 #unde‡
GOOGLE_DCHECK_EQ


699 #unde‡
GOOGLE_DCHECK_NE


700 #unde‡
GOOGLE_DCHECK_LT


701 #unde‡
GOOGLE_DCHECK_LE


702 #unde‡
GOOGLE_DCHECK_GT


703 #unde‡
GOOGLE_DCHECK_GE


705 
	#GOOGLE_LOG
(
LEVEL
) \

706 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
	`LogFöishî
() = \

707 ::
googÀ
::
¥Ÿobuf
::
öã∫Æ
::
	`LogMesßge
( \

708 ::
googÀ
::
¥Ÿobuf
::
LOGLEVEL_
##
LEVEL
, 
__FILE__
, 
__LINE__
)

	)

709 
	#GOOGLE_LOG_IF
(
LEVEL
, 
CONDITION
) \

710 !(
CONDITION
Ë? ()0 : 
	`GOOGLE_LOG
(
LEVEL
)

	)

712 
	#GOOGLE_CHECK
(
EXPRESSION
) \

713 
	`GOOGLE_LOG_IF
(
FATAL
, !(
EXPRESSION
)Ë<< "CHECK faûed: " #EXPRESSION ": "

	)

714 
	#GOOGLE_CHECK_EQ
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË=(B))

	)

715 
	#GOOGLE_CHECK_NE
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË!(B))

	)

716 
	#GOOGLE_CHECK_LT
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË< (B))

	)

717 
	#GOOGLE_CHECK_LE
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË<(B))

	)

718 
	#GOOGLE_CHECK_GT
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË> (B))

	)

719 
	#GOOGLE_CHECK_GE
(
A
, 
B
Ë
	`GOOGLE_CHECK
((AË>(B))

	)

721 
«me•a˚
 
	göã∫Æ
 {

722 
	gãm∂©e
<
ty≥«me
 
	gT
>

723 
T
* 
CheckNŸNuŒ
(c⁄° *
fûe
, 
löe
, c⁄° *
«me
, T* 
vÆ
) {

724 i‡(
	gvÆ
 =
NULL
) {

725 
GOOGLE_LOG
(
FATAL
Ë<< 
«me
;

727  
	gvÆ
;

730 
	#GOOGLE_CHECK_NOTNULL
(
A
) \

731 
öã∫Æ
::
	`CheckNŸNuŒ
(
__FILE__
, 
__LINE__
, "'" #A "' mu°ÇŸ bêNULL", (
A
))

	)

733 #ifde‡
NDEBUG


735 
	#GOOGLE_DLOG
 
	`GOOGLE_LOG_IF
(
INFO
, 
Ál£
)

	)

737 
	#GOOGLE_DCHECK
(
EXPRESSION
Ë
Ál£
Ë
	`GOOGLE_CHECK
(EXPRESSION)

	)

738 
	#GOOGLE_DCHECK_EQ
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË=(B))

	)

739 
	#GOOGLE_DCHECK_NE
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË!(B))

	)

740 
	#GOOGLE_DCHECK_LT
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË< (B))

	)

741 
	#GOOGLE_DCHECK_LE
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË<(B))

	)

742 
	#GOOGLE_DCHECK_GT
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË> (B))

	)

743 
	#GOOGLE_DCHECK_GE
(
A
, 
B
Ë
	`GOOGLE_DCHECK
((AË>(B))

	)

747 
	#GOOGLE_DLOG
 
GOOGLE_LOG


	)

749 
	#GOOGLE_DCHECK
 
GOOGLE_CHECK


	)

750 
	#GOOGLE_DCHECK_EQ
 
GOOGLE_CHECK_EQ


	)

751 
	#GOOGLE_DCHECK_NE
 
GOOGLE_CHECK_NE


	)

752 
	#GOOGLE_DCHECK_LT
 
GOOGLE_CHECK_LT


	)

753 
	#GOOGLE_DCHECK_LE
 
GOOGLE_CHECK_LE


	)

754 
	#GOOGLE_DCHECK_GT
 
GOOGLE_CHECK_GT


	)

755 
	#GOOGLE_DCHECK_GE
 
GOOGLE_CHECK_GE


	)

759 
	tLogH™dÀr
(
	tLogLevñ
 
	tÀvñ
, c⁄° * 
	tfûíame
, 
	tlöe
,

760 c⁄° 
	t°d
::
	t°rög
& 
	tmesßge
);

775 
LIBPROTOBUF_EXPORT
 
LogH™dÀr
* 
SëLogH™dÀr
(LogH™dÀr* 
√w_func
);

784 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gLogSûí˚r
 {

785 
	gpublic
:

786 
LogSûí˚r
();

787 ~
LogSûí˚r
();

850 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gClosuª
 {

851 
	gpublic
:

852 
Closuª
() {}

853 
vútuÆ
 ~
Closuª
();

855 
vútuÆ
 
Run
() = 0;

857 
	g¥iv©e
:

858 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Closuª
);

861 
«me•a˚
 
	göã∫Æ
 {

863 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gFun˘i⁄Closuª0
 : 
public
 
Closuª
 {

864 
public
:

865 (*
Fun˘i⁄Ty≥
)();

867 
Fun˘i⁄Closuª0
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, 
boﬁ
 
£lf_dñëög
)

868 : 
fun˘i⁄_
(
fun˘i⁄
), 
£lf_dñëög_
(
£lf_dñëög
) {}

869 ~
Fun˘i⁄Closuª0
();

871 
Run
() {

872 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

873 
fun˘i⁄_
();

874 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

877 
	g¥iv©e
:

878 
Fun˘i⁄Ty≥
 
fun˘i⁄_
;

879 
boﬁ
 
	g£lf_dñëög_
;

882 
	gãm∂©e
 <
ty≥«me
 
	gCœss
>

883 ˛as†
	cMëhodClosuª0
 : 
public
 
Closuª
 {

884 
public
:

885 (
Cœss
::*
	tMëhodTy≥
)();

887 
MëhodClosuª0
(
Cœss
* 
obje˘
, 
MëhodTy≥
 
mëhod
, 
boﬁ
 
£lf_dñëög
)

888 : 
obje˘_
(
obje˘
), 
mëhod_
(
mëhod
), 
£lf_dñëög_
(
£lf_dñëög
) {}

889 ~
MëhodClosuª0
() {}

891 
Run
() {

892 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

893 (
	gobje˘_
->*
	gmëhod_
)();

894 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

897 
	g¥iv©e
:

898 
Cœss
* 
obje˘_
;

899 
MëhodTy≥
 
	gmëhod_
;

900 
boﬁ
 
	g£lf_dñëög_
;

903 
	gãm∂©e
 <
ty≥«me
 
	gArg1
>

904 ˛as†
	cFun˘i⁄Closuª1
 : 
public
 
Closuª
 {

905 
public
:

906 (*
Fun˘i⁄Ty≥
)(
	tArg1
 
	t¨g1
);

908 
Fun˘i⁄Closuª1
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, 
boﬁ
 
£lf_dñëög
,

909 
Arg1
 
¨g1
)

910 : 
fun˘i⁄_
(
fun˘i⁄
), 
£lf_dñëög_
(
£lf_dñëög
),

911 
¨g1_
(
¨g1
) {}

912 ~
Fun˘i⁄Closuª1
() {}

914 
Run
() {

915 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

916 
fun˘i⁄_
(
¨g1_
);

917 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

920 
	g¥iv©e
:

921 
Fun˘i⁄Ty≥
 
fun˘i⁄_
;

922 
boﬁ
 
	g£lf_dñëög_
;

923 
Arg1
 
	g¨g1_
;

926 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
>

927 ˛as†
	cMëhodClosuª1
 : 
public
 
Closuª
 {

928 
public
:

929 (
Cœss
::*
	tMëhodTy≥
)(
	tArg1
 
	t¨g1
);

931 
MëhodClosuª1
(
Cœss
* 
obje˘
, 
MëhodTy≥
 
mëhod
, 
boﬁ
 
£lf_dñëög
,

932 
Arg1
 
¨g1
)

933 : 
obje˘_
(
obje˘
), 
mëhod_
(
mëhod
), 
£lf_dñëög_
(
£lf_dñëög
),

934 
¨g1_
(
¨g1
) {}

935 ~
MëhodClosuª1
() {}

937 
Run
() {

938 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

939 (
	gobje˘_
->*
	gmëhod_
)(
	g¨g1_
);

940 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

943 
	g¥iv©e
:

944 
Cœss
* 
obje˘_
;

945 
MëhodTy≥
 
	gmëhod_
;

946 
boﬁ
 
	g£lf_dñëög_
;

947 
Arg1
 
	g¨g1_
;

950 
	gãm∂©e
 <
ty≥«me
 
	gArg1
,Åy≥«mê
	gArg2
>

951 ˛as†
	cFun˘i⁄Closuª2
 : 
public
 
Closuª
 {

952 
public
:

953 (*
Fun˘i⁄Ty≥
)(
	tArg1
 
	t¨g1
, 
	tArg2
 
	t¨g2
);

955 
Fun˘i⁄Closuª2
(
Fun˘i⁄Ty≥
 
fun˘i⁄
, 
boﬁ
 
£lf_dñëög
,

956 
Arg1
 
¨g1
, 
Arg2
 
¨g2
)

957 : 
fun˘i⁄_
(
fun˘i⁄
), 
£lf_dñëög_
(
£lf_dñëög
),

958 
¨g1_
(
¨g1
), 
¨g2_
(
¨g2
) {}

959 ~
Fun˘i⁄Closuª2
() {}

961 
Run
() {

962 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

963 
fun˘i⁄_
(
¨g1_
, 
¨g2_
);

964 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

967 
	g¥iv©e
:

968 
Fun˘i⁄Ty≥
 
fun˘i⁄_
;

969 
boﬁ
 
	g£lf_dñëög_
;

970 
Arg1
 
	g¨g1_
;

971 
Arg2
 
	g¨g2_
;

974 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
,Åy≥«mê
	gArg2
>

975 ˛as†
	cMëhodClosuª2
 : 
public
 
Closuª
 {

976 
public
:

977 (
Cœss
::*
	tMëhodTy≥
)(
	tArg1
 
	t¨g1
, 
	tArg2
 
	t¨g2
);

979 
MëhodClosuª2
(
Cœss
* 
obje˘
, 
MëhodTy≥
 
mëhod
, 
boﬁ
 
£lf_dñëög
,

980 
Arg1
 
¨g1
, 
Arg2
 
¨g2
)

981 : 
obje˘_
(
obje˘
), 
mëhod_
(
mëhod
), 
£lf_dñëög_
(
£lf_dñëög
),

982 
¨g1_
(
¨g1
), 
¨g2_
(
¨g2
) {}

983 ~
MëhodClosuª2
() {}

985 
Run
() {

986 
boﬁ
 
	g√eds_dñëe
 = 
£lf_dñëög_
;

987 (
	gobje˘_
->*
	gmëhod_
)(
	g¨g1_
, 
	g¨g2_
);

988 i‡(
	g√eds_dñëe
Ë
dñëe
 
	gthis
;

991 
	g¥iv©e
:

992 
Cœss
* 
obje˘_
;

993 
MëhodTy≥
 
	gmëhod_
;

994 
boﬁ
 
	g£lf_dñëög_
;

995 
Arg1
 
	g¨g1_
;

996 
Arg2
 
	g¨g2_
;

1002 
ölöe
 
Closuª
* 
NewCÆlback
((*
fun˘i⁄
)()) {

1003  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª0
(
fun˘i⁄
, 
åue
);

1007 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
((*
fun˘i⁄
)()) {

1008  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª0
(
fun˘i⁄
, 
Ál£
);

1012 
	gãm∂©e
 <
ty≥«me
 
	gCœss
>

1013 
ölöe
 
Closuª
* 
NewCÆlback
(
Cœss
* 
obje˘
, (Cœss::*
mëhod
)()) {

1014  
√w
 
öã∫Æ
::
MëhodClosuª0
<
Cœss
>(
obje˘
, 
	gmëhod
, 
	gåue
);

1018 
	gãm∂©e
 <
ty≥«me
 
	gCœss
>

1019 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
(
Cœss
* 
obje˘
, (Cœss::*
mëhod
)()) {

1020  
√w
 
öã∫Æ
::
MëhodClosuª0
<
Cœss
>(
obje˘
, 
	gmëhod
, 
	gÁl£
);

1024 
	gãm∂©e
 <
ty≥«me
 
	gArg1
>

1025 
ölöe
 
Closuª
* 
NewCÆlback
((*
fun˘i⁄
)(
Arg1
),

1026 
Arg1
 
¨g1
) {

1027  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª1
<
Arg1
>(
fun˘i⁄
, 
	gåue
, 
	g¨g1
);

1031 
	gãm∂©e
 <
ty≥«me
 
	gArg1
>

1032 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
((*
fun˘i⁄
)(
Arg1
),

1033 
Arg1
 
¨g1
) {

1034  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª1
<
Arg1
>(
fun˘i⁄
, 
	gÁl£
, 
	g¨g1
);

1038 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
>

1039 
ölöe
 
Closuª
* 
NewCÆlback
(
Cœss
* 
obje˘
, (Cœss::*
mëhod
)(
Arg1
),

1040 
Arg1
 
¨g1
) {

1041  
√w
 
	göã∫Æ
::
MëhodClosuª1
<
Cœss
, 
	gArg1
>(
	gobje˘
, 
	gmëhod
, 
	gåue
, 
	g¨g1
);

1045 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
>

1046 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
(
Cœss
* 
obje˘
, (Cœss::*
mëhod
)(
Arg1
),

1047 
Arg1
 
¨g1
) {

1048  
√w
 
	göã∫Æ
::
MëhodClosuª1
<
Cœss
, 
	gArg1
>(
	gobje˘
, 
	gmëhod
, 
	gÁl£
, 
	g¨g1
);

1052 
	gãm∂©e
 <
ty≥«me
 
	gArg1
,Åy≥«mê
	gArg2
>

1053 
ölöe
 
Closuª
* 
NewCÆlback
((*
fun˘i⁄
)(
Arg1
, 
Arg2
),

1054 
Arg1
 
¨g1
, 
Arg2
 
¨g2
) {

1055  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª2
<
Arg1
, 
	gArg2
>(

1056 
	gfun˘i⁄
, 
	gåue
, 
	g¨g1
, 
	g¨g2
);

1060 
	gãm∂©e
 <
ty≥«me
 
	gArg1
,Åy≥«mê
	gArg2
>

1061 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
((*
fun˘i⁄
)(
Arg1
, 
Arg2
),

1062 
Arg1
 
¨g1
, 
Arg2
 
¨g2
) {

1063  
√w
 
	göã∫Æ
::
Fun˘i⁄Closuª2
<
Arg1
, 
	gArg2
>(

1064 
	gfun˘i⁄
, 
	gÁl£
, 
	g¨g1
, 
	g¨g2
);

1068 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
,Åy≥«mê
	gArg2
>

1069 
ölöe
 
Closuª
* 
NewCÆlback
(
Cœss
* 
obje˘
, (Cœss::*
mëhod
)(
Arg1
, 
Arg2
),

1070 
Arg1
 
¨g1
, 
Arg2
 
¨g2
) {

1071  
√w
 
	göã∫Æ
::
MëhodClosuª2
<
Cœss
, 
	gArg1
, 
	gArg2
>(

1072 
	gobje˘
, 
	gmëhod
, 
	gåue
, 
	g¨g1
, 
	g¨g2
);

1076 
	gãm∂©e
 <
ty≥«me
 
	gCœss
,Åy≥«mê
	gArg1
,Åy≥«mê
	gArg2
>

1077 
ölöe
 
Closuª
* 
NewPîm™ítCÆlback
(

1078 
Cœss
* 
obje˘
, (Cœss::*
mëhod
)(
Arg1
, 
Arg2
),

1079 
Arg1
 
¨g1
, 
Arg2
 
¨g2
) {

1080  
√w
 
	göã∫Æ
::
MëhodClosuª2
<
Cœss
, 
	gArg1
, 
	gArg2
>(

1081 
	gobje˘
, 
	gmëhod
, 
	gÁl£
, 
	g¨g1
, 
	g¨g2
);

1086 
LIBPROTOBUF_EXPORT
 
DoNŸhög
();

1091 
«me•a˚
 
	göã∫Æ
 {

1096 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMuãx
 {

1097 
	gpublic
:

1099 
Muãx
();

1102 ~
Muãx
();

1105 
Lock
();

1108 
U∆ock
();

1112 
As£πHñd
();

1114 
	g¥iv©e
:

1115 
I¡î«l
;

1116 
I¡î«l
* 
	gmI¡î«l
;

1118 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Muãx
);

1122 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMuãxLock
 {

1123 
	gpublic
:

1124 
ex∂icô
 
MuãxLock
(
Muãx
 *
mu
Ë: 
mu_
(muË{ 
this
->mu_->
Lock
(); }

1125 ~
MuãxLock
(Ë{ 
	gthis
->
	gmu_
->
U∆ock
(); }

1126 
	g¥iv©e
:

1127 
Muãx
 *c⁄° 
mu_
;

1128 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
MuãxLock
);

1132 
MuãxLock
 
	tRódîMuãxLock
;

1133 
MuãxLock
 
	tWrôîMuãxLock
;

1136 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMuãxLockMaybe
 {

1137 
	gpublic
:

1138 
ex∂icô
 
MuãxLockMaybe
(
Muãx
 *
mu
) :

1139 
mu_
(
mu
Ë{ i‡(
this
->mu_ !
NULL
Ë{Åhis->mu_->
Lock
(); } }

1140 ~
MuãxLockMaybe
(Ë{ i‡(
	gthis
->
	gmu_
 !
NULL
Ë{ 
this
->
mu_
->
U∆ock
(); } }

1141 
	g¥iv©e
:

1142 
Muãx
 *c⁄° 
mu_
;

1143 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
MuãxLockMaybe
);

1150 
usög
 
	göã∫Æ
::
Muãx
;

1151 
usög
 
	göã∫Æ
::
MuãxLock
;

1152 
usög
 
	göã∫Æ
::
RódîMuãxLock
;

1153 
usög
 
	göã∫Æ
::
WrôîMuãxLock
;

1154 
usög
 
	göã∫Æ
::
MuãxLockMaybe
;

1159 
«me•a˚
 
	göã∫Æ
 {

1163 
LIBPROTOBUF_EXPORT
 
boﬁ
 
IsSåu˘uøŒyVÆidUTF8
(c⁄° * 
buf
, 
Àn
);

1169 
LIBPROTOBUF_EXPORT
 
uöt32
 
ght⁄l
(uöt32 
x
);

1187 
LIBPROTOBUF_EXPORT
 
ShutdownPrŸobufLibøry
();

1189 
«me•a˚
 
	göã∫Æ
 {

1192 
LIBPROTOBUF_EXPORT
 
OnShutdown
((*
func
)());

1196 #i‡
PROTOBUF_USE_EXCEPTIONS


1197 ˛as†
	cF©ÆEx˚±i⁄
 : 
public
 
°d
::
ex˚±i⁄
 {

1198 
public
:

1199 
F©ÆEx˚±i⁄
(c⁄° * 
fûíame
, 
löe
, c⁄° 
°d
::
°rög
& 
mesßge
)

1200 : 
fûíame_
(
fûíame
), 
löe_
(
löe
), 
mesßge_
(
mesßge
) {}

1201 
	gvútuÆ
 ~
F©ÆEx˚±i⁄
(Ë
throw
();

1203 
vútuÆ
 c⁄° * 
wh©
(Ëc⁄° 
throw
();

1205 c⁄° * 
fûíame
(Ëc⁄° {  
	gfûíame_
; }

1206 
löe
(Ëc⁄° {  
	glöe_
; }

1207 c⁄° 
	g°d
::
°rög
& 
mesßge
(Ëc⁄° {  
mesßge_
; }

1209 
	g¥iv©e
:

1210 c⁄° * 
fûíame_
;

1211 c⁄° 
	glöe_
;

1212 c⁄° 
	g°d
::
°rög
 
mesßge_
;

1218 
usög
 
«me•a˚
 
	g°d
;

	@/usr/include/iconv.h

19 #i‚de‡
_ICONV_H


20 
	#_ICONV_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
__BEGIN_DECLS


30 *
	tic⁄v_t
;

38 
ic⁄v_t
 
ic⁄v_›í
 (
__c⁄°
 *
__tocode
, __c⁄° *
__‰omcode
);

43 
size_t
 
ic⁄v
 (
ic⁄v_t
 
__cd
, **
__ª°ri˘
 
__öbuf
,

44 
size_t
 *
__ª°ri˘
 
__öbyã¶e·
,

45 **
__ª°ri˘
 
__outbuf
,

46 
size_t
 *
__ª°ri˘
 
__outbyã¶e·
);

52 
ic⁄v_˛o£
 (
ic⁄v_t
 
__cd
);

54 
	g__END_DECLS


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/libxml2/libxml/parser.h

10 #i‚de‡
__XML_PARSER_H__


11 
	#__XML_PARSER_H__


	)

13 
	~<°d¨g.h
>

15 
	~<libxml/xmlvîsi⁄.h
>

16 
	~<libxml/åì.h
>

17 
	~<libxml/di˘.h
>

18 
	~<libxml/hash.h
>

19 
	~<libxml/vÆid.h
>

20 
	~<libxml/ítôõs.h
>

21 
	~<libxml/xmÀº‹.h
>

22 
	~<libxml/xml°rög.h
>

24 #ifde‡
__˝lu•lus


33 
	#XML_DEFAULT_VERSION
 "1.0"

	)

52 (* 
xmlP¨£rI≈utDóŒoˇã
)(
	txmlCh¨
 *
	t°r
);

54 
	s_xmlP¨£rI≈ut
 {

56 
xmlP¨£rI≈utBuf„rPå
 
buf
;

58 c⁄° *
fûíame
;

59 c⁄° *
dúe˘‹y
;

60 c⁄° 
xmlCh¨
 *
ba£
;

61 c⁄° 
xmlCh¨
 *
cur
;

62 c⁄° 
xmlCh¨
 *
íd
;

63 
Àngth
;

64 
löe
;

65 
cﬁ
;

71 
c⁄sumed
;

72 
xmlP¨£rI≈utDóŒoˇã
 
‰ì
;

73 c⁄° 
xmlCh¨
 *
ícodög
;

74 c⁄° 
xmlCh¨
 *
vîsi⁄
;

75 
°™dÆ⁄e
;

76 
id
;

86 
_xmlP¨£rNodeInfo
 
	txmlP¨£rNodeInfo
;

87 
xmlP¨£rNodeInfo
 *
	txmlP¨£rNodeInfoPå
;

89 
	s_xmlP¨£rNodeInfo
 {

90 c⁄° 
_xmlNode
* 
node
;

92 
begö_pos
;

93 
begö_löe
;

94 
íd_pos
;

95 
íd_löe
;

98 
_xmlP¨£rNodeInfoSeq
 
	txmlP¨£rNodeInfoSeq
;

99 
xmlP¨£rNodeInfoSeq
 *
	txmlP¨£rNodeInfoSeqPå
;

100 
	s_xmlP¨£rNodeInfoSeq
 {

101 
maximum
;

102 
Àngth
;

103 
xmlP¨£rNodeInfo
* 
buf„r
;

113 
XML_PARSER_EOF
 = -1,

114 
XML_PARSER_START
 = 0,

115 
XML_PARSER_MISC
,

116 
XML_PARSER_PI
,

117 
XML_PARSER_DTD
,

118 
XML_PARSER_PROLOG
,

119 
XML_PARSER_COMMENT
,

120 
XML_PARSER_START_TAG
,

121 
XML_PARSER_CONTENT
,

122 
XML_PARSER_CDATA_SECTION
,

123 
XML_PARSER_END_TAG
,

124 
XML_PARSER_ENTITY_DECL
,

125 
XML_PARSER_ENTITY_VALUE
,

126 
XML_PARSER_ATTRIBUTE_VALUE
,

127 
XML_PARSER_SYSTEM_LITERAL
,

128 
XML_PARSER_EPILOG
,

129 
XML_PARSER_IGNORE
,

130 
XML_PARSER_PUBLIC_LITERAL


131 } 
	txmlP¨£rI≈utSèã
;

139 
	#XML_DETECT_IDS
 2

	)

148 
	#XML_COMPLETE_ATTRS
 4

	)

156 
	#XML_SKIP_IDS
 8

	)

164 
XML_PARSE_UNKNOWN
 = 0,

165 
XML_PARSE_DOM
 = 1,

166 
XML_PARSE_SAX
 = 2,

167 
XML_PARSE_PUSH_DOM
 = 3,

168 
XML_PARSE_PUSH_SAX
 = 4,

169 
XML_PARSE_READER
 = 5

170 } 
	txmlP¨£rMode
;

184 
	s_xmlP¨£rCtxt
 {

185 
_xmlSAXH™dÀr
 *
ßx
;

186 *
u£rD©a
;

187 
xmlDocPå
 
myDoc
;

188 
wñlF‹med
;

189 
ª∂a˚E¡ôõs
;

190 c⁄° 
xmlCh¨
 *
vîsi⁄
;

191 c⁄° 
xmlCh¨
 *
ícodög
;

192 
°™dÆ⁄e
;

193 
html
;

196 
xmlP¨£rI≈utPå
 
öput
;

197 
öputNr
;

198 
öputMax
;

199 
xmlP¨£rI≈utPå
 *
öputTab
;

202 
xmlNodePå
 
node
;

203 
nodeNr
;

204 
nodeMax
;

205 
xmlNodePå
 *
nodeTab
;

207 
ªc‹d_öfo
;

208 
xmlP¨£rNodeInfoSeq
 
node_£q
;

210 
îrNo
;

212 
hasExã∫ÆSub£t
;

213 
hasPEªfs
;

214 
exã∫Æ
;

216 
vÆid
;

217 
vÆid©e
;

218 
xmlVÆidCtxt
 
v˘xt
;

220 
xmlP¨£rI≈utSèã
 
ö°©e
;

221 
tokí
;

223 *
dúe˘‹y
;

226 c⁄° 
xmlCh¨
 *
«me
;

227 
«meNr
;

228 
«meMax
;

229 c⁄° 
xmlCh¨
 * *
«meTab
;

231 
nbCh¨s
;

232 
checkIndex
;

233 
kìpBœnks
;

234 
dißbÀSAX
;

235 
öSub£t
;

236 c⁄° 
xmlCh¨
 * 
ötSubName
;

237 
xmlCh¨
 * 
extSubURI
;

238 
xmlCh¨
 * 
extSubSy°em
;

241 * 
•a˚
;

242 
•a˚Nr
;

243 
•a˚Max
;

244 * 
•a˚Tab
;

246 
dïth
;

247 
xmlP¨£rI≈utPå
 
ítôy
;

248 
ch¨£t
;

250 
nodñí
;

251 
nodemem
;

252 
≥d™tic
;

253 *
_¥iv©e
;

255 
lﬂdsub£t
;

256 
löíumbîs
;

257 *
ˇèlogs
;

258 
ªcovîy
;

259 
¥ogªssive
;

260 
xmlDi˘På
 
di˘
;

261 c⁄° 
xmlCh¨
 * *
©ts
;

262 
max©ts
;

263 
docdi˘
;

268 c⁄° 
xmlCh¨
 *
°r_xml
;

269 c⁄° 
xmlCh¨
 *
°r_xm s
;

270 c⁄° 
xmlCh¨
 *
°r_xml_ns
;

275 
ßx2
;

276 
nsNr
;

277 
nsMax
;

278 c⁄° 
xmlCh¨
 * *
nsTab
;

279 *
©èŒocs
;

280 * *
pushTab
;

281 
xmlHashTabÀPå
 
©tsDeÁu…
;

282 
xmlHashTabÀPå
 
©tsS≥cül
;

283 
nsWñlF‹med
;

284 
›ti⁄s
;

289 
di˘Names
;

290 
‰ìEÀmsNr
;

291 
xmlNodePå
 
‰ìEÀms
;

292 
‰ìAârsNr
;

293 
xmlAârPå
 
‰ìAârs
;

298 
xmlEº‹
 
œ°Eº‹
;

299 
xmlP¨£rMode
 
∑r£Mode
;

300 
nbítôõs
;

301 
sizì¡ôõs
;

309 
	s_xmlSAXLoˇt‹
 {

310 c⁄° 
xmlCh¨
 *(*
gëPublicId
)(*
˘x
);

311 c⁄° 
xmlCh¨
 *(*
gëSy°emId
)(*
˘x
);

312 (*
gëLöeNumbî
)(*
˘x
);

313 (*
gëCﬁumnNumbî
)(*
˘x
);

338 
xmlP¨£rI≈utPå
 (*
	tªsﬁveE¡ôySAXFunc
Ë(*
	t˘x
,

339 c⁄° 
	txmlCh¨
 *
	tpublicId
,

340 c⁄° 
	txmlCh¨
 *
	tsy°emId
);

350 (*
öã∫ÆSub£tSAXFunc
Ë(*
	t˘x
,

351 c⁄° 
	txmlCh¨
 *
	t«me
,

352 c⁄° 
	txmlCh¨
 *
	tExã∫ÆID
,

353 c⁄° 
	txmlCh¨
 *
	tSy°emID
);

363 (*
exã∫ÆSub£tSAXFunc
Ë(*
	t˘x
,

364 c⁄° 
	txmlCh¨
 *
	t«me
,

365 c⁄° 
	txmlCh¨
 *
	tExã∫ÆID
,

366 c⁄° 
	txmlCh¨
 *
	tSy°emID
);

376 
xmlE¡ôyPå
 (*
	tgëE¡ôySAXFunc
Ë(*
	t˘x
,

377 c⁄° 
	txmlCh¨
 *
	t«me
);

387 
xmlE¡ôyPå
 (*
	tgëP¨amëîE¡ôySAXFunc
Ë(*
	t˘x
,

388 c⁄° 
	txmlCh¨
 *
	t«me
);

400 (*
ítôyDe˛SAXFunc
Ë(*
	t˘x
,

401 c⁄° 
	txmlCh¨
 *
	t«me
,

402 
	tty≥
,

403 c⁄° 
	txmlCh¨
 *
	tpublicId
,

404 c⁄° 
	txmlCh¨
 *
	tsy°emId
,

405 
	txmlCh¨
 *
	tc⁄ã¡
);

415 (*
nŸ©i⁄De˛SAXFunc
)(*
	t˘x
,

416 c⁄° 
	txmlCh¨
 *
	t«me
,

417 c⁄° 
	txmlCh¨
 *
	tpublicId
,

418 c⁄° 
	txmlCh¨
 *
	tsy°emId
);

431 (*
©åibuãDe˛SAXFunc
)(*
	t˘x
,

432 c⁄° 
	txmlCh¨
 *
	tñem
,

433 c⁄° 
	txmlCh¨
 *
	tfuŒ«me
,

434 
	tty≥
,

435 
	tdef
,

436 c⁄° 
	txmlCh¨
 *
	tdeÁu…VÆue
,

437 
	txmlEnumî©i⁄På
 
	tåì
);

447 (*
ñemítDe˛SAXFunc
)(*
	t˘x
,

448 c⁄° 
	txmlCh¨
 *
	t«me
,

449 
	tty≥
,

450 
	txmlEÀmítC⁄ã¡På
 
	tc⁄ã¡
);

461 (*
u≈¨£dE¡ôyDe˛SAXFunc
)(*
	t˘x
,

462 c⁄° 
	txmlCh¨
 *
	t«me
,

463 c⁄° 
	txmlCh¨
 *
	tpublicId
,

464 c⁄° 
	txmlCh¨
 *
	tsy°emId
,

465 c⁄° 
	txmlCh¨
 *
	tnŸ©i⁄Name
);

474 (*
£tDocumítLoˇt‹SAXFunc
Ë(*
	t˘x
,

475 
	txmlSAXLoˇt‹På
 
	tloc
);

482 (*
°¨tDocumítSAXFunc
Ë(*
	t˘x
);

489 (*
ídDocumítSAXFunc
Ë(*
	t˘x
);

498 (*
°¨tEÀmítSAXFunc
Ë(*
	t˘x
,

499 c⁄° 
	txmlCh¨
 *
	t«me
,

500 c⁄° 
	txmlCh¨
 **
	t©ts
);

508 (*
ídEÀmítSAXFunc
Ë(*
	t˘x
,

509 c⁄° 
	txmlCh¨
 *
	t«me
);

521 (*
©åibuãSAXFunc
Ë(*
	t˘x
,

522 c⁄° 
	txmlCh¨
 *
	t«me
,

523 c⁄° 
	txmlCh¨
 *
	tvÆue
);

531 (*
ª„ªn˚SAXFunc
Ë(*
	t˘x
,

532 c⁄° 
	txmlCh¨
 *
	t«me
);

541 (*
ch¨a˘îsSAXFunc
Ë(*
	t˘x
,

542 c⁄° 
	txmlCh¨
 *
	tch
,

543 
	tÀn
);

553 (*
ign‹abÀWhôe•a˚SAXFunc
Ë(*
	t˘x
,

554 c⁄° 
	txmlCh¨
 *
	tch
,

555 
	tÀn
);

564 (*
¥o˚ssögIn°ru˘i⁄SAXFunc
Ë(*
	t˘x
,

565 c⁄° 
	txmlCh¨
 *
	tèrgë
,

566 c⁄° 
	txmlCh¨
 *
	td©a
);

574 (*
commítSAXFunc
Ë(*
	t˘x
,

575 c⁄° 
	txmlCh¨
 *
	tvÆue
);

584 (*
cd©aBlockSAXFunc
) (

585 *
	t˘x
,

586 c⁄° 
	txmlCh¨
 *
	tvÆue
,

587 
	tÀn
);

596 (
XMLCDECL
 *
	tw¨nögSAXFunc
Ë(*
	t˘x
,

597 c⁄° *
	tmsg
, ...);

606 (
XMLCDECL
 *
	tîr‹SAXFunc
Ë(*
	t˘x
,

607 c⁄° *
	tmsg
, ...);

618 (
XMLCDECL
 *
	tÁèlEº‹SAXFunc
Ë(*
	t˘x
,

619 c⁄° *
	tmsg
, ...);

628 (*
isSèndÆ⁄eSAXFunc
Ë(*
	t˘x
);

637 (*
hasI¡î«lSub£tSAXFunc
Ë(*
	t˘x
);

647 (*
hasExã∫ÆSub£tSAXFunc
Ë(*
	t˘x
);

659 
	#XML_SAX2_MAGIC
 0xDEEDBEAF

	)

680 (*
°¨tEÀmítNsSAX2Func
Ë(*
	t˘x
,

681 c⁄° 
	txmlCh¨
 *
	tloˇ ame
,

682 c⁄° 
	txmlCh¨
 *
	t¥efix
,

683 c⁄° 
	txmlCh¨
 *
	tURI
,

684 
	tnb_«me•a˚s
,

685 c⁄° 
	txmlCh¨
 **
	t«me•a˚s
,

686 
	tnb_©åibuãs
,

687 
	tnb_deÁu…ed
,

688 c⁄° 
	txmlCh¨
 **
	t©åibuãs
);

701 (*
ídEÀmítNsSAX2Func
Ë(*
	t˘x
,

702 c⁄° 
	txmlCh¨
 *
	tloˇ ame
,

703 c⁄° 
	txmlCh¨
 *
	t¥efix
,

704 c⁄° 
	txmlCh¨
 *
	tURI
);

707 
	s_xmlSAXH™dÀr
 {

708 
öã∫ÆSub£tSAXFunc
 
öã∫ÆSub£t
;

709 
isSèndÆ⁄eSAXFunc
 
isSèndÆ⁄e
;

710 
hasI¡î«lSub£tSAXFunc
 
hasI¡î«lSub£t
;

711 
hasExã∫ÆSub£tSAXFunc
 
hasExã∫ÆSub£t
;

712 
ªsﬁveE¡ôySAXFunc
 
ªsﬁveE¡ôy
;

713 
gëE¡ôySAXFunc
 
gëE¡ôy
;

714 
ítôyDe˛SAXFunc
 
ítôyDe˛
;

715 
nŸ©i⁄De˛SAXFunc
 
nŸ©i⁄De˛
;

716 
©åibuãDe˛SAXFunc
 
©åibuãDe˛
;

717 
ñemítDe˛SAXFunc
 
ñemítDe˛
;

718 
u≈¨£dE¡ôyDe˛SAXFunc
 
u≈¨£dE¡ôyDe˛
;

719 
£tDocumítLoˇt‹SAXFunc
 
£tDocumítLoˇt‹
;

720 
°¨tDocumítSAXFunc
 
°¨tDocumít
;

721 
ídDocumítSAXFunc
 
ídDocumít
;

722 
°¨tEÀmítSAXFunc
 
°¨tEÀmít
;

723 
ídEÀmítSAXFunc
 
ídEÀmít
;

724 
ª„ªn˚SAXFunc
 
ª„ªn˚
;

725 
ch¨a˘îsSAXFunc
 
ch¨a˘îs
;

726 
ign‹abÀWhôe•a˚SAXFunc
 
ign‹abÀWhôe•a˚
;

727 
¥o˚ssögIn°ru˘i⁄SAXFunc
 
¥o˚ssögIn°ru˘i⁄
;

728 
commítSAXFunc
 
commít
;

729 
w¨nögSAXFunc
 
w¨nög
;

730 
îr‹SAXFunc
 
îr‹
;

731 
ÁèlEº‹SAXFunc
 
ÁèlEº‹
;

732 
gëP¨amëîE¡ôySAXFunc
 
gëP¨amëîE¡ôy
;

733 
cd©aBlockSAXFunc
 
cd©aBlock
;

734 
exã∫ÆSub£tSAXFunc
 
exã∫ÆSub£t
;

735 
öôülized
;

737 *
_¥iv©e
;

738 
°¨tEÀmítNsSAX2Func
 
°¨tEÀmítNs
;

739 
ídEÀmítNsSAX2Func
 
ídEÀmítNs
;

740 
xmlSåu˘uªdEº‹Func
 
£º‹
;

746 
_xmlSAXH™dÀrV1
 
	txmlSAXH™dÀrV1
;

747 
xmlSAXH™dÀrV1
 *
	txmlSAXH™dÀrV1På
;

748 
	s_xmlSAXH™dÀrV1
 {

749 
öã∫ÆSub£tSAXFunc
 
öã∫ÆSub£t
;

750 
isSèndÆ⁄eSAXFunc
 
isSèndÆ⁄e
;

751 
hasI¡î«lSub£tSAXFunc
 
hasI¡î«lSub£t
;

752 
hasExã∫ÆSub£tSAXFunc
 
hasExã∫ÆSub£t
;

753 
ªsﬁveE¡ôySAXFunc
 
ªsﬁveE¡ôy
;

754 
gëE¡ôySAXFunc
 
gëE¡ôy
;

755 
ítôyDe˛SAXFunc
 
ítôyDe˛
;

756 
nŸ©i⁄De˛SAXFunc
 
nŸ©i⁄De˛
;

757 
©åibuãDe˛SAXFunc
 
©åibuãDe˛
;

758 
ñemítDe˛SAXFunc
 
ñemítDe˛
;

759 
u≈¨£dE¡ôyDe˛SAXFunc
 
u≈¨£dE¡ôyDe˛
;

760 
£tDocumítLoˇt‹SAXFunc
 
£tDocumítLoˇt‹
;

761 
°¨tDocumítSAXFunc
 
°¨tDocumít
;

762 
ídDocumítSAXFunc
 
ídDocumít
;

763 
°¨tEÀmítSAXFunc
 
°¨tEÀmít
;

764 
ídEÀmítSAXFunc
 
ídEÀmít
;

765 
ª„ªn˚SAXFunc
 
ª„ªn˚
;

766 
ch¨a˘îsSAXFunc
 
ch¨a˘îs
;

767 
ign‹abÀWhôe•a˚SAXFunc
 
ign‹abÀWhôe•a˚
;

768 
¥o˚ssögIn°ru˘i⁄SAXFunc
 
¥o˚ssögIn°ru˘i⁄
;

769 
commítSAXFunc
 
commít
;

770 
w¨nögSAXFunc
 
w¨nög
;

771 
îr‹SAXFunc
 
îr‹
;

772 
ÁèlEº‹SAXFunc
 
ÁèlEº‹
;

773 
gëP¨amëîE¡ôySAXFunc
 
gëP¨amëîE¡ôy
;

774 
cd©aBlockSAXFunc
 
cd©aBlock
;

775 
exã∫ÆSub£tSAXFunc
 
exã∫ÆSub£t
;

776 
öôülized
;

790 
xmlP¨£rI≈utPå
 (*
	txmlExã∫ÆE¡ôyLﬂdî
Ë(c⁄° *
	tURL
,

791 c⁄° *
	tID
,

792 
	txmlP¨£rCtxtPå
 
	tc⁄ãxt
);

794 #ifde‡
__˝lu•lus


798 
	~<libxml/ícodög.h
>

799 
	~<libxml/xmlIO.h
>

800 
	~<libxml/globÆs.h
>

802 #ifde‡
__˝lu•lus


810 
XMLPUBFUN
 
XMLCALL


811 
xmlInôP¨£r
 ();

812 
XMLPUBFUN
 
XMLCALL


813 
xmlCÀ™upP¨£r
 ();

818 
XMLPUBFUN
 
XMLCALL


819 
xmlP¨£rI≈utRód
 (
xmlP¨£rI≈utPå
 
ö
,

820 
Àn
);

821 
XMLPUBFUN
 
XMLCALL


822 
xmlP¨£rI≈utGrow
 (
xmlP¨£rI≈utPå
 
ö
,

823 
Àn
);

828 #ifde‡
LIBXML_SAX1_ENABLED


829 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


830 
xmlP¨£Doc
 (c⁄° 
xmlCh¨
 *
cur
);

831 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


832 
xmlP¨£Fûe
 (c⁄° *
fûíame
);

833 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


834 
xmlP¨£Mem‹y
 (c⁄° *
buf„r
,

835 
size
);

837 
XMLPUBFUN
 
XMLCALL


838 
xmlSub°ôuãE¡ôõsDeÁu…
(
vÆ
);

839 
XMLPUBFUN
 
XMLCALL


840 
xmlKìpBœnksDeÁu…
 (
vÆ
);

841 
XMLPUBFUN
 
XMLCALL


842 
xmlSt›P¨£r
 (
xmlP¨£rCtxtPå
 
˘xt
);

843 
XMLPUBFUN
 
XMLCALL


844 
xmlPed™ticP¨£rDeÁu…
(
vÆ
);

845 
XMLPUBFUN
 
XMLCALL


846 
xmlLöeNumbîsDeÁu…
 (
vÆ
);

848 #ifde‡
LIBXML_SAX1_ENABLED


852 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


853 
xmlRecovîDoc
 (
xmlCh¨
 *
cur
);

854 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


855 
xmlRecovîMem‹y
 (c⁄° *
buf„r
,

856 
size
);

857 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


858 
xmlRecovîFûe
 (c⁄° *
fûíame
);

864 
XMLPUBFUN
 
XMLCALL


865 
xmlP¨£Documít
 (
xmlP¨£rCtxtPå
 
˘xt
);

866 
XMLPUBFUN
 
XMLCALL


867 
xmlP¨£ExtP¨£dE¡
 (
xmlP¨£rCtxtPå
 
˘xt
);

868 #ifde‡
LIBXML_SAX1_ENABLED


869 
XMLPUBFUN
 
XMLCALL


870 
xmlSAXU£rP¨£Fûe
 (
xmlSAXH™dÀrPå
 
ßx
,

871 *
u£r_d©a
,

872 c⁄° *
fûíame
);

873 
XMLPUBFUN
 
XMLCALL


874 
xmlSAXU£rP¨£Mem‹y
 (
xmlSAXH™dÀrPå
 
ßx
,

875 *
u£r_d©a
,

876 c⁄° *
buf„r
,

877 
size
);

878 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


879 
xmlSAXP¨£Doc
 (
xmlSAXH™dÀrPå
 
ßx
,

880 c⁄° 
xmlCh¨
 *
cur
,

881 
ªcovîy
);

882 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


883 
xmlSAXP¨£Mem‹y
 (
xmlSAXH™dÀrPå
 
ßx
,

884 c⁄° *
buf„r
,

885 
size
,

886 
ªcovîy
);

887 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


888 
xmlSAXP¨£Mem‹yWôhD©a
 (
xmlSAXH™dÀrPå
 
ßx
,

889 c⁄° *
buf„r
,

890 
size
,

891 
ªcovîy
,

892 *
d©a
);

893 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


894 
xmlSAXP¨£Fûe
 (
xmlSAXH™dÀrPå
 
ßx
,

895 c⁄° *
fûíame
,

896 
ªcovîy
);

897 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


898 
xmlSAXP¨£FûeWôhD©a
 (
xmlSAXH™dÀrPå
 
ßx
,

899 c⁄° *
fûíame
,

900 
ªcovîy
,

901 *
d©a
);

902 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


903 
xmlSAXP¨£E¡ôy
 (
xmlSAXH™dÀrPå
 
ßx
,

904 c⁄° *
fûíame
);

905 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


906 
xmlP¨£E¡ôy
 (c⁄° *
fûíame
);

909 #ifde‡
LIBXML_VALID_ENABLED


910 
XMLPUBFUN
 
xmlDtdPå
 
XMLCALL


911 
xmlSAXP¨£DTD
 (
xmlSAXH™dÀrPå
 
ßx
,

912 c⁄° 
xmlCh¨
 *
Exã∫ÆID
,

913 c⁄° 
xmlCh¨
 *
Sy°emID
);

914 
XMLPUBFUN
 
xmlDtdPå
 
XMLCALL


915 
xmlP¨£DTD
 (c⁄° 
xmlCh¨
 *
Exã∫ÆID
,

916 c⁄° 
xmlCh¨
 *
Sy°emID
);

917 
XMLPUBFUN
 
xmlDtdPå
 
XMLCALL


918 
xmlIOP¨£DTD
 (
xmlSAXH™dÀrPå
 
ßx
,

919 
xmlP¨£rI≈utBuf„rPå
 
öput
,

920 
xmlCh¨Encodög
 
íc
);

922 #ifde‡
LIBXML_SAX1_ENABLED


923 
XMLPUBFUN
 
XMLCALL


924 
xmlP¨£BÆ™˚dChunkMem‹y
(
xmlDocPå
 
doc
,

925 
xmlSAXH™dÀrPå
 
ßx
,

926 *
u£r_d©a
,

927 
dïth
,

928 c⁄° 
xmlCh¨
 *
°rög
,

929 
xmlNodePå
 *
l°
);

931 
XMLPUBFUN
 
xmlP¨£rEº‹s
 
XMLCALL


932 
xmlP¨£InNodeC⁄ãxt
 (
xmlNodePå
 
node
,

933 c⁄° *
d©a
,

934 
d©Æí
,

935 
›ti⁄s
,

936 
xmlNodePå
 *
l°
);

937 #ifde‡
LIBXML_SAX1_ENABLED


938 
XMLPUBFUN
 
XMLCALL


939 
xmlP¨£BÆ™˚dChunkMem‹yRecovî
(
xmlDocPå
 
doc
,

940 
xmlSAXH™dÀrPå
 
ßx
,

941 *
u£r_d©a
,

942 
dïth
,

943 c⁄° 
xmlCh¨
 *
°rög
,

944 
xmlNodePå
 *
l°
,

945 
ªcovî
);

946 
XMLPUBFUN
 
XMLCALL


947 
xmlP¨£Exã∫ÆE¡ôy
 (
xmlDocPå
 
doc
,

948 
xmlSAXH™dÀrPå
 
ßx
,

949 *
u£r_d©a
,

950 
dïth
,

951 c⁄° 
xmlCh¨
 *
URL
,

952 c⁄° 
xmlCh¨
 *
ID
,

953 
xmlNodePå
 *
l°
);

955 
XMLPUBFUN
 
XMLCALL


956 
xmlP¨£CtxtExã∫ÆE¡ôy
(
xmlP¨£rCtxtPå
 
˘x
,

957 c⁄° 
xmlCh¨
 *
URL
,

958 c⁄° 
xmlCh¨
 *
ID
,

959 
xmlNodePå
 *
l°
);

964 
XMLPUBFUN
 
xmlP¨£rCtxtPå
 
XMLCALL


965 
xmlNewP¨£rCtxt
 ();

966 
XMLPUBFUN
 
XMLCALL


967 
xmlInôP¨£rCtxt
 (
xmlP¨£rCtxtPå
 
˘xt
);

968 
XMLPUBFUN
 
XMLCALL


969 
xmlCÀ¨P¨£rCtxt
 (
xmlP¨£rCtxtPå
 
˘xt
);

970 
XMLPUBFUN
 
XMLCALL


971 
xmlFªeP¨£rCtxt
 (
xmlP¨£rCtxtPå
 
˘xt
);

972 #ifde‡
LIBXML_SAX1_ENABLED


973 
XMLPUBFUN
 
XMLCALL


974 
xmlSëupP¨£rF‹Buf„r
 (
xmlP¨£rCtxtPå
 
˘xt
,

975 c⁄° 
xmlCh¨
* 
buf„r
,

976 c⁄° *
fûíame
);

978 
XMLPUBFUN
 
xmlP¨£rCtxtPå
 
XMLCALL


979 
xmlCª©eDocP¨£rCtxt
 (c⁄° 
xmlCh¨
 *
cur
);

981 #ifde‡
LIBXML_LEGACY_ENABLED


985 
XMLPUBFUN
 
XMLCALL


986 
xmlGëFótuªsLi°
 (*
Àn
,

987 c⁄° **
ªsu…
);

988 
XMLPUBFUN
 
XMLCALL


989 
xmlGëFótuª
 (
xmlP¨£rCtxtPå
 
˘xt
,

990 c⁄° *
«me
,

991 *
ªsu…
);

992 
XMLPUBFUN
 
XMLCALL


993 
xmlSëFótuª
 (
xmlP¨£rCtxtPå
 
˘xt
,

994 c⁄° *
«me
,

995 *
vÆue
);

998 #ifde‡
LIBXML_PUSH_ENABLED


1002 
XMLPUBFUN
 
xmlP¨£rCtxtPå
 
XMLCALL


1003 
xmlCª©ePushP¨£rCtxt
(
xmlSAXH™dÀrPå
 
ßx
,

1004 *
u£r_d©a
,

1005 c⁄° *
chunk
,

1006 
size
,

1007 c⁄° *
fûíame
);

1008 
XMLPUBFUN
 
XMLCALL


1009 
xmlP¨£Chunk
 (
xmlP¨£rCtxtPå
 
˘xt
,

1010 c⁄° *
chunk
,

1011 
size
,

1012 
ãrmö©e
);

1019 
XMLPUBFUN
 
xmlP¨£rCtxtPå
 
XMLCALL


1020 
xmlCª©eIOP¨£rCtxt
 (
xmlSAXH™dÀrPå
 
ßx
,

1021 *
u£r_d©a
,

1022 
xmlI≈utRódCÆlback
 
i‹ód
,

1023 
xmlI≈utClo£CÆlback
 
io˛o£
,

1024 *
io˘x
,

1025 
xmlCh¨Encodög
 
íc
);

1027 
XMLPUBFUN
 
xmlP¨£rI≈utPå
 
XMLCALL


1028 
xmlNewIOI≈utSåóm
 (
xmlP¨£rCtxtPå
 
˘xt
,

1029 
xmlP¨£rI≈utBuf„rPå
 
öput
,

1030 
xmlCh¨Encodög
 
íc
);

1035 
XMLPUBFUN
 c⁄° 
xmlP¨£rNodeInfo
* 
XMLCALL


1036 
xmlP¨£rFödNodeInfo
 (c⁄° 
xmlP¨£rCtxtPå
 
˘xt
,

1037 c⁄° 
xmlNodePå
 
node
);

1038 
XMLPUBFUN
 
XMLCALL


1039 
xmlInôNodeInfoSeq
 (
xmlP¨£rNodeInfoSeqPå
 
£q
);

1040 
XMLPUBFUN
 
XMLCALL


1041 
xmlCÀ¨NodeInfoSeq
 (
xmlP¨£rNodeInfoSeqPå
 
£q
);

1042 
XMLPUBFUN
 
XMLCALL


1043 
xmlP¨£rFödNodeInfoIndex
(c⁄° 
xmlP¨£rNodeInfoSeqPå
 
£q
,

1044 c⁄° 
xmlNodePå
 
node
);

1045 
XMLPUBFUN
 
XMLCALL


1046 
xmlP¨£rAddNodeInfo
 (
xmlP¨£rCtxtPå
 
˘xt
,

1047 c⁄° 
xmlP¨£rNodeInfoPå
 
öfo
);

1053 
XMLPUBFUN
 
XMLCALL


1054 
xmlSëExã∫ÆE¡ôyLﬂdî
(
xmlExã∫ÆE¡ôyLﬂdî
 
f
);

1055 
XMLPUBFUN
 
xmlExã∫ÆE¡ôyLﬂdî
 
XMLCALL


1056 
xmlGëExã∫ÆE¡ôyLﬂdî
();

1057 
XMLPUBFUN
 
xmlP¨£rI≈utPå
 
XMLCALL


1058 
xmlLﬂdExã∫ÆE¡ôy
 (c⁄° *
URL
,

1059 c⁄° *
ID
,

1060 
xmlP¨£rCtxtPå
 
˘xt
);

1065 
XMLPUBFUN
 
XMLCALL


1066 
xmlByãC⁄sumed
 (
xmlP¨£rCtxtPå
 
˘xt
);

1078 
XML_PARSE_RECOVER
 = 1<<0,

1079 
XML_PARSE_NOENT
 = 1<<1,

1080 
XML_PARSE_DTDLOAD
 = 1<<2,

1081 
XML_PARSE_DTDATTR
 = 1<<3,

1082 
XML_PARSE_DTDVALID
 = 1<<4,

1083 
XML_PARSE_NOERROR
 = 1<<5,

1084 
XML_PARSE_NOWARNING
 = 1<<6,

1085 
XML_PARSE_PEDANTIC
 = 1<<7,

1086 
XML_PARSE_NOBLANKS
 = 1<<8,

1087 
XML_PARSE_SAX1
 = 1<<9,

1088 
XML_PARSE_XINCLUDE
 = 1<<10,

1089 
XML_PARSE_NONET
 = 1<<11,

1090 
XML_PARSE_NODICT
 = 1<<12,

1091 
XML_PARSE_NSCLEAN
 = 1<<13,

1092 
XML_PARSE_NOCDATA
 = 1<<14,

1093 
XML_PARSE_NOXINCNODE
= 1<<15,

1094 
XML_PARSE_COMPACT
 = 1<<16

1097 } 
	txmlP¨£rO±i⁄
;

1099 
XMLPUBFUN
 
XMLCALL


1100 
xmlCtxtRe£t
 (
xmlP¨£rCtxtPå
 
˘xt
);

1101 
XMLPUBFUN
 
XMLCALL


1102 
xmlCtxtRe£tPush
 (
xmlP¨£rCtxtPå
 
˘xt
,

1103 c⁄° *
chunk
,

1104 
size
,

1105 c⁄° *
fûíame
,

1106 c⁄° *
ícodög
);

1107 
XMLPUBFUN
 
XMLCALL


1108 
xmlCtxtU£O±i⁄s
 (
xmlP¨£rCtxtPå
 
˘xt
,

1109 
›ti⁄s
);

1110 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1111 
xmlRódDoc
 (c⁄° 
xmlCh¨
 *
cur
,

1112 c⁄° *
URL
,

1113 c⁄° *
ícodög
,

1114 
›ti⁄s
);

1115 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1116 
xmlRódFûe
 (c⁄° *
URL
,

1117 c⁄° *
ícodög
,

1118 
›ti⁄s
);

1119 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1120 
xmlRódMem‹y
 (c⁄° *
buf„r
,

1121 
size
,

1122 c⁄° *
URL
,

1123 c⁄° *
ícodög
,

1124 
›ti⁄s
);

1125 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1126 
xmlRódFd
 (
fd
,

1127 c⁄° *
URL
,

1128 c⁄° *
ícodög
,

1129 
›ti⁄s
);

1130 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1131 
xmlRódIO
 (
xmlI≈utRódCÆlback
 
i‹ód
,

1132 
xmlI≈utClo£CÆlback
 
io˛o£
,

1133 *
io˘x
,

1134 c⁄° *
URL
,

1135 c⁄° *
ícodög
,

1136 
›ti⁄s
);

1137 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1138 
xmlCtxtRódDoc
 (
xmlP¨£rCtxtPå
 
˘xt
,

1139 c⁄° 
xmlCh¨
 *
cur
,

1140 c⁄° *
URL
,

1141 c⁄° *
ícodög
,

1142 
›ti⁄s
);

1143 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1144 
xmlCtxtRódFûe
 (
xmlP¨£rCtxtPå
 
˘xt
,

1145 c⁄° *
fûíame
,

1146 c⁄° *
ícodög
,

1147 
›ti⁄s
);

1148 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1149 
xmlCtxtRódMem‹y
 (
xmlP¨£rCtxtPå
 
˘xt
,

1150 c⁄° *
buf„r
,

1151 
size
,

1152 c⁄° *
URL
,

1153 c⁄° *
ícodög
,

1154 
›ti⁄s
);

1155 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1156 
xmlCtxtRódFd
 (
xmlP¨£rCtxtPå
 
˘xt
,

1157 
fd
,

1158 c⁄° *
URL
,

1159 c⁄° *
ícodög
,

1160 
›ti⁄s
);

1161 
XMLPUBFUN
 
xmlDocPå
 
XMLCALL


1162 
xmlCtxtRódIO
 (
xmlP¨£rCtxtPå
 
˘xt
,

1163 
xmlI≈utRódCÆlback
 
i‹ód
,

1164 
xmlI≈utClo£CÆlback
 
io˛o£
,

1165 *
io˘x
,

1166 c⁄° *
URL
,

1167 c⁄° *
ícodög
,

1168 
›ti⁄s
);

1181 
XML_WITH_THREAD
 = 1,

1182 
XML_WITH_TREE
 = 2,

1183 
XML_WITH_OUTPUT
 = 3,

1184 
XML_WITH_PUSH
 = 4,

1185 
XML_WITH_READER
 = 5,

1186 
XML_WITH_PATTERN
 = 6,

1187 
XML_WITH_WRITER
 = 7,

1188 
XML_WITH_SAX1
 = 8,

1189 
XML_WITH_FTP
 = 9,

1190 
XML_WITH_HTTP
 = 10,

1191 
XML_WITH_VALID
 = 11,

1192 
XML_WITH_HTML
 = 12,

1193 
XML_WITH_LEGACY
 = 13,

1194 
XML_WITH_C14N
 = 14,

1195 
XML_WITH_CATALOG
 = 15,

1196 
XML_WITH_XPATH
 = 16,

1197 
XML_WITH_XPTR
 = 17,

1198 
XML_WITH_XINCLUDE
 = 18,

1199 
XML_WITH_ICONV
 = 19,

1200 
XML_WITH_ISO8859X
 = 20,

1201 
XML_WITH_UNICODE
 = 21,

1202 
XML_WITH_REGEXP
 = 22,

1203 
XML_WITH_AUTOMATA
 = 23,

1204 
XML_WITH_EXPR
 = 24,

1205 
XML_WITH_SCHEMAS
 = 25,

1206 
XML_WITH_SCHEMATRON
 = 26,

1207 
XML_WITH_MODULES
 = 27,

1208 
XML_WITH_DEBUG
 = 28,

1209 
XML_WITH_DEBUG_MEM
 = 29,

1210 
XML_WITH_DEBUG_RUN
 = 30,

1211 
XML_WITH_ZLIB
 = 31,

1212 
XML_WITH_NONE
 = 99999

1213 } 
	txmlFótuª
;

1215 
XMLPUBFUN
 
XMLCALL


1216 
xmlHasFótuª
 (
xmlFótuª
 
„©uª
);

1218 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!
deföed
 
__NO_LONG_DOUBLE_MATH
 || deföed 
__LDBL_COMPAT
)

102 #ifde‡
__LDBL_COMPAT


104 #ifde‡
__USE_ISOC99


105 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

106 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

107 #ifde‡
__REDIRECT_NTH


108 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

109 
__∆dbl_√xâow¨df
)

110 
	`__©åibuã__
 ((
__c⁄°__
));

111 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

112 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

114 (
__x
, 
__y
),

115 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

122 #unde‡
__MATHDECL_1


123 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

124 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

125 
¨gs
, 
Æüs
)

	)

126 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

127 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

130 #i‚de‡
_Ml⁄g_doubÀ_


131 
	#_Ml⁄g_doubÀ_
 

	)

133 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

134 #ifde‡
__STDC__


135 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

137 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

139 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

140 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

141 
	~<bôs/m©hˇŒs.h
>

142 #unde‡
_MdoubÀ_


143 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


144 #unde‡
_MdoubÀ_END_NAMESPACE


145 #unde‡
__MATH_PRECNAME


150 #unde‡
__MATHDECL_1


151 #unde‡
__MATHDECL


152 #unde‡
__MATHCALL


155 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


157 
signgam
;

162 #ifde‡
__USE_ISOC99


200 
FP_NAN
,

201 
	#FP_NAN
 
FP_NAN


	)

202 
FP_INFINITE
,

203 
	#FP_INFINITE
 
FP_INFINITE


	)

204 
FP_ZERO
,

205 
	#FP_ZERO
 
FP_ZERO


	)

206 
FP_SUBNORMAL
,

207 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

208 
FP_NORMAL


209 
	#FP_NORMAL
 
FP_NORMAL


	)

213 #ifde‡
__NO_LONG_DOUBLE_MATH


214 
	#Â˛assify
(
x
) \

215 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

217 
	#Â˛assify
(
x
) \

218 ( (
x
) ==  () \

219 ? 
	`__Â˛assifyf
 (
x
) \

220 :  (
x
) ==  () \

221 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

225 #ifde‡
__NO_LONG_DOUBLE_MATH


226 
	#signbô
(
x
) \

227 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

229 
	#signbô
(
x
) \

230 ( (
x
) ==  () \

231 ? 
	`__signbôf
 (
x
) \

232 :  (
x
) ==  () \

233 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

237 #ifde‡
__NO_LONG_DOUBLE_MATH


238 
	#isföôe
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

241 
	#isföôe
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__föôef
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

249 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

253 #ifde‡
__NO_LONG_DOUBLE_MATH


254 
	#i¢™
(
x
) \

255 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

257 
	#i¢™
(
x
) \

258 ( (
x
) ==  () \

259 ? 
	`__i¢™f
 (
x
) \

260 :  (
x
) ==  () \

261 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

265 #ifde‡
__NO_LONG_DOUBLE_MATH


266 
	#isöf
(
x
) \

267 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

269 
	#isöf
(
x
) \

270 ( (
x
) ==  () \

271 ? 
	`__isöff
 (
x
) \

272 :  (
x
) ==  () \

273 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

277 
	#MATH_ERRNO
 1

	)

278 
	#MATH_ERREXCEPT
 2

	)

282 #ifdef 
__USE_MISC


286 
_IEEE_
 = -1,

287 
_SVID_
,

288 
_XOPEN_
,

289 
_POSIX_
,

290 
_ISOC_


291 } 
	t_LIB_VERSION_TYPE
;

296 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

300 #ifde‡
__USE_SVID


306 #ifde‡
__˝lu•lus


307 
__ex˚±i⁄


309 
ex˚±i⁄


312 
ty≥
;

313 *
«me
;

314 
¨g1
;

315 
¨g2
;

316 
ªtvÆ
;

317 
	}
};

319 #ifde‡
__˝lu•lus


320 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

322 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

325 
	#X_TLOSS
 1.41484755040568800000e+16

	)

328 
	#DOMAIN
 1

	)

329 
	#SING
 2

	)

330 
	#OVERFLOW
 3

	)

331 
	#UNDERFLOW
 4

	)

332 
	#TLOSS
 5

	)

333 
	#PLOSS
 6

	)

336 
	#HUGE
 3.40282347e+38F

	)

340 #ifde‡
__USE_XOPEN


342 
	#MAXFLOAT
 3.40282347e+38F

	)

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


350 
	#M_E
 2.7182818284590452354

	)

351 
	#M_LOG2E
 1.4426950408889634074

	)

352 
	#M_LOG10E
 0.43429448190325182765

	)

353 
	#M_LN2
 0.69314718055994530942

	)

354 
	#M_LN10
 2.30258509299404568402

	)

355 
	#M_PI
 3.14159265358979323846

	)

356 
	#M_PI_2
 1.57079632679489661923

	)

357 
	#M_PI_4
 0.78539816339744830962

	)

358 
	#M_1_PI
 0.31830988618379067154

	)

359 
	#M_2_PI
 0.63661977236758134308

	)

360 
	#M_2_SQRTPI
 1.12837916709551257390

	)

361 
	#M_SQRT2
 1.41421356237309504880

	)

362 
	#M_SQRT1_2
 0.70710678118654752440

	)

368 #ifde‡
__USE_GNU


369 
	#M_El
 2.7182818284590452353602874713526625L

	)

370 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

371 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

372 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

373 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

374 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

375 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

376 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

377 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

378 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

379 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

380 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

381 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

388 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


389 
	#__NO_MATH_INLINES
 1

	)

392 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

399 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

400 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

401 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

402 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

403 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

404 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

408 #ifde‡
__USE_EXTERN_INLINES


409 
	~<bôs/m©hölöe.h
>

412 #ifde‡
__USE_ISOC99


416 #i‚de‡
isgª©î


417 
	#isgª©î
(
x
, 
y
) \

418 (
__exãnsi⁄__
 \

419 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

420 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

424 #i‚de‡
isgª©îequÆ


425 
	#isgª©îequÆ
(
x
, 
y
) \

426 (
__exãnsi⁄__
 \

427 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

428 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

432 #i‚de‡
i¶ess


433 
	#i¶ess
(
x
, 
y
) \

434 (
__exãnsi⁄__
 \

435 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

436 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

440 #i‚de‡
i¶es£quÆ


441 
	#i¶es£quÆ
(
x
, 
y
) \

442 (
__exãnsi⁄__
 \

443 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

444 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

448 #i‚de‡
i¶essgª©î


449 
	#i¶essgª©î
(
x
, 
y
) \

450 (
__exãnsi⁄__
 \

451 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

452 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

456 #i‚de‡
isun‹dîed


457 
	#isun‹dîed
(
u
, 
v
) \

458 (
__exãnsi⁄__
 \

459 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

460 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

465 
	g__END_DECLS


	@/usr/include/mysql/mysql.h

27 #i‚de‡
_mysql_h


28 
	#_mysql_h


	)

30 #ifde‡
_AIX


31 
	~<°™d¨ds.h
>

34 #ifde‡
__CYGWIN__


35 #unde‡
WIN


36 #unde‡
_WIN


37 #unde‡
_WIN32


38 #unde‡
_WIN64


39 #unde‡
__WIN__


42 #ifdef 
__˝lu•lus


46 #i‚de‡
_globÆ_h


47 
	~<sys/ty≥s.h
>

48 #ifde‡
__LCC__


49 
	~<wösock.h
>

51 
	tmy_boﬁ
;

52 #i‡(
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)Ë&& !deföed(
__WIN__
)

53 
	#__WIN__


	)

55 #i‡!
deföed
(
__WIN__
)

56 
	#STDCALL


	)

58 
	#STDCALL
 
__°dˇŒ


	)

60 * 
	tg±r
;

62 #i‚de‡
my_sockë_deföed


63 #ifde‡
__WIN__


64 
	#my_sockë
 
SOCKET


	)

66 
	tmy_sockë
;

71 
	~"mysql_vîsi⁄.h
"

72 
	~"mysql_com.h
"

73 
	~"mysql_time.h
"

74 
	~"ty≥lib.h
"

76 
	~"my_li°.h
"

78 
mysql_p‹t
;

79 *
mysql_unix_p‹t
;

81 
	#CLIENT_NET_READ_TIMEOUT
 365*24*3600

	)

82 
	#CLIENT_NET_WRITE_TIMEOUT
 365*24*3600

	)

84 #ifde‡
__NETWARE__


85 #¥agm®
∑ck
(
push
, 8)

88 
	#IS_PRI_KEY
(
n
Ë(“Ë& 
PRI_KEY_FLAG
)

	)

89 
	#IS_NOT_NULL
(
n
Ë(“Ë& 
NOT_NULL_FLAG
)

	)

90 
	#IS_BLOB
(
n
Ë(“Ë& 
BLOB_FLAG
)

	)

91 
	#IS_NUM
(
t
Ë(—Ë<
FIELD_TYPE_INT24
 || (tË=
FIELD_TYPE_YEAR
 || (tË=
FIELD_TYPE_NEWDECIMAL
)

	)

92 
	#IS_NUM_FIELD
(
f
Ë((f)->
Êags
 & 
NUM_FLAG
)

	)

93 
	#INTERNAL_NUM_FIELD
(
f
Ë(((f)->
ty≥
 <
FIELD_TYPE_INT24
 && ((f)->ty≥ !
FIELD_TYPE_TIMESTAMP
 || (f)->
Àngth
 =14 || (f)->Àngth =8)Ë|| (f)->ty≥ =
FIELD_TYPE_YEAR
)

	)

94 
	#IS_LONGDATA
(
t
Ë(—Ë>
MYSQL_TYPE_TINY_BLOB
 && (tË<
MYSQL_TYPE_STRING
)

	)

97 
	s°_mysql_fõld
 {

98 *
	g«me
;

99 *
	g‹g_«me
;

100 *
	gèbÀ
;

101 *
	g‹g_èbÀ
;

102 *
	gdb
;

103 *
	gˇèlog
;

104 *
	gdef
;

105 
	gÀngth
;

106 
	gmax_Àngth
;

107 
	g«me_Àngth
;

108 
	g‹g_«me_Àngth
;

109 
	gèbÀ_Àngth
;

110 
	g‹g_èbÀ_Àngth
;

111 
	gdb_Àngth
;

112 
	gˇèlog_Àngth
;

113 
	gdef_Àngth
;

114 
	gÊags
;

115 
	gdecimÆs
;

116 
	gch¨£är
;

117 
íum_fõld_ty≥s
 
	gty≥
;

118 } 
	tMYSQL_FIELD
;

120 **
	tMYSQL_ROW
;

121 
	tMYSQL_FIELD_OFFSET
;

123 #i‚de‡
_globÆ_h


124 #i‡
deföed
(
NO_CLIENT_LONG_LONG
)

125 
	tmy_ul⁄gl⁄g
;

126 #ñi‡
deföed
 (
__WIN__
)

127 
	t__öt64
 
	tmy_ul⁄gl⁄g
;

129 
	tmy_ul⁄gl⁄g
;

133 
	#MYSQL_COUNT_ERROR
 (~(
my_ul⁄gl⁄g
Ë0)

	)

136 
	#ER_WARN_DATA_TRUNCATED
 
WARN_DATA_TRUNCATED


	)

138 
	s°_mysql_rows
 {

139 
°_mysql_rows
 *
	g√xt
;

140 
MYSQL_ROW
 
	gd©a
;

141 
	gÀngth
;

142 } 
	tMYSQL_ROWS
;

144 
MYSQL_ROWS
 *
	tMYSQL_ROW_OFFSET
;

146 
	~"my_Æloc.h
"

148 
embedded_quîy_ªsu…
 
	tEMBEDDED_QUERY_RESULT
;

149 
	s°_mysql_d©a
 {

150 
my_ul⁄gl⁄g
 
	grows
;

151 
	gfõlds
;

152 
MYSQL_ROWS
 *
	gd©a
;

153 
MEM_ROOT
 
	gÆloc
;

155 
embedded_quîy_ªsu…
 *
	gembedded_öfo
;

156 } 
	tMYSQL_DATA
;

158 
	emysql_›ti⁄


160 
	gMYSQL_OPT_CONNECT_TIMEOUT
, 
	gMYSQL_OPT_COMPRESS
, 
	gMYSQL_OPT_NAMED_PIPE
,

161 
	gMYSQL_INIT_COMMAND
, 
	gMYSQL_READ_DEFAULT_FILE
, 
	gMYSQL_READ_DEFAULT_GROUP
,

162 
	gMYSQL_SET_CHARSET_DIR
, 
	gMYSQL_SET_CHARSET_NAME
, 
	gMYSQL_OPT_LOCAL_INFILE
,

163 
	gMYSQL_OPT_PROTOCOL
, 
	gMYSQL_SHARED_MEMORY_BASE_NAME
, 
	gMYSQL_OPT_READ_TIMEOUT
,

164 
	gMYSQL_OPT_WRITE_TIMEOUT
, 
	gMYSQL_OPT_USE_RESULT
,

165 
	gMYSQL_OPT_USE_REMOTE_CONNECTION
, 
	gMYSQL_OPT_USE_EMBEDDED_CONNECTION
,

166 
	gMYSQL_OPT_GUESS_CONNECTION
, 
	gMYSQL_SET_CLIENT_IP
, 
	gMYSQL_SECURE_AUTH
,

167 
	gMYSQL_REPORT_DATA_TRUNCATION
, 
	gMYSQL_OPT_RECONNECT
,

168 
	gMYSQL_OPT_SSL_VERIFY_SERVER_CERT


171 
	s°_mysql_›ti⁄s
 {

172 
	gc⁄√˘_timeout
, 
	gªad_timeout
, 
	gwrôe_timeout
;

173 
	gp‹t
, 
	g¥Ÿocﬁ
;

174 
	g˛õ¡_Êag
;

175 *
	gho°
,*
	gu£r
,*
	g∑ssw‹d
,*
	gunix_sockë
,*
	gdb
;

176 
°_dy«mic_¨øy
 *
	göô_comm™ds
;

177 *
	gmy_˙f_fûe
,*
	gmy_˙f_group
, *
	gch¨£t_dú
, *
	gch¨£t_«me
;

178 *
	gs¶_key
;

179 *
	gs¶_˚π
;

180 *
	gs¶_ˇ
;

181 *
	gs¶_ˇ∑th
;

182 *
	gs¶_cùhî
;

183 *
	gsh¨ed_mem‹y_ba£_«me
;

184 
	gmax_Ælowed_∑ckë
;

185 
my_boﬁ
 
	gu£_s¶
;

186 
my_boﬁ
 
	gcom¥ess
,
	g«med_pùe
;

191 
my_boﬁ
 
	gΩl_¥obe
;

196 
my_boﬁ
 
	gΩl_∑r£
;

201 
my_boﬁ
 
	gno_ma°î_ªads
;

202 #i‡!
deföed
(
CHECK_EMBEDDED_DIFFERENCES
Ë|| deföed(
EMBEDDED_LIBRARY
)

203 
my_boﬁ
 
	g£∑øã_thªad
;

205 
mysql_›ti⁄
 
	gmëhods_to_u£
;

206 *
	g˛õ¡_ù
;

208 
my_boﬁ
 
	g£cuª_auth
;

210 
my_boﬁ
 
	gªp‹t_d©a_åunˇti⁄
;

213 (*
	gloˇl_öfûe_öô
)(**, const *, *);

214 (*
	gloˇl_öfûe_ªad
)(*, *, );

215 (*
	gloˇl_öfûe_íd
)(*);

216 (*
	gloˇl_öfûe_îr‹
)(*, *, );

217 *
	gloˇl_öfûe_u£rd©a
;

220 
	emysql_°©us


222 
	gMYSQL_STATUS_READY
,
	gMYSQL_STATUS_GET_RESULT
,
	gMYSQL_STATUS_USE_RESULT


225 
	emysql_¥Ÿocﬁ_ty≥


227 
	gMYSQL_PROTOCOL_DEFAULT
, 
	gMYSQL_PROTOCOL_TCP
, 
	gMYSQL_PROTOCOL_SOCKET
,

228 
	gMYSQL_PROTOCOL_PIPE
, 
	gMYSQL_PROTOCOL_MEMORY


235 
	emysql_Ωl_ty≥


237 
	gMYSQL_RPL_MASTER
, 
	gMYSQL_RPL_SLAVE
, 
	gMYSQL_RPL_ADMIN


240 
	sch¨a˘î_£t


242 
	gnumbî
;

243 
	g°©e
;

244 c⁄° *
	gc¢ame
;

245 c⁄° *
	g«me
;

246 c⁄° *
	gcommít
;

247 c⁄° *
	gdú
;

248 
	gmbmöÀn
;

249 
	gmbmaxÀn
;

250 } 
	tMY_CHARSET_INFO
;

252 
	g°_mysql_mëhods
;

253 
	g°_mysql_°mt
;

255 
	s°_mysql


257 
NET
 
	g√t
;

258 
g±r
 
	gc⁄√˘‹_fd
;

259 *
	gho°
,*
	gu£r
,*
	g∑sswd
,*
	gunix_sockë
,*
	g£rvî_vîsi⁄
,*
	gho°_öfo
,*
	göfo
;

260 *
	gdb
;

261 
ch¨£t_öfo_°
 *
	gch¨£t
;

262 
MYSQL_FIELD
 *
	gfõlds
;

263 
MEM_ROOT
 
	gfõld_Æloc
;

264 
my_ul⁄gl⁄g
 
	gaf„˘ed_rows
;

265 
my_ul⁄gl⁄g
 
	gö£π_id
;

266 
my_ul⁄gl⁄g
 
	gexåa_öfo
;

267 
	gthªad_id
;

268 
	g∑ckë_Àngth
;

269 
	gp‹t
;

270 
	g˛õ¡_Êag
,
	g£rvî_ˇ∑bûôõs
;

271 
	g¥Ÿocﬁ_vîsi⁄
;

272 
	gfõld_cou¡
;

273 
	g£rvî_°©us
;

274 
	g£rvî_œnguage
;

275 
	gw¨nög_cou¡
;

276 
°_mysql_›ti⁄s
 
	g›ti⁄s
;

277 
mysql_°©us
 
	g°©us
;

278 
my_boﬁ
 
	g‰ì_me
;

279 
my_boﬁ
 
	gªc⁄√˘
;

282 
	gs¸ambÀ
[
SCRAMBLE_LENGTH
+1];

288 
my_boﬁ
 
	gΩl_pivŸ
;

293 
°_mysql
* 
	gma°î
, *
	g√xt_¶ave
;

295 
°_mysql
* 
	gœ°_u£d_¶ave
;

297 
°_mysql
* 
	gœ°_u£d_c⁄
;

299 
LIST
 *
	g°mts
;

300 c⁄° 
°_mysql_mëhods
 *
	gmëhods
;

301 *
	gthd
;

306 
my_boﬁ
 *
	gunbuf„ªd_„tch_ow√r
;

307 #i‡
deföed
(
EMBEDDED_LIBRARY
Ë|| deföed(
EMBEDDED_LIBRARY_COMPATIBLE
Ë|| 
MYSQL_VERSION_ID
 >= 50100

309 *
	göfo_buf„r
;

311 } 
	tMYSQL
;

313 
	s°_mysql_ªs
 {

314 
my_ul⁄gl⁄g
 
	grow_cou¡
;

315 
MYSQL_FIELD
 *
	gfõlds
;

316 
MYSQL_DATA
 *
	gd©a
;

317 
MYSQL_ROWS
 *
	gd©a_curs‹
;

318 *
	gÀngths
;

319 
MYSQL
 *
	gh™dÀ
;

320 
MEM_ROOT
 
	gfõld_Æloc
;

321 
	gfõld_cou¡
, 
	gcuºít_fõld
;

322 
MYSQL_ROW
 
	grow
;

323 
MYSQL_ROW
 
	gcuºít_row
;

324 
my_boﬁ
 
	geof
;

326 
my_boﬁ
 
	gunbuf„ªd_„tch_ˇn˚Œed
;

327 c⁄° 
°_mysql_mëhods
 *
	gmëhods
;

328 } 
	tMYSQL_RES
;

330 
	#MAX_MYSQL_MANAGER_ERR
 256

	)

331 
	#MAX_MYSQL_MANAGER_MSG
 256

	)

333 
	#MANAGER_OK
 200

	)

334 
	#MANAGER_INFO
 250

	)

335 
	#MANAGER_ACCESS
 401

	)

336 
	#MANAGER_CLIENT_ERR
 450

	)

337 
	#MANAGER_INTERNAL_ERR
 500

	)

339 #i‡!
deföed
(
MYSQL_SERVER
Ë&& !deföed(
MYSQL_CLIENT
)

340 
	#MYSQL_CLIENT


	)

344 
	s°_mysql_m™agî


346 
NET
 
	g√t
;

347 *
	gho°
,*
	gu£r
,*
	g∑sswd
;

348 
	gp‹t
;

349 
my_boﬁ
 
	g‰ì_me
;

350 
my_boﬁ
 
	geof
;

351 
	gcmd_°©us
;

352 
	gœ°_î∫o
;

353 * 
	g√t_buf
,*
	g√t_buf_pos
,*
	g√t_d©a_íd
;

354 
	g√t_buf_size
;

355 
	gœ°_îr‹
[
MAX_MYSQL_MANAGER_ERR
];

356 } 
	tMYSQL_MANAGER
;

358 
	s°_mysql_∑ømëîs


360 *
	gp_max_Ælowed_∑ckë
;

361 *
	gp_√t_buf„r_Àngth
;

362 } 
	tMYSQL_PARAMETERS
;

364 #i‡!
deföed
(
MYSQL_SERVER
Ë&& !deföed(
EMBEDDED_LIBRARY
)

365 
	#max_Ælowed_∑ckë
 (*
	`mysql_gë_∑ømëîs
()->
p_max_Ælowed_∑ckë
)

	)

366 
	#√t_buf„r_Àngth
 (*
	`mysql_gë_∑ømëîs
()->
p_√t_buf„r_Àngth
)

	)

374 
STDCALL
 
mysql_£rvî_öô
(
¨gc
, **
¨gv
, **
groups
);

375 
STDCALL
 
mysql_£rvî_íd
();

385 
	#mysql_libøry_öô
 
mysql_£rvî_öô


	)

386 
	#mysql_libøry_íd
 
mysql_£rvî_íd


	)

388 
MYSQL_PARAMETERS
 *
STDCALL
 
mysql_gë_∑ømëîs
();

396 
my_boﬁ
 
STDCALL
 
mysql_thªad_öô
();

397 
STDCALL
 
mysql_thªad_íd
();

404 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_num_rows
(
MYSQL_RES
 *
ªs
);

405 
STDCALL
 
mysql_num_fõlds
(
MYSQL_RES
 *
ªs
);

406 
my_boﬁ
 
STDCALL
 
mysql_eof
(
MYSQL_RES
 *
ªs
);

407 
MYSQL_FIELD
 *
STDCALL
 
mysql_„tch_fõld_dúe˘
(
MYSQL_RES
 *
ªs
,

408 
fõldƒ
);

409 
MYSQL_FIELD
 * 
STDCALL
 
mysql_„tch_fõlds
(
MYSQL_RES
 *
ªs
);

410 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_row_ãŒ
(
MYSQL_RES
 *
ªs
);

411 
MYSQL_FIELD_OFFSET
 
STDCALL
 
mysql_fõld_ãŒ
(
MYSQL_RES
 *
ªs
);

413 
STDCALL
 
mysql_fõld_cou¡
(
MYSQL
 *
mysql
);

414 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_af„˘ed_rows
(
MYSQL
 *
mysql
);

415 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_ö£π_id
(
MYSQL
 *
mysql
);

416 
STDCALL
 
mysql_î∫o
(
MYSQL
 *
mysql
);

417 c⁄° * 
STDCALL
 
mysql_îr‹
(
MYSQL
 *
mysql
);

418 c⁄° *
STDCALL
 
mysql_sql°©e
(
MYSQL
 *
mysql
);

419 
STDCALL
 
mysql_w¨nög_cou¡
(
MYSQL
 *
mysql
);

420 c⁄° * 
STDCALL
 
mysql_öfo
(
MYSQL
 *
mysql
);

421 
STDCALL
 
mysql_thªad_id
(
MYSQL
 *
mysql
);

422 c⁄° * 
STDCALL
 
mysql_ch¨a˘î_£t_«me
(
MYSQL
 *
mysql
);

423 
STDCALL
 
mysql_£t_ch¨a˘î_£t
(
MYSQL
 *
mysql
, c⁄° *
c¢ame
);

425 
MYSQL
 * 
STDCALL
 
mysql_öô
(MYSQL *
mysql
);

426 
my_boﬁ
 
STDCALL
 
mysql_s¶_£t
(
MYSQL
 *
mysql
, c⁄° *
key
,

427 c⁄° *
˚π
, c⁄° *
ˇ
,

428 c⁄° *
ˇ∑th
, c⁄° *
cùhî
);

429 c⁄° * 
STDCALL
 
mysql_gë_s¶_cùhî
(
MYSQL
 *
mysql
);

430 
my_boﬁ
 
STDCALL
 
mysql_ch™ge_u£r
(
MYSQL
 *
mysql
, c⁄° *
u£r
,

431 c⁄° *
∑sswd
, c⁄° *
db
);

432 
MYSQL
 * 
STDCALL
 
mysql_ªÆ_c⁄√˘
(MYSQL *
mysql
, c⁄° *
ho°
,

433 c⁄° *
u£r
,

434 c⁄° *
∑sswd
,

435 c⁄° *
db
,

436 
p‹t
,

437 c⁄° *
unix_sockë
,

438 
˛õ¡Êag
);

439 
STDCALL
 
mysql_£À˘_db
(
MYSQL
 *
mysql
, c⁄° *
db
);

440 
STDCALL
 
mysql_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
);

441 
STDCALL
 
mysql_£nd_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

442 
Àngth
);

443 
STDCALL
 
mysql_ªÆ_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

444 
Àngth
);

445 
MYSQL_RES
 * 
STDCALL
 
mysql_°‹e_ªsu…
(
MYSQL
 *
mysql
);

446 
MYSQL_RES
 * 
STDCALL
 
mysql_u£_ªsu…
(
MYSQL
 *
mysql
);

449 
my_boﬁ
 
STDCALL
 
mysql_ma°î_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

450 
Àngth
);

451 
my_boﬁ
 
STDCALL
 
mysql_ma°î_£nd_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

452 
Àngth
);

454 
my_boﬁ
 
STDCALL
 
mysql_¶ave_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

455 
Àngth
);

456 
my_boﬁ
 
STDCALL
 
mysql_¶ave_£nd_quîy
(
MYSQL
 *
mysql
, c⁄° *
q
,

457 
Àngth
);

458 
STDCALL
 
mysql_gë_ch¨a˘î_£t_öfo
(
MYSQL
 *
mysql
,

459 
MY_CHARSET_INFO
 *
ch¨£t
);

463 
	#LOCAL_INFILE_ERROR_LEN
 512

	)

466 
mysql_£t_loˇl_öfûe_h™dÀr
(
MYSQL
 *
mysql
,

467 (*
loˇl_öfûe_öô
)(**, const *,

469 (*
loˇl_öfûe_ªad
)(*, *,

471 (*
loˇl_öfûe_íd
)(*),

472 (*
loˇl_öfûe_îr‹
)(*, *,

477 
mysql_£t_loˇl_öfûe_deÁu…
(
MYSQL
 *
mysql
);

484 
STDCALL
 
mysql_íabÀ_Ωl_∑r£
(
MYSQL
* 
mysql
);

485 
STDCALL
 
mysql_dißbÀ_Ωl_∑r£
(
MYSQL
* 
mysql
);

487 
STDCALL
 
mysql_Ωl_∑r£_íabÀd
(
MYSQL
* 
mysql
);

490 
STDCALL
 
mysql_íabÀ_ªads_‰om_ma°î
(
MYSQL
* 
mysql
);

491 
STDCALL
 
mysql_dißbÀ_ªads_‰om_ma°î
(
MYSQL
* 
mysql
);

493 
my_boﬁ
 
STDCALL
 
mysql_ªads_‰om_ma°î_íabÀd
(
MYSQL
* 
mysql
);

495 
mysql_Ωl_ty≥
 
STDCALL
 
mysql_Ωl_quîy_ty≥
(c⁄° * 
q
, 
Àn
);

498 
my_boﬁ
 
STDCALL
 
mysql_Ωl_¥obe
(
MYSQL
* 
mysql
);

501 
STDCALL
 
mysql_£t_ma°î
(
MYSQL
* 
mysql
, c⁄° * 
ho°
,

502 
p‹t
,

503 c⁄° * 
u£r
,

504 c⁄° * 
∑sswd
);

505 
STDCALL
 
mysql_add_¶ave
(
MYSQL
* 
mysql
, c⁄° * 
ho°
,

506 
p‹t
,

507 c⁄° * 
u£r
,

508 c⁄° * 
∑sswd
);

510 
STDCALL
 
mysql_shutdown
(
MYSQL
 *
mysql
,

511 
mysql_íum_shutdown_Àvñ


512 
shutdown_Àvñ
);

513 
STDCALL
 
mysql_dump_debug_öfo
(
MYSQL
 *
mysql
);

514 
STDCALL
 
mysql_ª‰esh
(
MYSQL
 *
mysql
,

515 
ª‰esh_›ti⁄s
);

516 
STDCALL
 
mysql_kûl
(
MYSQL
 *
mysql
,
pid
);

517 
STDCALL
 
mysql_£t_£rvî_›ti⁄
(
MYSQL
 *
mysql
,

518 
íum_mysql_£t_›ti⁄


519 
›ti⁄
);

520 
STDCALL
 
mysql_pög
(
MYSQL
 *
mysql
);

521 c⁄° * 
STDCALL
 
mysql_°©
(
MYSQL
 *
mysql
);

522 c⁄° * 
STDCALL
 
mysql_gë_£rvî_öfo
(
MYSQL
 *
mysql
);

523 c⁄° * 
STDCALL
 
mysql_gë_˛õ¡_öfo
();

524 
STDCALL
 
mysql_gë_˛õ¡_vîsi⁄
();

525 c⁄° * 
STDCALL
 
mysql_gë_ho°_öfo
(
MYSQL
 *
mysql
);

526 
STDCALL
 
mysql_gë_£rvî_vîsi⁄
(
MYSQL
 *
mysql
);

527 
STDCALL
 
mysql_gë_¥Ÿo_öfo
(
MYSQL
 *
mysql
);

528 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_dbs
(
MYSQL
 *
mysql
,c⁄° *
wûd
);

529 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_èbÀs
(
MYSQL
 *
mysql
,c⁄° *
wûd
);

530 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_¥o˚s£s
(
MYSQL
 *
mysql
);

531 
STDCALL
 
mysql_›ti⁄s
(
MYSQL
 *
mysql
,
mysql_›ti⁄
 
›ti⁄
,

532 c⁄° *
¨g
);

533 
STDCALL
 
mysql_‰ì_ªsu…
(
MYSQL_RES
 *
ªsu…
);

534 
STDCALL
 
mysql_d©a_£ek
(
MYSQL_RES
 *
ªsu…
,

535 
my_ul⁄gl⁄g
 
off£t
);

536 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_row_£ek
(
MYSQL_RES
 *
ªsu…
,

537 
MYSQL_ROW_OFFSET
 
off£t
);

538 
MYSQL_FIELD_OFFSET
 
STDCALL
 
mysql_fõld_£ek
(
MYSQL_RES
 *
ªsu…
,

539 
MYSQL_FIELD_OFFSET
 
off£t
);

540 
MYSQL_ROW
 
STDCALL
 
mysql_„tch_row
(
MYSQL_RES
 *
ªsu…
);

541 * 
STDCALL
 
mysql_„tch_Àngths
(
MYSQL_RES
 *
ªsu…
);

542 
MYSQL_FIELD
 * 
STDCALL
 
mysql_„tch_fõld
(
MYSQL_RES
 *
ªsu…
);

543 
MYSQL_RES
 * 
STDCALL
 
mysql_li°_fõlds
(
MYSQL
 *
mysql
, c⁄° *
èbÀ
,

544 c⁄° *
wûd
);

545 
STDCALL
 
mysql_esˇ≥_°rög
(*
to
,c⁄° *
‰om
,

546 
‰om_Àngth
);

547 
STDCALL
 
mysql_hex_°rög
(*
to
,c⁄° *
‰om
,

548 
‰om_Àngth
);

549 
STDCALL
 
mysql_ªÆ_esˇ≥_°rög
(
MYSQL
 *
mysql
,

550 *
to
,c⁄° *
‰om
,

551 
Àngth
);

552 
STDCALL
 
mysql_debug
(c⁄° *
debug
);

553 * 
STDCALL
 
mysql_odbc_esˇ≥_°rög
(
MYSQL
 *
mysql
,

554 *
to
,

555 
to_Àngth
,

556 c⁄° *
‰om
,

557 
‰om_Àngth
,

558 *
∑øm
,

560 (*
exãnd_buf„r
)

561 (*, *
to
,

562 *
Àngth
));

563 
STDCALL
 
myodbc_ªmove_esˇ≥
(
MYSQL
 *
mysql
,*
«me
);

564 
STDCALL
 
mysql_thªad_ß„
();

565 
my_boﬁ
 
STDCALL
 
mysql_embedded
();

566 
MYSQL_MANAGER
* 
STDCALL
 
mysql_m™agî_öô
(MYSQL_MANAGER* 
c⁄
);

567 
MYSQL_MANAGER
* 
STDCALL
 
mysql_m™agî_c⁄√˘
(MYSQL_MANAGER* 
c⁄
,

568 c⁄° * 
ho°
,

569 c⁄° * 
u£r
,

570 c⁄° * 
∑sswd
,

571 
p‹t
);

572 
STDCALL
 
mysql_m™agî_˛o£
(
MYSQL_MANAGER
* 
c⁄
);

573 
STDCALL
 
mysql_m™agî_comm™d
(
MYSQL_MANAGER
* 
c⁄
,

574 c⁄° * 
cmd
, 
cmd_Àn
);

575 
STDCALL
 
mysql_m™agî_„tch_löe
(
MYSQL_MANAGER
* 
c⁄
,

576 * 
ªs_buf
,

577 
ªs_buf_size
);

578 
my_boﬁ
 
STDCALL
 
mysql_ªad_quîy_ªsu…
(
MYSQL
 *
mysql
);

587 
	eíum_mysql_°mt_°©e


589 
	gMYSQL_STMT_INIT_DONE
1, 
	gMYSQL_STMT_PREPARE_DONE
, 
	gMYSQL_STMT_EXECUTE_DONE
,

590 
	gMYSQL_STMT_FETCH_DONE


657 
	s°_mysql_böd


659 *
	gÀngth
;

660 
my_boﬁ
 *
	gis_nuŒ
;

661 *
	gbuf„r
;

663 
my_boﬁ
 *
	gîr‹
;

664 
íum_fõld_ty≥s
 
	gbuf„r_ty≥
;

666 
	gbuf„r_Àngth
;

667 *
	grow_±r
;

668 
	goff£t
;

669 
	gÀngth_vÆue
;

670 
	g∑øm_numbî
;

671 
	g∑ck_Àngth
;

672 
my_boﬁ
 
	gîr‹_vÆue
;

673 
my_boﬁ
 
	gis_unsig√d
;

674 
my_boﬁ
 
	gl⁄g_d©a_u£d
;

675 
my_boﬁ
 
	gis_nuŒ_vÆue
;

676 (*
	g°‹e_∑øm_func
)(
NET
 *
	g√t
, 
°_mysql_böd
 *
	g∑øm
);

677 (*
	g„tch_ªsu…
)(
	g°_mysql_böd
 *, 
	gMYSQL_FIELD
 *,

678 **
	grow
);

679 (*
	gskù_ªsu…
)(
	g°_mysql_böd
 *, 
	gMYSQL_FIELD
 *,

680 **
	grow
);

681 } 
	tMYSQL_BIND
;

685 
	s°_mysql_°mt


687 
MEM_ROOT
 
	gmem_roŸ
;

688 
LIST
 
	gli°
;

689 
MYSQL
 *
	gmysql
;

690 
MYSQL_BIND
 *
	g∑øms
;

691 
MYSQL_BIND
 *
	gböd
;

692 
MYSQL_FIELD
 *
	gfõlds
;

693 
MYSQL_DATA
 
	gªsu…
;

694 
MYSQL_ROWS
 *
	gd©a_curs‹
;

696 
my_ul⁄gl⁄g
 
	gaf„˘ed_rows
;

697 
my_ul⁄gl⁄g
 
	gö£π_id
;

702 (*
	gªad_row_func
)(
°_mysql_°mt
 *
	g°mt
,

703 **
	grow
);

704 
	g°mt_id
;

705 
	gÊags
;

706 
	g¥e„tch_rows
;

711 
	g£rvî_°©us
;

712 
	gœ°_î∫o
;

713 
	g∑øm_cou¡
;

714 
	gfõld_cou¡
;

715 
íum_mysql_°mt_°©e
 
	g°©e
;

716 
	gœ°_îr‹
[
MYSQL_ERRMSG_SIZE
];

717 
	gsql°©e
[
SQLSTATE_LENGTH
+1];

719 
my_boﬁ
 
	g£nd_ty≥s_to_£rvî
;

720 
my_boﬁ
 
	gböd_∑øm_d⁄e
;

721 
	gböd_ªsu…_d⁄e
;

723 
my_boﬁ
 
	gunbuf„ªd_„tch_ˇn˚Œed
;

728 
my_boﬁ
 
	gupd©e_max_Àngth
;

729 } 
	tMYSQL_STMT
;

731 
	eíum_°mt_©å_ty≥


740 
	gSTMT_ATTR_UPDATE_MAX_LENGTH
,

745 
	gSTMT_ATTR_CURSOR_TYPE
,

750 
	gSTMT_ATTR_PREFETCH_ROWS


754 
	s°_mysql_mëhods


756 
my_boﬁ
 (*
ªad_quîy_ªsu…
)(
MYSQL
 *
	gmysql
);

757 
my_boﬁ
 (*
adv™˚d_comm™d
)(
MYSQL
 *
	gmysql
,

758 
íum_£rvî_comm™d
 
	gcomm™d
,

759 c⁄° *
	ghódî
,

760 
	ghódî_Àngth
,

761 c⁄° *
	g¨g
,

762 
	g¨g_Àngth
,

763 
my_boﬁ
 
	gskù_check
,

764 
MYSQL_STMT
 *
	g°mt
);

765 
	gMYSQL_DATA
 *(*
	gªad_rows
)(
MYSQL
 *
	gmysql
,
MYSQL_FIELD
 *
	gmysql_fõlds
,

766 
	gfõlds
);

767 
	gMYSQL_RES
 * (*
	gu£_ªsu…
)(
MYSQL
 *
	gmysql
);

768 (*
	g„tch_Àngths
)(*
	gto
,

769 
MYSQL_ROW
 
	gcﬁumn
, 
	gfõld_cou¡
);

770 (*
	gÊush_u£_ªsu…
)(
MYSQL
 *
	gmysql
);

771 #i‡!
deföed
(
MYSQL_SERVER
Ë|| deföed(
EMBEDDED_LIBRARY
)

772 
	gMYSQL_FIELD
 * (*
	gli°_fõlds
)(
MYSQL
 *
	gmysql
);

773 
my_boﬁ
 (*
ªad_¥ï¨e_ªsu…
)(
MYSQL
 *
	gmysql
, 
MYSQL_STMT
 *
	g°mt
);

774 (*
	g°mt_execuã
)(
MYSQL_STMT
 *
	g°mt
);

775 (*
	gªad_bö¨y_rows
)(
MYSQL_STMT
 *
	g°mt
);

776 (*
	gunbuf„ªd_„tch
)(
MYSQL
 *
	gmysql
, **
	grow
);

777 (*
	g‰ì_embedded_thd
)(
MYSQL
 *
	gmysql
);

778 c⁄° *(*
	gªad_°©i°ics
)(
MYSQL
 *
	gmysql
);

779 
my_boﬁ
 (*
√xt_ªsu…
)(
MYSQL
 *
	gmysql
);

780 (*
	gªad_ch™ge_u£r_ªsu…
)(
MYSQL
 *
	gmysql
, *
	gbuff
, c⁄° *
	g∑sswd
);

781 (*
	gªad_rows_‰om_curs‹
)(
MYSQL_STMT
 *
	g°mt
);

783 } 
	tMYSQL_METHODS
;

786 
MYSQL_STMT
 * 
STDCALL
 
mysql_°mt_öô
(
MYSQL
 *
mysql
);

787 
STDCALL
 
mysql_°mt_¥ï¨e
(
MYSQL_STMT
 *
°mt
, c⁄° *
quîy
,

788 
Àngth
);

789 
STDCALL
 
mysql_°mt_execuã
(
MYSQL_STMT
 *
°mt
);

790 
STDCALL
 
mysql_°mt_„tch
(
MYSQL_STMT
 *
°mt
);

791 
STDCALL
 
mysql_°mt_„tch_cﬁumn
(
MYSQL_STMT
 *
°mt
, 
MYSQL_BIND
 *
böd_¨g
,

792 
cﬁumn
,

793 
off£t
);

794 
STDCALL
 
mysql_°mt_°‹e_ªsu…
(
MYSQL_STMT
 *
°mt
);

795 
STDCALL
 
mysql_°mt_∑øm_cou¡
(
MYSQL_STMT
 * 
°mt
);

796 
my_boﬁ
 
STDCALL
 
mysql_°mt_©å_£t
(
MYSQL_STMT
 *
°mt
,

797 
íum_°mt_©å_ty≥
 
©å_ty≥
,

798 c⁄° *
©å
);

799 
my_boﬁ
 
STDCALL
 
mysql_°mt_©å_gë
(
MYSQL_STMT
 *
°mt
,

800 
íum_°mt_©å_ty≥
 
©å_ty≥
,

801 *
©å
);

802 
my_boﬁ
 
STDCALL
 
mysql_°mt_böd_∑øm
(
MYSQL_STMT
 * 
°mt
, 
MYSQL_BIND
 * 
bnd
);

803 
my_boﬁ
 
STDCALL
 
mysql_°mt_böd_ªsu…
(
MYSQL_STMT
 * 
°mt
, 
MYSQL_BIND
 * 
bnd
);

804 
my_boﬁ
 
STDCALL
 
mysql_°mt_˛o£
(
MYSQL_STMT
 * 
°mt
);

805 
my_boﬁ
 
STDCALL
 
mysql_°mt_ª£t
(
MYSQL_STMT
 * 
°mt
);

806 
my_boﬁ
 
STDCALL
 
mysql_°mt_‰ì_ªsu…
(
MYSQL_STMT
 *
°mt
);

807 
my_boﬁ
 
STDCALL
 
mysql_°mt_£nd_l⁄g_d©a
(
MYSQL_STMT
 *
°mt
,

808 
∑øm_numbî
,

809 c⁄° *
d©a
,

810 
Àngth
);

811 
MYSQL_RES
 *
STDCALL
 
mysql_°mt_ªsu…_mëad©a
(
MYSQL_STMT
 *
°mt
);

812 
MYSQL_RES
 *
STDCALL
 
mysql_°mt_∑øm_mëad©a
(
MYSQL_STMT
 *
°mt
);

813 
STDCALL
 
mysql_°mt_î∫o
(
MYSQL_STMT
 * 
°mt
);

814 c⁄° *
STDCALL
 
mysql_°mt_îr‹
(
MYSQL_STMT
 * 
°mt
);

815 c⁄° *
STDCALL
 
mysql_°mt_sql°©e
(
MYSQL_STMT
 * 
°mt
);

816 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_°mt_row_£ek
(
MYSQL_STMT
 *
°mt
,

817 
MYSQL_ROW_OFFSET
 
off£t
);

818 
MYSQL_ROW_OFFSET
 
STDCALL
 
mysql_°mt_row_ãŒ
(
MYSQL_STMT
 *
°mt
);

819 
STDCALL
 
mysql_°mt_d©a_£ek
(
MYSQL_STMT
 *
°mt
, 
my_ul⁄gl⁄g
 
off£t
);

820 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_num_rows
(
MYSQL_STMT
 *
°mt
);

821 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_af„˘ed_rows
(
MYSQL_STMT
 *
°mt
);

822 
my_ul⁄gl⁄g
 
STDCALL
 
mysql_°mt_ö£π_id
(
MYSQL_STMT
 *
°mt
);

823 
STDCALL
 
mysql_°mt_fõld_cou¡
(
MYSQL_STMT
 *
°mt
);

825 
my_boﬁ
 
STDCALL
 
mysql_commô
(
MYSQL
 * 
mysql
);

826 
my_boﬁ
 
STDCALL
 
mysql_rﬁlback
(
MYSQL
 * 
mysql
);

827 
my_boﬁ
 
STDCALL
 
mysql_autocommô
(
MYSQL
 * 
mysql
, my_boﬁ 
auto_mode
);

828 
my_boﬁ
 
STDCALL
 
mysql_m‹e_ªsu…s
(
MYSQL
 *
mysql
);

829 
STDCALL
 
mysql_√xt_ªsu…
(
MYSQL
 *
mysql
);

830 
STDCALL
 
mysql_˛o£
(
MYSQL
 *
sock
);

834 
	#MYSQL_NO_DATA
 100

	)

835 
	#MYSQL_DATA_TRUNCATED
 101

	)

837 
	#mysql_ªlﬂd
(
mysql
Ë
	`mysql_ª‰esh
((mysql),
REFRESH_GRANT
)

	)

839 #ifde‡
USE_OLD_FUNCTIONS


840 
MYSQL
 * 
STDCALL
 
mysql_c⁄√˘
(MYSQL *
mysql
, c⁄° *
ho°
,

841 c⁄° *
u£r
, c⁄° *
∑sswd
);

842 
STDCALL
 
mysql_¸óã_db
(
MYSQL
 *
mysql
, c⁄° *
DB
);

843 
STDCALL
 
mysql_dr›_db
(
MYSQL
 *
mysql
, c⁄° *
DB
);

844 
	#mysql_ªlﬂd
(
mysql
Ë
	`mysql_ª‰esh
((mysql),
REFRESH_GRANT
)

	)

846 
	#HAVE_MYSQL_REAL_CONNECT


	)

853 
	#sim∂e_comm™d
(
mysql
, 
comm™d
, 
¨g
, 
Àngth
, 
skù_check
) \

854 (*(
mysql
)->
mëhods
->
adv™˚d_comm™d
)(mysql, 
comm™d
, 
NuŒS
, \

855 0, 
¨g
, 
Àngth
, 
skù_check
, 
NULL
)

	)

856 
	#°mt_comm™d
(
mysql
, 
comm™d
, 
¨g
, 
Àngth
, 
°mt
) \

857 (*(
mysql
)->
mëhods
->
adv™˚d_comm™d
)(mysql, 
comm™d
, 
NuŒS
, \

858 0, 
¨g
, 
Àngth
, 1, 
°mt
)

	)

860 #ifde‡
__NETWARE__


861 #¥agm®
∑ck
(
p›
)

864 #ifdef 
__˝lu•lus


	@/usr/include/net/if.h

20 #i‚de‡
_NET_IF_H


21 
	#_NET_IF_H
 1

	)

23 
	~<„©uªs.h
>

25 #ifde‡
__USE_MISC


26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

32 
	#IF_NAMESIZE
 16

	)

34 
	sif_«meödex


36 
	mif_ödex
;

37 *
	mif_«me
;

41 #ifde‡
__USE_MISC


45 
	mIFF_UP
 = 0x1,

46 
	#IFF_UP
 
IFF_UP


	)

47 
	mIFF_BROADCAST
 = 0x2,

48 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

49 
	mIFF_DEBUG
 = 0x4,

50 
	#IFF_DEBUG
 
IFF_DEBUG


	)

51 
	mIFF_LOOPBACK
 = 0x8,

52 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

53 
	mIFF_POINTOPOINT
 = 0x10,

54 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

55 
	mIFF_NOTRAILERS
 = 0x20,

56 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

57 
	mIFF_RUNNING
 = 0x40,

58 
	#IFF_RUNNING
 
IFF_RUNNING


	)

59 
	mIFF_NOARP
 = 0x80,

60 
	#IFF_NOARP
 
IFF_NOARP


	)

61 
	mIFF_PROMISC
 = 0x100,

62 
	#IFF_PROMISC
 
IFF_PROMISC


	)

65 
	mIFF_ALLMULTI
 = 0x200,

66 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

68 
	mIFF_MASTER
 = 0x400,

69 
	#IFF_MASTER
 
IFF_MASTER


	)

70 
	mIFF_SLAVE
 = 0x800,

71 
	#IFF_SLAVE
 
IFF_SLAVE


	)

73 
	mIFF_MULTICAST
 = 0x1000,

74 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

76 
	mIFF_PORTSEL
 = 0x2000,

77 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

78 
	mIFF_AUTOMEDIA
 = 0x4000,

79 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

80 
	mIFF_DYNAMIC
 = 0x8000

81 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

89 
	siÁddr


91 
sockaddr
 
	miÁ_addr
;

94 
sockaddr
 
	mifu_brﬂdaddr
;

95 
sockaddr
 
	mifu_d°addr
;

96 } 
	miÁ_ifu
;

97 
iÁ˚
 *
	miÁ_iÂ
;

98 
iÁddr
 *
	miÁ_√xt
;

101 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

102 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

112 
	sifm≠


114 
	mmem_°¨t
;

115 
	mmem_íd
;

116 
	mba£_addr
;

117 
	múq
;

118 
	mdma
;

119 
	mp‹t
;

127 
	si‰eq


129 
	#IFHWADDRLEN
 6

	)

130 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

133 
	mi‰n_«me
[
IFNAMSIZ
];

134 } 
	mi‰_i‰n
;

138 
sockaddr
 
	mi‰u_addr
;

139 
sockaddr
 
	mi‰u_d°addr
;

140 
sockaddr
 
	mi‰u_brﬂdaddr
;

141 
sockaddr
 
	mi‰u_√tmask
;

142 
sockaddr
 
	mi‰u_hwaddr
;

143 
	mi‰u_Êags
;

144 
	mi‰u_ivÆue
;

145 
	mi‰u_mtu
;

146 
ifm≠
 
	mi‰u_m≠
;

147 
	mi‰u_¶ave
[
IFNAMSIZ
];

148 
	mi‰u_√w«me
[
IFNAMSIZ
];

149 
__ˇddr_t
 
	mi‰u_d©a
;

150 } 
	mi‰_i‰u
;

152 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

153 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

154 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

155 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

156 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

157 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

158 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

159 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

160 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

161 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

162 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

163 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

164 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

167 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

168 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

169 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

170 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

177 
	sifc⁄f


179 
	mifc_Àn
;

182 
__ˇddr_t
 
	mifcu_buf
;

183 
i‰eq
 *
	mifcu_ªq
;

184 } 
	mifc_ifcu
;

186 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

187 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

188 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

191 
__BEGIN_DECLS


194 
	$if_«mëoödex
 (
__c⁄°
 *
__i‚ame
Ë
__THROW
;

195 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

198 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

201 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_IPV6
 = 41,

57 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

58 
	mIPPROTO_ROUTING
 = 43,

59 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

60 
	mIPPROTO_FRAGMENT
 = 44,

61 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

62 
	mIPPROTO_RSVP
 = 46,

63 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

64 
	mIPPROTO_GRE
 = 47,

65 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

66 
	mIPPROTO_ESP
 = 50,

67 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

68 
	mIPPROTO_AH
 = 51,

69 
	#IPPROTO_AH
 
IPPROTO_AH


	)

70 
	mIPPROTO_ICMPV6
 = 58,

71 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

72 
	mIPPROTO_NONE
 = 59,

73 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

74 
	mIPPROTO_DSTOPTS
 = 60,

75 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

76 
	mIPPROTO_MTP
 = 92,

77 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_RAW
 = 255,

87 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

88 
	mIPPROTO_MAX


93 
uöt16_t
 
	tö_p‹t_t
;

98 
	mIPPORT_ECHO
 = 7,

99 
	mIPPORT_DISCARD
 = 9,

100 
	mIPPORT_SYSTAT
 = 11,

101 
	mIPPORT_DAYTIME
 = 13,

102 
	mIPPORT_NETSTAT
 = 15,

103 
	mIPPORT_FTP
 = 21,

104 
	mIPPORT_TELNET
 = 23,

105 
	mIPPORT_SMTP
 = 25,

106 
	mIPPORT_TIMESERVER
 = 37,

107 
	mIPPORT_NAMESERVER
 = 42,

108 
	mIPPORT_WHOIS
 = 43,

109 
	mIPPORT_MTP
 = 57,

111 
	mIPPORT_TFTP
 = 69,

112 
	mIPPORT_RJE
 = 77,

113 
	mIPPORT_FINGER
 = 79,

114 
	mIPPORT_TTYLINK
 = 87,

115 
	mIPPORT_SUPDUP
 = 95,

118 
	mIPPORT_EXECSERVER
 = 512,

119 
	mIPPORT_LOGINSERVER
 = 513,

120 
	mIPPORT_CMDSERVER
 = 514,

121 
	mIPPORT_EFSSERVER
 = 520,

124 
	mIPPORT_BIFFUDP
 = 512,

125 
	mIPPORT_WHOSERVER
 = 513,

126 
	mIPPORT_ROUTESERVER
 = 520,

129 
	mIPPORT_RESERVED
 = 1024,

132 
	mIPPORT_USERRESERVED
 = 5000

137 
uöt32_t
 
	tö_addr_t
;

138 
	sö_addr


140 
ö_addr_t
 
	ms_addr
;

149 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

150 
	#IN_CLASSA_NET
 0xff000000

	)

151 
	#IN_CLASSA_NSHIFT
 24

	)

152 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

153 
	#IN_CLASSA_MAX
 128

	)

155 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

156 
	#IN_CLASSB_NET
 0xffff0000

	)

157 
	#IN_CLASSB_NSHIFT
 16

	)

158 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

159 
	#IN_CLASSB_MAX
 65536

	)

161 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

162 
	#IN_CLASSC_NET
 0xffffff00

	)

163 
	#IN_CLASSC_NSHIFT
 8

	)

164 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

166 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

167 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

169 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

170 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

173 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

175 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

177 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

180 
	#IN_LOOPBACKNET
 127

	)

182 #i‚de‡
INADDR_LOOPBACK


183 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

187 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

188 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

189 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

190 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

194 
	sö6_addr


198 
uöt8_t
 
	mu6_addr8
[16];

199 
uöt16_t
 
	mu6_addr16
[8];

200 
uöt32_t
 
	mu6_addr32
[4];

201 } 
	mö6_u
;

202 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

203 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

204 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

207 c⁄° 
ö6_addr
 
ö6addr_™y
;

208 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

209 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

210 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

212 
	#INET_ADDRSTRLEN
 16

	)

213 
	#INET6_ADDRSTRLEN
 46

	)

217 
	ssockaddr_ö


219 
__SOCKADDR_COMMON
 (
sö_
);

220 
ö_p‹t_t
 
	msö_p‹t
;

221 
ö_addr
 
	msö_addr
;

224 
	msö_zîo
[ (
sockaddr
) -

225 
__SOCKADDR_COMMON_SIZE
 -

226  (
ö_p‹t_t
) -

227  (
ö_addr
)];

231 
	ssockaddr_ö6


233 
__SOCKADDR_COMMON
 (
sö6_
);

234 
ö_p‹t_t
 
	msö6_p‹t
;

235 
uöt32_t
 
	msö6_Êowöfo
;

236 
ö6_addr
 
	msö6_addr
;

237 
uöt32_t
 
	msö6_sc›e_id
;

242 
	sù_mªq


245 
ö_addr
 
	mimr_mu…üddr
;

248 
ö_addr
 
	mimr_öãrÁ˚
;

251 
	sù_mªq_sour˚


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
ö_addr
 
	mimr_sour˚addr
;

264 
	sùv6_mªq


267 
ö6_addr
 
	mùv6mr_mu…üddr
;

270 
	mùv6mr_öãrÁ˚
;

275 
	sgroup_ªq


278 
uöt32_t
 
	mgr_öãrÁ˚
;

281 
sockaddr_°‹age
 
	mgr_group
;

284 
	sgroup_sour˚_ªq


287 
uöt32_t
 
	mg§_öãrÁ˚
;

290 
sockaddr_°‹age
 
	mg§_group
;

293 
sockaddr_°‹age
 
	mg§_sour˚
;

298 
	sù_msfûãr


301 
ö_addr
 
	mimsf_mu…üddr
;

304 
ö_addr
 
	mimsf_öãrÁ˚
;

307 
uöt32_t
 
	mimsf_fmode
;

310 
uöt32_t
 
	mimsf_num§c
;

312 
ö_addr
 
	mimsf_¶i°
[1];

315 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

316 -  (
ö_addr
) \

317 + (
num§c
Ë*  (
ö_addr
))

	)

319 
	sgroup_fûãr


322 
uöt32_t
 
	mgf_öãrÁ˚
;

325 
sockaddr_°‹age
 
	mgf_group
;

328 
uöt32_t
 
	mgf_fmode
;

331 
uöt32_t
 
	mgf_num§c
;

333 
sockaddr_°‹age
 
	mgf_¶i°
[1];

336 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

337 -  (
sockaddr_°‹age
) \

338 + ((
num§c
) \

339 *  (
sockaddr_°‹age
)))

	)

343 
	~<bôs/ö.h
>

352 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

353 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

354 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

355 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

356 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

357 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

358 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

360 
	~<ídün.h
>

363 
	~<bôs/byãsw≠.h
>

365 #ifde‡
__OPTIMIZE__


369 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


372 
	#¡ohl
(
x
Ë(x)

	)

373 
	#¡ohs
(
x
Ë(x)

	)

374 
	#ht⁄l
(
x
Ë(x)

	)

375 
	#ht⁄s
(
x
Ë(x)

	)

377 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


378 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

379 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

380 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

381 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

386 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

387 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

388 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

389 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

390 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

392 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

393 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

394 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

395 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

396 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

398 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

400 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

401 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

402 =
	`ht⁄l
 (0x„800000))

	)

404 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

405 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

406 =
	`ht⁄l
 (0x„c00000))

	)

408 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

409 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

410 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

411 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

413 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

415 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

416 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

417 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

419 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

420 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

421 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

422 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

426 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

429 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

430 
__THROW
;

433 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

434 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

435 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

437 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

438 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

439 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

441 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

442 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

443 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

445 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

446 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

447 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

449 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

450 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

451 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

454 
	sö6_pktöfo


456 
ö6_addr
 
ùi6_addr
;

457 
ùi6_ifödex
;

461 
	sù6_mtuöfo


463 
sockaddr_ö6
 
ù6m_addr
;

464 
uöt32_t
 
ù6m_mtu
;

468 #ifde‡
__USE_GNU


470 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

471 
__THROW
 
__©åibuã_dïªˇãd__
;

472 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

473 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

474 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

475 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

476 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

477 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

478 
__mu…x
, 
__∂usy
)

479 
__THROW
 
__©åibuã_dïªˇãd__
;

480 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

481 
uöt8_t
 **
__çåp
)

482 
__THROW
 
__©åibuã_dïªˇãd__
;

483 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

484 
uöt8_t
 **
__çåp
, 
__ty≥
)

485 
__THROW
 
__©åibuã_dïªˇãd__
;

489 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

490 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

491 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

492 **
__d©abuÂ
Ë
__THROW
;

493 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

494 
__THROW
;

495 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

496 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

497 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

498 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

499 **
__d©abuÂ
Ë
__THROW
;

500 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

501 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

502 **
__d©abuÂ
Ë
__THROW
;

503 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

504 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

508 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

509 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

510 
__£gmíts
Ë
__THROW
;

511 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

512 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

513 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

514 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

515 
__THROW
;

521 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

522 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

523 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

524 
__THROW
;

527 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

528 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

529 
uöt32_t
 
__num§c
,

530 
__c⁄°
 
ö_addr
 *
__¶i°
)

531 
__THROW
;

535 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

536 
__c⁄°
 
sockaddr
 *
__group
,

537 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

538 
uöt32_t
 *
__num§c
,

539 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

542 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

543 
__c⁄°
 
sockaddr
 *
__group
,

544 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

549 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	#__√ed_sig£t_t


	)

29 
	~<sig«l.h
>

30 
	~<bôs/±hªadty≥s.h
>

31 
	~<bôs/£tjmp.h
>

32 
	~<bôs/w‹dsize.h
>

38 
	mPTHREAD_CREATE_JOINABLE
,

39 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

40 
	mPTHREAD_CREATE_DETACHED


41 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

48 
	mPTHREAD_MUTEX_TIMED_NP
,

49 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

50 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

51 
	mPTHREAD_MUTEX_ADAPTIVE_NP


52 #ifde‡
__USE_UNIX98


54 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

55 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

56 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

57 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


59 #ifde‡
__USE_GNU


61 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


66 #ifde‡
__USE_GNU


70 
	mPTHREAD_MUTEX_STALLED_NP
,

71 
	mPTHREAD_MUTEX_ROBUST_NP


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_UNIX98


430 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

433 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

436 #ifde‡
__USE_GNU


441 
	$±hªad_yõld
 (Ë
__THROW
;

446 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

447 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

448 
__THROW
 
	`__n⁄nuŒ
 ((3));

451 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

452 
˝u_£t_t
 *
__˝u£t
)

453 
__THROW
 
	`__n⁄nuŒ
 ((3));

466 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

467 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

478 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

482 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

485 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

490 
	`±hªad_ã°ˇn˚l
 ();

499 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

500 
__mask_was_ßved
;

501 } 
__ˇn˚l_jmp_buf
[1];

502 *
__∑d
[4];

503 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

506 #i‚de‡
__˛ónup_f˘_©åibuã


507 
	#__˛ónup_f˘_©åibuã


	)

512 
	s__±hªad_˛ónup_‰ame


514 (*
__ˇn˚l_routöe
) (*);

515 *
__ˇn˚l_¨g
;

516 
__do_ô
;

517 
__ˇn˚l_ty≥
;

520 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


521 #ifde‡
__˝lu•lus


523 ˛as†
	c__±hªad_˛ónup_˛ass


525 (*
__ˇn˚l_routöe
) (*);

526 *
__ˇn˚l_¨g
;

527 
__do_ô
;

528 
__ˇn˚l_ty≥
;

530 
public
:

531 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

532 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

533 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

534 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

535 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

536 &
__ˇn˚l_ty≥
); 
	}
}

537 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

547 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

549 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

553 
	#±hªad_˛ónup_p›
(
execuã
) \

554 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

555 } 0)

	)

557 #ifde‡
__USE_GNU


561 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

563 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

564 
__˛‰ame
.
	`__de„r
 ()

	)

569 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

570 
__˛‰ame
.
	`__ª°‹e
 (); \

571 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

572 } 0)

	)

579 
__exã∫_ölöe
 

580 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

582 i‡(
__‰ame
->
__do_ô
)

583 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

584 
	}
}

593 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

595 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

596 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

597 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

598 .
__do_ô
 = 1 };

	)

602 
	#±hªad_˛ónup_p›
(
execuã
) \

603 
__˛‰ame
.
__do_ô
 = (
execuã
); \

604 } 0)

	)

606 #ifde‡
__USE_GNU


610 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

612 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

613 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

614 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

615 .
__do_ô
 = 1 }; \

616 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

617 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

622 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

623 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

624 
__˛‰ame
.
__do_ô
 = (
execuã
); \

625 } 0)

	)

636 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

638 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

639 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

640 *
__ˇn˚l_¨g
 = (
¨g
); \

641 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

642 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

643 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

645 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

646 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

650 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

651 dÿ{

	)

652 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

653 
__˛ónup_f˘_©åibuã
;

657 
	#±hªad_˛ónup_p›
(
execuã
) \

659 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

660 i‡(
execuã
) \

661 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

662 } 0)

	)

663 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

664 
__˛ónup_f˘_©åibuã
;

666 #ifde‡
__USE_GNU


670 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

672 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

673 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

674 *
__ˇn˚l_¨g
 = (
¨g
); \

675 
nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) \

676 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

677 i‡(
	`__buûtö_ex≥˘
 (
nŸ_fú°_ˇŒ
, 0)) \

679 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

680 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

684 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

685 dÿ{

	)

686 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

687 
__˛ónup_f˘_©åibuã
;

692 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

694 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

695 i‡(
execuã
) \

696 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

697 
	}
} 0)

	)

698 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

699 
__˛ónup_f˘_©åibuã
;

703 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

705 #i‚de‡
SHARED


706 
	`__©åibuã__
 ((
__wók__
))

712 
__jmp_buf_èg
;

713 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

719 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

720 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

721 
__THROW
 
	`__n⁄nuŒ
 ((1));

724 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1));

728 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

729 
__THROW
 
	`__n⁄nuŒ
 ((1));

732 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

733 
__THROW
 
	`__n⁄nuŒ
 ((1));

735 #ifde‡
__USE_XOPEN2K


737 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

738 
__c⁄°
 
time•ec
 *
__ª°ri˘


739 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

743 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

744 
__THROW
 
	`__n⁄nuŒ
 ((1));

747 #ifde‡
__USE_UNIX98


749 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

750 
__ª°ri˘
 
__muãx
,

751 *
__ª°ri˘
 
__¥io˚ûög
)

752 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

756 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

757 
__¥io˚ûög
,

758 *
__ª°ri˘
 
__ﬁd_˚ûög
)

759 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

763 #ifde‡
__USE_GNU


765 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

774 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

775 
__THROW
 
	`__n⁄nuŒ
 ((1));

778 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1));

782 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

783 
__ª°ri˘
 
__©å
,

784 *
__ª°ri˘
 
__psh¨ed
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

788 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

789 
__psh¨ed
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1));

792 #ifde‡
__USE_UNIX98


794 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


795 
__©å
, *
__ª°ri˘
 
__köd
)

796 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

801 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__¥Ÿocﬁ
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

812 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

813 
__¥Ÿocﬁ
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

818 
__ª°ri˘
 
__©å
,

819 *
__ª°ri˘
 
__¥io˚ûög
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

823 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

824 
__¥io˚ûög
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_GNU


830 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

831 *
__robu°√ss
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

835 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

836 
__robu°√ss
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


846 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

847 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


848 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1));

855 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

860 
__THROW
 
	`__n⁄nuŒ
 ((1));

862 #ifde‡
__USE_XOPEN2K


864 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

865 
__c⁄°
 
time•ec
 *
__ª°ri˘


866 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

870 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

871 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

877 #ifde‡
__USE_XOPEN2K


879 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 
__c⁄°
 
time•ec
 *
__ª°ri˘


881 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

885 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

893 
__THROW
 
	`__n⁄nuŒ
 ((1));

896 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

901 
__ª°ri˘
 
__©å
,

902 *
__ª°ri˘
 
__psh¨ed
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

906 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

907 
__psh¨ed
)

908 
__THROW
 
	`__n⁄nuŒ
 ((1));

911 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

912 
__ª°ri˘
 
__©å
,

913 *
__ª°ri˘
 
__¥ef
)

914 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

917 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

918 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

927 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


928 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

931 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

948 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

949 
	`__n⁄nuŒ
 ((1, 2));

958 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

959 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

960 
__c⁄°
 
time•ec
 *
__ª°ri˘


961 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

966 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1));

970 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

975 
__ª°ri˘
 
__©å
,

976 *
__ª°ri˘
 
__psh¨ed
)

977 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

980 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

981 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

983 #ifde‡
__USE_XOPEN2K


985 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

986 
__ª°ri˘
 
__©å
,

987 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

988 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

992 
__˛ockid_t
 
__˛ock_id
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

997 #ifde‡
__USE_XOPEN2K


1002 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1));

1006 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1011 
__THROW
 
	`__n⁄nuŒ
 ((1));

1014 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1015 
__THROW
 
	`__n⁄nuŒ
 ((1));

1018 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1026 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1027 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1028 
__©å
, 
__cou¡
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1041 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1042 
__THROW
 
	`__n⁄nuŒ
 ((1));

1045 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1049 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1050 
__ª°ri˘
 
__©å
,

1051 *
__ª°ri˘
 
__psh¨ed
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1055 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1056 
__psh¨ed
)

1057 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1070 (*
__de°r_fun˘i⁄
) (*))

1071 
__THROW
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1077 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1080 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1081 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1084 #ifde‡
__USE_XOPEN2K


1086 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1087 
__˛ockid_t
 *
__˛ock_id
)

1088 
__THROW
 
	`__n⁄nuŒ
 ((2));

1103 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1104 (*
__∑ª¡
) (),

1105 (*
__chûd
Ë()Ë
__THROW
;

1108 #ifde‡
__USE_EXTERN_INLINES


1110 
__exã∫_ölöe
 

1111 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1113  
__thªad1
 =
__thªad2
;

1114 
	}
}

1117 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

75 (*
	t__sigh™dÀr_t
) ();

80 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

82 #ifde‡
__USE_GNU


83 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

84 
__THROW
;

90 
__BEGIN_NAMESPACE_STD


91 #ifde‡
__USE_BSD


92 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

96 #ifde‡
__REDIRECT_NTH


97 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

98 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

99 
__sysv_sig«l
);

101 
	#sig«l
 
__sysv_sig«l


	)

104 
__END_NAMESPACE_STD


106 #ifde‡
__USE_XOPEN


109 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

110 
__THROW
;

116 #ifde‡
__USE_POSIX


117 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

120 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


124 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

127 
__BEGIN_NAMESPACE_STD


129 
	$øi£
 (
__sig
Ë
__THROW
;

130 
__END_NAMESPACE_STD


132 #ifde‡
__USE_SVID


134 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

135 
__THROW
;

136 
	$gsig«l
 (
__sig
Ë
__THROW
;

139 #ifde‡
__USE_MISC


141 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 #ifde‡
__FAVOR_BSD


158 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

160 #ifde‡
__USE_XOPEN


161 #ifde‡
__GNUC__


162 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

165 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

171 #ifde‡
__USE_BSD


178 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

181 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

184 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

187 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

191 #ifde‡
__USE_MISC


192 
	#NSIG
 
_NSIG


	)

195 #ifde‡
__USE_GNU


196 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

200 #ifde‡
__USE_BSD


201 
__sigh™dÀr_t
 
	tsig_t
;

204 #ifde‡
__USE_POSIX


206 #ifde‡
__USE_POSIX199309


208 
	#__√ed_time•ec


	)

209 
	~<time.h
>

212 
	~<bôs/sigöfo.h
>

216 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

231 #ifde‡
__USE_GNU


233 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

236 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

237 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

240 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

241 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	~<bôs/siga˘i⁄.h
>

249 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

250 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

257 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

260 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

261 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

264 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

271 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 #ifde‡
__USE_POSIX199309


279 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

280 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

287 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

288 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

289 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

290 
	`__n⁄nuŒ
 ((1));

294 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

295 
__THROW
;

300 #ifde‡
__USE_BSD


304 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

305 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

308 
	ssigvec


310 
__sigh™dÀr_t
 
sv_h™dÀr
;

311 
sv_mask
;

313 
sv_Êags
;

314 
	#sv_⁄°ack
 
sv_Êags


	)

318 
	#SV_ONSTACK
 (1 << 0)

	)

319 
	#SV_INTERRUPT
 (1 << 1)

	)

320 
	#SV_RESETHAND
 (1 << 2)

	)

328 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

329 
sigvec
 *
__ovec
Ë
__THROW
;

333 
	~<bôs/sigc⁄ãxt.h
>

336 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

341 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


342 
	#__√ed_size_t


	)

343 
	~<°ddef.h
>

348 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

350 
	~<bôs/sig°ack.h
>

351 #ifde‡
__USE_XOPEN


353 
	~<sys/uc⁄ãxt.h
>

359 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

360 
__THROW
 
__©åibuã_dïªˇãd__
;

364 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

365 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

369 #ifde‡
__USE_XOPEN_EXTENDED


373 
	$sighﬁd
 (
__sig
Ë
__THROW
;

376 
	$sigªl£
 (
__sig
Ë
__THROW
;

379 
	$sigign‹e
 (
__sig
Ë
__THROW
;

382 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

385 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


388 
	~<bôs/±hªadty≥s.h
>

389 
	~<bôs/sigthªad.h
>

396 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

398 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

402 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #ifde‡
__USE_XOPEN


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

89 
__BEGIN_NAMESPACE_STD


90 #i‚de‡
__USE_FILE_OFFSET64


91 
_G_Âos_t
 
	tÂos_t
;

93 
_G_Âos64_t
 
	tÂos_t
;

95 
__END_NAMESPACE_STD


96 #ifde‡
__USE_LARGEFILE64


97 
_G_Âos64_t
 
	tÂos64_t
;

101 
	#_IOFBF
 0

	)

102 
	#_IOLBF
 1

	)

103 
	#_IONBF
 2

	)

107 #i‚de‡
BUFSIZ


108 
	#BUFSIZ
 
_IO_BUFSIZ


	)

114 #i‚de‡
EOF


115 
	#EOF
 (-1)

	)

121 
	#SEEK_SET
 0

	)

122 
	#SEEK_CUR
 1

	)

123 
	#SEEK_END
 2

	)

126 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


128 
	#P_tmpdú
 "/tmp"

	)

141 
	~<bôs/°dio_lim.h
>

145 
_IO_FILE
 *
°dö
;

146 
_IO_FILE
 *
°dout
;

147 
_IO_FILE
 *
°dîr
;

149 
	#°dö
 
°dö


	)

150 
	#°dout
 
°dout


	)

151 
	#°dîr
 
°dîr


	)

153 
__BEGIN_NAMESPACE_STD


155 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

157 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

158 
__END_NAMESPACE_STD


160 #ifde‡
__USE_ATFILE


162 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

163 
__c⁄°
 *
__√w
Ë
__THROW
;

166 
__BEGIN_NAMESPACE_STD


171 #i‚de‡
__USE_FILE_OFFSET64


172 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

174 #ifde‡
__REDIRECT


175 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

177 
	#tmpfûe
 
tmpfûe64


	)

181 #ifde‡
__USE_LARGEFILE64


182 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

186 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

187 
__END_NAMESPACE_STD


189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

209 
__BEGIN_NAMESPACE_STD


214 
	`f˛o£
 (
FILE
 *
__°ªam
);

219 
	`fÊush
 (
FILE
 *
__°ªam
);

220 
__END_NAMESPACE_STD


222 #ifde‡
__USE_MISC


229 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_GNU


239 
	`f˛o£Æl
 ();

243 
__BEGIN_NAMESPACE_STD


244 #i‚de‡
__USE_FILE_OFFSET64


249 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

250 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

255 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

256 
__c⁄°
 *
__ª°ri˘
 
__modes
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

259 #ifde‡
__REDIRECT


260 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

261 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

262 
__wur
;

263 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

264 
__c⁄°
 *
__ª°ri˘
 
__modes
,

265 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

266 
__wur
;

268 
	#f›í
 
f›í64


	)

269 
	#‰e›í
 
‰e›í64


	)

272 
__END_NAMESPACE_STD


273 #ifde‡
__USE_LARGEFILE64


274 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

275 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

276 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

277 
__c⁄°
 *
__ª°ri˘
 
__modes
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

281 #ifdef 
__USE_POSIX


283 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

286 #ifdef 
__USE_GNU


289 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

294 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

295 
__THROW
 
__wur
;

300 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
__BEGIN_NAMESPACE_STD


307 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

311 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

312 
__modes
, 
size_t
 
__n
Ë
__THROW
;

313 
__END_NAMESPACE_STD


315 #ifdef 
__USE_BSD


318 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

319 
size_t
 
__size
Ë
__THROW
;

322 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
__BEGIN_NAMESPACE_STD


331 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

332 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

337 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

339 
	$•rötf
 (*
__ª°ri˘
 
__s
,

340 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

346 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

347 
_G_va_li°
 
__¨g
);

352 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

354 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

355 
_G_va_li°
 
__¨g
Ë
__THROW
;

356 
__END_NAMESPACE_STD


358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


359 
__BEGIN_NAMESPACE_C99


361 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

363 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

365 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

367 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

368 
__END_NAMESPACE_C99


371 #ifde‡
__USE_GNU


374 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

375 
_G_va_li°
 
__¨g
)

376 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

377 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

378 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

379 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

380 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

381 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

382 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

390 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

391 
_G_va_li°
 
__¨g
)

392 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

393 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

394 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

398 
__BEGIN_NAMESPACE_STD


403 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

404 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

409 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

411 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

412 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

414 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

415 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

416 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

417 #ifde‡
__REDIRECT


421 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

422 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

423 
__isoc99_fsˇnf
Ë
__wur
;

424 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

425 
__isoc99_sˇnf
Ë
__wur
;

426 
	`__REDIRECT
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

427 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

428 
__isoc99_ssˇnf
Ë
__THROW
;

430 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

431 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

432 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

435 
	#fsˇnf
 
__isoc99_fsˇnf


	)

436 
	#sˇnf
 
__isoc99_sˇnf


	)

437 
	#ssˇnf
 
__isoc99_ssˇnf


	)

441 
__END_NAMESPACE_STD


443 #ifdef 
__USE_ISOC99


444 
__BEGIN_NAMESPACE_C99


449 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

450 
_G_va_li°
 
__¨g
)

451 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

457 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

461 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

463 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

465 #i‡!
deföed
 
__USE_GNU
 \

466 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

467 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

468 #ifde‡
__REDIRECT


472 
	`__REDIRECT
 (
vfsˇnf
,

473 (
FILE
 *
__ª°ri˘
 
__s
,

474 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

475 
__isoc99_vfsˇnf
)

476 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

477 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

478 
_G_va_li°
 
__¨g
), 
__isoc99_vfsˇnf
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

480 
	`__REDIRECT
 (
vssˇnf
,

481 (
__c⁄°
 *
__ª°ri˘
 
__s
,

482 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

483 
__isoc99_vssˇnf
)

484 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

486 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

487 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

488 
_G_va_li°
 
__¨g
Ë
__wur
;

489 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

490 
_G_va_li°
 
__¨g
Ë
__wur
;

491 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

493 
_G_va_li°
 
__¨g
Ë
__THROW
;

494 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

495 
	#vsˇnf
 
__isoc99_vsˇnf


	)

496 
	#vssˇnf
 
__isoc99_vssˇnf


	)

500 
__END_NAMESPACE_C99


504 
__BEGIN_NAMESPACE_STD


509 
	`fgëc
 (
FILE
 *
__°ªam
);

510 
	`gëc
 (
FILE
 *
__°ªam
);

516 
	`gëch¨
 ();

517 
__END_NAMESPACE_STD


521 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

523 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


528 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

529 
	`gëch¨_u∆ocked
 ();

532 #ifde‡
__USE_MISC


539 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

543 
__BEGIN_NAMESPACE_STD


551 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

552 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

558 
	`putch¨
 (
__c
);

559 
__END_NAMESPACE_STD


563 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

565 #ifde‡
__USE_MISC


572 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

575 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


580 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

581 
	`putch¨_u∆ocked
 (
__c
);

585 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

586 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

588 
	`gëw
 (
FILE
 *
__°ªam
);

591 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

595 
__BEGIN_NAMESPACE_STD


600 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

601 
__wur
;

608 *
	$gës
 (*
__s
Ë
__wur
;

609 
__END_NAMESPACE_STD


611 #ifde‡
__USE_GNU


618 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

619 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

623 #ifdef 
__USE_GNU


634 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

635 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

636 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

637 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

638 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

639 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

648 
size_t
 *
__ª°ri˘
 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 
__BEGIN_NAMESPACE_STD


658 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

664 
	`puts
 (
__c⁄°
 *
__s
);

671 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

678 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

685 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

686 
__END_NAMESPACE_STD


688 #ifde‡
__USE_GNU


695 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
);

699 #ifde‡
__USE_MISC


706 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

713 
__BEGIN_NAMESPACE_STD


718 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

723 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

728 
	`ªwöd
 (
FILE
 *
__°ªam
);

729 
__END_NAMESPACE_STD


736 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


737 #i‚de‡
__USE_FILE_OFFSET64


742 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

747 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

749 #ifde‡
__REDIRECT


750 
	`__REDIRECT
 (
f£eko
,

751 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

752 
f£eko64
);

753 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

755 
	#f£eko
 
f£eko64


	)

756 
	#·ñlo
 
·ñlo64


	)

761 
__BEGIN_NAMESPACE_STD


762 #i‚de‡
__USE_FILE_OFFSET64


767 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

772 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

774 #ifde‡
__REDIRECT


775 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

776 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

777 
	`__REDIRECT
 (
f£ços
,

778 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

780 
	#fgëpos
 
fgëpos64


	)

781 
	#f£ços
 
f£ços64


	)

784 
__END_NAMESPACE_STD


786 #ifde‡
__USE_LARGEFILE64


787 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

788 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

789 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

790 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

793 
__BEGIN_NAMESPACE_STD


795 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

797 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

799 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

800 
__END_NAMESPACE_STD


802 #ifde‡
__USE_MISC


804 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

805 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

806 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

810 
__BEGIN_NAMESPACE_STD


815 
	`≥º‹
 (
__c⁄°
 *
__s
);

816 
__END_NAMESPACE_STD


822 
	~<bôs/sys_îæi°.h
>

825 #ifdef 
__USE_POSIX


827 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 #ifde‡
__USE_MISC


832 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

837 
deföed
 
__USE_MISC
)

842 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

848 
	`p˛o£
 (
FILE
 *
__°ªam
);

852 #ifdef 
__USE_POSIX


854 *
	$˘îmid
 (*
__s
Ë
__THROW
;

858 #ifde‡
__USE_XOPEN


860 *
	`cu£rid
 (*
__s
);

864 #ifdef 
__USE_GNU


865 
ob°ack
;

868 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

869 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

870 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

871 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

872 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

873 
_G_va_li°
 
__¨gs
)

874 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

878 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


882 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

886 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

889 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

892 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


896 
	#__√ed_gë›t


	)

897 
	~<gë›t.h
>

902 #ifde‡
__USE_EXTERN_INLINES


903 
	~<bôs/°dio.h
>

905 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


906 
	~<bôs/°dio2.h
>

908 #ifde‡
__LDBL_COMPAT


909 
	~<bôs/°dio-ldbl.h
>

912 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
(
	`__WAIT_INT
(°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


502 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

505 #ifde‡
__USE_XOPEN2K


507 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

511 
__BEGIN_NAMESPACE_STD


513 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

517 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

518 
__END_NAMESPACE_STD


520 #ifdef 
__USE_MISC


523 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

524 
__THROW
 
	`__n⁄nuŒ
 ((1));

527 
__BEGIN_NAMESPACE_STD


531 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

532 
__END_NAMESPACE_STD


534 #ifde‡
__USE_ISOC99


535 
__BEGIN_NAMESPACE_C99


538 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

539 
__END_NAMESPACE_C99


543 
__BEGIN_NAMESPACE_STD


545 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

546 
__END_NAMESPACE_STD


550 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

551 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

553 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


557 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

560 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


563 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

564 
__THROW
 
	`__n⁄nuŒ
 ((2));

567 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

570 #ifdef 
__USE_MISC


574 
	$˛óªnv
 (Ë
__THROW
;

578 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


583 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

593 #i‚de‡
__USE_FILE_OFFSET64


594 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

596 #ifde‡
__REDIRECT


597 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

598 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

600 
	#mk°emp
 
mk°emp64


	)

603 #ifde‡
__USE_LARGEFILE64


604 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

608 #ifde‡
__USE_BSD


614 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

617 #ifde‡
__USE_GNU


624 #i‚de‡
__USE_FILE_OFFSET64


625 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

627 #ifde‡
__REDIRECT


628 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

629 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

631 
	#mko°emp
 
mko°emp64


	)

634 #ifde‡
__USE_LARGEFILE64


635 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 
__BEGIN_NAMESPACE_STD


645 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

646 
__END_NAMESPACE_STD


649 #ifdef 
__USE_GNU


652 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

653 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


662 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

663 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

668 #i‚de‡
__COMPAR_FN_T


669 
	#__COMPAR_FN_T


	)

670 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

672 #ifdef 
__USE_GNU


673 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

677 
__BEGIN_NAMESPACE_STD


680 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

681 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

682 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

686 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

687 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

691 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

692 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

693 
__END_NAMESPACE_STD


695 #ifde‡
__USE_ISOC99


696 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

697 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

701 
__BEGIN_NAMESPACE_STD


705 
div_t
 
	$div
 (
__numî
, 
__díom
)

706 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

707 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

708 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

709 
__END_NAMESPACE_STD


711 #ifde‡
__USE_ISOC99


712 
__BEGIN_NAMESPACE_C99


713 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

714 
__díom
)

715 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

716 
__END_NAMESPACE_C99


720 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


727 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

728 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

733 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

734 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

739 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

740 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

743 #ifde‡
__USE_MISC


745 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

746 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

747 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

748 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

749 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

750 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

751 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

752 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

757 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

758 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

759 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

760 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

761 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

762 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

764 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

765 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

766 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

767 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

768 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

769 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

770 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

771 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

776 
__BEGIN_NAMESPACE_STD


779 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

782 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

783 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

786 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

790 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

791 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

793 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

794 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

795 
__THROW
;

796 
__END_NAMESPACE_STD


799 #ifde‡
__USE_SVID


804 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

808 #ifde‡
__USE_XOPEN_EXTENDED


815 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

816 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

817 **
__ª°ri˘
 
__vÆuï
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

822 #ifde‡
__USE_XOPEN


824 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_XOPEN2K


832 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

835 #ifde‡
__USE_XOPEN


840 
	$gø¡±
 (
__fd
Ë
__THROW
;

844 
	$u∆ock±
 (
__fd
Ë
__THROW
;

849 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

852 #ifde‡
__USE_GNU


856 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

857 
__THROW
 
	`__n⁄nuŒ
 ((2));

860 
	`gë±
 ();

863 #ifde‡
__USE_BSD


867 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

868 
__THROW
 
	`__n⁄nuŒ
 ((1));

873 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


874 
	~<bôs/°dlib.h
>

876 #ifde‡
__LDBL_COMPAT


877 
	~<bôs/°dlib-ldbl.h
>

881 #unde‡
__√ed_mÆloc_™d_ˇŒoc


883 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 
__BEGIN_NAMESPACE_STD


38 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

39 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

40 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

43 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

44 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

45 
__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


51 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

52 
__c
, 
size_t
 
__n
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

57 
__BEGIN_NAMESPACE_STD


59 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

62 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

66 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

67 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

68 
__END_NAMESPACE_STD


70 #ifde‡
__USE_GNU


73 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

74 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

82 
__BEGIN_NAMESPACE_STD


84 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

87 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

88 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

93 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

95 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

96 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

99 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

100 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

102 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

110 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
__END_NAMESPACE_STD


114 #ifde‡
__USE_GNU


118 
	~<xloˇÀ.h
>

121 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

124 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

125 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

128 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


130 *
	$°rdup
 (
__c⁄°
 *
__s
)

131 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

137 #i‡
deföed
 
__USE_GNU


138 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

139 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

142 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


144 
	#°rdu∑
(
s
) \

145 (
__exãnsi⁄__
 \

147 
__c⁄°
 *
__ﬁd
 = (
s
); \

148 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

149 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 
	}
}))

	)

154 
	#°∫du∑
(
s
, 
n
) \

155 (
__exãnsi⁄__
 \

157 
__c⁄°
 *
__ﬁd
 = (
s
); \

158 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

159 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

160 
__√w
[
__Àn
] = '\0'; \

161 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

162 }))

	)

165 
__BEGIN_NAMESPACE_STD


167 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

168 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

170 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

171 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

172 
__END_NAMESPACE_STD


174 #ifde‡
__USE_GNU


177 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

178 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

181 
__BEGIN_NAMESPACE_STD


184 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

185 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

188 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

189 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

191 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

194 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

195 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

199 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

200 
__THROW
 
	`__n⁄nuŒ
 ((2));

201 
__END_NAMESPACE_STD


205 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

206 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

207 **
__ª°ri˘
 
__ßve_±r
)

208 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

209 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


210 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

211 **
__ª°ri˘
 
__ßve_±r
)

212 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

215 #ifde‡
__USE_GNU


217 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

218 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

221 #ifde‡
__USE_GNU


225 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

226 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

227 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

231 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

232 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

233 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

234 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

235 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

240 
__BEGIN_NAMESPACE_STD


242 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

243 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__END_NAMESPACE_STD


246 #ifdef 
__USE_GNU


249 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

250 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

254 
__BEGIN_NAMESPACE_STD


256 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

257 
__END_NAMESPACE_STD


258 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


266 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

271 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

272 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

274 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

275 
__THROW
 
	`__n⁄nuŒ
 ((2));

276 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

281 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

282 
__THROW
 
	`__n⁄nuŒ
 ((2));

286 #ifde‡
__USE_GNU


288 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

296 #ifde‡
__USE_BSD


298 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

302 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

306 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

309 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

310 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

313 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

314 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

318 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifdef 
__USE_GNU


323 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

324 #ifde‡
__GNUC__


325 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

326 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

331 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

332 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

336 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

339 #ifdef 
__USE_GNU


342 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

343 
__loˇÀ_t
 
__loc
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

346 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

347 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

348 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

351 #ifdef 
__USE_BSD


354 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

359 #ifdef 
__USE_GNU


361 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

362 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

368 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

370 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

375 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

376 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

377 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

379 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

380 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

383 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

386 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

388 #i‚de‡
ba£«me


393 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

398 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

399 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

400 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


420 
	~<bôs/°rög.h
>

423 
	~<bôs/°rög2.h
>

426 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


428 
	~<bôs/°rög3.h
>

432 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3)

136 
	#__w¨nde˛
(
«me
, 
msg
) \

137 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

138 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

139 
	#__îr‹de˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

142 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

143 
	#__w¨«âr
(
msg
)

	)

144 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

148 #i‡
__GNUC_PREREQ
 (2,97)

150 
	#__Êex¨r
 []

	)

152 #ifde‡
__GNUC__


153 
	#__Êex¨r
 [0]

	)

155 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

156 
	#__Êex¨r
 []

	)

159 
	#__Êex¨r
 [1]

	)

175 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

177 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 #ifde‡
__˝lu•lus


179 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

180 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

185 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

186 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

199 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

200 
	#__©åibuã__
(
xyz
Ë

	)

206 #i‡
__GNUC_PREREQ
 (2,96)

207 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

209 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (2,96)

216 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

218 
	#__©åibuã_puª__


	)

224 #i‡
__GNUC_PREREQ
 (3,1)

225 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

226 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

229 
	#__©åibuã_noölöe__


	)

233 #i‡
__GNUC_PREREQ
 (3,2)

234 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

236 
	#__©åibuã_dïªˇãd__


	)

245 #i‡
__GNUC_PREREQ
 (2,8)

246 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

248 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

255 #i‡
__GNUC_PREREQ
 (2,97)

256 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

257 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

264 #i‡
__GNUC_PREREQ
 (3,3)

265 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

267 
	#__n⁄nuŒ
(
∑øms
)

	)

272 #i‡
__GNUC_PREREQ
 (3,4)

273 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

274 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

275 #i‡
__USE_FORTIFY_LEVEL
 > 0

276 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

279 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

281 #i‚de‡
__wur


282 
	#__wur


	)

286 #i‡
__GNUC_PREREQ
 (3,2)

287 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

289 
	#__Æways_ölöe
 
__ölöe


	)

294 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

295 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


296 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

297 #i‡
__GNUC_PREREQ
 (4,3)

298 
	#__exã∫_Æways_ölöe
 \

299 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

301 
	#__exã∫_Æways_ölöe
 \

302 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

305 
	#__exã∫_ölöe
 
__ölöe


	)

306 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

312 #i‡
__GNUC_PREREQ
 (4,3)

313 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

314 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

321 #i‡!
__GNUC_PREREQ
 (2,8)

322 
	#__exãnsi⁄__


	)

326 #i‡!
__GNUC_PREREQ
 (2,92)

327 
	#__ª°ri˘


	)

333 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


334 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

336 #ifde‡
__GNUC__


337 
	#__ª°ri˘_¨r


	)

339 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

340 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

343 
	#__ª°ri˘_¨r


	)

348 
	~<bôs/w‹dsize.h
>

350 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


351 
	#__LDBL_COMPAT
 1

	)

352 #ifde‡
__REDIRECT


353 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

354 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

355 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

356 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

357 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

358 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

359 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

360 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

361 
	#__LDBL_REDIR_DECL
(
«me
) \

362 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

363 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

364 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

365 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

366 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

369 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

372 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

373 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

374 
	#__LDBL_REDIR_DECL
(
«me
)

	)

375 #ifde‡
__REDIRECT


376 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

377 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

378 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/epoll.h

19 #i‚def 
_SYS_EPOLL_H


20 
	#_SYS_EPOLL_H
 1

	)

22 
	~<°döt.h
>

23 
	~<sys/ty≥s.h
>

26 
	~<bôs/sig£t.h
>

28 #i‚de‡
__sig£t_t_deföed


29 
	#__sig£t_t_deföed


	)

30 
__sig£t_t
 
	tsig£t_t
;

34 
	eEPOLL_EVENTS


36 
	mEPOLLIN
 = 0x001,

37 
	#EPOLLIN
 
EPOLLIN


	)

38 
	mEPOLLPRI
 = 0x002,

39 
	#EPOLLPRI
 
EPOLLPRI


	)

40 
	mEPOLLOUT
 = 0x004,

41 
	#EPOLLOUT
 
EPOLLOUT


	)

42 
	mEPOLLRDNORM
 = 0x040,

43 
	#EPOLLRDNORM
 
EPOLLRDNORM


	)

44 
	mEPOLLRDBAND
 = 0x080,

45 
	#EPOLLRDBAND
 
EPOLLRDBAND


	)

46 
	mEPOLLWRNORM
 = 0x100,

47 
	#EPOLLWRNORM
 
EPOLLWRNORM


	)

48 
	mEPOLLWRBAND
 = 0x200,

49 
	#EPOLLWRBAND
 
EPOLLWRBAND


	)

50 
	mEPOLLMSG
 = 0x400,

51 
	#EPOLLMSG
 
EPOLLMSG


	)

52 
	mEPOLLERR
 = 0x008,

53 
	#EPOLLERR
 
EPOLLERR


	)

54 
	mEPOLLHUP
 = 0x010,

55 
	#EPOLLHUP
 
EPOLLHUP


	)

56 
	mEPOLLRDHUP
 = 0x2000,

57 
	#EPOLLRDHUP
 
EPOLLRDHUP


	)

58 
	mEPOLLONESHOT
 = (1 << 30),

59 
	#EPOLLONESHOT
 
EPOLLONESHOT


	)

60 
	mEPOLLET
 = (1 << 31)

61 
	#EPOLLET
 
EPOLLET


	)

66 
	#EPOLL_CTL_ADD
 1

	)

67 
	#EPOLL_CTL_DEL
 2

	)

68 
	#EPOLL_CTL_MOD
 3

	)

71 
	uïﬁl_d©a


73 *
	m±r
;

74 
	mfd
;

75 
uöt32_t
 
	mu32
;

76 
uöt64_t
 
	mu64
;

77 } 
	tïﬁl_d©a_t
;

79 
	sïﬁl_evít


81 
uöt32_t
 
	mevíts
;

82 
ïﬁl_d©a_t
 
	md©a
;

83 } 
__©åibuã__
 ((
__∑cked__
));

86 
__BEGIN_DECLS


92 
	$ïﬁl_¸óã
 (
__size
Ë
__THROW
;

101 
	$ïﬁl_˘l
 (
__ïfd
, 
__›
, 
__fd
,

102 
ïﬁl_evít
 *
__evít
Ë
__THROW
;

115 
	`ïﬁl_waô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

116 
__maxevíts
, 
__timeout
);

124 
	`ïﬁl_pwaô
 (
__ïfd
, 
ïﬁl_evít
 *
__evíts
,

125 
__maxevíts
, 
__timeout
,

126 
__c⁄°
 
__sig£t_t
 *
__ss
);

128 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/ipc.h

19 #i‚de‡
_SYS_IPC_H


20 
	#_SYS_IPC_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

29 
	~<bôs/ù˘y≥s.h
>

30 
	~<bôs/ùc.h
>

32 #i‚de‡
__uid_t_deföed


33 
__uid_t
 
	tuid_t
;

34 
	#__uid_t_deföed


	)

37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__mode_t_deföed


43 
__mode_t
 
	tmode_t
;

44 
	#__mode_t_deföed


	)

47 #i‚de‡
__key_t_deföed


48 
__key_t
 
	tkey_t
;

49 
	#__key_t_deföed


	)

52 
__BEGIN_DECLS


55 
key_t
 
	$·ok
 (
__c⁄°
 *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

57 
__END_DECLS


	@/usr/include/sys/sem.h

19 #i‚de‡
_SYS_SEM_H


20 
	#_SYS_SEM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/£m.h
>

33 #ifde‡
__USE_GNU


34 
	#__√ed_time•ec


	)

35 
	~<time.h
>

42 
	s£mbuf


44 
	m£m_num
;

45 
	m£m_›
;

46 
	m£m_Êg
;

50 
__BEGIN_DECLS


53 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

56 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

59 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

61 #ifde‡
__USE_GNU


63 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

64 
__c⁄°
 
time•ec
 *
__timeout
Ë
__THROW
;

67 
__END_DECLS


	@/usr/include/sys/socket.h

21 #i‚def 
_SYS_SOCKET_H


22 
	#_SYS_SOCKET_H
 1

	)

24 
	~<„©uªs.h
>

26 
	g__BEGIN_DECLS


28 
	~<sys/uio.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

36 
	~<bôs/sockë.h
>

38 #ifde‡
__USE_BSD


41 
	sosockaddr


43 
	mß_Ámûy
;

44 
	mß_d©a
[14];

52 
	mSHUT_RD
 = 0,

53 
	#SHUT_RD
 
SHUT_RD


	)

54 
	mSHUT_WR
,

55 
	#SHUT_WR
 
SHUT_WR


	)

56 
	mSHUT_RDWR


57 
	#SHUT_RDWR
 
SHUT_RDWR


	)

66 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


67 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

68 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

72 
	#__SOCKADDR_ALLTYPES
 \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

85 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

87 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

88 uni⁄ { 
	m__SOCKADDR_ALLTYPES


89 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

90 #unde‡
__SOCKADDR_ONETYPE


91 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

92 uni⁄ { 
	m__SOCKADDR_ALLTYPES


93 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

94 #unde‡
__SOCKADDR_ONETYPE


101 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

107 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

108 
__fds
[2]Ë
__THROW
;

111 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

112 
__THROW
;

115 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

116 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

125 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

129 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

130 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

137 
ssize_t
 
	`£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
);

144 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

151 
ssize_t
 
	`£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

152 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

153 
sockÀn_t
 
__addr_Àn
);

162 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

163 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

164 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

172 
ssize_t
 
	`£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
,

173 
__Êags
);

180 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

186 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

187 *
__ª°ri˘
 
__›tvÆ
,

188 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

193 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

194 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

200 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

210 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

211 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

219 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

222 #ifde‡
__USE_XOPEN2K


224 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

228 #ifde‡
__USE_MISC


232 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

237 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


238 
	~<bôs/sockë2.h
>

241 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

155 #ifdef 
__USE_POSIX199309


156 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

157 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

158 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

164 
	#S_ISUID
 
__S_ISUID


	)

165 
	#S_ISGID
 
__S_ISGID


	)

167 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


169 
	#S_ISVTX
 
__S_ISVTX


	)

172 
	#S_IRUSR
 
__S_IREAD


	)

173 
	#S_IWUSR
 
__S_IWRITE


	)

174 
	#S_IXUSR
 
__S_IEXEC


	)

176 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

178 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


179 
	#S_IREAD
 
S_IRUSR


	)

180 
	#S_IWRITE
 
S_IWUSR


	)

181 
	#S_IEXEC
 
S_IXUSR


	)

184 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

185 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

186 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

188 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

190 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

191 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

192 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

194 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

197 #ifdef 
__USE_BSD


199 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

200 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

201 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

203 
	#S_BLKSIZE
 512

	)

207 #i‚de‡
__USE_FILE_OFFSET64


209 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

214 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

216 #ifde‡
__REDIRECT_NTH


217 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

218 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

219 
	`__n⁄nuŒ
 ((1, 2));

220 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

221 
	`__n⁄nuŒ
 ((2));

223 
	#°©
 
°©64


	)

224 
	#f°©
 
f°©64


	)

227 #ifde‡
__USE_LARGEFILE64


228 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

230 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

233 #ifde‡
__USE_ATFILE


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

239 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

242 #ifde‡
__REDIRECT_NTH


243 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

244 
°©
 *
__ª°ri˘
 
__buf
,

245 
__Êag
),

246 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

248 
	#f°©©
 
f°©©64


	)

252 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

253 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

254 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

257 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


258 #i‚de‡
__USE_FILE_OFFSET64


261 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

262 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

264 #ifde‡
__REDIRECT_NTH


265 
	`__REDIRECT_NTH
 (
l°©
,

266 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

267 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

268 
	`__n⁄nuŒ
 ((1, 2));

270 
	#l°©
 
l°©64


	)

273 #ifde‡
__USE_LARGEFILE64


274 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

275 
°©64
 *
__ª°ri˘
 
__buf
)

276 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

282 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

283 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 #ifde‡
__USE_BSD


289 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

294 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


295 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

298 #ifde‡
__USE_ATFILE


301 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
mode
, 
__Êag
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

309 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

311 #ifdef 
__USE_GNU


314 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

318 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1));

321 #ifde‡
__USE_ATFILE


325 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

326 
__THROW
 
	`__n⁄nuŒ
 ((2));

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


333 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

337 #ifde‡
__USE_ATFILE


341 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

342 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

347 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1));

350 #ifde‡
__USE_ATFILE


354 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2));

358 #ifde‡
__USE_ATFILE


361 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

362 
__c⁄°
 
time•ec
 
__times
[2],

363 
__Êags
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

367 #ifde‡
__USE_GNU


370 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

388 #i‚de‡
_STAT_VER


389 
	#_STAT_VER
 0

	)

391 #i‚de‡
_MKNOD_VER


392 
	#_MKNOD_VER
 0

	)

396 #i‚de‡
__USE_FILE_OFFSET64


397 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

398 
__THROW
 
	`__n⁄nuŒ
 ((3));

399 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

402 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

403 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
, 
__Êag
)

405 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

407 #ifde‡
__REDIRECT_NTH


408 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

409 
°©
 *
__°©_buf
), 
__fx°©64
)

410 
	`__n⁄nuŒ
 ((3));

411 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

412 
°©
 *
__°©_buf
), 
__x°©64
)

413 
	`__n⁄nuŒ
 ((2, 3));

414 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

415 
°©
 *
__°©_buf
), 
__lx°©64
)

416 
	`__n⁄nuŒ
 ((2, 3));

417 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

418 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
, 
__Êag
),

420 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

423 
	#__fx°©
 
__fx°©64


	)

424 
	#__x°©
 
__x°©64


	)

425 
	#__lx°©
 
__lx°©64


	)

429 #ifde‡
__USE_LARGEFILE64


430 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

431 
__THROW
 
	`__n⁄nuŒ
 ((3));

432 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

435 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

436 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
, 
__Êag
)

438 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

440 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

441 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

443 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

444 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

445 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

447 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


450 
__exã∫_ölöe
 

451 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

453  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

454 
	}
}

456 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


457 
__exã∫_ölöe
 

458 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

460  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

461 
	}
}

464 
__exã∫_ölöe
 

465 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

467  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

468 
	}
}

470 #ifde‡
__USE_ATFILE


471 
__exã∫_ölöe
 

472 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

473 
__Êag
))

475  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

476 
	}
}

479 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


480 
__exã∫_ölöe
 

481 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

483  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

484 
	}
}

487 #ifde‡
__USE_ATFILE


488 
__exã∫_ölöe
 

489 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

490 
__dev_t
 
__dev
))

492  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

493 
	}
}

496 #i‡
deföed
 
__USE_LARGEFILE64
 \

497 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

498 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

499 
__exã∫_ölöe
 

500 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

502  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

503 
	}
}

505 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


506 
__exã∫_ölöe
 

507 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

509  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

510 
	}
}

513 
__exã∫_ölöe
 

514 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

516  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

517 
	}
}

519 #ifde‡
__USE_GNU


520 
__exã∫_ölöe
 

521 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

522 
__Êag
))

524  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

525 
	}
}

532 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_ATFILE


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

24 #i‚def 
_SYS_TYPES_H


25 
	#_SYS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 #ifdef 
__USE_BSD


34 #i‚de‡
__u_ch¨_deföed


35 
__u_ch¨
 
	tu_ch¨
;

36 
__u_sh‹t
 
	tu_sh‹t
;

37 
__u_öt
 
	tu_öt
;

38 
__u_l⁄g
 
	tu_l⁄g
;

39 
__quad_t
 
	tquad_t
;

40 
__u_quad_t
 
	tu_quad_t
;

41 
__fsid_t
 
	tfsid_t
;

42 
	#__u_ch¨_deföed


	)

46 
__loff_t
 
	tloff_t
;

48 #i‚de‡
__öo_t_deföed


49 #i‚de‡
__USE_FILE_OFFSET64


50 
__öo_t
 
	töo_t
;

52 
__öo64_t
 
	töo_t
;

54 
	#__öo_t_deföed


	)

56 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


57 
__öo64_t
 
	töo64_t
;

58 
	#__öo64_t_deföed


	)

61 #i‚de‡
__dev_t_deföed


62 
__dev_t
 
	tdev_t
;

63 
	#__dev_t_deföed


	)

66 #i‚de‡
__gid_t_deföed


67 
__gid_t
 
	tgid_t
;

68 
	#__gid_t_deföed


	)

71 #i‚de‡
__mode_t_deföed


72 
__mode_t
 
	tmode_t
;

73 
	#__mode_t_deföed


	)

76 #i‚de‡
__∆ök_t_deföed


77 
__∆ök_t
 
	t∆ök_t
;

78 
	#__∆ök_t_deföed


	)

81 #i‚de‡
__uid_t_deföed


82 
__uid_t
 
	tuid_t
;

83 
	#__uid_t_deföed


	)

86 #i‚de‡
__off_t_deföed


87 #i‚de‡
__USE_FILE_OFFSET64


88 
__off_t
 
	toff_t
;

90 
__off64_t
 
	toff_t
;

92 
	#__off_t_deföed


	)

94 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


95 
__off64_t
 
	toff64_t
;

96 
	#__off64_t_deföed


	)

99 #i‚de‡
__pid_t_deföed


100 
__pid_t
 
	tpid_t
;

101 
	#__pid_t_deföed


	)

104 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #ifde‡
__USE_XOPEN


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/time.h

24 #i‚def 
_TIME_H


26 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

27 ! 
deföed
 
	g__√ed_time•ec
)

28 
	#_TIME_H
 1

	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 #ifdef 
_TIME_H


37 
	#__√ed_size_t


	)

38 
	#__√ed_NULL


	)

39 
	~<°ddef.h
>

43 
	~<bôs/time.h
>

46 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


47 #i‚de‡
CLK_TCK


48 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

54 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

55 
	#__˛ock_t_deföed
 1

	)

57 
	~<bôs/ty≥s.h
>

59 
__BEGIN_NAMESPACE_STD


61 
__˛ock_t
 
	t˛ock_t
;

62 
	g__END_NAMESPACE_STD


63 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


64 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

68 #unde‡
__√ed_˛ock_t


70 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

71 
	#__time_t_deföed
 1

	)

73 
	~<bôs/ty≥s.h
>

75 
__BEGIN_NAMESPACE_STD


77 
__time_t
 
	ttime_t
;

78 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


80 
	$__USING_NAMESPACE_STD
(
time_t
)

84 #unde‡
__√ed_time_t


86 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

87 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

88 
	#__˛ockid_t_deföed
 1

	)

90 
	~<bôs/ty≥s.h
>

93 
__˛ockid_t
 
	t˛ockid_t
;

96 #unde‡
__˛ockid_time_t


98 #i‡!
deföed
 
__timî_t_deföed
 && \

99 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

100 
	#__timî_t_deföed
 1

	)

102 
	~<bôs/ty≥s.h
>

105 
__timî_t
 
	ttimî_t
;

108 #unde‡
__√ed_timî_t


111 #i‡!
deföed
 
__time•ec_deföed
 && \

112 ((
deföed
 
_TIME_H
 && \

113 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

114 
deföed
 
__√ed_time•ec
)

115 
	#__time•ec_deföed
 1

	)

117 
	~<bôs/ty≥s.h
>

121 
	stime•ec


123 
__time_t
 
tv_£c
;

124 
tv_n£c
;

128 #unde‡
__√ed_time•ec


131 #ifdef 
_TIME_H


132 
__BEGIN_NAMESPACE_STD


134 
	stm


136 
tm_£c
;

137 
tm_mö
;

138 
tm_hour
;

139 
tm_mday
;

140 
tm_m⁄
;

141 
tm_yór
;

142 
tm_wday
;

143 
tm_yday
;

144 
tm_isd°
;

146 #ifdef 
__USE_BSD


147 
tm_gmtoff
;

148 
__c⁄°
 *
tm_z⁄e
;

150 
__tm_gmtoff
;

151 
__c⁄°
 *
__tm_z⁄e
;

154 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


156 
	$__USING_NAMESPACE_STD
(
tm
)

160 #ifde‡
__USE_POSIX199309


162 
	sôimî•ec


164 
time•ec
 
ô_öãrvÆ
;

165 
time•ec
 
ô_vÆue
;

169 
sigevít
;

173 #ifde‡
__USE_XOPEN2K


174 #i‚de‡
__pid_t_deföed


175 
__pid_t
 
	tpid_t
;

176 
	#__pid_t_deföed


	)

181 
__BEGIN_NAMESPACE_STD


184 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

187 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

190 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

191 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

194 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

200 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

201 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

202 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

203 
__END_NAMESPACE_STD


205 #ifde‡
__USE_XOPEN


208 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

209 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

210 
__THROW
;

213 #ifde‡
__USE_GNU


216 
	~<xloˇÀ.h
>

218 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

219 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

220 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

221 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

224 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

225 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 
__BEGIN_NAMESPACE_STD


232 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

236 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
__END_NAMESPACE_STD


239 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


242 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

243 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

247 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

248 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

251 
__BEGIN_NAMESPACE_STD


254 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

257 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

258 
__END_NAMESPACE_STD


260 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


265 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

266 *
__ª°ri˘
 
__buf
Ë
__THROW
;

269 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

270 *
__ª°ri˘
 
__buf
Ë
__THROW
;

275 *
__tz«me
[2];

276 
__daylight
;

277 
__timez⁄e
;

280 #ifdef 
__USE_POSIX


282 *
tz«me
[2];

286 
	$tz£t
 (Ë
__THROW
;

289 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


290 
daylight
;

291 
timez⁄e
;

294 #ifde‡
__USE_SVID


297 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

303 
	#__i¶óp
(
yór
) \

304 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

307 #ifde‡
__USE_MISC


312 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

315 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

318 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

322 #ifde‡
__USE_POSIX199309


327 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

328 
time•ec
 *
__ªmaöög
);

332 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

335 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

338 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

339 
__THROW
;

341 #ifde‡
__USE_XOPEN2K


346 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

347 
__c⁄°
 
time•ec
 *
__ªq
,

348 
time•ec
 *
__ªm
);

351 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

356 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

357 
sigevít
 *
__ª°ri˘
 
__evp
,

358 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

361 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

364 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

365 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

366 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

369 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

370 
__THROW
;

373 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

377 #ifde‡
__USE_XOPEN_EXTENDED


389 
gëd©e_îr
;

398 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

401 #ifde‡
__USE_GNU


412 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

413 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

416 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


34 
	#_POSIX_VERSION
 200112L

	)

40 
	#_POSIX2_VERSION
 200112L

	)

44 
	#_POSIX2_C_BIND
 200112L

	)

48 
	#_POSIX2_C_DEV
 200112L

	)

52 
	#_POSIX2_SW_DEV
 200112L

	)

56 
	#_POSIX2_LOCALEDEF
 200112L

	)

59 #ifde‡
__USE_XOPEN2K


60 
	#_XOPEN_VERSION
 600

	)

61 #ñi‡
deföed
 
__USE_UNIX98


62 
	#_XOPEN_VERSION
 500

	)

64 
	#_XOPEN_VERSION
 4

	)

68 
	#_XOPEN_XCU_VERSION
 4

	)

71 
	#_XOPEN_XPG2
 1

	)

72 
	#_XOPEN_XPG3
 1

	)

73 
	#_XOPEN_XPG4
 1

	)

76 
	#_XOPEN_UNIX
 1

	)

79 
	#_XOPEN_CRYPT
 1

	)

83 
	#_XOPEN_ENH_I18N
 1

	)

86 
	#_XOPEN_LEGACY
 1

	)

173 
	~<bôs/posix_›t.h
>

176 #ifde‡
__USE_UNIX98


177 
	~<bôs/ívú⁄míts.h
>

181 
	#STDIN_FILENO
 0

	)

182 
	#STDOUT_FILENO
 1

	)

183 
	#STDERR_FILENO
 2

	)

188 
	~<bôs/ty≥s.h
>

190 #i‚def 
__ssize_t_deföed


191 
__ssize_t
 
	tssize_t
;

192 
	#__ssize_t_deföed


	)

195 
	#__√ed_size_t


	)

196 
	#__√ed_NULL


	)

197 
	~<°ddef.h
>

199 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


202 #i‚de‡
__gid_t_deföed


203 
__gid_t
 
	tgid_t
;

204 
	#__gid_t_deföed


	)

207 #i‚de‡
__uid_t_deföed


208 
__uid_t
 
	tuid_t
;

209 
	#__uid_t_deföed


	)

212 #i‚de‡
__off_t_deföed


213 #i‚de‡
__USE_FILE_OFFSET64


214 
__off_t
 
	toff_t
;

216 
__off64_t
 
	toff_t
;

218 
	#__off_t_deföed


	)

220 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


221 
__off64_t
 
	toff64_t
;

222 
	#__off64_t_deföed


	)

225 #i‚de‡
__u£c⁄ds_t_deföed


226 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

227 
	#__u£c⁄ds_t_deföed


	)

230 #i‚de‡
__pid_t_deföed


231 
__pid_t
 
	tpid_t
;

232 
	#__pid_t_deföed


	)

236 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


237 #i‚de‡
__öçå_t_deföed


238 
__öçå_t
 
	töçå_t
;

239 
	#__öçå_t_deföed


	)

243 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


244 #i‚de‡
__sockÀn_t_deföed


245 
__sockÀn_t
 
	tsockÀn_t
;

246 
	#__sockÀn_t_deföed


	)

252 
	#R_OK
 4

	)

253 
	#W_OK
 2

	)

254 
	#X_OK
 1

	)

255 
	#F_OK
 0

	)

258 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

260 #ifde‡
__USE_GNU


263 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

267 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

268 
__THROW
 
	`__n⁄nuŒ
 ((1));

271 #ifde‡
__USE_ATFILE


275 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

276 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

281 #i‚def 
_STDIO_H


282 
	#SEEK_SET
 0

	)

283 
	#SEEK_CUR
 1

	)

284 
	#SEEK_END
 2

	)

287 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


289 
	#L_SET
 
SEEK_SET


	)

290 
	#L_INCR
 
SEEK_CUR


	)

291 
	#L_XTND
 
SEEK_END


	)

300 #i‚de‡
__USE_FILE_OFFSET64


301 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

303 #ifde‡
__REDIRECT_NTH


304 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

305 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

306 
l£ek64
);

308 
	#l£ek
 
l£ek64


	)

311 #ifde‡
__USE_LARGEFILE64


312 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

313 
__THROW
;

320 
	`˛o£
 (
__fd
);

327 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

333 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

335 #ifde‡
__USE_UNIX98


336 #i‚de‡
__USE_FILE_OFFSET64


343 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

344 
__off_t
 
__off£t
Ë
__wur
;

351 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

352 
__off_t
 
__off£t
Ë
__wur
;

354 #ifde‡
__REDIRECT


355 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

356 
__off64_t
 
__off£t
),

357 
¥ód64
Ë
__wur
;

358 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

359 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

360 
pwrôe64
Ë
__wur
;

362 
	#¥ód
 
¥ód64


	)

363 
	#pwrôe
 
pwrôe64


	)

367 #ifde‡
__USE_LARGEFILE64


371 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

372 
__off64_t
 
__off£t
Ë
__wur
;

375 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

376 
__off64_t
 
__off£t
Ë
__wur
;

384 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

393 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

405 
	`¶ìp
 (
__£c⁄ds
);

407 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


412 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

413 
__THROW
;

420 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

429 
	`∑u£
 ();

433 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

434 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

436 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


438 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

443 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

448 #ifde‡
__USE_ATFILE


451 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

452 
__gid_t
 
__group
, 
__Êag
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

457 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

459 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

471 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

473 #ifdef 
__USE_GNU


477 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

480 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


484 *
	$gëwd
 (*
__buf
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

490 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

493 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

496 **
__ívú⁄
;

497 #ifde‡
__USE_GNU


498 **
ívú⁄
;

504 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

505 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

507 #ifde‡
__USE_GNU


510 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

511 
__THROW
;

516 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

517 
__THROW
 
	`__n⁄nuŒ
 ((1));

521 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

522 
__THROW
 
	`__n⁄nuŒ
 ((1));

526 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

527 
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

532 
__THROW
 
	`__n⁄nuŒ
 ((1));

537 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

538 
__THROW
 
	`__n⁄nuŒ
 ((1));

541 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


543 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

548 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
	~<bôs/c⁄‚ame.h
>

557 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

558 
__THROW
 
	`__n⁄nuŒ
 ((1));

561 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

564 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

566 #ifdef 
__USE_POSIX2


568 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

573 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

576 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

580 #i‚de‡
__FAVOR_BSD


581 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

583 #ifde‡
__REDIRECT_NTH


584 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

586 
	#gëpgΩ
 
__gëpgid


	)

591 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

592 #ifde‡
__USE_XOPEN_EXTENDED


593 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

600 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

602 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


613 #i‚de‡
__FAVOR_BSD


617 
	$£çgΩ
 (Ë
__THROW
;

622 #ifde‡
__REDIRECT_NTH


623 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

625 
	#£çgΩ
 
£çgid


	)

634 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

636 #ifde‡
__USE_XOPEN_EXTENDED


638 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

642 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

645 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

648 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

651 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

656 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

658 #ifdef 
__USE_GNU


660 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

667 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

669 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

675 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


677 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

684 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

686 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


689 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

692 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


694 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

697 #ifde‡
__USE_GNU


700 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

701 
__THROW
;

705 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

706 
__THROW
;

710 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

711 
__THROW
;

715 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

716 
__THROW
;

723 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


730 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

736 *
	$ây«me
 (
__fd
Ë
__THROW
;

740 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

741 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

745 
	$ißây
 (
__fd
Ë
__THROW
;

747 #i‡
deföed
 
__USE_BSD
 \

748 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

751 
	$ây¶Ÿ
 (Ë
__THROW
;

756 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

757 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

759 #ifde‡
__USE_ATFILE


762 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

763 
__c⁄°
 *
__to
, 
__Êags
)

764 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

767 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


769 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

770 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

775 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

776 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

777 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

780 #ifde‡
__USE_ATFILE


782 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

783 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

786 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

787 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

788 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

792 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

794 #ifde‡
__USE_ATFILE


796 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2));

801 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

808 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

815 *
	`gëlogö
 ();

816 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


823 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

826 #ifdef 
__USE_BSD


828 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

832 #ifdef 
__USE_POSIX2


836 
	#__√ed_gë›t


	)

837 
	~<gë›t.h
>

841 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


845 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

849 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

852 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

857 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

863 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

865 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

866 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

872 
	$vh™gup
 (Ë
__THROW
;

875 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

884 
size_t
 
__off£t
, 
__sˇÀ
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

891 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

895 *
	$gëu£rshñl
 (Ë
__THROW
;

896 
	$ídu£rshñl
 (Ë
__THROW
;

897 
	$£tu£rshñl
 (Ë
__THROW
;

903 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

907 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

910 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

918 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


923 
	`fsync
 (
__fd
);

927 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


930 
	`gëho°id
 ();

933 
	$sync
 (Ë
__THROW
;

938 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

943 
	$gëdèbÀsize
 (Ë
__THROW
;

947 #i‚de‡
__USE_FILE_OFFSET64


948 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #ifde‡
__REDIRECT_NTH


952 
	`__REDIRECT_NTH
 (
åunˇã
,

953 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

954 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

956 
	#åunˇã
 
åunˇã64


	)

959 #ifde‡
__USE_LARGEFILE64


960 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


969 #i‚de‡
__USE_FILE_OFFSET64


970 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

972 #ifde‡
__REDIRECT_NTH


973 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

974 
·runˇã64
Ë
__wur
;

976 
	#·runˇã
 
·runˇã64


	)

979 #ifde‡
__USE_LARGEFILE64


980 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

986 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


990 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

996 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1000 #ifde‡
__USE_MISC


1011 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1016 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1028 
	#F_ULOCK
 0

	)

1029 
	#F_LOCK
 1

	)

1030 
	#F_TLOCK
 2

	)

1031 
	#F_TEST
 3

	)

1033 #i‚de‡
__USE_FILE_OFFSET64


1034 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1036 #ifde‡
__REDIRECT


1037 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1038 
lockf64
Ë
__wur
;

1040 
	#lockf
 
lockf64


	)

1043 #ifde‡
__USE_LARGEFILE64


1044 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1049 #ifde‡
__USE_GNU


1054 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1055 (
__exãnsi⁄__
 \

1056 ({ 
__ªsu…
; \

1057 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1058 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1059 
__ªsu…
; 
	}
}))

	)

1062 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1065 
fd©async
 (
__fûdes
);

1071 #ifdef 
__USE_XOPEN


1073 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1074 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1078 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1086 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 #ifde‡
__USE_XOPEN


1094 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1099 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1100 
	~<bôs/uni°d.h
>

1103 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_16
 (__x); }))

	)

55 
	#__bsw≠_c⁄°™t_32
(
x
) \

56 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

57 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

59 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

60 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

61 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

62 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

63 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

64 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

65 || 
deföed
 
	g__amdÁm10__
)

68 
	#__bsw≠_32
(
x
) \

69 (
__exãnsi⁄__
 \

70 ({ 
__v
, 
__x
 = (
x
); \

71 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

72 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

74 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

75 
__v
; }))

	)

77 
	#__bsw≠_32
(
x
) \

78 (
__exãnsi⁄__
 \

79 ({ 
__v
, 
__x
 = (
x
); \

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

81 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

83 
	`__asm__
 ("rorw $8, %w0;" \

86 : "Ù" (
__v
) \

87 : "0" (
__x
) \

89 
__v
; }))

	)

92 
	#__bsw≠_32
(
x
) \

93 (
__exãnsi⁄__
 \

94 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

98 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

100 
	#__bsw≠_c⁄°™t_64
(
x
) \

101 ((((
x
) & 0xff00000000000000ull) >> 56) \

102 | (((
x
) & 0x00ff000000000000ull) >> 40) \

103 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

104 | (((
x
) & 0x000000ff00000000ull) >> 8) \

105 | (((
x
) & 0x00000000ff000000ull) << 8) \

106 | (((
x
) & 0x0000000000ff0000ull) << 24) \

107 | (((
x
) & 0x000000000000ff00ull) << 40) \

108 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

110 #i‡
__WORDSIZE
 == 64

111 
	#__bsw≠_64
(
x
) \

112 (
__exãnsi⁄__
 \

113 ({ 
__v
, 
__x
 = (
x
); \

114 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

115 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

117 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

118 
__v
; }))

	)

120 
	#__bsw≠_64
(
x
) \

121 (
__exãnsi⁄__
 \

122 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

123 
__l
[2]; } 
__w
, 
__r
; \

124 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

125 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

128 
__w
.
__Œ
 = (
x
); \

129 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

130 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

132 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS


502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

508 
	m_CS_PATH
,

509 
	#_CS_PATH
 
_CS_PATH


	)

511 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

512 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

513 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

515 
	m_CS_GNU_LIBC_VERSION
,

516 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

517 
	m_CS_GNU_LIBPTHREAD_VERSION
,

518 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

520 
	m_CS_LFS_CFLAGS
 = 1000,

521 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

522 
	m_CS_LFS_LDFLAGS
,

523 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

524 
	m_CS_LFS_LIBS
,

525 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

526 
	m_CS_LFS_LINTFLAGS
,

527 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

528 
	m_CS_LFS64_CFLAGS
,

529 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

530 
	m_CS_LFS64_LDFLAGS
,

531 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

532 
	m_CS_LFS64_LIBS
,

533 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

534 
	m_CS_LFS64_LINTFLAGS
,

535 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

537 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

538 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

539 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

540 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

541 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

542 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

543 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

544 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

545 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

546 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

547 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

548 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

549 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

550 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

551 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

552 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

553 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

554 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

555 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

556 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

557 
	m_CS_XBS5_LP64_OFF64_LIBS
,

558 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

559 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

560 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

561 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

562 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

563 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

564 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

565 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

566 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

567 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

568 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

570 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

571 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

572 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

573 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

574 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

575 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

576 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

577 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

578 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

579 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

580 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

581 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

582 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

583 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

584 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

585 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

586 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

587 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

588 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

589 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

590 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

591 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

592 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

593 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

594 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

595 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

596 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

597 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

598 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

599 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

600 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


601 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

41 #i‡
__WORDSIZE
 == 64

53 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

54 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LP64_OFF64
 1

	)

58 
	#_XBS5_LP64_OFF64
 1

	)

64 
	#_POSIX_V6_ILP32_OFF32
 1

	)

65 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

66 
	#_XBS5_ILP32_OFF32
 1

	)

67 
	#_XBS5_ILP32_OFFBIG
 1

	)

82 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

83 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

84 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

85 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

86 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

87 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
__ASSEMBLER__


43 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

45 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


47 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

52 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


56 
	#EDOM
 33

	)

57 
	#EILSEQ
 84

	)

58 
	#ERANGE
 34

	)

	@/usr/include/bits/error.h

20 #i‚def 
_ERROR_H


25 
__REDIRECT
 (
__îr‹_Æüs
, (
__°©us
, 
__î∫um
,

26 
__c⁄°
 *
__f‹m©
, ...),

27 
îr‹
)

28 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 3, 4)));

29 
__REDIRECT
 (
__îr‹_n‹ëu∫
, (
__°©us
, 
__î∫um
,

30 
__c⁄°
 *
__f‹m©
, ...),

31 
îr‹
)

32 
__©åibuã__
 ((
__n‹ëu∫__
, 
__f‹m©__
 (
__¥ötf__
, 3, 4)));

37 
__exã∫_Æways_ölöe
 

38 
	$îr‹
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__f‹m©
, ...)

40 i‡(
	`__buûtö_c⁄°™t_p
 (
__°©us
) && __status != 0)

41 
	`__îr‹_n‹ëu∫
 (
__°©us
, 
__î∫um
, 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

43 
	`__îr‹_Æüs
 (
__°©us
, 
__î∫um
, 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

44 
	}
}

47 
__REDIRECT
 (
__îr‹_©_löe_Æüs
, (
__°©us
, 
__î∫um
,

48 
__c⁄°
 *
__‚ame
,

49 
__löe
,

50 
__c⁄°
 *
__f‹m©
, ...),

51 
îr‹_©_löe
)

52 
__©åibuã__
 ((
__f‹m©__
 (
__¥ötf__
, 5, 6)));

53 
__REDIRECT
 (
__îr‹_©_löe_n‹ëu∫
, (
__°©us
, 
__î∫um
,

54 
__c⁄°
 *
__‚ame
,

55 
__löe
,

56 
__c⁄°
 *
__f‹m©
,

58 
îr‹_©_löe
)

59 
__©åibuã__
 ((
__n‹ëu∫__
, 
__f‹m©__
 (
__¥ötf__
, 5, 6)));

64 
__exã∫_Æways_ölöe
 

65 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, 
__c⁄°
 *
__‚ame
,

66 
__löe
,
__c⁄°
 *
__f‹m©
, ...)

68 i‡(
	`__buûtö_c⁄°™t_p
 (
__°©us
) && __status != 0)

69 
	`__îr‹_©_löe_n‹ëu∫
 (
__°©us
, 
__î∫um
, 
__‚ame
, 
__löe
, 
__f‹m©
,

70 
	`__va_¨g_∑ck
 ());

72 
	`__îr‹_©_löe_Æüs
 (
__°©us
, 
__î∫um
, 
__‚ame
, 
__löe
,

73 
__f‹m©
, 
	`__va_¨g_∑ck
 ());

74 
	}
}

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


24 
	~<sys/ty≥s.h
>

25 
	~<bôs/w‹dsize.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_GNU


49 
	#O_DIRECT
 040000

	)

50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_NOATIME
 01000000

	)

53 
	#O_CLOEXEC
 02000000

	)

59 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


60 
	#O_DSYNC
 
O_SYNC


	)

61 
	#O_RSYNC
 
O_SYNC


	)

64 #ifde‡
__USE_LARGEFILE64


65 #i‡
__WORDSIZE
 == 64

66 
	#O_LARGEFILE
 0

	)

68 
	#O_LARGEFILE
 0100000

	)

73 
	#F_DUPFD
 0

	)

74 
	#F_GETFD
 1

	)

75 
	#F_SETFD
 2

	)

76 
	#F_GETFL
 3

	)

77 
	#F_SETFL
 4

	)

78 #i‡
__WORDSIZE
 == 64

79 
	#F_GETLK
 5

	)

80 
	#F_SETLK
 6

	)

81 
	#F_SETLKW
 7

	)

83 
	#F_GETLK64
 5

	)

84 
	#F_SETLK64
 6

	)

85 
	#F_SETLKW64
 7

	)

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	#F_GETLK
 5

	)

89 
	#F_SETLK
 6

	)

90 
	#F_SETLKW
 7

	)

92 
	#F_GETLK
 
F_GETLK64


	)

93 
	#F_SETLK
 
F_SETLK64


	)

94 
	#F_SETLKW
 
F_SETLKW64


	)

96 
	#F_GETLK64
 12

	)

97 
	#F_SETLK64
 13

	)

98 
	#F_SETLKW64
 14

	)

101 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


102 
	#F_SETOWN
 8

	)

103 
	#F_GETOWN
 9

	)

106 #ifde‡
__USE_GNU


107 
	#F_SETSIG
 10

	)

108 
	#F_GETSIG
 11

	)

111 #ifde‡
__USE_GNU


112 
	#F_SETLEASE
 1024

	)

113 
	#F_GETLEASE
 1025

	)

114 
	#F_NOTIFY
 1026

	)

115 
	#F_DUPFD_CLOEXEC
 1030

	)

120 
	#FD_CLOEXEC
 1

	)

123 
	#F_RDLCK
 0

	)

124 
	#F_WRLCK
 1

	)

125 
	#F_UNLCK
 2

	)

128 
	#F_EXLCK
 4

	)

129 
	#F_SHLCK
 8

	)

131 #ifde‡
__USE_BSD


133 
	#LOCK_SH
 1

	)

134 
	#LOCK_EX
 2

	)

135 
	#LOCK_NB
 4

	)

137 
	#LOCK_UN
 8

	)

140 #ifde‡
__USE_GNU


141 
	#LOCK_MAND
 32

	)

142 
	#LOCK_READ
 64

	)

143 
	#LOCK_WRITE
 128

	)

144 
	#LOCK_RW
 192

	)

147 #ifde‡
__USE_GNU


149 
	#DN_ACCESS
 0x00000001

	)

150 
	#DN_MODIFY
 0x00000002

	)

151 
	#DN_CREATE
 0x00000004

	)

152 
	#DN_DELETE
 0x00000008

	)

153 
	#DN_RENAME
 0x00000010

	)

154 
	#DN_ATTRIB
 0x00000020

	)

155 
	#DN_MULTISHOT
 0x80000000

	)

158 
	sÊock


160 
	ml_ty≥
;

161 
	ml_whí˚
;

162 #i‚de‡
__USE_FILE_OFFSET64


163 
__off_t
 
	ml_°¨t
;

164 
__off_t
 
	ml_Àn
;

166 
__off64_t
 
	ml_°¨t
;

167 
__off64_t
 
	ml_Àn
;

169 
__pid_t
 
	ml_pid
;

172 #ifde‡
__USE_LARGEFILE64


173 
	sÊock64


175 
	ml_ty≥
;

176 
	ml_whí˚
;

177 
__off64_t
 
	ml_°¨t
;

178 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

185 #ifdef 
__USE_BSD


186 
	#FAPPEND
 
O_APPEND


	)

187 
	#FFSYNC
 
O_FSYNC


	)

188 
	#FASYNC
 
O_ASYNC


	)

189 
	#FNONBLOCK
 
O_NONBLOCK


	)

190 
	#FNDELAY
 
O_NDELAY


	)

194 #ifde‡
__USE_XOPEN2K


195 
	#POSIX_FADV_NORMAL
 0

	)

196 
	#POSIX_FADV_RANDOM
 1

	)

197 
	#POSIX_FADV_SEQUENTIAL
 2

	)

198 
	#POSIX_FADV_WILLNEED
 3

	)

199 
	#POSIX_FADV_DONTNEED
 4

	)

200 
	#POSIX_FADV_NOREUSE
 5

	)

204 #ifde‡
__USE_GNU


206 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

209 
	#SYNC_FILE_RANGE_WRITE
 2

	)

212 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

217 
	#SPLICE_F_MOVE
 1

	)

218 
	#SPLICE_F_NONBLOCK
 2

	)

221 
	#SPLICE_F_MORE
 4

	)

222 
	#SPLICE_F_GIFT
 8

	)

225 
	g__BEGIN_DECLS


227 #ifde‡
__USE_GNU


230 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

231 
__THROW
;

235 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__‰om
, __off64_à
__to
,

236 
__Êags
);

240 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

241 
size_t
 
__cou¡
, 
__Êags
);

244 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

245 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

246 
__Êags
);

249 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

250 
__Êags
);

254 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_OPTIONS
 4

	)

29 
	#IP_HDRINCL
 3

	)

30 
	#IP_TOS
 1

	)

31 
	#IP_TTL
 2

	)

32 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

35 
	#IP_RETOPTS
 7

	)

36 
	#IP_MULTICAST_IF
 32

	)

37 
	#IP_MULTICAST_TTL
 33

	)

38 
	#IP_MULTICAST_LOOP
 34

	)

39 
	#IP_ADD_MEMBERSHIP
 35

	)

40 
	#IP_DROP_MEMBERSHIP
 36

	)

41 
	#IP_UNBLOCK_SOURCE
 37

	)

42 
	#IP_BLOCK_SOURCE
 38

	)

43 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

44 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

45 
	#IP_MSFILTER
 41

	)

46 
	#MCAST_JOIN_GROUP
 42

	)

47 
	#MCAST_BLOCK_SOURCE
 43

	)

48 
	#MCAST_UNBLOCK_SOURCE
 44

	)

49 
	#MCAST_LEAVE_GROUP
 45

	)

50 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

51 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

52 
	#MCAST_MSFILTER
 48

	)

54 
	#MCAST_EXCLUDE
 0

	)

55 
	#MCAST_INCLUDE
 1

	)

57 
	#IP_ROUTER_ALERT
 5

	)

58 
	#IP_PKTINFO
 8

	)

59 
	#IP_PKTOPTIONS
 9

	)

60 
	#IP_PMTUDISC
 10

	)

61 
	#IP_MTU_DISCOVER
 10

	)

62 
	#IP_RECVERR
 11

	)

63 
	#IP_RECVTTL
 12

	)

64 
	#IP_RECVTOS
 13

	)

68 
	#IP_PMTUDISC_DONT
 0

	)

69 
	#IP_PMTUDISC_WANT
 1

	)

70 
	#IP_PMTUDISC_DO
 2

	)

73 
	#SOL_IP
 0

	)

75 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

76 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

77 
	#IP_MAX_MEMBERSHIPS
 20

	)

82 
	sù_›ts


84 
ö_addr
 
	mù_d°
;

85 
	mù_›ts
[40];

89 
	sù_mªqn


91 
ö_addr
 
	mimr_mu…üddr
;

92 
ö_addr
 
	mimr_addªss
;

93 
	mimr_ifödex
;

97 
	sö_pktöfo


99 
	mùi_ifödex
;

100 
ö_addr
 
	mùi_•ec_d°
;

101 
ö_addr
 
	mùi_addr
;

107 
	#IPV6_ADDRFORM
 1

	)

108 
	#IPV6_2292PKTINFO
 2

	)

109 
	#IPV6_2292HOPOPTS
 3

	)

110 
	#IPV6_2292DSTOPTS
 4

	)

111 
	#IPV6_2292RTHDR
 5

	)

112 
	#IPV6_2292PKTOPTIONS
 6

	)

113 
	#IPV6_CHECKSUM
 7

	)

114 
	#IPV6_2292HOPLIMIT
 8

	)

116 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

118 
	#IPV6_NEXTHOP
 9

	)

119 
	#IPV6_AUTHHDR
 10

	)

120 
	#IPV6_UNICAST_HOPS
 16

	)

121 
	#IPV6_MULTICAST_IF
 17

	)

122 
	#IPV6_MULTICAST_HOPS
 18

	)

123 
	#IPV6_MULTICAST_LOOP
 19

	)

124 
	#IPV6_JOIN_GROUP
 20

	)

125 
	#IPV6_LEAVE_GROUP
 21

	)

126 
	#IPV6_ROUTER_ALERT
 22

	)

127 
	#IPV6_MTU_DISCOVER
 23

	)

128 
	#IPV6_MTU
 24

	)

129 
	#IPV6_RECVERR
 25

	)

130 
	#IPV6_V6ONLY
 26

	)

131 
	#IPV6_JOIN_ANYCAST
 27

	)

132 
	#IPV6_LEAVE_ANYCAST
 28

	)

133 
	#IPV6_IPSEC_POLICY
 34

	)

134 
	#IPV6_XFRM_POLICY
 35

	)

136 
	#IPV6_RECVPKTINFO
 49

	)

137 
	#IPV6_PKTINFO
 50

	)

138 
	#IPV6_RECVHOPLIMIT
 51

	)

139 
	#IPV6_HOPLIMIT
 52

	)

140 
	#IPV6_RECVHOPOPTS
 53

	)

141 
	#IPV6_HOPOPTS
 54

	)

142 
	#IPV6_RTHDRDSTOPTS
 55

	)

143 
	#IPV6_RECVRTHDR
 56

	)

144 
	#IPV6_RTHDR
 57

	)

145 
	#IPV6_RECVDSTOPTS
 58

	)

146 
	#IPV6_DSTOPTS
 59

	)

148 
	#IPV6_RECVTCLASS
 66

	)

149 
	#IPV6_TCLASS
 67

	)

152 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

153 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

154 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

155 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

158 
	#IPV6_PMTUDISC_DONT
 0

	)

159 
	#IPV6_PMTUDISC_WANT
 1

	)

160 
	#IPV6_PMTUDISC_DO
 2

	)

163 
	#SOL_IPV6
 41

	)

164 
	#SOL_ICMPV6
 58

	)

167 
	#IPV6_RTHDR_LOOSE
 0

	)

168 
	#IPV6_RTHDR_STRICT
 1

	)

170 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/ipc.h

19 #i‚de‡
_SYS_IPC_H


23 
	~<bôs/ty≥s.h
>

26 
	#IPC_CREAT
 01000

	)

27 
	#IPC_EXCL
 02000

	)

28 
	#IPC_NOWAIT
 04000

	)

31 
	#IPC_RMID
 0

	)

32 
	#IPC_SET
 1

	)

33 
	#IPC_STAT
 2

	)

34 #ifde‡
__USE_GNU


35 
	#IPC_INFO
 3

	)

39 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

43 
	sùc_≥rm


45 
__key_t
 
	m__key
;

46 
__uid_t
 
	muid
;

47 
__gid_t
 
	mgid
;

48 
__uid_t
 
	mcuid
;

49 
__gid_t
 
	mcgid
;

50 
	mmode
;

51 
	m__∑d1
;

52 
	m__£q
;

53 
	m__∑d2
;

54 
	m__unu£d1
;

55 
	m__unu£d2
;

	@/usr/include/bits/ipctypes.h

24 #i‚de‡
_BITS_IPCTYPES_H


25 
	#_BITS_IPCTYPES_H
 1

	)

27 
	~<bôs/ty≥s.h
>

30 #i‡
__WORDSIZE
 == 32

31 
	t__ùc_pid_t
;

33 
	t__ùc_pid_t
;

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
));

117 
	g_MdoubÀ_END_NAMESPACE


119 #ifde‡
__USE_GNU


121 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

123 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

126 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


127 
__BEGIN_NAMESPACE_C99


129 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

132 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

135 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

136 
	g__END_NAMESPACE_C99


139 #ifde‡
__USE_ISOC99


140 
__BEGIN_NAMESPACE_C99


142 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

145 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

146 
	g__END_NAMESPACE_C99


152 
_MdoubÀ_BEGIN_NAMESPACE


154 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

157 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

158 
	g_MdoubÀ_END_NAMESPACE


160 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


161 
__BEGIN_NAMESPACE_C99


163 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

164 
	g__END_NAMESPACE_C99


167 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


168 
__BEGIN_NAMESPACE_C99


170 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

171 
	g__END_NAMESPACE_C99


177 
_MdoubÀ_BEGIN_NAMESPACE


179 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

182 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

185 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

188 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

193 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
	g_MdoubÀ_END_NAMESPACE


199 #ifde‡
__USE_MISC


202 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

205 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

208 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

212 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

215 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


216 
__BEGIN_NAMESPACE_C99


218 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

219 
	g__END_NAMESPACE_C99


222 #ifde‡
__USE_ISOC99


223 
__BEGIN_NAMESPACE_C99


225 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

226 
	g__END_NAMESPACE_C99


231 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

233 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

238 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

241 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

247 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


248 
__BEGIN_NAMESPACE_C99


250 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

253 
	g__END_NAMESPACE_C99


256 #ifde‡
__USE_ISOC99


257 
__BEGIN_NAMESPACE_C99


259 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

260 
	g__END_NAMESPACE_C99


263 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


265 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

268 #ifde‡
__USE_MISC


272 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

276 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


277 
__BEGIN_NAMESPACE_C99


280 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

283 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

284 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


285 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

289 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

291 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


293 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

300 #ifde‡
__USE_ISOC99


302 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

306 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

310 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

314 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

319 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

326 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

336 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

339 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

342 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

346 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

347 
__©åibuã__
 ((
__c⁄°__
));

350 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

351 
__©åibuã__
 ((
__c⁄°__
));

355 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

358 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


359 
	g__END_NAMESPACE_C99


362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


364 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

	@/usr/include/bits/mathinline.h

21 #i‚de‡
_MATH_H


25 #i‚de‡
__exã∫_ölöe


26 
	#__MATH_INLINE
 
__ölöe


	)

28 
	#__MATH_INLINE
 
__exã∫_ölöe


	)

32 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

35 
__MATH_INLINE
 

36 
__NTH
 (
	$__signbôf
 (
__x
))

38 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

39  
__u
.
__i
 < 0;

40 
	}
}

41 
__MATH_INLINE
 

42 
__NTH
 (
	$__signbô
 (
__x
))

44 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

45  
__u
.
__i
[1] < 0;

46 
	}
}

47 
__MATH_INLINE
 

48 
__NTH
 (
	$__signbôl
 (
__x
))

50 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

51  (
__u
.
__i
[2] & 0x8000) != 0;

52 
	}
}

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

95 
	#_POSIX_PATH_MAX
 256

	)

98 
	#_POSIX_PIPE_BUF
 512

	)

102 
	#_POSIX_RE_DUP_MAX
 255

	)

105 
	#_POSIX_RTSIG_MAX
 8

	)

108 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

111 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

114 
	#_POSIX_SIGQUEUE_MAX
 32

	)

117 
	#_POSIX_SSIZE_MAX
 32767

	)

120 
	#_POSIX_STREAM_MAX
 8

	)

123 
	#_POSIX_SYMLINK_MAX
 255

	)

127 
	#_POSIX_SYMLOOP_MAX
 8

	)

130 
	#_POSIX_TIMER_MAX
 32

	)

133 
	#_POSIX_TTY_NAME_MAX
 9

	)

136 
	#_POSIX_TZNAME_MAX
 6

	)

139 
	#_POSIX_QLIMIT
 1

	)

143 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

146 
	#_POSIX_UIO_MAXIOV
 16

	)

149 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

153 
	~<bôs/loˇl_lim.h
>

156 #i‚def 
SSIZE_MAX


157 
	#SSIZE_MAX
 
LONG_MAX


	)

164 #i‚def 
NGROUPS_MAX


165 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_POSIX_OPT_H


21 
	#_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200112L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200112L

	)

36 
	#_POSIX_FSYNC
 200112L

	)

39 
	#_POSIX_MAPPED_FILES
 200112L

	)

42 
	#_POSIX_MEMLOCK
 200112L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200112L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200112L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 1

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200112L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200112L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200112L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200112L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200112L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200112L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200112L

	)

93 
	#_POSIX_SEMAPHORES
 200112L

	)

96 
	#_POSIX_REALTIME_SIGNALS
 200112L

	)

99 
	#_POSIX_ASYNCHRONOUS_IO
 200112L

	)

100 
	#_POSIX_ASYNC_IO
 1

	)

102 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

104 
	#_POSIX_PRIORITIZED_IO
 200112L

	)

107 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

110 
	#_LFS_LARGEFILE
 1

	)

111 
	#_LFS64_LARGEFILE
 1

	)

112 
	#_LFS64_STDIO
 1

	)

115 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200112L

	)

118 
	#_POSIX_CPUTIME
 0

	)

121 
	#_POSIX_THREAD_CPUTIME
 0

	)

124 
	#_POSIX_REGEXP
 1

	)

127 
	#_POSIX_READER_WRITER_LOCKS
 200112L

	)

130 
	#_POSIX_SHELL
 1

	)

133 
	#_POSIX_TIMEOUTS
 200112L

	)

136 
	#_POSIX_SPIN_LOCKS
 200112L

	)

139 
	#_POSIX_SPAWN
 200112L

	)

142 
	#_POSIX_TIMERS
 200112L

	)

145 
	#_POSIX_BARRIERS
 200112L

	)

148 
	#_POSIX_MESSAGE_PASSING
 200112L

	)

151 
	#_POSIX_THREAD_PROCESS_SHARED
 200112L

	)

154 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

157 
	#_POSIX_CLOCK_SELECTION
 200112L

	)

160 
	#_POSIX_ADVISORY_INFO
 200112L

	)

163 
	#_POSIX_IPV6
 200112L

	)

166 
	#_POSIX_RAW_SOCKETS
 200112L

	)

169 
	#_POSIX2_CHAR_TERM
 200112L

	)

172 
	#_POSIX_SPORADIC_SERVER
 -1

	)

173 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

176 
	#_POSIX_TRACE
 -1

	)

177 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

178 
	#_POSIX_TRACE_INHERIT
 -1

	)

179 
	#_POSIX_TRACE_LOG
 -1

	)

182 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sem.h

19 #i‚de‡
_SYS_SEM_H


23 
	~<sys/ty≥s.h
>

26 
	#SEM_UNDO
 0x1000

	)

29 
	#GETPID
 11

	)

30 
	#GETVAL
 12

	)

31 
	#GETALL
 13

	)

32 
	#GETNCNT
 14

	)

33 
	#GETZCNT
 15

	)

34 
	#SETVAL
 16

	)

35 
	#SETALL
 17

	)

39 
	s£mid_ds


41 
ùc_≥rm
 
	m£m_≥rm
;

42 
__time_t
 
	m£m_Ÿime
;

43 
	m__unu£d1
;

44 
__time_t
 
	m£m_˘ime
;

45 
	m__unu£d2
;

46 
	m£m_n£ms
;

47 
	m__unu£d3
;

48 
	m__unu£d4
;

65 
	#_SEM_SEMUN_UNDEFINED
 1

	)

67 #ifde‡
__USE_MISC


70 
	#SEM_STAT
 18

	)

71 
	#SEM_INFO
 19

	)

73 
	s£möfo


75 
	m£mm≠
;

76 
	m£mmni
;

77 
	m£mmns
;

78 
	m£mmnu
;

79 
	m£mm¶
;

80 
	m£m›m
;

81 
	m£mume
;

82 
	m£musz
;

83 
	m£mvmx
;

84 
	m£m´m
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‚de‡
_BITS_SIGCONTEXT_H


20 
	#_BITS_SIGCONTEXT_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


26 
	~<bôs/w‹dsize.h
>

28 
	s_Âªg


30 
	msignifiˇnd
[4];

31 
	mexp⁄ít
;

34 
	s_Âxªg


36 
	msignifiˇnd
[4];

37 
	mexp⁄ít
;

38 
	m∑ddög
[3];

41 
	s_xmmªg


43 
__uöt32_t
 
	mñemít
[4];

48 #i‡
__WORDSIZE
 == 32

50 
	s_Â°©e


53 
__uöt32_t
 
	mcw
;

54 
__uöt32_t
 
	msw
;

55 
__uöt32_t
 
	mèg
;

56 
__uöt32_t
 
	mùoff
;

57 
__uöt32_t
 
	mcs£l
;

58 
__uöt32_t
 
	md©aoff
;

59 
__uöt32_t
 
	md©a£l
;

60 
_Âªg
 
	m_°
[8];

61 
	m°©us
;

62 
	mmagic
;

65 
__uöt32_t
 
	m_fx§_ív
[6];

66 
__uöt32_t
 
	mmxc§
;

67 
__uöt32_t
 
	mª£rved
;

68 
_Âxªg
 
	m_fx§_°
[8];

69 
_xmmªg
 
	m_xmm
[8];

70 
__uöt32_t
 
	m∑ddög
[56];

73 #i‚de‡
sigc⁄ãxt_°ru˘


78 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

81 
	ssigc⁄ãxt


83 
	mgs
, 
	m__gsh
;

84 
	mfs
, 
	m__fsh
;

85 
	mes
, 
	m__esh
;

86 
	mds
, 
	m__dsh
;

87 
	medi
;

88 
	mesi
;

89 
	mebp
;

90 
	me•
;

91 
	mebx
;

92 
	medx
;

93 
	mecx
;

94 
	móx
;

95 
	må≠no
;

96 
	mîr
;

97 
	meù
;

98 
	mcs
, 
	m__csh
;

99 
	meÊags
;

100 
	me•_©_sig«l
;

101 
	mss
, 
	m__ssh
;

102 
_Â°©e
 * 
	mÂ°©e
;

103 
	mﬁdmask
;

104 
	m¸2
;

109 
	s_Â°©e


112 
__uöt16_t
 
	mcwd
;

113 
__uöt16_t
 
	mswd
;

114 
__uöt16_t
 
	m·w
;

115 
__uöt16_t
 
	mf›
;

116 
__uöt64_t
 
	mrù
;

117 
__uöt64_t
 
	mrdp
;

118 
__uöt32_t
 
	mmxc§
;

119 
__uöt32_t
 
	mmx¸_mask
;

120 
_Âxªg
 
	m_°
[8];

121 
_xmmªg
 
	m_xmm
[16];

122 
__uöt32_t
 
	m∑ddög
[24];

125 
	ssigc⁄ãxt


127 
	mr8
;

128 
	mr9
;

129 
	mr10
;

130 
	mr11
;

131 
	mr12
;

132 
	mr13
;

133 
	mr14
;

134 
	mr15
;

135 
	mrdi
;

136 
	mrsi
;

137 
	mrbp
;

138 
	mrbx
;

139 
	mrdx
;

140 
	møx
;

141 
	mrcx
;

142 
	mr•
;

143 
	mrù
;

144 
	meÊags
;

145 
	mcs
;

146 
	mgs
;

147 
	mfs
;

148 
	m__∑d0
;

149 
	mîr
;

150 
	må≠no
;

151 
	mﬁdmask
;

152 
	m¸2
;

153 
_Â°©e
 * 
	mÂ°©e
;

154 
	m__ª£rved1
 [8];

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

21 #i‚de‡
__BITS_SOCKET_H


22 
	#__BITS_SOCKET_H


	)

24 #i‚de‡
_SYS_SOCKET_H


28 
	#__√ed_size_t


	)

29 
	#__√ed_NULL


	)

30 
	~<°ddef.h
>

32 
	~<limôs.h
>

33 
	~<sys/ty≥s.h
>

36 #i‚de‡
__sockÀn_t_deföed


37 
__sockÀn_t
 
	tsockÀn_t
;

38 
	#__sockÀn_t_deföed


	)

42 
	e__sockë_ty≥


44 
	mSOCK_STREAM
 = 1,

46 
	#SOCK_STREAM
 
SOCK_STREAM


	)

47 
	mSOCK_DGRAM
 = 2,

49 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

50 
	mSOCK_RAW
 = 3,

51 
	#SOCK_RAW
 
SOCK_RAW


	)

52 
	mSOCK_RDM
 = 4,

53 
	#SOCK_RDM
 
SOCK_RDM


	)

54 
	mSOCK_SEQPACKET
 = 5,

56 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

57 
	mSOCK_PACKET
 = 10

60 
	#SOCK_PACKET
 
SOCK_PACKET


	)

64 
	#PF_UNSPEC
 0

	)

65 
	#PF_LOCAL
 1

	)

66 
	#PF_UNIX
 
PF_LOCAL


	)

67 
	#PF_FILE
 
PF_LOCAL


	)

68 
	#PF_INET
 2

	)

69 
	#PF_AX25
 3

	)

70 
	#PF_IPX
 4

	)

71 
	#PF_APPLETALK
 5

	)

72 
	#PF_NETROM
 6

	)

73 
	#PF_BRIDGE
 7

	)

74 
	#PF_ATMPVC
 8

	)

75 
	#PF_X25
 9

	)

76 
	#PF_INET6
 10

	)

77 
	#PF_ROSE
 11

	)

78 
	#PF_DEC√t
 12

	)

79 
	#PF_NETBEUI
 13

	)

80 
	#PF_SECURITY
 14

	)

81 
	#PF_KEY
 15

	)

82 
	#PF_NETLINK
 16

	)

83 
	#PF_ROUTE
 
PF_NETLINK


	)

84 
	#PF_PACKET
 17

	)

85 
	#PF_ASH
 18

	)

86 
	#PF_ECONET
 19

	)

87 
	#PF_ATMSVC
 20

	)

88 
	#PF_SNA
 22

	)

89 
	#PF_IRDA
 23

	)

90 
	#PF_PPPOX
 24

	)

91 
	#PF_WANPIPE
 25

	)

92 
	#PF_BLUETOOTH
 31

	)

93 
	#PF_IUCV
 32

	)

94 
	#PF_RXRPC
 33

	)

95 
	#PF_MAX
 34

	)

98 
	#AF_UNSPEC
 
PF_UNSPEC


	)

99 
	#AF_LOCAL
 
PF_LOCAL


	)

100 
	#AF_UNIX
 
PF_UNIX


	)

101 
	#AF_FILE
 
PF_FILE


	)

102 
	#AF_INET
 
PF_INET


	)

103 
	#AF_AX25
 
PF_AX25


	)

104 
	#AF_IPX
 
PF_IPX


	)

105 
	#AF_APPLETALK
 
PF_APPLETALK


	)

106 
	#AF_NETROM
 
PF_NETROM


	)

107 
	#AF_BRIDGE
 
PF_BRIDGE


	)

108 
	#AF_ATMPVC
 
PF_ATMPVC


	)

109 
	#AF_X25
 
PF_X25


	)

110 
	#AF_INET6
 
PF_INET6


	)

111 
	#AF_ROSE
 
PF_ROSE


	)

112 
	#AF_DEC√t
 
PF_DEC√t


	)

113 
	#AF_NETBEUI
 
PF_NETBEUI


	)

114 
	#AF_SECURITY
 
PF_SECURITY


	)

115 
	#AF_KEY
 
PF_KEY


	)

116 
	#AF_NETLINK
 
PF_NETLINK


	)

117 
	#AF_ROUTE
 
PF_ROUTE


	)

118 
	#AF_PACKET
 
PF_PACKET


	)

119 
	#AF_ASH
 
PF_ASH


	)

120 
	#AF_ECONET
 
PF_ECONET


	)

121 
	#AF_ATMSVC
 
PF_ATMSVC


	)

122 
	#AF_SNA
 
PF_SNA


	)

123 
	#AF_IRDA
 
PF_IRDA


	)

124 
	#AF_PPPOX
 
PF_PPPOX


	)

125 
	#AF_WANPIPE
 
PF_WANPIPE


	)

126 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

127 
	#AF_IUCV
 
PF_IUCV


	)

128 
	#AF_RXRPC
 
PF_RXRPC


	)

129 
	#AF_MAX
 
PF_MAX


	)

135 
	#SOL_RAW
 255

	)

136 
	#SOL_DECNET
 261

	)

137 
	#SOL_X25
 262

	)

138 
	#SOL_PACKET
 263

	)

139 
	#SOL_ATM
 264

	)

140 
	#SOL_AAL
 265

	)

141 
	#SOL_IRDA
 266

	)

144 
	#SOMAXCONN
 128

	)

147 
	~<bôs/sockaddr.h
>

150 
	ssockaddr


152 
__SOCKADDR_COMMON
 (
ß_
);

153 
	mß_d©a
[14];

159 #i‡
ULONG_MAX
 > 0xffffffff

160 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

162 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

164 
	#_SS_SIZE
 128

	)

165 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

167 
	ssockaddr_°‹age


169 
__SOCKADDR_COMMON
 (
ss_
);

170 
__ss_Æig¡y≥
 
	m__ss_Æign
;

171 
	m__ss_∑ddög
[
_SS_PADSIZE
];

178 
	mMSG_OOB
 = 0x01,

179 
	#MSG_OOB
 
MSG_OOB


	)

180 
	mMSG_PEEK
 = 0x02,

181 
	#MSG_PEEK
 
MSG_PEEK


	)

182 
	mMSG_DONTROUTE
 = 0x04,

183 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

184 #ifde‡
__USE_GNU


186 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

187 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

189 
	mMSG_CTRUNC
 = 0x08,

190 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

191 
	mMSG_PROXY
 = 0x10,

192 
	#MSG_PROXY
 
MSG_PROXY


	)

193 
	mMSG_TRUNC
 = 0x20,

194 
	#MSG_TRUNC
 
MSG_TRUNC


	)

195 
	mMSG_DONTWAIT
 = 0x40,

196 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

197 
	mMSG_EOR
 = 0x80,

198 
	#MSG_EOR
 
MSG_EOR


	)

199 
	mMSG_WAITALL
 = 0x100,

200 
	#MSG_WAITALL
 
MSG_WAITALL


	)

201 
	mMSG_FIN
 = 0x200,

202 
	#MSG_FIN
 
MSG_FIN


	)

203 
	mMSG_SYN
 = 0x400,

204 
	#MSG_SYN
 
MSG_SYN


	)

205 
	mMSG_CONFIRM
 = 0x800,

206 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

207 
	mMSG_RST
 = 0x1000,

208 
	#MSG_RST
 
MSG_RST


	)

209 
	mMSG_ERRQUEUE
 = 0x2000,

210 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

211 
	mMSG_NOSIGNAL
 = 0x4000,

212 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

213 
	mMSG_MORE
 = 0x8000,

214 
	#MSG_MORE
 
MSG_MORE


	)

216 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

219 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

225 
	smsghdr


227 *
	mmsg_«me
;

228 
sockÀn_t
 
	mmsg_«mñí
;

230 
iovec
 *
	mmsg_iov
;

231 
size_t
 
	mmsg_iovÀn
;

233 *
	mmsg_c⁄åﬁ
;

234 
size_t
 
	mmsg_c⁄åﬁÀn
;

239 
	mmsg_Êags
;

243 
	scmsghdr


245 
size_t
 
	mcmsg_Àn
;

250 
	mcmsg_Àvñ
;

251 
	mcmsg_ty≥
;

252 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

253 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

258 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

259 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

261 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

263 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

264 
	#CMSG_FIRSTHDR
(
mhdr
) \

265 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

266 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

267 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

268 & (
size_t
Ë~( (size_tË- 1))

	)

269 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

270 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

271 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

273 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

274 
cmsghdr
 *
__cmsg
Ë
__THROW
;

275 #ifde‡
__USE_EXTERN_INLINES


276 #i‚de‡
_EXTERN_INLINE


277 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

279 
_EXTERN_INLINE
 
cmsghdr
 *

280 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

282 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

286 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

287 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

288 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


289 + 
__mhdr
->
msg_c⁄åﬁÀn
)

290 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

291 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

294  
__cmsg
;

295 
	}
}

302 
	mSCM_RIGHTS
 = 0x01

303 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

304 #ifde‡
__USE_BSD


305 , 
	mSCM_CREDENTIALS
 = 0x02

306 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

312 
	su¸ed


314 
pid_t
 
	mpid
;

315 
uid_t
 
	muid
;

316 
gid_t
 
	mgid
;

320 
	~<asm/sockë.h
>

324 
	slögî


326 
	ml_⁄off
;

327 
	ml_lögî
;

	@/usr/include/bits/socket2.h

20 #i‚de‡
_SYS_SOCKET_H


24 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

25 
__Êags
);

26 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

27 
__Êags
), 
ªcv
);

28 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

30 
__Êags
), 
__ªcv_chk
)

31 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

34 
__exã∫_Æways_ölöe
 
ssize_t


35 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

40  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

42 i‡(
__n
 > 
	`__bos0
 (
__buf
))

43  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

45  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

46 
	}
}

48 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

49 
size_t
 
__buÊí
, 
__Êags
,

50 
__SOCKADDR_ARG
 
__addr
,

51 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

52 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

53 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

54 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

55 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

56 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

57 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

58 
size_t
 
__buÊí
, 
__Êags
,

59 
__SOCKADDR_ARG
 
__addr
,

60 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

61 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

64 
__exã∫_Æways_ölöe
 
ssize_t


65 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

66 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

68 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

71  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

72 
__addr
, 
__addr_Àn
);

73 i‡(
__n
 > 
	`__bos0
 (
__buf
))

74  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

75 
__addr
, 
__addr_Àn
);

77  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

78 
	}
}

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_KERNEL
 0

	)

26 #i‡
__WORDSIZE
 == 32

27 
	#_STAT_VER_SVR4
 2

	)

28 
	#_STAT_VER_LINUX
 3

	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

35 
	#_STAT_VER_LINUX
 1

	)

38 
	#_MKNOD_VER_LINUX
 0

	)

41 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

43 
	s°©


45 
__dev_t
 
	m°_dev
;

46 #i‡
__WORDSIZE
 == 32

47 
	m__∑d1
;

49 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


50 
__öo_t
 
	m°_öo
;

52 
__öo_t
 
	m__°_öo
;

54 #i‡
__WORDSIZE
 == 32

55 
__mode_t
 
	m°_mode
;

56 
__∆ök_t
 
	m°_∆ök
;

58 
__∆ök_t
 
	m°_∆ök
;

59 
__mode_t
 
	m°_mode
;

61 
__uid_t
 
	m°_uid
;

62 
__gid_t
 
	m°_gid
;

63 #i‡
__WORDSIZE
 == 64

64 
	m∑d0
;

66 
__dev_t
 
	m°_rdev
;

67 #i‡
__WORDSIZE
 == 32

68 
	m__∑d2
;

70 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


71 
__off_t
 
	m°_size
;

73 
__off64_t
 
	m°_size
;

75 
__blksize_t
 
	m°_blksize
;

76 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


77 
__blk˙t_t
 
	m°_blocks
;

79 
__blk˙t64_t
 
	m°_blocks
;

81 #ifde‡
__USE_MISC


88 
time•ec
 
	m°_©im
;

89 
time•ec
 
	m°_mtim
;

90 
time•ec
 
	m°_˘im
;

91 
	#°_©ime
 
°_©im
.
tv_£c


	)

92 
	#°_mtime
 
°_mtim
.
tv_£c


	)

93 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

95 
__time_t
 
	m°_©ime
;

96 
	m°_©imí£c
;

97 
__time_t
 
	m°_mtime
;

98 
	m°_mtimí£c
;

99 
__time_t
 
	m°_˘ime
;

100 
	m°_˘imí£c
;

102 #i‡
__WORDSIZE
 == 64

103 
	m__unu£d
[3];

105 #i‚de‡
__USE_FILE_OFFSET64


106 
	m__unu£d4
;

107 
	m__unu£d5
;

109 
__öo64_t
 
	m°_öo
;

114 #ifde‡
__USE_LARGEFILE64


116 
	s°©64


118 
__dev_t
 
	m°_dev
;

119 #i‡
__WORDSIZE
 == 64

120 
__öo64_t
 
	m°_öo
;

121 
__∆ök_t
 
	m°_∆ök
;

122 
__mode_t
 
	m°_mode
;

124 
	m__∑d1
;

125 
__öo_t
 
	m__°_öo
;

126 
__mode_t
 
	m°_mode
;

127 
__∆ök_t
 
	m°_∆ök
;

129 
__uid_t
 
	m°_uid
;

130 
__gid_t
 
	m°_gid
;

131 #i‡
__WORDSIZE
 == 64

132 
	m∑d0
;

133 
__dev_t
 
	m°_rdev
;

134 
__off_t
 
	m°_size
;

136 
__dev_t
 
	m°_rdev
;

137 
	m__∑d2
;

138 
__off64_t
 
	m°_size
;

140 
__blksize_t
 
	m°_blksize
;

141 
__blk˙t64_t
 
	m°_blocks
;

142 #ifde‡
__USE_MISC


149 
time•ec
 
	m°_©im
;

150 
time•ec
 
	m°_mtim
;

151 
time•ec
 
	m°_˘im
;

152 
	#°_©ime
 
°_©im
.
tv_£c


	)

153 
	#°_mtime
 
°_mtim
.
tv_£c


	)

154 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

156 
__time_t
 
	m°_©ime
;

157 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
	m°_˘imí£c
;

163 #i‡
__WORDSIZE
 == 64

164 
	m__unu£d
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #i‡
deföed
 
__USE_ATFILE
 || deföed 
__USE_GNU


207 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

208 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

133 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

134 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

135 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

138 
__exã∫_Æways_ölöe
 
__wur
 *

139 
	$gës
 (*
__°r
)

141 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

142  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

143  
	`__gës_w¨n
 (
__°r
);

144 
	}
}

146 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

147 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

148 *
	`__REDIRECT
 (
__fgës_Æüs
,

149 (*
__ª°ri˘
 
__s
, 
__n
,

150 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

151 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

152 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

153 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

154 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

157 
__exã∫_Æways_ölöe
 
__wur
 *

158 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

160 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

162 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

163  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

165 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

166  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

168  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

169 
	}
}

171 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

172 
size_t
 
__size
, size_à
__n
,

173 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

174 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

175 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

176 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

177 
‰ód
Ë
__wur
;

178 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

179 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

180 
size_t
 
__size
, size_à
__n
,

181 
FILE
 *
__ª°ri˘
 
__°ªam
),

182 
__‰ód_chk
)

183 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

186 
__exã∫_Æways_ölöe
 
__wur
 
size_t


187 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

188 
FILE
 *
__ª°ri˘
 
__°ªam
)

190 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

192 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

193 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

194 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

195  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

197 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

198  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

200  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

201 
	}
}

203 #ifde‡
__USE_GNU


204 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

205 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

206 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

207 (*
__ª°ri˘
 
__s
, 
__n
,

208 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

209 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

210 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

211 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

212 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

215 
__exã∫_Æways_ölöe
 
__wur
 *

216 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

218 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

220 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

221  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

223 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

224  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

226  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

227 
	}
}

230 #ifde‡
__USE_MISC


231 #unde‡
‰ód_u∆ocked


232 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

233 
size_t
 
__size
, size_à
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

236 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

237 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

238 
‰ód_u∆ocked
Ë
__wur
;

239 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

240 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

241 
size_t
 
__size
, size_à
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
),

243 
__‰ód_u∆ocked_chk
)

244 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

247 
__exã∫_Æways_ölöe
 
__wur
 
size_t


248 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
)

251 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

253 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

254 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

255 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

256  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

257 
__°ªam
);

259 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

260  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

261 
__°ªam
);

264 #ifde‡
__USE_EXTERN_INLINES


265 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

266 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

267 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

268 && 
__size
 * 
__n
 <= 8)

270 
size_t
 
__˙t
 = 
__size
 * 
__n
;

271 *
__˝å
 = (*Ë
__±r
;

272 i‡(
__˙t
 == 0)

275 ; 
__˙t
 > 0; --__cnt)

277 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

278 i‡(
__c
 =
EOF
)

280 *
__˝å
++ = 
__c
;

282  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

285  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

286 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1170 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1173 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1174 
__STRING_INLINE
 *

1175 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1177 *
__ªsu…
;

1178 i‡(
__s
 =
NULL
)

1179 
__s
 = *
__√xç
;

1180 *
__s
 =
__£p
)

1181 ++
__s
;

1182 
__ªsu…
 = 
NULL
;

1183 i‡(*
__s
 != '\0')

1185 
__ªsu…
 = 
__s
++;

1186 *
__s
 != '\0')

1187 i‡(*
__s
++ =
__£p
)

1189 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1194  
__ªsu…
;

1195 
	}
}

1196 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1197 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1202 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1203 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1205 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1206 
	#__°r£p
(
s
, 
ªje˘
) \

1207 
__exãnsi⁄__
 \

1208 ({ 
__r0
, 
__r1
, 
__r2
; \

1209 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1210 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1211 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1212 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1213 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1214 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1215 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1216 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1217 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1218 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1220 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1223 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1224 
__STRING_INLINE
 *

1225 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1227 *
__ªtvÆ
 = *
__s
;

1228 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1229 *(*
__s
)++ = '\0';

1230  
__ªtvÆ
;

1231 
	}
}

1233 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1234 
__STRING_INLINE
 *

1235 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1237 *
__ªtvÆ
 = *
__s
;

1238 i‡(
__ªtvÆ
 !
NULL
)

1240 *
__˝
 = 
__ªtvÆ
;

1243 i‡(*
__˝
 == '\0')

1245 
__˝
 = 
NULL
;

1248 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1250 *
__˝
++ = '\0';

1253 ++
__˝
;

1255 *
__s
 = 
__˝
;

1257  
__ªtvÆ
;

1258 
	}
}

1260 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1261 
__ªje˘3
);

1262 
__STRING_INLINE
 *

1263 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1265 *
__ªtvÆ
 = *
__s
;

1266 i‡(
__ªtvÆ
 !
NULL
)

1268 *
__˝
 = 
__ªtvÆ
;

1271 i‡(*
__˝
 == '\0')

1273 
__˝
 = 
NULL
;

1276 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1278 *
__˝
++ = '\0';

1281 ++
__˝
;

1283 *
__s
 = 
__˝
;

1285  
__ªtvÆ
;

1286 
	}
}

1287 #ifde‡
__USE_BSD


1288 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1295 #ifde‡
__USE_MISC


1297 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1298 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1299 
	~<°dlib.h
>

1302 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1304 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1305 
	#__°rdup
(
s
) \

1306 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1307 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1308 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1309 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1310 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1311 i‡(
__ªtvÆ
 !
NULL
) \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1313 
__ªtvÆ
; 
	}
})) \

1314 : 
	`__°rdup
 (
s
)))

	)

1316 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1317 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1321 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1323 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1324 
__THROW
 
__©åibuã_mÆloc__
;

1325 
	#__°∫dup
(
s
, 
n
) \

1326 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1327 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1328 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1329 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1330 
size_t
 
__n
 = (
n
); \

1331 *
__ªtvÆ
; \

1332 i‡(
__n
 < 
__Àn
) \

1333 
__Àn
 = 
__n
 + 1; \

1334 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1335 i‡(
__ªtvÆ
 !
NULL
) \

1337 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1338 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1339 
__Àn
 - 1); \

1341 
__ªtvÆ
; 
	}
})) \

1342 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1344 #ifde‡
__USE_GNU


1345 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1351 #i‚de‡
_FORCE_INLINES


1352 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

57 
size_t
 
__Àn
))

59  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

60 
	}
}

62 #ifde‡
__USE_GNU


63 
__exã∫_Æways_ölöe
 *

64 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

65 
size_t
 
__Àn
))

67  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

68 
	}
}

77 
__exã∫_Æways_ölöe
 *

78 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

80 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0)

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__ª°ri˘
 
__§c
, *__ª°ri˘ 
__de°
,

91 
size_t
 
__Àn
))

93 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

94 
	}
}

96 
__exã∫_Æways_ölöe
 

97 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

99 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

100 
	}
}

103 
__exã∫_Æways_ölöe
 *

104 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

106  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

107 
	}
}

109 #ifde‡
__USE_GNU


110 
__exã∫_Æways_ölöe
 *

111 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

113  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

114 
	}
}

118 
__exã∫_Æways_ölöe
 *

119 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

120 
size_t
 
__Àn
))

122  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

123 
	}
}

126 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

129 
__c⁄°
 *
__§c
,

130 
size_t
 
__n
), 
°≤˝y
);

132 
__exã∫_Æways_ölöe
 *

133 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

135 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

136 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

137  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

138  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 
__exã∫_Æways_ölöe
 *

143 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

145  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

146 
	}
}

149 
__exã∫_Æways_ölöe
 *

150 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

151 
size_t
 
__Àn
))

153  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

154 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

55 
	#TIMER_ABSTIME
 1

	)

61 #ifde‡
__√ed_timevÆ


62 #unde‡
__√ed_timevÆ


63 #i‚de‡
_STRUCT_TIMEVAL


64 
	#_STRUCT_TIMEVAL
 1

	)

65 
	~<bôs/ty≥s.h
>

69 
	stimevÆ


71 
__time_t
 
	mtv_£c
;

72 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/boost/config.hpp

17 #i‚de‡
BOOST_CONFIG_HPP


18 
	#BOOST_CONFIG_HPP


	)

21 #i‡!
deföed
(
BOOST_USER_CONFIG
Ë&& !deföed(
BOOST_NO_USER_CONFIG
)

22 
	#BOOST_USER_CONFIG
 <
boo°
/
c⁄fig
/
u£r
.
hµ
>

	)

25 #ifde‡
BOOST_USER_CONFIG


26 #ö˛udê
BOOST_USER_CONFIG


30 #i‡!
deföed
(
BOOST_COMPILER_CONFIG
Ë&& !deföed(
BOOST_NO_COMPILER_CONFIG
Ë&& !deföed(
BOOST_NO_CONFIG
)

31 
	~<boo°/c⁄fig/£À˘_compûî_c⁄fig.hµ
>

34 #ifde‡
BOOST_COMPILER_CONFIG


35 #ö˛udê
BOOST_COMPILER_CONFIG


39 #i‡!
deföed
(
BOOST_STDLIB_CONFIG
Ë&& !deföed(
BOOST_NO_STDLIB_CONFIG
Ë&& !deföed(
BOOST_NO_CONFIG
)

40 
	~<boo°/c⁄fig/£À˘_°dlib_c⁄fig.hµ
>

43 #ifde‡
BOOST_STDLIB_CONFIG


44 #ö˛udê
BOOST_STDLIB_CONFIG


48 #i‡!
deföed
(
BOOST_PLATFORM_CONFIG
Ë&& !deföed(
BOOST_NO_PLATFORM_CONFIG
Ë&& !deföed(
BOOST_NO_CONFIG
)

49 
	~<boo°/c⁄fig/£À˘_∂©f‹m_c⁄fig.hµ
>

52 #ifde‡
BOOST_PLATFORM_CONFIG


53 #ö˛udê
BOOST_PLATFORM_CONFIG


57 
	~<boo°/c⁄fig/suffix.hµ
>

	@/usr/include/boost/static_assert.hpp

14 #i‚de‡
BOOST_STATIC_ASSERT_HPP


15 
	#BOOST_STATIC_ASSERT_HPP


	)

17 
	~<boo°/c⁄fig.hµ
>

18 
	~<boo°/dëaû/w‹k¨ound.hµ
>

20 #ifde‡
__BORLANDC__


23 
	#BOOST_BUGGY_INTEGRAL_CONSTANT_EXPRESSIONS


	)

26 #i‡
deföed
(
__GNUC__
Ë&& (__GNUC__ =3Ë&& ((
__GNUC_MINOR__
 == 3) || (__GNUC_MINOR__ == 4))

28 
	#BOOST_SA_GCC_WORKAROUND


	)

31 #ifde‡
BOOST_HAS_STATIC_ASSERT


32 
	#BOOST_STATIC_ASSERT
–
B
 ) 
	`°©ic_as£π
(B, #B)

	)

35 
«me•a˚
 
	gboo°
{

38 
	gãm∂©e
 <
boﬁ
 
	gx
> 
	gSTATIC_ASSERTION_FAILURE
;

40 
	gãm∂©e
 <> 
	gSTATIC_ASSERTION_FAILURE
<
	gåue
> {Énum { 
	gvÆue
 = 1 }; };

43 
	gãm∂©e
<
	gx
> 
	s°©ic_as£π_ã°
{};

69 #i‡!
deföed
(
BOOST_BUGGY_INTEGRAL_CONSTANT_EXPRESSIONS
)

71 #i‡
deföed
(
BOOST_MSVC
) && (BOOST_MSVC < 1300)

74 
	#BOOST_STATIC_ASSERT
–
B
 ) \

75 ::
boo°
::
	t°©ic_as£π_ã°
<\

76 (::
	tboo°
::
	tSTATIC_ASSERTION_FAILURE
< (
	tboﬁ
)–
	tB
 ) >)\

77 > 
	tboo°_°©ic_as£π_ty≥def_


	)

78 #ñi‡
	tdeföed
(
	tBOOST_MSVC
)

79 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

80 ::
boo°
::
	t°©ic_as£π_ã°
<\

81 (::
	tboo°
::
	tSTATIC_ASSERTION_FAILURE
< (
	tboﬁ
)–
	tB
 ) >)>\

82 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ty≥def_
, 
	t__COUNTER__
)

	)

83 #ñi‡
	tdeföed
(
	tBOOST_INTEL_CXX_VERSION
Ë|| deföed(
	tBOOST_SA_GCC_WORKAROUND
)

86 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

87 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ty≥def_
, 
	t__LINE__
) \

88 [ ::
boo°
::
STATIC_ASSERTION_FAILURE
< (
boﬁ
)–
B
 ) >::
vÆue
 ]

	)

89 #ñi‡
	tdeföed
(
	t__sgi
)

91 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

92 
	tBOOST_STATIC_CONSTANT
(
	tboﬁ
, \

93 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ã°_
, 
	t__LINE__
Ë–
	tB
 )); \

94 ::
boo°
::
	t°©ic_as£π_ã°
<\

95 (::
	tboo°
::
	tSTATIC_ASSERTION_FAILURE
< \

96 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ã°_
, 
	t__LINE__
) >)>\

97 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ty≥def_
, 
	t__LINE__
)

	)

98 #ñi‡
	tBOOST_WORKAROUND
(
	t__MWERKS__
, <= 0x3003)

100 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

101 
	tBOOST_STATIC_CONSTANT
(, \

102 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ã°_
, 
	t__LINE__
) = \

103 (::
	tboo°
::
	tSTATIC_ASSERTION_FAILURE
< (
	tboﬁ
)–
	tB
 ) >Ë)

	)

106 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

107 ::
boo°
::
	t°©ic_as£π_ã°
<\

108 (::
	tboo°
::
	tSTATIC_ASSERTION_FAILURE
< (
	tboﬁ
)–
	tB
 ) >)>\

109 
	tBOOST_JOIN
(
	tboo°_°©ic_as£π_ty≥def_
, 
	t__LINE__
)

	)

114 
	tBOOST_STATIC_ASSERT
–
	tB
 ) \

115 íum { 
	`BOOST_JOIN
(
boo°_°©ic_as£π_íum_
, 
__LINE__
) \

116 (::
boo°
::
STATIC_ASSERTION_FAILURE
< (
boﬁ
)–
B
 ) >Ë}

	)

	@/usr/include/boost/throw_exception.hpp

1 #i‚de‡
BOOST_THROW_EXCEPTION_HPP_INCLUDED


2 
	#BOOST_THROW_EXCEPTION_HPP_INCLUDED


	)

6 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER >= 1020)

7 #¥agm®
⁄˚


22 
	~<boo°/c⁄fig.hµ
>

24 #ifde‡
BOOST_NO_EXCEPTIONS


25 
	~<ex˚±i⁄
>

28 
«me•a˚
 
	gboo°


31 #ifde‡
BOOST_NO_EXCEPTIONS


33 
throw_ex˚±i⁄
(
°d
::
ex˚±i⁄
 c⁄° & 
e
);

37 
	gãm∂©e
<
˛ass
 
	gE
> 
ölöe
 
throw_ex˚±i⁄
(
E
 c⁄° & 
e
)

39 
throw
 
	ge
;

	@/usr/include/boost/type_traits/is_reference.hpp

21 #i‚de‡
BOOST_TT_IS_REFERENCE_HPP_INCLUDED


22 
	#BOOST_TT_IS_REFERENCE_HPP_INCLUDED


	)

24 
	~<boo°/ty≥_åaôs/c⁄fig.hµ
>

26 #ifde‡
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION


27 
	~<boo°/ty≥_åaôs/dëaû/yes_no_ty≥.hµ
>

28 
	~<boo°/ty≥_åaôs/dëaû/wøp.hµ
>

32 
	~<boo°/ty≥_åaôs/dëaû/boﬁ_åaô_def.hµ
>

34 
«me•a˚
 
	gboo°
 {

36 #i‚de‡
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION


38 
BOOST_TT_AUX_BOOL_TRAIT_DEF1
(
is_ª„ªn˚
,
T
,
Ál£
)

39 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T&,
åue
)

41 #i‡
deföed
(
__BORLANDC__
Ë&& !deföed(
__COMO__
) && (__BORLANDC__ < 0x600)

46 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T& c⁄°,
åue
)

47 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T& vﬁ©ûe,
åue
)

48 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T& c⁄° vﬁ©ûe,
åue
)

51 #i‡
deföed
(
__GNUC__
) && (__GNUC__ < 3)

54 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T c⁄° ,::
boo°
::is_ª„ªn˚<T>::
vÆue
)

55 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T vﬁ©ûê,::
boo°
::is_ª„ªn˚<T>::
vÆue
)

56 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
is_ª„ªn˚
,T c⁄° vﬁ©ûê,::
boo°
::is_ª„ªn˚<T>::
vÆue
)

59 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2
(
ty≥«me
 
T
,
N
,
is_ª„ªn˚
,T[N],
Ál£
)

60 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2
(
ty≥«me
 
T
,
N
,
is_ª„ªn˚
,c⁄° T[N],
Ál£
)

61 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2
(
ty≥«me
 
T
,
N
,
is_ª„ªn˚
,vﬁ©ûêT[N],
Ál£
)

62 
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2
(
ty≥«me
 
T
,
N
,
is_ª„ªn˚
,c⁄° vﬁ©ûêT[N],
Ál£
)

67 #ifde‡
BOOST_MSVC


68 #¥agm®
w¨nög
(
push
)

69 #¥agm®
w¨nög
(
dißbÀ
: 4181 4097)

72 
«me•a˚
 
	gdëaû
 {

74 
	gusög
 ::
boo°
::
ty≥_åaôs
::
yes_ty≥
;

75 
	gusög
 ::
boo°
::
ty≥_åaôs
::
no_ty≥
;

76 
	gusög
 ::
boo°
::
ty≥_åaôs
::
wøp
;

78 
	gãm∂©e
 <
˛ass
 
	gT
> T&(* 
is_ª„ªn˚_hñ≥r1
(
wøp
<
T
>Ë)(
	gwøp
<T>);

79 
is_ª„ªn˚_hñ≥r1
(...);

81 
	gãm∂©e
 <
˛ass
 
	gT
> 
no_ty≥
 
is_ª„ªn˚_hñ≥r2
(
T
&(*)(
wøp
<T>));

82 
yes_ty≥
 
is_ª„ªn˚_hñ≥r2
(...);

84 
	gãm∂©e
 <
ty≥«me
 
	gT
>

85 
	sis_ª„ªn˚_im∂


87 
BOOST_STATIC_CONSTANT
(

88 
boﬁ
, 
vÆue
 = (

89 ::
boo°
::
dëaû
::
is_ª„ªn˚_hñ≥r2
(

90 ::
boo°
::
dëaû
::
is_ª„ªn˚_hñ≥r1
(::boo°::
ty≥_åaôs
::
wøp
<
T
>()))) == 1

94 
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1
(
is_ª„ªn˚
,,
Ál£
)

95 #i‚de‡
BOOST_NO_CV_VOID_SPECIALIZATIONS


96 
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1
(
is_ª„ªn˚
,c⁄°,
Ál£
)

97 
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1
(
is_ª„ªn˚
,vﬁ©ûe,
Ál£
)

98 
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1
(
is_ª„ªn˚
,c⁄° vﬁ©ûe,
Ál£
)

103 
BOOST_TT_AUX_BOOL_TRAIT_DEF1
(
is_ª„ªn˚
,
T
,::
boo°
::
dëaû
::
is_ª„ªn˚_im∂
<T>::
vÆue
)

105 #ifde‡
BOOST_MSVC


106 #¥agm®
w¨nög
(
p›
)

113 
	~<boo°/ty≥_åaôs/dëaû/boﬁ_åaô_undef.hµ
>

	@/usr/include/boost/type_traits/remove_reference.hpp

9 #i‚de‡
BOOST_TT_REMOVE_REFERENCE_HPP_INCLUDED


10 
	#BOOST_TT_REMOVE_REFERENCE_HPP_INCLUDED


	)

12 
	~<boo°/ty≥_åaôs/brokí_compûî_•ec.hµ
>

13 
	~<boo°/c⁄fig.hµ
>

14 
	~<boo°/dëaû/w‹k¨ound.hµ
>

16 #i‡
BOOST_WORKAROUND
(
BOOST_MSVC
,<=1300)

17 
	~<boo°/ty≥_åaôs/msvc/ªmove_ª„ªn˚.hµ
>

21 
	~<boo°/ty≥_åaôs/dëaû/ty≥_åaô_def.hµ
>

23 
«me•a˚
 
	gboo°
 {

25 #i‚de‡
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION


27 
BOOST_TT_AUX_TYPE_TRAIT_DEF1
(
ªmove_ª„ªn˚
,
T
,T)

28 
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
ªmove_ª„ªn˚
,T&,T)

30 #i‡
deföed
(
__BORLANDC__
) && (__BORLANDC__ < 0x600)

35 
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
ªmove_ª„ªn˚
,T& const,T)

36 
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
ªmove_ª„ªn˚
,T& volatile,T)

37 
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1
(
ty≥«me
 
T
,
ªmove_ª„ªn˚
,T& const volatile,T)

40 #ñi‡!
BOOST_WORKAROUND
(
BOOST_MSVC
,<=1300)

42 
BOOST_TT_AUX_TYPE_TRAIT_DEF1
(
ªmove_ª„ªn˚
,
T
,
ty≥«me
 
boo°
::
dëaû
::
ªmove_ª„ªn˚_im∂
<T>::
ty≥
)

48 
	~<boo°/ty≥_åaôs/dëaû/ty≥_åaô_undef.hµ
>

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

93 #unde‡
__USE_ISOC99


94 #unde‡
__USE_ISOC95


95 #unde‡
__USE_POSIX


96 #unde‡
__USE_POSIX2


97 #unde‡
__USE_POSIX199309


98 #unde‡
__USE_POSIX199506


99 #unde‡
__USE_XOPEN


100 #unde‡
__USE_XOPEN_EXTENDED


101 #unde‡
__USE_UNIX98


102 #unde‡
__USE_XOPEN2K


103 #unde‡
__USE_LARGEFILE


104 #unde‡
__USE_LARGEFILE64


105 #unde‡
__USE_FILE_OFFSET64


106 #unde‡
__USE_BSD


107 #unde‡
__USE_SVID


108 #unde‡
__USE_MISC


109 #unde‡
__USE_ATFILE


110 #unde‡
__USE_GNU


111 #unde‡
__USE_REENTRANT


112 #unde‡
__USE_FORTIFY_LEVEL


113 #unde‡
__FAVOR_BSD


114 #unde‡
__KERNEL_STRICT_NAMES


118 #i‚de‡
_LOOSE_KERNEL_NAMES


119 
	#__KERNEL_STRICT_NAMES


	)

123 
	#__USE_ANSI
 1

	)

132 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


133 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

134 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

136 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

141 #i‡
deföed
 
_BSD_SOURCE
 && \

142 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

143 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

144 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

145 
	#__FAVOR_BSD
 1

	)

149 #ifde‡
_GNU_SOURCE


150 #unde‡
_ISOC99_SOURCE


151 
	#_ISOC99_SOURCE
 1

	)

152 #unde‡
_POSIX_SOURCE


153 
	#_POSIX_SOURCE
 1

	)

154 #unde‡
_POSIX_C_SOURCE


155 
	#_POSIX_C_SOURCE
 200112L

	)

156 #unde‡
_XOPEN_SOURCE


157 
	#_XOPEN_SOURCE
 600

	)

158 #unde‡
_XOPEN_SOURCE_EXTENDED


159 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

160 #unde‡
_LARGEFILE64_SOURCE


161 
	#_LARGEFILE64_SOURCE
 1

	)

162 #unde‡
_BSD_SOURCE


163 
	#_BSD_SOURCE
 1

	)

164 #unde‡
_SVID_SOURCE


165 
	#_SVID_SOURCE
 1

	)

166 #unde‡
_ATFILE_SOURCE


167 
	#_ATFILE_SOURCE
 1

	)

172 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

173 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

174 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

175 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

176 
	#_BSD_SOURCE
 1

	)

177 
	#_SVID_SOURCE
 1

	)

184 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

185 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

186 
	#__USE_ISOC99
 1

	)

190 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

191 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

192 
	#__USE_ISOC95
 1

	)

197 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

198 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

199 
	#_POSIX_SOURCE
 1

	)

200 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

201 
	#_POSIX_C_SOURCE
 2

	)

202 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

203 
	#_POSIX_C_SOURCE
 199506L

	)

205 
	#_POSIX_C_SOURCE
 200112L

	)

209 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


210 
	#__USE_POSIX
 1

	)

213 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


214 
	#__USE_POSIX2
 1

	)

217 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

218 
	#__USE_POSIX199309
 1

	)

221 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

222 
	#__USE_POSIX199506
 1

	)

225 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

226 
	#__USE_XOPEN2K
 1

	)

229 #ifdef 
_XOPEN_SOURCE


230 
	#__USE_XOPEN
 1

	)

231 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

232 
	#__USE_XOPEN_EXTENDED
 1

	)

233 
	#__USE_UNIX98
 1

	)

234 #unde‡
_LARGEFILE_SOURCE


235 
	#_LARGEFILE_SOURCE
 1

	)

236 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC99


239 
	#__USE_ISOC99
 1

	)

242 #ifde‡
_XOPEN_SOURCE_EXTENDED


243 
	#__USE_XOPEN_EXTENDED
 1

	)

248 #ifde‡
_LARGEFILE_SOURCE


249 
	#__USE_LARGEFILE
 1

	)

252 #ifde‡
_LARGEFILE64_SOURCE


253 
	#__USE_LARGEFILE64
 1

	)

256 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

257 
	#__USE_FILE_OFFSET64
 1

	)

260 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


261 
	#__USE_MISC
 1

	)

264 #ifdef 
_BSD_SOURCE


265 
	#__USE_BSD
 1

	)

268 #ifdef 
_SVID_SOURCE


269 
	#__USE_SVID
 1

	)

272 #ifdef 
_ATFILE_SOURCE


273 
	#__USE_ATFILE
 1

	)

276 #ifdef 
_GNU_SOURCE


277 
	#__USE_GNU
 1

	)

280 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


281 
	#__USE_REENTRANT
 1

	)

284 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

285 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

286 #i‡
_FORTIFY_SOURCE
 > 1

287 
	#__USE_FORTIFY_LEVEL
 2

	)

289 
	#__USE_FORTIFY_LEVEL
 1

	)

292 
	#__USE_FORTIFY_LEVEL
 0

	)

296 
	#__STDC_IEC_559__
 1

	)

297 
	#__STDC_IEC_559_COMPLEX__
 1

	)

300 
	#__STDC_ISO_10646__
 200009L

	)

308 #unde‡
__GNU_LIBRARY__


309 
	#__GNU_LIBRARY__
 6

	)

313 
	#__GLIBC__
 2

	)

314 
	#__GLIBC_MINOR__
 7

	)

316 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

317 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

320 #i‡
deföed
 
__GNUC__
 \

321 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

322 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

323 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

324 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

328 #i‚de‡
__ASSEMBLER__


329 #i‚de‡
_SYS_CDEFS_H


330 
	~<sys/cdefs.h
>

335 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


336 
	#__USE_LARGEFILE
 1

	)

337 
	#__USE_LARGEFILE64
 1

	)

343 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

344 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

345 && 
deföed
 
	g__exã∫_ölöe


346 
	#__USE_EXTERN_INLINES
 1

	)

354 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 
gë›t
 ();

158 #i‚de‡
__√ed_gë›t


159 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

162 
__THROW
;

163 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
,

165 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

166 
__THROW
;

170 #ifdef 
__˝lu•lus


175 #unde‡
__√ed_gë›t


	@/usr/include/google/protobuf/generated_enum_reflection.h

39 #i‚de‡
GOOGLE_PROTOBUF_GENERATED_ENUM_REFLECTION_H__


40 
	#GOOGLE_PROTOBUF_GENERATED_ENUM_REFLECTION_H__


	)

42 
	~<°rög
>

44 
«me•a˚
 
	ggoogÀ
 {

45 
«me•a˚
 
	g¥Ÿobuf
 {

46 
˛ass
 
	gEnumDes¸ùt‹
;

49 
«me•a˚
 
	g¥Ÿobuf
 {

54 
	gãm∂©e
 <
ty≥«me
 
	gE
>

55 c⁄° 
EnumDes¸ùt‹
* 
GëEnumDes¸ùt‹
();

57 
«me•a˚
 
	göã∫Æ
 {

62 
LIBPROTOBUF_EXPORT
 
boﬁ
 
P¨£NamedEnum
(c⁄° 
EnumDes¸ùt‹
* 
des¸ùt‹
,

63 c⁄° 
°rög
& 
«me
,

64 * 
vÆue
);

66 
	gãm∂©e
<
ty≥«me
 
	gEnumTy≥
>

67 
boﬁ
 
P¨£NamedEnum
(c⁄° 
EnumDes¸ùt‹
* 
des¸ùt‹
,

68 c⁄° 
°rög
& 
«me
,

69 
EnumTy≥
* 
vÆue
) {

70 
	gtmp
;

71 i‡(!
P¨£NamedEnum
(
des¸ùt‹
, 
«me
, &
tmp
)Ë 
	gÁl£
;

72 *
	gvÆue
 = 
°©ic_ˇ°
<
EnumTy≥
>(
tmp
);

73  
	gåue
;

79 
LIBPROTOBUF_EXPORT
 c⁄° 
	g°rög
& 
NameOfEnum
(c⁄° 
EnumDes¸ùt‹
* 
des¸ùt‹
, 
vÆue
);

	@/usr/include/google/protobuf/message.h

110 #i‚de‡
GOOGLE_PROTOBUF_MESSAGE_H__


111 
	#GOOGLE_PROTOBUF_MESSAGE_H__


	)

113 
	~<ve˘‹
>

114 
	~<°rög
>

116 #ifde‡
__DECCXX


118 
	~<io°ªam
>

120 
	~<iosfwd
>

123 
	~<googÀ/¥Ÿobuf/mesßge_lôe.h
>

125 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

126 
	~<googÀ/¥Ÿobuf/des¸ùt‹.h
>

129 
«me•a˚
 
	ggoogÀ
 {

130 
«me•a˚
 
	g¥Ÿobuf
 {

133 
˛ass
 
	gMesßge
;

134 
˛ass
 
	gReÊe˘i⁄
;

135 
˛ass
 
	gMesßgeFa˘‹y
;

138 
˛ass
 
	gUnknownFõldSë
;

139 
«me•a˚
 
	gio
 {

140 
˛ass
 
	gZîoC›yI≈utSåóm
;

141 
˛ass
 
	gZîoC›yOuçutSåóm
;

142 
˛ass
 
	gCodedI≈utSåóm
;

143 
˛ass
 
	gCodedOuçutSåóm
;

147 
	gãm∂©e
<
ty≥«me
 
	gT
>

148 
˛ass
 
	gRïóãdFõld
;

150 
	gãm∂©e
<
ty≥«me
 
	gT
>

151 
˛ass
 
	gRïóãdPåFõld
;

154 
	sMëad©a
 {

155 c⁄° 
Des¸ùt‹
* 
	gdes¸ùt‹
;

156 c⁄° 
ReÊe˘i⁄
* 
	gªÊe˘i⁄
;

169 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMesßge
 : 
public
 
MesßgeLôe
 {

170 
public
:

171 
ölöe
 
Mesßge
() {}

172 
vútuÆ
 ~
Mesßge
();

179 
vútuÆ
 
Mesßge
* 
New
() const = 0;

184 
vútuÆ
 
C›yFrom
(c⁄° 
Mesßge
& 
‰om
);

190 
vútuÆ
 
MîgeFrom
(c⁄° 
Mesßge
& 
‰om
);

194 
CheckInôülized
() const;

200 
FödInôüliz©i⁄Eº‹s
(
ve˘‹
<
°rög
>* 
îr‹s
) const;

204 
°rög
 
Inôüliz©i⁄Eº‹Såög
() const;

216 
vútuÆ
 
DisˇrdUnknownFõlds
();

221 
vútuÆ
 
S∑˚U£d
() const;

227 
°rög
 
DebugSåög
() const;

229 
°rög
 
Sh‹tDebugSåög
() const;

231 
°rög
 
Utf8DebugSåög
() const;

233 
PrötDebugSåög
() const;

241 
boﬁ
 
P¨£FromFûeDes¸ùt‹
(
fûe_des¸ùt‹
);

244 
boﬁ
 
P¨£P¨tülFromFûeDes¸ùt‹
(
fûe_des¸ùt‹
);

247 
boﬁ
 
P¨£FromI°ªam
(
i°ªam
* 
öput
);

250 
boﬁ
 
P¨£P¨tülFromI°ªam
(
i°ªam
* 
öput
);

254 
boﬁ
 
SîülizeToFûeDes¸ùt‹
(
fûe_des¸ùt‹
) const;

256 
boﬁ
 
SîülizeP¨tülToFûeDes¸ùt‹
(
fûe_des¸ùt‹
) const;

259 
boﬁ
 
SîülizeToO°ªam
(
o°ªam
* 
ouçut
) const;

261 
boﬁ
 
SîülizeP¨tülToO°ªam
(
o°ªam
* 
ouçut
) const;

268 
vútuÆ
 
°rög
 
GëTy≥Name
() const;

269 
vútuÆ
 
CÀ¨
();

270 
vútuÆ
 
boﬁ
 
IsInôülized
() const;

271 
vútuÆ
 
CheckTy≥AndMîgeFrom
(c⁄° 
MesßgeLôe
& 
Ÿhî
);

272 
vútuÆ
 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

273 
vútuÆ
 
ByãSize
() const;

274 
vútuÆ
 
SîülizeWôhCachedSizes
(
io
::
CodedOuçutSåóm
* 
ouçut
) const;

276 
	g¥iv©e
:

284 
vútuÆ
 
SëCachedSize
(
size
) const;

286 
	gpublic
:

291 
googÀ
::
	t¥Ÿobuf
::
	tReÊe˘i⁄
 Reflection;

295 c⁄° 
Des¸ùt‹
* 
GëDes¸ùt‹
(Ëc⁄° {  
GëMëad©a
().
	gdes¸ùt‹
; }

304 
vútuÆ
 c⁄° 
ReÊe˘i⁄
* 
GëReÊe˘i⁄
() const {

305  
GëMëad©a
().
	gªÊe˘i⁄
;

308 
	g¥Ÿe˘ed
:

312 
vútuÆ
 
Mëad©a
 
GëMëad©a
() const = 0;

315 
	g¥iv©e
:

316 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
Mesßge
);

360 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gReÊe˘i⁄
 {

361 
	gpublic
:

362 
ölöe
 
ReÊe˘i⁄
() {}

363 
vútuÆ
 ~
ReÊe˘i⁄
();

368 
vútuÆ
 c⁄° 
	gUnknownFõldSë
& 
GëUnknownFõlds
(

369 c⁄° 
Mesßge
& 
mesßge
) const = 0;

373 
vútuÆ
 
UnknownFõldSë
* 
MuèbÀUnknownFõlds
(
Mesßge
* 
mesßge
) const = 0;

376 
vútuÆ
 
S∑˚U£d
(c⁄° 
Mesßge
& 
mesßge
) const = 0;

379 
vútuÆ
 
boﬁ
 
HasFõld
(c⁄° 
Mesßge
& 
mesßge
,

380 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

383 
vútuÆ
 
FõldSize
(c⁄° 
Mesßge
& 
mesßge
,

384 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

388 
vútuÆ
 
CÀ¨Fõld
(
Mesßge
* 
mesßge
,

389 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

398 
vútuÆ
 
RemoveLa°
(
Mesßge
* 
mesßge
,

399 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

402 
vútuÆ
 
Mesßge
* 
Rñó£La°
(Mesßge* 
mesßge
,

403 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

406 
vútuÆ
 
Sw≠
(
Mesßge
* 
mesßge1
, Mesßge* 
mesßge2
) const = 0;

409 
vútuÆ
 
Sw≠EÀmíts
(
Mesßge
* 
mesßge
,

410 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

411 
ödex1
,

412 
ödex2
) const = 0;

419 
vútuÆ
 
Li°Fõlds
(c⁄° 
Mesßge
& 
mesßge
,

420 
ve˘‹
<c⁄° 
FõldDes¸ùt‹
*>* 
ouçut
) const = 0;

426 
vútuÆ
 
öt32
 
GëI¡32
 (c⁄° 
Mesßge
& 
mesßge
,

427 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

428 
vútuÆ
 
öt64
 
GëI¡64
 (c⁄° 
Mesßge
& 
mesßge
,

429 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

430 
vútuÆ
 
uöt32
 
GëUI¡32
(c⁄° 
Mesßge
& 
mesßge
,

431 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

432 
vútuÆ
 
uöt64
 
GëUI¡64
(c⁄° 
Mesßge
& 
mesßge
,

433 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

434 
vútuÆ
 
GëFlﬂt
 (c⁄° 
Mesßge
& 
mesßge
,

435 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

436 
vútuÆ
 
GëDoubÀ
(c⁄° 
Mesßge
& 
mesßge
,

437 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

438 
vútuÆ
 
boﬁ
 
GëBoﬁ
 (c⁄° 
Mesßge
& 
mesßge
,

439 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

440 
vútuÆ
 
°rög
 
GëSåög
(c⁄° 
Mesßge
& 
mesßge
,

441 c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

442 
vútuÆ
 c⁄° 
EnumVÆueDes¸ùt‹
* 
GëEnum
(

443 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const = 0;

445 
vútuÆ
 c⁄° 
	gMesßge
& 
GëMesßge
(c⁄° 
Mesßge
& 
mesßge
,

446 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

447 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const = 0;

464 
vútuÆ
 c⁄° 
	g°rög
& 
GëSåögRe„ªn˚
(c⁄° 
Mesßge
& 
mesßge
,

465 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

466 
°rög
* 
s¸©ch
) const = 0;

472 
vútuÆ
 
SëI¡32
 (
Mesßge
* 
mesßge
,

473 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt32
 
vÆue
) const = 0;

474 
vútuÆ
 
SëI¡64
 (
Mesßge
* 
mesßge
,

475 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt64
 
vÆue
) const = 0;

476 
vútuÆ
 
SëUI¡32
(
Mesßge
* 
mesßge
,

477 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt32
 
vÆue
) const = 0;

478 
vútuÆ
 
SëUI¡64
(
Mesßge
* 
mesßge
,

479 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt64
 
vÆue
) const = 0;

480 
vútuÆ
 
SëFlﬂt
 (
Mesßge
* 
mesßge
,

481 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const = 0;

482 
vútuÆ
 
SëDoubÀ
(
Mesßge
* 
mesßge
,

483 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const = 0;

484 
vútuÆ
 
SëBoﬁ
 (
Mesßge
* 
mesßge
,

485 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
boﬁ
 
vÆue
) const = 0;

486 
vútuÆ
 
SëSåög
(
Mesßge
* 
mesßge
,

487 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

488 c⁄° 
°rög
& 
vÆue
) const = 0;

489 
vútuÆ
 
SëEnum
 (
Mesßge
* 
mesßge
,

490 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

491 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const = 0;

502 
vútuÆ
 
Mesßge
* 
MuèbÀMesßge
(Mesßge* 
mesßge
,

503 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

504 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const = 0;

512 
vútuÆ
 
Mesßge
* 
Rñó£Mesßge
(Mesßge* 
mesßge
,

513 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

514 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const = 0;

520 
vútuÆ
 
öt32
 
GëRïóãdI¡32
 (c⁄° 
Mesßge
& 
mesßge
,

521 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

522 
ödex
) const = 0;

523 
vútuÆ
 
öt64
 
GëRïóãdI¡64
 (c⁄° 
Mesßge
& 
mesßge
,

524 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

525 
ödex
) const = 0;

526 
vútuÆ
 
uöt32
 
GëRïóãdUI¡32
(c⁄° 
Mesßge
& 
mesßge
,

527 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

528 
ödex
) const = 0;

529 
vútuÆ
 
uöt64
 
GëRïóãdUI¡64
(c⁄° 
Mesßge
& 
mesßge
,

530 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

531 
ödex
) const = 0;

532 
vútuÆ
 
GëRïóãdFlﬂt
 (c⁄° 
Mesßge
& 
mesßge
,

533 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

534 
ödex
) const = 0;

535 
vútuÆ
 
GëRïóãdDoubÀ
(c⁄° 
Mesßge
& 
mesßge
,

536 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

537 
ödex
) const = 0;

538 
vútuÆ
 
boﬁ
 
GëRïóãdBoﬁ
 (c⁄° 
Mesßge
& 
mesßge
,

539 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

540 
ödex
) const = 0;

541 
vútuÆ
 
°rög
 
GëRïóãdSåög
(c⁄° 
Mesßge
& 
mesßge
,

542 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

543 
ödex
) const = 0;

544 
vútuÆ
 c⁄° 
EnumVÆueDes¸ùt‹
* 
GëRïóãdEnum
(

545 c⁄° 
Mesßge
& 
mesßge
,

546 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const = 0;

547 
vútuÆ
 c⁄° 
	gMesßge
& 
GëRïóãdMesßge
(

548 c⁄° 
Mesßge
& 
mesßge
,

549 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const = 0;

552 
vútuÆ
 c⁄° 
	g°rög
& 
GëRïóãdSåögRe„ªn˚
(

553 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
,

554 
ödex
, 
°rög
* 
s¸©ch
) const = 0;

560 
vútuÆ
 
SëRïóãdI¡32
 (
Mesßge
* 
mesßge
,

561 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

562 
ödex
, 
öt32
 
vÆue
) const = 0;

563 
vútuÆ
 
SëRïóãdI¡64
 (
Mesßge
* 
mesßge
,

564 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

565 
ödex
, 
öt64
 
vÆue
) const = 0;

566 
vútuÆ
 
SëRïóãdUI¡32
(
Mesßge
* 
mesßge
,

567 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

568 
ödex
, 
uöt32
 
vÆue
) const = 0;

569 
vútuÆ
 
SëRïóãdUI¡64
(
Mesßge
* 
mesßge
,

570 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

571 
ödex
, 
uöt64
 
vÆue
) const = 0;

572 
vútuÆ
 
SëRïóãdFlﬂt
 (
Mesßge
* 
mesßge
,

573 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

574 
ödex
, 
vÆue
) const = 0;

575 
vútuÆ
 
SëRïóãdDoubÀ
(
Mesßge
* 
mesßge
,

576 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

577 
ödex
, 
vÆue
) const = 0;

578 
vútuÆ
 
SëRïóãdBoﬁ
 (
Mesßge
* 
mesßge
,

579 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

580 
ödex
, 
boﬁ
 
vÆue
) const = 0;

581 
vútuÆ
 
SëRïóãdSåög
(
Mesßge
* 
mesßge
,

582 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

583 
ödex
, c⁄° 
°rög
& 
vÆue
) const = 0;

584 
vútuÆ
 
SëRïóãdEnum
(
Mesßge
* 
mesßge
,

585 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
,

586 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const = 0;

589 
vútuÆ
 
Mesßge
* 
MuèbÀRïóãdMesßge
(

590 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
ödex
) const = 0;

596 
vútuÆ
 
AddI¡32
 (
Mesßge
* 
mesßge
,

597 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt32
 
vÆue
) const = 0;

598 
vútuÆ
 
AddI¡64
 (
Mesßge
* 
mesßge
,

599 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
öt64
 
vÆue
) const = 0;

600 
vútuÆ
 
AddUI¡32
(
Mesßge
* 
mesßge
,

601 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt32
 
vÆue
) const = 0;

602 
vútuÆ
 
AddUI¡64
(
Mesßge
* 
mesßge
,

603 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
uöt64
 
vÆue
) const = 0;

604 
vútuÆ
 
AddFlﬂt
 (
Mesßge
* 
mesßge
,

605 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const = 0;

606 
vútuÆ
 
AddDoubÀ
(
Mesßge
* 
mesßge
,

607 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
vÆue
) const = 0;

608 
vútuÆ
 
AddBoﬁ
 (
Mesßge
* 
mesßge
,

609 c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
boﬁ
 
vÆue
) const = 0;

610 
vútuÆ
 
AddSåög
(
Mesßge
* 
mesßge
,

611 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

612 c⁄° 
°rög
& 
vÆue
) const = 0;

613 
vútuÆ
 
AddEnum
 (
Mesßge
* 
mesßge
,

614 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

615 c⁄° 
EnumVÆueDes¸ùt‹
* 
vÆue
) const = 0;

617 
vútuÆ
 
Mesßge
* 
AddMesßge
(Mesßge* 
mesßge
,

618 c⁄° 
FõldDes¸ùt‹
* 
fõld
,

619 
MesßgeFa˘‹y
* 
Á˘‹y
 = 
NULL
) const = 0;

633 
	gãm∂©e
<
ty≥«me
 
	gT
>

634 c⁄° 
	gRïóãdFõld
<
	gT
>& 
GëRïóãdFõld
(

635 c⁄° 
Mesßge
&, c⁄° 
FõldDes¸ùt‹
*) const;

638 
	gãm∂©e
<
ty≥«me
 
	gT
>

639 
	gRïóãdFõld
<
	gT
>* 
MuèbÀRïóãdFõld
(

640 
Mesßge
*, c⁄° 
FõldDes¸ùt‹
*) const;

644 
	gãm∂©e
<
ty≥«me
 
	gT
>

645 c⁄° 
	gRïóãdPåFõld
<
	gT
>& 
GëRïóãdPåFõld
(

646 c⁄° 
Mesßge
&, c⁄° 
FõldDes¸ùt‹
*) const;

650 
	gãm∂©e
<
ty≥«me
 
	gT
>

651 
	gRïóãdPåFõld
<
	gT
>* 
MuèbÀRïóãdPåFõld
(

652 
Mesßge
*, c⁄° 
FõldDes¸ùt‹
*) const;

658 
vútuÆ
 c⁄° 
FõldDes¸ùt‹
* 
FödKnownExãnsi⁄ByName
(

659 c⁄° 
°rög
& 
«me
) const = 0;

663 
vútuÆ
 c⁄° 
FõldDes¸ùt‹
* 
FödKnownExãnsi⁄ByNumbî
(

664 
numbî
) const = 0;

668 
	g¥Ÿe˘ed
:

674 
vútuÆ
 * 
MuèbÀRawRïóãdFõld
(

675 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
, FõldDes¸ùt‹::
CµTy≥
,

676 
˘y≥
, c⁄° 
Des¸ùt‹
* 
mesßge_ty≥
) const = 0;

678 
	g¥iv©e
:

683 * 
MuèbÀRawRïóãdSåög
(

684 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
, 
boﬁ
 
is_°rög
) const;

686 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
ReÊe˘i⁄
);

690 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMesßgeFa˘‹y
 {

691 
	gpublic
:

692 
ölöe
 
MesßgeFa˘‹y
() {}

693 
vútuÆ
 ~
MesßgeFa˘‹y
();

713 
vútuÆ
 c⁄° 
Mesßge
* 
GëPrŸŸy≥
(c⁄° 
Des¸ùt‹
* 
ty≥
) = 0;

729 
MesßgeFa˘‹y
* 
gíî©ed_Á˘‹y
();

739 
I¡î«lRegi°îGíî©edFûe
(

740 c⁄° * 
fûíame
, (*
ªgi°î_mesßges
)(c⁄° 
°rög
&));

745 
I¡î«lRegi°îGíî©edMesßge
(c⁄° 
Des¸ùt‹
* 
des¸ùt‹
,

746 c⁄° 
Mesßge
* 
¥ŸŸy≥
);

749 
	g¥iv©e
:

750 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
MesßgeFa˘‹y
);

753 
	#DECLARE_GET_REPEATED_FIELD
(
TYPE
) \

754 
ãm∂©e
<> \

755 
LIBPROTOBUF_EXPORT
 \

756 c⁄° 
RïóãdFõld
<
TYPE
>& 
ReÊe˘i⁄
::
GëRïóãdFõld
<TYPE>( \

757 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const; \

759 
ãm∂©e
<> \

760 
LIBPROTOBUF_EXPORT
 \

761 
RïóãdFõld
<
TYPE
>* 
ReÊe˘i⁄
::
MuèbÀRïóãdFõld
<TYPE>( \

762 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
Ëc⁄°;

	)

764 
DECLARE_GET_REPEATED_FIELD
(
öt32
)

765 
DECLARE_GET_REPEATED_FIELD
(
öt64
)

766 
DECLARE_GET_REPEATED_FIELD
(
uöt32
)

767 
DECLARE_GET_REPEATED_FIELD
(
uöt64
)

768 
DECLARE_GET_REPEATED_FIELD
()

769 
DECLARE_GET_REPEATED_FIELD
()

770 
DECLARE_GET_REPEATED_FIELD
(
boﬁ
)

772 #unde‡
DECLARE_GET_REPEATED_FIELD


781 
	gãm∂©e
<>

782 
ölöe
 c⁄° 
	gRïóãdPåFõld
<
	g°rög
>& 
	gReÊe˘i⁄
::
GëRïóãdPåFõld
<
°rög
>(

783 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
	gfõld
) const {

784  *
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	g°rög
>* >(

785 
MuèbÀRawRïóãdSåög
(
c⁄°_ˇ°
<
Mesßge
*>(&
mesßge
), 
fõld
, 
åue
));

788 
	gãm∂©e
<>

789 
ölöe
 
	gRïóãdPåFõld
<
	g°rög
>* 
	gReÊe˘i⁄
::
MuèbÀRïóãdPåFõld
<
°rög
>(

790 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
	gfõld
) const {

791  
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	g°rög
>* >(

792 
MuèbÀRawRïóãdSåög
(
mesßge
, 
fõld
, 
åue
));

798 
	gãm∂©e
<>

799 
ölöe
 c⁄° 
	gRïóãdPåFõld
<
	gMesßge
>& 
	gReÊe˘i⁄
::
GëRïóãdPåFõld
(

800 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const {

801  *
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	gMesßge
>* >(

802 
MuèbÀRawRïóãdFõld
(
c⁄°_ˇ°
<
Mesßge
*>(&
mesßge
), 
fõld
,

803 
FõldDes¸ùt‹
::
CPPTYPE_MESSAGE
, -1,

804 
NULL
));

807 
	gãm∂©e
<>

808 
ölöe
 
	gRïóãdPåFõld
<
	gMesßge
>* 
	gReÊe˘i⁄
::
MuèbÀRïóãdPåFõld
(

809 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const {

810  
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	gMesßge
>* >(

811 
MuèbÀRawRïóãdFõld
(
mesßge
, 
fõld
,

812 
FõldDes¸ùt‹
::
CPPTYPE_MESSAGE
, -1,

813 
NULL
));

816 
	gãm∂©e
<
ty≥«me
 
	gPB
>

817 
ölöe
 c⁄° 
	gRïóãdPåFõld
<
	gPB
>& 
	gReÊe˘i⁄
::
GëRïóãdPåFõld
(

818 c⁄° 
Mesßge
& 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const {

819  *
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	gPB
>* >(

820 
MuèbÀRawRïóãdFõld
(
c⁄°_ˇ°
<
Mesßge
*>(&
mesßge
), 
fõld
,

821 
FõldDes¸ùt‹
::
CPPTYPE_MESSAGE
, -1,

822 
PB
::
deÁu…_ö°™˚
().
GëDes¸ùt‹
()));

825 
	gãm∂©e
<
ty≥«me
 
	gPB
>

826 
ölöe
 
	gRïóãdPåFõld
<
	gPB
>* 
	gReÊe˘i⁄
::
MuèbÀRïóãdPåFõld
(

827 
Mesßge
* 
mesßge
, c⁄° 
FõldDes¸ùt‹
* 
fõld
) const {

828  
	g°©ic_ˇ°
<
	gRïóãdPåFõld
<
	gPB
>* >(

829 
MuèbÀRawRïóãdFõld
(
mesßge
, 
fõld
,

830 
FõldDes¸ùt‹
::
CPPTYPE_MESSAGE
, -1,

831 
PB
::
deÁu…_ö°™˚
().
GëDes¸ùt‹
()));

	@/usr/include/google/protobuf/message_lite.h

39 #i‚de‡
GOOGLE_PROTOBUF_MESSAGE_LITE_H__


40 
	#GOOGLE_PROTOBUF_MESSAGE_LITE_H__


	)

42 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

44 
«me•a˚
 
	ggoogÀ
 {

45 
«me•a˚
 
	g¥Ÿobuf
 {

47 
«me•a˚
 
	gio
 {

48 
˛ass
 
	gCodedI≈utSåóm
;

49 
˛ass
 
	gCodedOuçutSåóm
;

50 
˛ass
 
	gZîoC›yI≈utSåóm
;

51 
˛ass
 
	gZîoC›yOuçutSåóm
;

77 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gMesßgeLôe
 {

78 
	gpublic
:

79 
ölöe
 
MesßgeLôe
() {}

80 
vútuÆ
 ~
MesßgeLôe
();

85 
vútuÆ
 
°rög
 
GëTy≥Name
() const = 0;

89 
vútuÆ
 
MesßgeLôe
* 
New
() const = 0;

96 
vútuÆ
 
CÀ¨
() = 0;

99 
vútuÆ
 
boﬁ
 
IsInôülized
() const = 0;

104 
vútuÆ
 
°rög
 
Inôüliz©i⁄Eº‹Såög
() const;

108 
vútuÆ
 
CheckTy≥AndMîgeFrom
(c⁄° 
MesßgeLôe
& 
Ÿhî
) = 0;

117 
boﬁ
 
P¨£FromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

120 
boﬁ
 
P¨£P¨tülFromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

123 
boﬁ
 
P¨£FromZîoC›ySåóm
(
io
::
ZîoC›yI≈utSåóm
* 
öput
);

126 
boﬁ
 
P¨£P¨tülFromZîoC›ySåóm
(
io
::
ZîoC›yI≈utSåóm
* 
öput
);

130 
boﬁ
 
P¨£FromBoundedZîoC›ySåóm
(
io
::
ZîoC›yI≈utSåóm
* 
öput
, 
size
);

133 
boﬁ
 
P¨£P¨tülFromBoundedZîoC›ySåóm
(
io
::
ZîoC›yI≈utSåóm
* 
öput
,

134 
size
);

136 
boﬁ
 
P¨£FromSåög
(c⁄° 
°rög
& 
d©a
);

139 
boﬁ
 
P¨£P¨tülFromSåög
(c⁄° 
°rög
& 
d©a
);

141 
boﬁ
 
P¨£FromAºay
(c⁄° * 
d©a
, 
size
);

144 
boﬁ
 
P¨£P¨tülFromAºay
(c⁄° * 
d©a
, 
size
);

158 
boﬁ
 
MîgeFromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

165 
vútuÆ
 
boﬁ
 
MîgeP¨tülFromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
) = 0;

175 
boﬁ
 
SîülizeToCodedSåóm
(
io
::
CodedOuçutSåóm
* 
ouçut
) const;

177 
boﬁ
 
SîülizeP¨tülToCodedSåóm
(
io
::
CodedOuçutSåóm
* 
ouçut
) const;

180 
boﬁ
 
SîülizeToZîoC›ySåóm
(
io
::
ZîoC›yOuçutSåóm
* 
ouçut
) const;

182 
boﬁ
 
SîülizeP¨tülToZîoC›ySåóm
(
io
::
ZîoC›yOuçutSåóm
* 
ouçut
) const;

185 
boﬁ
 
SîülizeToSåög
(
°rög
* 
ouçut
) const;

187 
boﬁ
 
SîülizeP¨tülToSåög
(
°rög
* 
ouçut
) const;

190 
boﬁ
 
SîülizeToAºay
(* 
d©a
, 
size
) const;

192 
boﬁ
 
SîülizeP¨tülToAºay
(* 
d©a
, 
size
) const;

200 
°rög
 
SîülizeAsSåög
() const;

202 
°rög
 
SîülizeP¨tülAsSåög
() const;

206 
boﬁ
 
AµídToSåög
(
°rög
* 
ouçut
) const;

208 
boﬁ
 
AµídP¨tülToSåög
(
°rög
* 
ouçut
) const;

213 
vútuÆ
 
ByãSize
() const = 0;

218 
vútuÆ
 
SîülizeWôhCachedSizes
(

219 
io
::
CodedOuçutSåóm
* 
ouçut
) const = 0;

224 
vútuÆ
 
uöt8
* 
SîülizeWôhCachedSizesToAºay
(uöt8* 
èrgë
) const;

237 
vútuÆ
 
GëCachedSize
() const = 0;

239 
	g¥iv©e
:

240 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
MesßgeLôe
);

	@/usr/include/google/protobuf/stubs/type_traits.h

58 #i‚de‡
GOOGLE_PROTOBUF_TYPE_TRAITS_H_


59 
	#GOOGLE_PROTOBUF_TYPE_TRAITS_H_


	)

61 
	~<utûôy
>

63 
	~<googÀ/¥Ÿobuf/°ubs/ãm∂©e_utû.h
>

65 
«me•a˚
 
	ggoogÀ
 {

66 
«me•a˚
 
	g¥Ÿobuf
 {

67 
«me•a˚
 
	göã∫Æ
 {

69 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
;

70 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
;

71 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
;

73 #i‡!
deföed
(
_MSC_VER
Ë&& !(deföed(
__GNUC__
) && __GNUC__ <= 3)

75 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum
;

77 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_ª„ªn˚
;

78 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod
;

79 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c⁄°ru˘‹
;

80 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c›y
;

81 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_assign
;

82 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_de°ru˘‹
;

83 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gªmove_c⁄°
;

84 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gªmove_vﬁ©ûe
;

85 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gªmove_cv
;

86 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gªmove_ª„ªn˚
;

87 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gadd_ª„ªn˚
;

88 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gªmove_poöãr
;

89 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	gis_ßme
;

90 #i‡!
deföed
(
_MSC_VER
Ë&& !(deföed(
__GNUC__
) && __GNUC__ <= 3)

91 
	gãm∂©e
 <
˛ass
 
	gFrom
, cœs†
	gTo
> 
	gis_c⁄vîtibÀ
;

96 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
 : 
Ál£_ty≥
 { };

97 
	gãm∂©e
<> 
	gis_öãgøl
<
	gboﬁ
> : 
åue_ty≥
 { };

98 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

99 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

100 
	gãm∂©e
<> 
	gis_öãgøl
<sig√d > : 
åue_ty≥
 { };

101 #i‡
deföed
(
_MSC_VER
)

105 
	gãm∂©e
<> 
	gis_öãgøl
<
	g__wch¨_t
> : 
åue_ty≥
 { };

107 
	gãm∂©e
<> 
	gis_öãgøl
<
	gwch¨_t
> : 
åue_ty≥
 { };

109 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

110 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

111 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

112 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

113 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

114 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

115 #ifde‡
HAVE_LONG_LONG


116 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

117 
	gãm∂©e
<> 
	gis_öãgøl
<> : 
åue_ty≥
 { };

119 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
<c⁄° T> : 
is_öãgøl
<
T
> { };

120 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
<vﬁ©ûêT> : 
is_öãgøl
<
T
> { };

121 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_öãgøl
<c⁄° vﬁ©ûêT> : 
is_öãgøl
<
T
> { };

125 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
 : 
Ál£_ty≥
 { };

126 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

127 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

128 
	gãm∂©e
<> 
	gis_Êﬂtög_poöt
<> : 
åue_ty≥
 { };

129 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
<const T>

130 : 
is_Êﬂtög_poöt
<
T
> { };

131 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
<volatile T>

132 : 
is_Êﬂtög_poöt
<
T
> { };

133 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_Êﬂtög_poöt
<const volatile T>

134 : 
is_Êﬂtög_poöt
<
T
> { };

139 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
 : 
Ál£_ty≥
 { };

140 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
<T*> : 
åue_ty≥
 { };

141 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
<c⁄° T> : 
is_poöãr
<
T
> { };

142 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
<vﬁ©ûêT> : 
is_poöãr
<
T
> { };

143 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_poöãr
<c⁄° vﬁ©ûêT> : 
is_poöãr
<
T
> { };

145 #i‡!
deföed
(
_MSC_VER
Ë&& !(deföed(
__GNUC__
) && __GNUC__ <= 3)

147 
«me•a˚
 
	göã∫Æ
 {

149 
	gãm∂©e
 <
˛ass
 
	gT
> 
	sis_˛ass_‹_uni⁄
 {

150 
	gãm∂©e
 <
˛ass
 
	gU
> 
smÆl_
 
ã°î
((
U
::*)());

151 
	gãm∂©e
 <
˛ass
 
	gU
> 
big_
 
ã°î
(...);

152 c⁄° 
boﬁ
 
	gvÆue
 = (
ã°î
<
T
>(0)Ë=(
smÆl_
);

157 
	gãm∂©e
 <
boﬁ
 
	gNŸUnum
, 
˛ass
 
	gT
> 
	gis_íum_im∂


158 : 
is_c⁄vîtibÀ
<
ty≥«me
 
add_ª„ªn˚
<
T
>::
ty≥
, > { };

160 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum_im∂
<
	gåue
, T> : 
Ál£_ty≥
 { };

179 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum


180 : 
öã∫Æ
::
is_íum_im∂
<

181 
is_ßme
<
T
, >::
vÆue
 ||

182 
is_öãgøl
<
T
>::
vÆue
 ||

183 
is_Êﬂtög_poöt
<
T
>::
vÆue
 ||

184 
is_ª„ªn˚
<
T
>::
vÆue
 ||

185 
öã∫Æ
::
is_˛ass_‹_uni⁄
<
T
>::
vÆue
,

186 
	gT
> { };

188 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum
<c⁄° T> : 
is_íum
<
T
> { };

189 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum
<vﬁ©ûêT> : 
is_íum
<
T
> { };

190 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_íum
<c⁄° vﬁ©ûêT> : 
is_íum
<
T
> { };

195 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gis_ª„ªn˚
 : 
Ál£_ty≥
 {};

196 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gis_ª„ªn˚
<T&> : 
åue_ty≥
 {};

203 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod


204 : 
öãgøl_c⁄°™t
<
boﬁ
, (
	gis_öãgøl
<
	gT
>::
vÆue
 ||

205 
is_Êﬂtög_poöt
<
T
>::
vÆue
 ||

206 #i‡!
deföed
(
_MSC_VER
Ë&& !(deföed(
__GNUC__
) && __GNUC__ <= 3)

208 
is_íum
<
T
>::
vÆue
 ||

210 
is_poöãr
<
T
>::
vÆue
)> { };

211 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod
<c⁄° T> : 
is_pod
<
T
> { };

212 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod
<vﬁ©ûêT> : 
is_pod
<
T
> { };

213 
	gãm∂©e
 <
˛ass
 
	gT
> 
	gis_pod
<c⁄° vﬁ©ûêT> : 
is_pod
<
T
> { };

221 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c⁄°ru˘‹
 : 
is_pod
<
T
> { };

222 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_c⁄°ru˘‹
<
	g°d
::
∑ú
<
T
, U> >

223 : 
öãgøl_c⁄°™t
<
boﬁ
,

224 (
	ghas_åivül_c⁄°ru˘‹
<
	gT
>::
vÆue
 &&

225 
has_åivül_c⁄°ru˘‹
<
U
>::
vÆue
)> { };

226 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_c⁄°ru˘‹
<A[
N
]>

227 : 
has_åivül_c⁄°ru˘‹
<
A
> { };

228 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c⁄°ru˘‹
<const T>

229 : 
has_åivül_c⁄°ru˘‹
<
T
> { };

236 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c›y
 : 
is_pod
<
T
> { };

237 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_c›y
<
	g°d
::
∑ú
<
T
, U> >

238 : 
öãgøl_c⁄°™t
<
boﬁ
,

239 (
	ghas_åivül_c›y
<
	gT
>::
vÆue
 &&

240 
has_åivül_c›y
<
U
>::
vÆue
)> { };

241 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_c›y
<A[
N
]>

242 : 
has_åivül_c›y
<
A
> { };

243 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_c›y
<c⁄° T> : 
has_åivül_c›y
<
T
> { };

249 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_assign
 : 
is_pod
<
T
> { };

250 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_assign
<
	g°d
::
∑ú
<
T
, U> >

251 : 
öãgøl_c⁄°™t
<
boﬁ
,

252 (
	ghas_åivül_assign
<
	gT
>::
vÆue
 &&

253 
has_åivül_assign
<
U
>::
vÆue
)> { };

254 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_assign
<A[
N
]>

255 : 
has_åivül_assign
<
A
> { };

262 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_de°ru˘‹
 : 
is_pod
<
T
> { };

263 
	gãm∂©e
 <
˛ass
 
	gT
, cœs†
	gU
> 
	ghas_åivül_de°ru˘‹
<
	g°d
::
∑ú
<
T
, U> >

264 : 
öãgøl_c⁄°™t
<
boﬁ
,

265 (
	ghas_åivül_de°ru˘‹
<
	gT
>::
vÆue
 &&

266 
has_åivül_de°ru˘‹
<
U
>::
vÆue
)> { };

267 
	gãm∂©e
 <
˛ass
 
	gA
, 
	gN
> 
	ghas_åivül_de°ru˘‹
<A[
N
]>

268 : 
has_åivül_de°ru˘‹
<
A
> { };

269 
	gãm∂©e
 <
˛ass
 
	gT
> 
	ghas_åivül_de°ru˘‹
<const T>

270 : 
has_åivül_de°ru˘‹
<
T
> { };

273 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sªmove_c⁄°
 { 
T
 
	tty≥
; };

274 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_c⁄°
<
T
 c⁄°> { T 
	tty≥
; };

275 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sªmove_vﬁ©ûe
 { 
T
 
	tty≥
; };

276 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_vﬁ©ûe
<
T
 vﬁ©ûe> { T 
	tty≥
; };

277 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sªmove_cv
 {

278 
ty≥«me
 
	tªmove_c⁄°
<
	tty≥«me
 
	tªmove_vﬁ©ûe
<
	tT
>::
	tty≥
>::typeÅype;

283 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sªmove_ª„ªn˚
 { 
T
 
	tty≥
; };

284 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_ª„ªn˚
<T&> { 
T
 
	tty≥
; };

286 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	sadd_ª„ªn˚
 { T& 
	tty≥
; };

287 
	gãm∂©e
 <
ty≥«me
 
	gT
> 
	gadd_ª„ªn˚
<T&> { T& 
	tty≥
; };

290 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	sªmove_poöãr
 { 
T
 
	tty≥
; };

291 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_poöãr
<T*> { 
T
 
	tty≥
; };

292 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_poöãr
<
T
* c⁄°> { T 
	tty≥
; };

293 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_poöãr
<
T
* vﬁ©ûe> { T 
	tty≥
; };

294 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gªmove_poöãr
<
T
* const volatile> {

295 
T
 
	tty≥
; };

298 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gU
> 
	gis_ßme
 : 
public
 
Ál£_ty≥
 { };

299 
	gãm∂©e
<
ty≥«me
 
	gT
> 
	gis_ßme
<T, T> : 
public
 
åue_ty≥
 { };

302 #i‡!
deföed
(
_MSC_VER
Ë&& !(deföed(
__GNUC__
) && __GNUC__ <= 3)

303 
«me•a˚
 
	göã∫Æ
 {

314 
	gãm∂©e
 <
ty≥«me
 
	gFrom
,Åy≥«mê
	gTo
>

315 
	sC⁄vîtHñ≥r
 {

316 
smÆl_
 
Te°
(
To
);

317 
big_
 
Te°
(...);

318 
From
 
Cª©e
();

323 
	gãm∂©e
 <
ty≥«me
 
	gFrom
,Åy≥«mê
	gTo
>

324 
	gis_c⁄vîtibÀ


325 : 
öãgøl_c⁄°™t
<
boﬁ
,

326 (
	göã∫Æ
::
C⁄vîtHñ≥r
<
From
, 
	gTo
>::
Te°
(

327 
öã∫Æ
::
C⁄vîtHñ≥r
<
From
, 
To
>::
Cª©e
()))

328 =(
smÆl_
)> {

	@/usr/include/google/protobuf/unknown_field_set.h

38 #i‚de‡
GOOGLE_PROTOBUF_UNKNOWN_FIELD_SET_H__


39 
	#GOOGLE_PROTOBUF_UNKNOWN_FIELD_SET_H__


	)

41 
	~<as£π.h
>

42 
	~<°rög
>

43 
	~<ve˘‹
>

44 
	~<googÀ/¥Ÿobuf/°ubs/comm⁄.h
>

47 
«me•a˚
 
	ggoogÀ
 {

48 
«me•a˚
 
	g¥Ÿobuf
 {

49 
«me•a˚
 
	gio
 {

50 
˛ass
 
	gCodedI≈utSåóm
;

51 
˛ass
 
	gCodedOuçutSåóm
;

52 
˛ass
 
	gZîoC›yI≈utSåóm
;

54 
«me•a˚
 
	göã∫Æ
 {

55 
˛ass
 
	gWúeF‹m©
;

56 
˛ass
 
	gUnknownFõldSëFõldSkù≥rUsögC‹d
;

60 
˛ass
 
	gMesßge
;

61 
˛ass
 
	gUnknownFõld
;

75 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gUnknownFõldSë
 {

76 
	gpublic
:

77 
UnknownFõldSë
();

78 ~
UnknownFõldSë
();

81 
ölöe
 
CÀ¨
();

84 
CÀ¨AndFªeMem‹y
();

87 
ölöe
 
boﬁ
 
em±y
() const;

90 
MîgeFrom
(c⁄° 
UnknownFõldSë
& 
Ÿhî
);

93 
ölöe
 
Sw≠
(
UnknownFõldSë
* 
x
);

98 
S∑˚U£dEx˛udögSñf
() const;

101 
S∑˚U£d
() const;

104 
ölöe
 
fõld_cou¡
() const;

107 
ölöe
 c⁄° 
	gUnknownFõld
& 
fõld
(
ödex
) const;

111 
ölöe
 
UnknownFõld
* 
muèbÀ_fõld
(
ödex
);

115 
AddV¨öt
(
numbî
, 
uöt64
 
vÆue
);

116 
AddFixed32
(
numbî
, 
uöt32
 
vÆue
);

117 
AddFixed64
(
numbî
, 
uöt64
 
vÆue
);

118 
AddLígthDñimôed
(
numbî
, c⁄° 
°rög
& 
vÆue
);

119 
°rög
* 
AddLígthDñimôed
(
numbî
);

120 
UnknownFõldSë
* 
AddGroup
(
numbî
);

123 
AddFõld
(c⁄° 
UnknownFõld
& 
fõld
);

127 
DñëeSubønge
(
°¨t
, 
num
);

132 
DñëeByNumbî
(
numbî
);

137 
boﬁ
 
MîgeFromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

138 
boﬁ
 
P¨£FromCodedSåóm
(
io
::
CodedI≈utSåóm
* 
öput
);

139 
boﬁ
 
P¨£FromZîoC›ySåóm
(
io
::
ZîoC›yI≈utSåóm
* 
öput
);

140 
boﬁ
 
P¨£FromAºay
(c⁄° * 
d©a
, 
size
);

141 
ölöe
 
boﬁ
 
P¨£FromSåög
(c⁄° 
°rög
& 
d©a
) {

142  
P¨£FromAºay
(
d©a
.d©a(), d©a.
size
());

145 
	g¥iv©e
:

147 
CÀ¨FÆlback
();

149 
	gve˘‹
<
	gUnknownFõld
>* 
	gfõlds_
;

151 
GOOGLE_DISALLOW_EVIL_CONSTRUCTORS
(
UnknownFõldSë
);

155 ˛as†
	cLIBPROTOBUF_EXPORT
 
	gUnknownFõld
 {

156 
	gpublic
:

157 
	eTy≥
 {

158 
TYPE_VARINT
,

159 
	gTYPE_FIXED32
,

160 
	gTYPE_FIXED64
,

161 
	gTYPE_LENGTH_DELIMITED
,

162 
	gTYPE_GROUP


166 
ölöe
 
numbî
() const;

169 
ölöe
 
Ty≥
 
ty≥
() const;

174 
ölöe
 
uöt64
 
v¨öt
() const;

175 
ölöe
 
uöt32
 
fixed32
() const;

176 
ölöe
 
uöt64
 
fixed64
() const;

177 
ölöe
 c⁄° 
	g°rög
& 
Àngth_dñimôed
() const;

178 
ölöe
 c⁄° 
	gUnknownFõldSë
& 
group
() const;

180 
ölöe
 
£t_v¨öt
(
uöt64
 
vÆue
);

181 
ölöe
 
£t_fixed32
(
uöt32
 
vÆue
);

182 
ölöe
 
£t_fixed64
(
uöt64
 
vÆue
);

183 
ölöe
 
£t_Àngth_dñimôed
(c⁄° 
°rög
& 
vÆue
);

184 
ölöe
 
°rög
* 
muèbÀ_Àngth_dñimôed
();

185 
ölöe
 
UnknownFõldSë
* 
muèbÀ_group
();

191 
SîülizeLígthDñimôedNoTag
(
io
::
CodedOuçutSåóm
* 
ouçut
) const;

192 
uöt8
* 
SîülizeLígthDñimôedNoTagToAºay
(uöt8* 
èrgë
) const;

194 
ölöe
 
GëLígthDñimôedSize
() const;

196 
	g¥iv©e
:

197 
‰õnd
 
˛ass
 
UnknownFõldSë
;

200 
Dñëe
();

203 
DìpC›y
();

206 
	gnumbî_
 : 29;

207 
	gty≥_
 : 3;

209 
uöt64
 
	gv¨öt_
;

210 
uöt32
 
	gfixed32_
;

211 
uöt64
 
	gfixed64_
;

212 
muèbÀ
 union {

213 
°rög
* 
	g°rög_vÆue_
;

214 } 
	gÀngth_dñimôed_
;

215 
UnknownFõldSë
* 
	ggroup_
;

222 
ölöe
 
	gUnknownFõldSë
::
CÀ¨
() {

223 i‡(
fõlds_
 !
NULL
) {

224 
CÀ¨FÆlback
();

228 
ölöe
 
boﬁ
 
	gUnknownFõldSë
::
em±y
() const {

229  
fõlds_
 =
NULL
 || fõlds_->
em±y
();

232 
ölöe
 
	gUnknownFõldSë
::
Sw≠
(
UnknownFõldSë
* 
x
) {

233 
°d
::
sw≠
(
fõlds_
, 
x
->fields_);

236 
ölöe
 
	gUnknownFõldSë
::
fõld_cou¡
() const {

237  (
fõlds_
 =
NULL
Ë? 0 : fõlds_->
size
();

239 
ölöe
 c⁄° 
	gUnknownFõld
& 
	gUnknownFõldSë
::
fõld
(
ödex
) const {

240  (*
fõlds_
)[
ödex
];

242 
ölöe
 
UnknownFõld
* 
	gUnknownFõldSë
::
muèbÀ_fõld
(
ödex
) {

243  &(*
fõlds_
)[
ödex
];

246 
ölöe
 
	gUnknownFõldSë
::
AddLígthDñimôed
(

247 
numbî
, c⁄° 
°rög
& 
vÆue
) {

248 
AddLígthDñimôed
(
numbî
)->
assign
(
vÆue
);

252 
ölöe
 
	gUnknownFõld
::
numbî
(Ëc⁄° {  
numbî_
; }

253 
ölöe
 
	gUnknownFõld
::
Ty≥
 
UnknownFõld
::
ty≥
() const {

254  
°©ic_ˇ°
<
Ty≥
>(
ty≥_
);

257 
ölöe
 
uöt64
 
	gUnknownFõld
::
v¨öt
 () const {

258 
as£π
(
ty≥_
 =
TYPE_VARINT
);

259  
	gv¨öt_
;

261 
ölöe
 
uöt32
 
	gUnknownFõld
::
fixed32
() const {

262 
as£π
(
ty≥_
 =
TYPE_FIXED32
);

263  
	gfixed32_
;

265 
ölöe
 
uöt64
 
	gUnknownFõld
::
fixed64
() const {

266 
as£π
(
ty≥_
 =
TYPE_FIXED64
);

267  
	gfixed64_
;

269 
ölöe
 c⁄° 
	g°rög
& 
	gUnknownFõld
::
Àngth_dñimôed
() const {

270 
as£π
(
ty≥_
 =
TYPE_LENGTH_DELIMITED
);

271  *
	gÀngth_dñimôed_
.
	g°rög_vÆue_
;

273 
ölöe
 c⁄° 
	gUnknownFõldSë
& 
	gUnknownFõld
::
group
() const {

274 
as£π
(
ty≥_
 =
TYPE_GROUP
);

275  *
	ggroup_
;

278 
ölöe
 
	gUnknownFõld
::
£t_v¨öt
(
uöt64
 
vÆue
) {

279 
as£π
(
ty≥_
 =
TYPE_VARINT
);

280 
	gv¨öt_
 = 
vÆue
;

282 
ölöe
 
	gUnknownFõld
::
£t_fixed32
(
uöt32
 
vÆue
) {

283 
as£π
(
ty≥_
 =
TYPE_FIXED32
);

284 
	gfixed32_
 = 
vÆue
;

286 
ölöe
 
	gUnknownFõld
::
£t_fixed64
(
uöt64
 
vÆue
) {

287 
as£π
(
ty≥_
 =
TYPE_FIXED64
);

288 
	gfixed64_
 = 
vÆue
;

290 
ölöe
 
	gUnknownFõld
::
£t_Àngth_dñimôed
(c⁄° 
°rög
& 
vÆue
) {

291 
as£π
(
ty≥_
 =
TYPE_LENGTH_DELIMITED
);

292 
	gÀngth_dñimôed_
.
	g°rög_vÆue_
->
assign
(
vÆue
);

294 
ölöe
 
°rög
* 
	gUnknownFõld
::
muèbÀ_Àngth_dñimôed
() {

295 
as£π
(
ty≥_
 =
TYPE_LENGTH_DELIMITED
);

296  
	gÀngth_dñimôed_
.
	g°rög_vÆue_
;

298 
ölöe
 
UnknownFõldSë
* 
	gUnknownFõld
::
muèbÀ_group
() {

299 
as£π
(
ty≥_
 =
TYPE_GROUP
);

300  
	ggroup_
;

303 
ölöe
 
	gUnknownFõld
::
GëLígthDñimôedSize
() const {

304 
GOOGLE_DCHECK_EQ
(
TYPE_LENGTH_DELIMITED
, 
ty≥_
);

305  
	gÀngth_dñimôed_
.
	g°rög_vÆue_
->
size
();

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
,\

447 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

448 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

449 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

450 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
, 0) \

451 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

452 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

455 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

456 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

458 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

459 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

460 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

461 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

466 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

467 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

469 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

470 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

471 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 #ifde‡
_IO_MTSAFE_IO


474 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

475 
	#_IO_Êockfûe
(
_Â
) \

476 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

477 
	#_IO_fu∆ockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

480 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

481 
	#_IO_Êockfûe
(
_Â
Ë

	)

482 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

483 
	#_IO_·rylockfûe
(
_Â
Ë

	)

484 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

485 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

488 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

489 
_IO_va_li°
, *
__ª°ri˘
);

490 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

491 
_IO_va_li°
);

492 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

493 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

495 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

496 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

498 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

500 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


501 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

502 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

503 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

504 #i‡
__GNUC__
 >= 2

507 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


508 
	~<shlib-com∑t.h
>

509 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

510 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

511 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

512 c⁄° 
_IO_°dö_u£d
;

513 
wók_exã∫
 (
_IO_°dö_u£d
);

516 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


517 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

521 
	#_IO_fwide
(
__Â
, 
__mode
) \

522 ({ 
__ªsu…
 = (
__mode
); \

523 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

525 i‡((
__Â
)->
_mode
 == 0) \

527 (
__Â
)->
_mode
 = -1; \

528 
__ªsu…
 = (
__Â
)->
_mode
; \

530 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

531 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

533 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

534 
__ªsu…
; })

	)

537 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

538 
_IO_va_li°
, *
__ª°ri˘
);

539 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

540 
_IO_va_li°
);

541 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

542 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

545 #ifde‡
__LDBL_COMPAT


546 
	~<bôs/libio-ldbl.h
>

549 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

35 
	~<bôs/sched.h
>

37 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

40 
__BEGIN_DECLS


43 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

44 
__THROW
;

47 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

50 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

51 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

54 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

57 
	$sched_yõld
 (Ë
__THROW
;

60 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

63 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

66 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

69 #ifde‡
__USE_GNU


71 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

72 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

73 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

74 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

75 
˝u£ç
)

	)

76 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

77 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

80 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

81 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

84 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

86 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

87 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

88 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

89 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

91 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

92 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

93 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

94 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

95 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

96 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

97 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

105 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

106 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

110 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

111 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

114 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

115 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

24 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/sigc⁄ãxt.h
>

30 #i‡
__WORDSIZE
 == 64

33 
	tgªg_t
;

36 
	#NGREG
 23

	)

39 
gªg_t
 
	tgªg£t_t
[
NGREG
];

41 #ifde‡
__USE_GNU


45 
	mREG_R8
 = 0,

46 
	#REG_R8
 
REG_R8


	)

47 
	mREG_R9
,

48 
	#REG_R9
 
REG_R9


	)

49 
	mREG_R10
,

50 
	#REG_R10
 
REG_R10


	)

51 
	mREG_R11
,

52 
	#REG_R11
 
REG_R11


	)

53 
	mREG_R12
,

54 
	#REG_R12
 
REG_R12


	)

55 
	mREG_R13
,

56 
	#REG_R13
 
REG_R13


	)

57 
	mREG_R14
,

58 
	#REG_R14
 
REG_R14


	)

59 
	mREG_R15
,

60 
	#REG_R15
 
REG_R15


	)

61 
	mREG_RDI
,

62 
	#REG_RDI
 
REG_RDI


	)

63 
	mREG_RSI
,

64 
	#REG_RSI
 
REG_RSI


	)

65 
	mREG_RBP
,

66 
	#REG_RBP
 
REG_RBP


	)

67 
	mREG_RBX
,

68 
	#REG_RBX
 
REG_RBX


	)

69 
	mREG_RDX
,

70 
	#REG_RDX
 
REG_RDX


	)

71 
	mREG_RAX
,

72 
	#REG_RAX
 
REG_RAX


	)

73 
	mREG_RCX
,

74 
	#REG_RCX
 
REG_RCX


	)

75 
	mREG_RSP
,

76 
	#REG_RSP
 
REG_RSP


	)

77 
	mREG_RIP
,

78 
	#REG_RIP
 
REG_RIP


	)

79 
	mREG_EFL
,

80 
	#REG_EFL
 
REG_EFL


	)

81 
	mREG_CSGSFS
,

82 
	#REG_CSGSFS
 
REG_CSGSFS


	)

83 
	mREG_ERR
,

84 
	#REG_ERR
 
REG_ERR


	)

85 
	mREG_TRAPNO
,

86 
	#REG_TRAPNO
 
REG_TRAPNO


	)

87 
	mREG_OLDMASK
,

88 
	#REG_OLDMASK
 
REG_OLDMASK


	)

89 
	mREG_CR2


90 
	#REG_CR2
 
REG_CR2


	)

94 
	s_libc_Âxªg


96 
	msignifiˇnd
[4];

97 
	mexp⁄ít
;

98 
	m∑ddög
[3];

101 
	s_libc_xmmªg


103 
__uöt32_t
 
	mñemít
[4];

106 
	s_libc_Â°©e


109 
__uöt16_t
 
	mcwd
;

110 
__uöt16_t
 
	mswd
;

111 
__uöt16_t
 
	m·w
;

112 
__uöt16_t
 
	mf›
;

113 
__uöt64_t
 
	mrù
;

114 
__uöt64_t
 
	mrdp
;

115 
__uöt32_t
 
	mmxc§
;

116 
__uöt32_t
 
	mmx¸_mask
;

117 
_libc_Âxªg
 
	m_°
[8];

118 
_libc_xmmªg
 
	m_xmm
[16];

119 
__uöt32_t
 
	m∑ddög
[24];

123 
_libc_Â°©e
 *
	tÂªg£t_t
;

128 
gªg£t_t
 
	mgªgs
;

130 
Âªg£t_t
 
	mÂªgs
;

131 
	m__ª£rved1
 [8];

132 } 
	tmc⁄ãxt_t
;

135 
	suc⁄ãxt


137 
	muc_Êags
;

138 
uc⁄ãxt
 *
	muc_lök
;

139 
°ack_t
 
	muc_°ack
;

140 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

141 
__sig£t_t
 
	muc_sigmask
;

142 
_libc_Â°©e
 
	m__Âªgs_mem
;

143 } 
	tuc⁄ãxt_t
;

148 
	tgªg_t
;

151 
	#NGREG
 19

	)

154 
gªg_t
 
	tgªg£t_t
[
NGREG
];

156 #ifde‡
__USE_GNU


160 
	mREG_GS
 = 0,

161 
	#REG_GS
 
REG_GS


	)

162 
	mREG_FS
,

163 
	#REG_FS
 
REG_FS


	)

164 
	mREG_ES
,

165 
	#REG_ES
 
REG_ES


	)

166 
	mREG_DS
,

167 
	#REG_DS
 
REG_DS


	)

168 
	mREG_EDI
,

169 
	#REG_EDI
 
REG_EDI


	)

170 
	mREG_ESI
,

171 
	#REG_ESI
 
REG_ESI


	)

172 
	mREG_EBP
,

173 
	#REG_EBP
 
REG_EBP


	)

174 
	mREG_ESP
,

175 
	#REG_ESP
 
REG_ESP


	)

176 
	mREG_EBX
,

177 
	#REG_EBX
 
REG_EBX


	)

178 
	mREG_EDX
,

179 
	#REG_EDX
 
REG_EDX


	)

180 
	mREG_ECX
,

181 
	#REG_ECX
 
REG_ECX


	)

182 
	mREG_EAX
,

183 
	#REG_EAX
 
REG_EAX


	)

184 
	mREG_TRAPNO
,

185 
	#REG_TRAPNO
 
REG_TRAPNO


	)

186 
	mREG_ERR
,

187 
	#REG_ERR
 
REG_ERR


	)

188 
	mREG_EIP
,

189 
	#REG_EIP
 
REG_EIP


	)

190 
	mREG_CS
,

191 
	#REG_CS
 
REG_CS


	)

192 
	mREG_EFL
,

193 
	#REG_EFL
 
REG_EFL


	)

194 
	mREG_UESP
,

195 
	#REG_UESP
 
REG_UESP


	)

196 
	mREG_SS


197 
	#REG_SS
 
REG_SS


	)

202 
	s_libc_Âªg


204 
	msignifiˇnd
[4];

205 
	mexp⁄ít
;

208 
	s_libc_Â°©e


210 
	mcw
;

211 
	msw
;

212 
	mèg
;

213 
	mùoff
;

214 
	mcs£l
;

215 
	md©aoff
;

216 
	md©a£l
;

217 
_libc_Âªg
 
	m_°
[8];

218 
	m°©us
;

222 
_libc_Â°©e
 *
	tÂªg£t_t
;

227 
gªg£t_t
 
	mgªgs
;

230 
Âªg£t_t
 
	mÂªgs
;

231 
	mﬁdmask
;

232 
	m¸2
;

233 } 
	tmc⁄ãxt_t
;

236 
	suc⁄ãxt


238 
	muc_Êags
;

239 
uc⁄ãxt
 *
	muc_lök
;

240 
°ack_t
 
	muc_°ack
;

241 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

242 
__sig£t_t
 
	muc_sigmask
;

243 
_libc_Â°©e
 
	m__Âªgs_mem
;

244 } 
	tuc⁄ãxt_t
;

	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

40 
ssize_t
 
ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

50 
ssize_t
 
wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__iovec
, 
__cou¡
);

52 
	g__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
_ASM_X86_IOCTLS_H


2 
	#_ASM_X86_IOCTLS_H


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

51 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

52 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

53 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

54 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, )

	)

56 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

58 
	#FIONCLEX
 0x5450

	)

59 
	#FIOCLEX
 0x5451

	)

60 
	#FIOASYNC
 0x5452

	)

61 
	#TIOCSERCONFIG
 0x5453

	)

62 
	#TIOCSERGWILD
 0x5454

	)

63 
	#TIOCSERSWILD
 0x5455

	)

64 
	#TIOCGLCKTRMIOS
 0x5456

	)

65 
	#TIOCSLCKTRMIOS
 0x5457

	)

66 
	#TIOCSERGSTRUCT
 0x5458

	)

67 
	#TIOCSERGETLSR
 0x5459

	)

68 
	#TIOCSERGETMULTI
 0x545A

	)

69 
	#TIOCSERSETMULTI
 0x545B

	)

71 
	#TIOCMIWAIT
 0x545C

	)

72 
	#TIOCGICOUNT
 0x545D

	)

73 
	#TIOCGHAYESESP
 0x545E

	)

74 
	#TIOCSHAYESESP
 0x545F

	)

75 
	#FIOQSIZE
 0x5460

	)

78 
	#TIOCPKT_DATA
 0

	)

79 
	#TIOCPKT_FLUSHREAD
 1

	)

80 
	#TIOCPKT_FLUSHWRITE
 2

	)

81 
	#TIOCPKT_STOP
 4

	)

82 
	#TIOCPKT_START
 8

	)

83 
	#TIOCPKT_NOSTOP
 16

	)

84 
	#TIOCPKT_DOSTOP
 32

	)

86 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_SNDBUFFORCE
 32

	)

18 
	#SO_RCVBUFFORCE
 33

	)

19 
	#SO_KEEPALIVE
 9

	)

20 
	#SO_OOBINLINE
 10

	)

21 
	#SO_NO_CHECK
 11

	)

22 
	#SO_PRIORITY
 12

	)

23 
	#SO_LINGER
 13

	)

24 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_PASSCRED
 16

	)

27 
	#SO_PEERCRED
 17

	)

28 
	#SO_RCVLOWAT
 18

	)

29 
	#SO_SNDLOWAT
 19

	)

30 
	#SO_RCVTIMEO
 20

	)

31 
	#SO_SNDTIMEO
 21

	)

34 
	#SO_SECURITY_AUTHENTICATION
 22

	)

35 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

36 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

38 
	#SO_BINDTODEVICE
 25

	)

41 
	#SO_ATTACH_FILTER
 26

	)

42 
	#SO_DETACH_FILTER
 27

	)

44 
	#SO_PEERNAME
 28

	)

45 
	#SO_TIMESTAMP
 29

	)

46 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

48 
	#SO_ACCEPTCONN
 30

	)

50 
	#SO_PEERSEC
 31

	)

51 
	#SO_PASSSEC
 34

	)

52 
	#SO_TIMESTAMPNS
 35

	)

53 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

55 
	#SO_MARK
 36

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 #unde‡
PTHREAD_THREADS_MAX


71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#DELAYTIMER_MAX
 2147483647

	)

80 
	#TTY_NAME_MAX
 32

	)

83 
	#LOGIN_NAME_MAX
 256

	)

86 
	#HOST_NAME_MAX
 64

	)

89 
	#MQ_PRIO_MAX
 32768

	)

92 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

37 #ifde‡
__USE_MISC


39 
	#CSIGNAL
 0x000000f‡

	)

40 
	#CLONE_VM
 0x00000100

	)

41 
	#CLONE_FS
 0x00000200

	)

42 
	#CLONE_FILES
 0x00000400

	)

43 
	#CLONE_SIGHAND
 0x00000800

	)

44 
	#CLONE_PTRACE
 0x00002000

	)

45 
	#CLONE_VFORK
 0x00004000

	)

47 
	#CLONE_PARENT
 0x00008000

	)

49 
	#CLONE_THREAD
 0x00010000

	)

50 
	#CLONE_NEWNS
 0x00020000

	)

51 
	#CLONE_SYSVSEM
 0x00040000

	)

52 
	#CLONE_SETTLS
 0x00080000

	)

53 
	#CLONE_PARENT_SETTID
 0x00100000

	)

55 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

57 
	#CLONE_DETACHED
 0x00400000

	)

58 
	#CLONE_UNTRACED
 0x00800000

	)

60 
	#CLONE_CHILD_SETTID
 0x01000000

	)

62 
	#CLONE_STOPPED
 0x02000000

	)

66 
	ssched_∑øm


68 
	m__sched_¥i‹ôy
;

71 
	g__BEGIN_DECLS


73 #ifde‡
__USE_MISC


75 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

76 
__Êags
, *
__¨g
, ...Ë
__THROW
;

79 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

82 
	$sched_gë˝u
 (Ë
__THROW
;

85 
__END_DECLS


89 #i‡!
deföed
 
__deföed_sched∑øm
 \

90 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

91 
	#__deföed_sched∑øm
 1

	)

93 
	s__sched_∑øm


95 
__sched_¥i‹ôy
;

97 #unde‡
__√ed_sched∑øm


101 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


102 
	#__˝u_£t_t_deföed


	)

104 
	#__CPU_SETSIZE
 1024

	)

105 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

108 
	t__˝u_mask
;

111 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

112 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

117 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

118 } 
	t˝u_£t_t
;

121 #i‡
	`__GNUC_PREREQ
 (2, 91)

122 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

123 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

125 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

127 
size_t
 
__i
; \

128 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

129 
˝u_£t_t
 *
__¨r
 = (
˝u£ç
); \

130 
__i
 = 0; __ò< 
__imax
; ++__i) \

131 
__¨r
->
__bôs
[
__i
] = 0; \

132 
	}
} 0)

	)

134 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

135 (
__exãnsi⁄__
 \

136 ({ 
size_t
 
__˝u
 = (
˝u
); \

137 
__˝u
 < 8 * (
£tsize
) \

138 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] |
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

139 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

140 (
__exãnsi⁄__
 \

141 ({ 
size_t
 
__˝u
 = (
˝u
); \

142 
__˝u
 < 8 * (
£tsize
) \

143 ? ((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] &~
	`__CPUMASK
 (__˝u)Ë: 0; }))

	)

144 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 < 8 * (
£tsize
) \

148 ? (((
˝u£ç
)->
__bôs
[
	`__CPUELT
 (
__˝u
)] & 
	`__CPUMASK
 (__cpu))) != 0 \

149 : 0; }))

	)

151 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

152 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

154 #i‡
__GNUC_PREREQ
 (2, 91)

155 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

156 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

158 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

159 (
__exãnsi⁄__
 \

160 ({ 
˝u_£t_t
 *
__¨r1
 = (
˝u£ç1
); \

161 
˝u_£t_t
 *
__¨r2
 = (
˝u£ç2
); \

162 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

163 
size_t
 
__i
; \

164 
__i
 = 0; __ò< 
__imax
; ++__i) \

165 i‡(
__¨r1
->
__bôs
[
__i
] !
__¨r2
->__bits[__i]) \

167 
__i
 =
__imax
; }))

	)

170 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

171 (
__exãnsi⁄__
 \

172 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

173 
˝u_£t_t
 *
__¨r1
 = (
§c£t1
); \

174 
˝u_£t_t
 *
__¨r2
 = (
§c£t2
); \

175 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

176 
size_t
 
__i
; \

177 
__i
 = 0; __ò< 
__imax
; ++__i) \

178 
__de°
->
__bôs
[
__i
] = 
__¨r1
->__bôs[__i] 
›
 
__¨r2
->__bits[__i]; \

179 
__de°
; }))

	)

181 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

182 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË* 8)

	)

183 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

184 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

186 
__BEGIN_DECLS


188 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

189 
__THROW
;

190 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

191 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

193 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


26 
	#__FD_ZERO
(
s
) \

28 
__i
; \

29 
fd_£t
 *
__¨r
 = (
s
); \

30 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

31 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

32 } 0)

	)

33 
	#__FD_SET
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] |
	`__FDMASK
(d))

	)

34 
	#__FD_CLR
(
d
, 
s
Ë(
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] &~
	`__FDMASK
(d))

	)

35 
	#__FD_ISSET
(
d
, 
s
Ë((
	`__FDS_BITS
 (s)[
	`__FDELT
(d)] & 
	`__FDMASK
(d)Ë!0)

	)

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/boost/config/select_compiler_config.hpp

17 
	#BOOST_CXX_GCCXML
 0

	)

18 
	#BOOST_CXX_COMO
 0

	)

19 
	#BOOST_CXX_DMC
 0

	)

20 
	#BOOST_CXX_INTEL
 0

	)

21 
	#BOOST_CXX_GNUC
 0

	)

22 
	#BOOST_CXX_KCC
 0

	)

23 
	#BOOST_CXX_SGI
 0

	)

24 
	#BOOST_CXX_TRU64
 0

	)

25 
	#BOOST_CXX_GHS
 0

	)

26 
	#BOOST_CXX_BORLAND
 0

	)

27 
	#BOOST_CXX_CW
 0

	)

28 
	#BOOST_CXX_SUNPRO
 0

	)

29 
	#BOOST_CXX_HPACC
 0

	)

30 
	#BOOST_CXX_MPW
 0

	)

31 
	#BOOST_CXX_IBMCPP
 0

	)

32 
	#BOOST_CXX_MSVC
 0

	)

33 
	#BOOST_CXX_PGI
 0

	)

39 #i‡
deföed
(
__GCCXML__
)

41 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/gcc_xml.hµ"

	)

43 #ñi‡
deföed
 
__COMO__


45 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/comóu.hµ"

	)

47 #ñi‡
deföed
 
__DMC__


49 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/digôÆm¨s.hµ"

	)

51 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICL
Ë|| deföed(
__ICC
Ë|| deföed(
__ECC
)

53 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/öãl.hµ"

	)

55 #ñi‡
deföed
 
__GNUC__


57 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/gcc.hµ"

	)

59 #ñi‡
deföed
 
__KCC


61 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/kai.hµ"

	)

63 #ñi‡
deföed
 
__sgi


65 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/sgi_mù•ro.hµ"

	)

67 #ñi‡
deföed
 
__DECCXX


69 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/com∑q_cxx.hµ"

	)

71 #ñi‡
deföed
 
__ghs


73 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/gªíhûls.hµ"

	)

75 #ñi‡
deföed
 
__BORLANDC__


77 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/b‹œnd.hµ"

	)

79 #ñi‡
deföed
 
__MWERKS__


81 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/mërowîks.hµ"

	)

83 #ñi‡
deföed
 
__SUNPRO_CC


85 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/su≈ro_cc.hµ"

	)

87 #ñi‡
deföed
 
__HP_aCC


89 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/hp_acc.hµ"

	)

91 #ñi‡
deföed
(
__MRC__
Ë|| deföed(
__SC__
)

93 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/mpw.hµ"

	)

95 #ñi‡
deföed
(
__IBMCPP__
)

97 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/va˝p.hµ"

	)

99 #ñi‡
deföed
(
__PGI
)

101 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/pgi.hµ"

	)

103 #ñi‡
deföed
 
_MSC_VER


108 
	#BOOST_COMPILER_CONFIG
 "boo°/c⁄fig/compûî/visuÆc.hµ"

	)

110 #ñi‡
deföed
 (
BOOST_ASSERT_CONFIG
)

	@/usr/include/boost/config/select_platform_config.hpp

16 #i‡
deföed
(
löux
Ë|| deföed(
__löux
Ë|| deföed(
__löux__
)

18 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/löux.hµ"

	)

20 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__O≥nBSD__
Ë|| deföed(
__Døg⁄Fly__
)

22 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/bsd.hµ"

	)

24 #ñi‡
deföed
(
sun
Ë|| deföed(
__sun
)

26 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/sﬁ¨is.hµ"

	)

28 #ñi‡
deföed
(
__sgi
)

30 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/úix.hµ"

	)

32 #ñi‡
deföed
(
__hpux
)

34 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/hpux.hµ"

	)

36 #ñi‡
deföed
(
__CYGWIN__
)

38 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/cygwö.hµ"

	)

40 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

42 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/wö32.hµ"

	)

44 #ñi‡
deföed
(
__BEOS__
)

46 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/beos.hµ"

	)

48 #ñi‡
deföed
(
macötosh
Ë|| deföed(
__APPLE__
Ë|| deföed(
__APPLE_CC__
)

50 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/macos.hµ"

	)

52 #ñi‡
deföed
(
__IBMCPP__
Ë|| deföed(
_AIX
)

54 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/aix.hµ"

	)

56 #ñi‡
deföed
(
__amigaos__
)

58 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/amigaos.hµ"

	)

60 #ñi‡
deföed
(
__QNXNTO__
)

62 
	#BOOST_PLATFORM_CONFIG
 "boo°/c⁄fig/∂©f‹m/qnx¡o.hµ"

	)

66 #i‡
deföed
(
unix
) \

67 || 
deföed
(
__unix
) \

68 || 
deföed
(
_XOPEN_SOURCE
) \

69 || 
	$deföed
(
_POSIX_SOURCE
)

73 #i‚de‡
BOOST_HAS_UNISTD_H


74 
	#BOOST_HAS_UNISTD_H


	)

77 
	~<boo°/c⁄fig/posix_„©uªs.hµ
>

81 #i‡
	`deföed
 (
BOOST_ASSERT_CONFIG
)

	@/usr/include/boost/config/select_stdlib_config.hpp

20 
	~<boo°/c⁄fig/no_å1/utûôy.hµ
>

22 #i‡
deföed
(
__SGI_STL_PORT
Ë|| deföed(
_STLPORT_VERSION
)

26 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/°Õ‹t.hµ"

	)

28 #ñi‡
deföed
(
__LIBCOMO__
)

30 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/libcomo.hµ"

	)

32 #ñi‡
deföed
(
__STD_RWCOMPILER_H__
Ë|| deföed(
_RWSTD_VER
)

34 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/roguewave.hµ"

	)

36 #ñi‡
deföed
(
__GLIBCPP__
Ë|| deföed(
__GLIBCXX__
)

38 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/lib°d˝p3.hµ"

	)

40 #ñi‡
deföed
(
__STL_CONFIG_H
)

42 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/sgi.hµ"

	)

44 #ñi‡
deföed
(
__MSL_CPP__
)

46 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/m¶.hµ"

	)

48 #ñi‡
deföed
(
__IBMCPP__
)

50 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/va˝p.hµ"

	)

52 #ñi‡
deföed
(
MSIPL_COMPILE_H
)

54 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/modía.hµ"

	)

56 #ñi‡(
deföed
(
_YVALS
Ë&& !deföed(
__IBMCPP__
)Ë|| deföed(
_CPPLIB_VER
)

58 
	#BOOST_STDLIB_CONFIG
 "boo°/c⁄fig/°dlib/dökumw¨e.hµ"

	)

60 #ñi‡
deföed
 (
BOOST_ASSERT_CONFIG
)

	@/usr/include/boost/config/suffix.hpp

24 #i‚de‡
BOOST_CONFIG_SUFFIX_HPP


25 
	#BOOST_CONFIG_SUFFIX_HPP


	)

33 #i‡!
deföed
(
BOOST_HAS_LONG_LONG
) \

34 && !
deföed
(
BOOST_MSVC
Ë&& !
	$deföed
(
__BORLANDC__
)

35 
	~<limôs.h
>

36 #i‡(
	`deföed
(
ULLONG_MAX
Ë|| deföed(
ULONG_LONG_MAX
Ë|| deföed(
ULONGLONG_MAX
))

37 
	#BOOST_HAS_LONG_LONG


	)

44 #i‡
	`deföed
(
__GNUC__
Ë&& (__GNUC__ >3Ë&& deföed(
BOOST_NO_CTYPE_FUNCTIONS
)

45 #unde‡
BOOST_NO_CTYPE_FUNCTIONS


51 #i‚de‡
BOOST_STD_EXTENSION_NAMESPACE


52 
	#BOOST_STD_EXTENSION_NAMESPACE
 
°d


	)

58 #i‡
	`deföed
(
BOOST_NO_CV_SPECIALIZATIONS
) \

59 && !
	$deföed
(
BOOST_NO_CV_VOID_SPECIALIZATIONS
)

60 
	#BOOST_NO_CV_VOID_SPECIALIZATIONS


	)

67 #i‡
	`deföed
(
BOOST_NO_LIMITS
) \

68 && !
	$deföed
(
BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS
)

69 
	#BOOST_NO_LIMITS_COMPILE_TIME_CONSTANTS


	)

70 
	#BOOST_NO_MS_INT64_NUMERIC_LIMITS


	)

71 
	#BOOST_NO_LONG_LONG_NUMERIC_LIMITS


	)

78 #i‡!
	`deföed
(
BOOST_HAS_LONG_LONG
Ë&& !deföed(
BOOST_NO_LONG_LONG_NUMERIC_LIMITS
)

79 
	#BOOST_NO_LONG_LONG_NUMERIC_LIMITS


	)

86 #i‡!
	`deföed
(
BOOST_HAS_MS_INT64
Ë&& !deföed(
BOOST_NO_MS_INT64_NUMERIC_LIMITS
)

87 
	#BOOST_NO_MS_INT64_NUMERIC_LIMITS


	)

94 #i‡!
	`deföed
(
BOOST_NO_MEMBER_TEMPLATES
) \

95 && !
	$deföed
(
BOOST_MSVC6_MEMBER_TEMPLATES
)

96 
	#BOOST_MSVC6_MEMBER_TEMPLATES


	)

102 #i‡
	`deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

103 && !
	$deföed
(
BOOST_BCB_PARTIAL_SPECIALIZATION_BUG
)

104 
	#BOOST_BCB_PARTIAL_SPECIALIZATION_BUG


	)

110 #i‡
	`deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

111 && !
	$deföed
(
BOOST_NO_ARRAY_TYPE_SPECIALIZATIONS
)

112 
	#BOOST_NO_ARRAY_TYPE_SPECIALIZATIONS


	)

118 #i‡
	`deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

119 && !
	$deföed
(
BOOST_NO_STD_ITERATOR_TRAITS
)

120 
	#BOOST_NO_STD_ITERATOR_TRAITS


	)

127 #i‡
	`deföed
(
BOOST_NO_MEMBER_TEMPLATES
) \

128 && !
	`deföed
(
BOOST_MSVC6_MEMBER_TEMPLATES
) \

129 && !
	$deföed
(
BOOST_NO_TEMPLATED_ITERATOR_CONSTRUCTORS
)

130 
	#BOOST_NO_TEMPLATED_ITERATOR_CONSTRUCTORS


	)

137 #i‡
	`deföed
(
BOOST_NO_MEMBER_TEMPLATES
) \

138 && !
	`deföed
(
BOOST_MSVC6_MEMBER_TEMPLATES
) \

139 && !
	$deföed
(
BOOST_NO_STD_ALLOCATOR
)

140 
	#BOOST_NO_STD_ALLOCATOR


	)

146 #i‡
	`deföed
(
BOOST_NO_ARGUMENT_DEPENDENT_LOOKUP
Ë&& !deföed(
BOOST_FUNCTION_SCOPE_USING_DECLARATION_BREAKS_ADL
)

147 
	#BOOST_FUNCTION_SCOPE_USING_DECLARATION_BREAKS_ADL


	)

153 #i‡!
	`deföed
(
BOOST_NO_STD_ALLOCATOR
)

154 
	#BOOST_HAS_PARTIAL_STD_ALLOCATOR


	)

160 #i‡
	`deföed
(
BOOST_NO_STD_LOCALE
Ë&& !deföed(
BOOST_NO_STD_USE_FACET
)

161 
	#BOOST_NO_STD_USE_FACET


	)

167 #i‡
	`deföed
(
BOOST_NO_STD_LOCALE
Ë&& !deföed(
BOOST_NO_STD_MESSAGES
)

168 
	#BOOST_NO_STD_MESSAGES


	)

174 #i‡
	`deföed
(
BOOST_NO_STD_LOCALE
Ë&& !deföed(
BOOST_NO_STD_WSTREAMBUF
)

175 
	#BOOST_NO_STD_WSTREAMBUF


	)

181 #i‡
	`deföed
(
BOOST_NO_CWCHAR
Ë&& !deföed(
BOOST_NO_CWCTYPE
)

182 
	#BOOST_NO_CWCTYPE


	)

188 #i‡
	`deföed
(
BOOST_NO_CWCHAR
Ë&& !deföed(
BOOST_NO_SWPRINTF
)

189 
	#BOOST_NO_SWPRINTF


	)

197 #i‡
	`deföed
(
BOOST_DISABLE_WIN32
Ë&& deföed(
_WIN32
) \

198 && !
	`deföed
(
BOOST_DISABLE_THREADS
Ë&& !
	$deföed
(
BOOST_HAS_PTHREADS
)

199 
	#BOOST_DISABLE_THREADS


	)

208 #i‡(
	`deföed
(
__MT__
Ë|| deföed(
_MT
Ë|| deföed(
_REENTRANT
) \

209 || 
	`deföed
(
_PTHREADS
)Ë&& !
	$deföed
(
BOOST_HAS_THREADS
)

210 
	#BOOST_HAS_THREADS


	)

216 #i‡
	`deföed
(
BOOST_DISABLE_THREADS
Ë&& deföed(
BOOST_HAS_THREADS
)

217 #unde‡
BOOST_HAS_THREADS


223 #i‡
	`deföed
(
BOOST_HAS_THREADS
Ë&& !deföed(
BOOST_HAS_PTHREADS
)\

224 && !
	`deföed
(
BOOST_HAS_WINTHREADS
Ë&& !deföed(
BOOST_HAS_BETHREADS
)\

225 && !
	$deföed
(
BOOST_HAS_MPTASKS
)

226 #unde‡
BOOST_HAS_THREADS


232 #i‚de‡
BOOST_HAS_THREADS


233 #unde‡
BOOST_HAS_PTHREADS


234 #unde‡
BOOST_HAS_PTHREAD_MUTEXATTR_SETTYPE


235 #unde‡
BOOST_HAS_WINTHREADS


236 #unde‡
BOOST_HAS_BETHREADS


237 #unde‡
BOOST_HAS_MPTASKS


244 #i‡
	`deföed
(
__STDC_VERSION__
) && (__STDC_VERSION__ >= 199901)

245 
	#BOOST_HAS_STDINT_H


	)

246 #i‚de‡
BOOST_HAS_LOG1P


247 
	#BOOST_HAS_LOG1P


	)

249 #i‚de‡
BOOST_HAS_EXPM1


250 
	#BOOST_HAS_EXPM1


	)

258 #i‚de‡
BOOST_HAS_SLIST


259 
	#BOOST_NO_SLIST


	)

262 #i‚de‡
BOOST_HAS_HASH


263 
	#BOOST_NO_HASH


	)

269 #i‡
	`deföed
(
BOOST_HAS_SLIST
Ë&& !deföed(
BOOST_SLIST_HEADER
)

270 
	#BOOST_SLIST_HEADER
 <
¶i°
>

	)

276 #i‡
	`deföed
(
BOOST_HAS_HASH
Ë&& !deföed(
BOOST_HASH_SET_HEADER
)

277 
	#BOOST_HASH_SET_HEADER
 <
hash_£t
>

	)

283 #i‡
	`deföed
(
BOOST_HAS_HASH
Ë&& !deföed(
BOOST_HASH_MAP_HEADER
)

284 
	#BOOST_HASH_MAP_HEADER
 <
hash_m≠
>

	)

290 #i‡
	`deföed
(
BOOST_ABI_PREFIX
Ë&& deföed(
BOOST_ABI_SUFFIX
Ë&& !deföed(
BOOST_HAS_ABI_HEADERS
)

291 
	#BOOST_HAS_ABI_HEADERS


	)

294 #i‡
	`deföed
(
BOOST_HAS_ABI_HEADERS
Ë&& deföed(
BOOST_DISABLE_ABI_HEADERS
)

295 #unde‡
BOOST_HAS_ABI_HEADERS


307 #ifde‡
BOOST_NO_STDC_NAMESPACE


308 
	~<c°ddef
>

309 
«me•a˚
 
°d
 { 
usög
 ::
±rdiff_t
; usög ::
size_t
; 
	}
}

314 
	#BOOST_PREVENT_MACRO_SUBSTITUTION


	)

316 #i‚de‡
BOOST_USING_STD_MIN


317 
	#BOOST_USING_STD_MIN
(Ë
usög
 
°d
::
mö


	)

320 #i‚de‡
BOOST_USING_STD_MAX


321 
	#BOOST_USING_STD_MAX
(Ë
usög
 
°d
::
max


	)

326 #ifde‡
BOOST_NO_STD_MIN_MAX


328 
«me•a˚
 
	g°d
 {

329 
	gãm∂©e
 <
˛ass
 
	g_Tp
>

330 
ölöe
 c⁄° 
	g_Tp
& 
mö
 
BOOST_PREVENT_MACRO_SUBSTITUTION
 (c⁄° 
_Tp
& 
__a
, c⁄° _Tp& 
__b
) {

331  
	g__b
 < 
	g__a
 ? __b : 
__a
;

333 
	gãm∂©e
 <
˛ass
 
	g_Tp
>

334 
ölöe
 c⁄° 
	g_Tp
& 
max
 
BOOST_PREVENT_MACRO_SUBSTITUTION
 (c⁄° 
_Tp
& 
__a
, c⁄° _Tp& 
__b
) {

335  
	g__a
 < 
	g__b
 ? __b : 
__a
;

347 #ifde‡
BOOST_NO_INCLASS_MEMBER_INITIALIZATION


348 
	#BOOST_STATIC_CONSTANT
(
ty≥
, 
assignmít
Ëíum {ássignmíà}

	)

350 
	#BOOST_STATIC_CONSTANT
(
ty≥
, 
assignmít
Ëc⁄°Åy≥ 
	)
assignment

366 #i‡
deföed
(
BOOST_NO_STD_USE_FACET
)

367 #ifde‡
BOOST_HAS_TWO_ARG_USE_FACET


368 
	#BOOST_USE_FACET
(
Ty≥
, 
loc
Ë
°d
::
	`u£_Á˚t
÷oc, 
°©ic_ˇ°
<Ty≥*>(0))

	)

369 
	#BOOST_HAS_FACET
(
Ty≥
, 
loc
Ë
°d
::
	`has_Á˚t
÷oc, 
°©ic_ˇ°
<Ty≥*>(0))

	)

370 #ñi‡
deföed
(
BOOST_HAS_MACRO_USE_FACET
)

371 
	#BOOST_USE_FACET
(
Ty≥
, 
loc
Ë
°d
::
	`_USE
÷oc, Ty≥)

	)

372 
	#BOOST_HAS_FACET
(
Ty≥
, 
loc
Ë
°d
::
	`_HAS
÷oc, Ty≥)

	)

373 #ñi‡
deföed
(
BOOST_HAS_STLP_USE_FACET
)

374 
	#BOOST_USE_FACET
(
Ty≥
, 
loc
Ë(*
°d
::
_U£_Á˚t
<Ty≥ >÷oc))

	)

375 
	#BOOST_HAS_FACET
(
Ty≥
, 
loc
Ë
°d
::
has_Á˚t
< Ty≥ >÷oc)

	)

378 
	#BOOST_USE_FACET
(
Ty≥
, 
loc
Ë
°d
::
u£_Á˚t
< Ty≥ >÷oc)

	)

379 
	#BOOST_HAS_FACET
(
Ty≥
, 
loc
Ë
°d
::
has_Á˚t
< Ty≥ >÷oc)

	)

392 #i‚de‡
BOOST_NO_MEMBER_TEMPLATE_KEYWORD


393 
	#BOOST_NESTED_TEMPLATE
 
ãm∂©e


	)

395 
	#BOOST_NESTED_TEMPLATE


	)

403 #ifde‡
BOOST_NO_UNREACHABLE_RETURN_DETECTION


404 
	#BOOST_UNREACHABLE_RETURN
(
x
Ë x;

	)

406 
	#BOOST_UNREACHABLE_RETURN
(
x
)

	)

420 #i‚de‡
BOOST_NO_DEDUCED_TYPENAME


421 
	#BOOST_DEDUCED_TYPENAME
 
ty≥«me


	)

423 
	#BOOST_DEDUCED_TYPENAME


	)

431 #i‡
deföed
(
BOOST_HAS_LONG_LONG
)

432 
«me•a˚
 
	gboo°
{

433 #ifde‡
__GNUC__


434 
__exãnsi⁄__
 
	tl⁄g_l⁄g_ty≥
;

435 
__exãnsi⁄__
 
	tul⁄g_l⁄g_ty≥
;

437 
	tl⁄g_l⁄g_ty≥
;

438 
	tul⁄g_l⁄g_ty≥
;

486 #i‡
deföed
 
BOOST_NO_EXPLICIT_FUNCTION_TEMPLATE_ARGUMENTS


488 
	~"boo°/ty≥.hµ
"

489 
	~"boo°/n⁄_ty≥.hµ
"

491 
	#BOOST_EXPLICIT_TEMPLATE_TYPE
(
t
Ë
boo°
::
ty≥
<t>* = 0

	)

492 
	#BOOST_EXPLICIT_TEMPLATE_TYPE_SPEC
(
t
Ë
boo°
::
ty≥
<t>*

	)

493 
	#BOOST_EXPLICIT_TEMPLATE_NON_TYPE
(
t
, 
v
Ë
boo°
::
n⁄_ty≥
<t, v>* = 0

	)

494 
	#BOOST_EXPLICIT_TEMPLATE_NON_TYPE_SPEC
(
t
, 
v
Ë
boo°
::
n⁄_ty≥
<t, v>*

	)

496 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE
(
t
) \

497 , 
	`BOOST_EXPLICIT_TEMPLATE_TYPE
(
t
)

	)

498 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE_SPEC
(
t
) \

499 , 
	`BOOST_EXPLICIT_TEMPLATE_TYPE_SPEC
(
t
)

	)

500 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE
(
t
, 
v
) \

501 , 
	`BOOST_EXPLICIT_TEMPLATE_NON_TYPE
(
t
, 
v
)

	)

502 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE_SPEC
(
t
, 
v
) \

503 , 
	`BOOST_EXPLICIT_TEMPLATE_NON_TYPE_SPEC
(
t
, 
v
)

	)

509 
	#BOOST_EXPLICIT_TEMPLATE_TYPE
(
t
)

	)

510 
	#BOOST_EXPLICIT_TEMPLATE_TYPE_SPEC
(
t
)

	)

511 
	#BOOST_EXPLICIT_TEMPLATE_NON_TYPE
(
t
, 
v
)

	)

512 
	#BOOST_EXPLICIT_TEMPLATE_NON_TYPE_SPEC
(
t
, 
v
)

	)

514 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE
(
t
)

	)

515 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_TYPE_SPEC
(
t
)

	)

516 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE
(
t
, 
v
)

	)

517 
	#BOOST_APPEND_EXPLICIT_TEMPLATE_NON_TYPE_SPEC
(
t
, 
v
)

	)

530 
	#BOOST_STRINGIZE
(
X
Ë
	`BOOST_DO_STRINGIZE
(X)

	)

531 
	#BOOST_DO_STRINGIZE
(
X
Ë#X

	)

541 
	#BOOST_JOIN
–
X
, 
Y
 ) 
	`BOOST_DO_JOIN
–X, Y )

	)

542 
	#BOOST_DO_JOIN
–
X
, 
Y
 ) 
	`BOOST_DO_JOIN2
(X,Y)

	)

543 
	#BOOST_DO_JOIN2
–
X
, 
Y
 ) X##
	)
Y

549 #i‚de‡
BOOST_COMPILER


550 
	#BOOST_COMPILER
 "Unknow¿ISO C++ Compûî"

	)

552 #i‚de‡
BOOST_STDLIB


553 
	#BOOST_STDLIB
 "Unknow¿ISO sènd¨dÜibøry"

	)

555 #i‚de‡
BOOST_PLATFORM


556 #i‡
deföed
(
unix
Ë|| deföed(
__unix
Ë|| deföed(
_XOPEN_SOURCE
) \

557 || 
	$deföed
(
_POSIX_SOURCE
)

558 
	#BOOST_PLATFORM
 "Gíîi¯Unix"

	)

560 
	#BOOST_PLATFORM
 "Unknown"

	)

	@/usr/include/boost/detail/workaround.hpp

5 #i‚de‡
WORKAROUND_DWA2002126_HPP


6 
	#WORKAROUND_DWA2002126_HPP


	)

39 #i‚de‡
BOOST_STRICT_CONFIG


41 
	~<boo°/c⁄fig.hµ
>

43 #i‚de‡
__BORLANDC__


44 
	#__BORLANDC___WORKAROUND_GUARD
 1

	)

46 
	#__BORLANDC___WORKAROUND_GUARD
 0

	)

48 #i‚de‡
__MSC_VER


49 
	#__MSC_VER_WORKAROUND_GUARD
 1

	)

51 
	#__MSC_VER_WORKAROUND_GUARD
 0

	)

53 #i‚de‡
_MSC_FULL_VER


54 
	#_MSC_FULL_VER_WORKAROUND_GUARD
 1

	)

56 
	#_MSC_FULL_VER_WORKAROUND_GUARD
 0

	)

58 #i‚de‡
BOOST_MSVC


59 
	#BOOST_MSVC_WORKAROUND_GUARD
 1

	)

61 
	#BOOST_MSVC_WORKAROUND_GUARD
 0

	)

63 #i‚de‡
__GNUC__


64 
	#__GNUC___WORKAROUND_GUARD
 1

	)

66 
	#__GNUC___WORKAROUND_GUARD
 0

	)

68 #i‚de‡
__GNUC_MINOR__


69 
	#__GNUC_MINOR___WORKAROUND_GUARD
 1

	)

71 
	#__GNUC_MINOR___WORKAROUND_GUARD
 0

	)

73 #i‚de‡
__GNUC_PATCHLEVEL__


74 
	#__GNUC_PATCHLEVEL___WORKAROUND_GUARD
 1

	)

76 
	#__GNUC_PATCHLEVEL___WORKAROUND_GUARD
 0

	)

78 #i‚de‡
__IBMCPP__


79 
	#__IBMCPP___WORKAROUND_GUARD
 1

	)

81 
	#__IBMCPP___WORKAROUND_GUARD
 0

	)

83 #i‚de‡
__SUNPRO_CC


84 
	#__SUNPRO_CC_WORKAROUND_GUARD
 1

	)

86 
	#__SUNPRO_CC_WORKAROUND_GUARD
 0

	)

88 #i‚de‡
__DECCXX_VER


89 
	#__DECCXX_VER_WORKAROUND_GUARD
 1

	)

91 
	#__DECCXX_VER_WORKAROUND_GUARD
 0

	)

93 #i‚de‡
__MWERKS__


94 
	#__MWERKS___WORKAROUND_GUARD
 1

	)

96 
	#__MWERKS___WORKAROUND_GUARD
 0

	)

98 #i‚de‡
__EDG_VERSION__


99 
	#__EDG_VERSION___WORKAROUND_GUARD
 1

	)

101 
	#__EDG_VERSION___WORKAROUND_GUARD
 0

	)

103 #i‚de‡
__HP_aCC


104 
	#__HP_aCC_WORKAROUND_GUARD
 1

	)

106 
	#__HP_aCC_WORKAROUND_GUARD
 0

	)

108 #i‚de‡
_CRAYC


109 
	#_CRAYC_WORKAROUND_GUARD
 1

	)

111 
	#_CRAYC_WORKAROUND_GUARD
 0

	)

113 #i‚de‡
__DMC__


114 
	#__DMC___WORKAROUND_GUARD
 1

	)

116 
	#__DMC___WORKAROUND_GUARD
 0

	)

118 #i‚de‡
MPW_CPLUS


119 
	#MPW_CPLUS_WORKAROUND_GUARD
 1

	)

121 
	#MPW_CPLUS_WORKAROUND_GUARD
 0

	)

124 #i‚de‡
_RWSTD_VER


125 
	#_RWSTD_VER_WORKAROUND_GUARD
 1

	)

127 
	#_RWSTD_VER_WORKAROUND_GUARD
 0

	)

129 #i‚de‡
_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC


130 
	#_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC_WORKAROUND_GUARD
 1

	)

132 
	#_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC_WORKAROUND_GUARD
 0

	)

134 #i‚de‡
__SGI_STL_PORT


135 
	#__SGI_STL_PORT_WORKAROUND_GUARD
 1

	)

137 
	#__SGI_STL_PORT_WORKAROUND_GUARD
 0

	)

139 #i‚de‡
_STLPORT_VERSION


140 
	#_STLPORT_VERSION_WORKAROUND_GUARD
 1

	)

142 
	#_STLPORT_VERSION_WORKAROUND_GUARD
 0

	)

145 #i‚de‡
BOOST_INTEL_CXX_VERSION


146 
	#BOOST_INTEL_CXX_VERSION_WORKAROUND_GUARD
 1

	)

148 
	#BOOST_INTEL_CXX_VERSION_WORKAROUND_GUARD
 0

	)

150 #i‚de‡
BOOST_INTEL_WIN


151 
	#BOOST_INTEL_WIN_WORKAROUND_GUARD
 1

	)

153 
	#BOOST_INTEL_WIN_WORKAROUND_GUARD
 0

	)

155 #i‚de‡
BOOST_DINKUMWARE_STDLIB


156 
	#BOOST_DINKUMWARE_STDLIB_WORKAROUND_GUARD
 1

	)

158 
	#BOOST_DINKUMWARE_STDLIB_WORKAROUND_GUARD
 0

	)

160 #i‚de‡
BOOST_INTEL


161 
	#BOOST_INTEL_WORKAROUND_GUARD
 1

	)

163 
	#BOOST_INTEL_WORKAROUND_GUARD
 0

	)

166 
	#BOOST_MPL_CFG_GCC_WORKAROUND_GUARD
 0

	)

168 
	#BOOST_WORKAROUND
(
symbﬁ
, 
ã°
) \

169 ((
symbﬁ
 ## 
_WORKAROUND_GUARD
 + 0 == 0) && \

170 (
symbﬁ
 !0Ë&& (1 % (–(symbﬁ 
ã°
ËË+ 1)))

	)

189 #ifde‡
BOOST_DETECT_OUTDATED_WORKAROUNDS


190 
	#BOOST_OPEN_PAREN
 (

	)

191 
	#BOOST_TESTED_AT
(
vÆue
Ë> vÆueË?(-1): 
BOOST_OPEN_PAREN
 1

	)

193 
	#BOOST_TESTED_AT
(
vÆue
Ë!((vÆue)-(vÆue))

	)

198 
	#BOOST_WORKAROUND
(
symbﬁ
, 
ã°
Ë0

	)

	@/usr/include/boost/type_traits/broken_compiler_spec.hpp

9 #i‚de‡
BOOST_TT_BROKEN_COMPILER_SPEC_HPP_INCLUDED


10 
	#BOOST_TT_BROKEN_COMPILER_SPEC_HPP_INCLUDED


	)

12 
	~<boo°/m∂/aux_/œmbda_suµ‹t.hµ
>

13 
	~<boo°/c⁄fig.hµ
>

16 #i‡
deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
)

17 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gdëaû
 {

18 
	gãm∂©e
< 
ty≥«me
 
	gT
 > 
	sªmove_c⁄°_im∂
 { 
T
 
	tty≥
; };

19 
	gãm∂©e
< 
ty≥«me
 
	gT
 > 
	sªmove_vﬁ©ûe_im∂
 { 
T
 
	tty≥
; };

20 
	gãm∂©e
< 
ty≥«me
 
	gT
 > 
	sªmove_poöãr_im∂
 { 
T
 
	tty≥
; };

21 
	gãm∂©e
< 
ty≥«me
 
	gT
 > 
	sªmove_ª„ªn˚_im∂
 { 
T
 
	tty≥
; };

22 
	tövoke_BOOST_TT_BROKEN_COMPILER_SPEC_outside_Æl_«me•a˚s
;

28 #i‡ !
deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

29 || 
	$deföed
(
BOOST_TT_NO_BROKEN_COMPILER_SPEC
)

31 
	#BOOST_TT_BROKEN_COMPILER_SPEC
(
T
Ë

	)

37 
	#BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
åaô
,
•ec
,
ªsu…
) \

38 
ãm∂©e
<> 
åaô
##
_im∂
<
•ec
> \

40 
ªsu…
 
	tty≥
; \

41 
	}
}; \

42 

	)

44 
	#BOOST_TT_AUX_REMOVE_CONST_VOLATILE_RANK1_SPEC
(
T
) \

45 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_c⁄°
,
T
 const,T) \

46 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_c⁄°
,
T
 const volatile,T volatile) \

47 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_vﬁ©ûe
,
T
 volatile,T) \

48 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_vﬁ©ûe
,
T
 const volatile,T const) \

49 

	)

51 
	#BOOST_TT_AUX_REMOVE_PTR_REF_RANK_1_SPEC
(
T
) \

52 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_poöãr
,
T
*,T) \

53 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_poöãr
,
T
*const,T) \

54 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_poöãr
,
T
*volatile,T) \

55 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_poöãr
,
T
*const volatile,T) \

56 
	`BOOST_TT_AUX_BROKEN_TYPE_TRAIT_SPEC1
(
ªmove_ª„ªn˚
,
T
&,T) \

57 

	)

59 
	#BOOST_TT_AUX_REMOVE_PTR_REF_RANK_2_SPEC
(
T
) \

60 
	`BOOST_TT_AUX_REMOVE_PTR_REF_RANK_1_SPEC
(
T
) \

61 
	`BOOST_TT_AUX_REMOVE_PTR_REF_RANK_1_SPEC
(
T
 const) \

62 
	`BOOST_TT_AUX_REMOVE_PTR_REF_RANK_1_SPEC
(
T
 volatile) \

63 
	`BOOST_TT_AUX_REMOVE_PTR_REF_RANK_1_SPEC
(
T
 const volatile) \

64 

	)

66 
	#BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
) \

67 
	`BOOST_TT_AUX_REMOVE_PTR_REF_RANK_2_SPEC
(
T
) \

68 
	`BOOST_TT_AUX_REMOVE_CONST_VOLATILE_RANK1_SPEC
(
T
) \

69 

	)

71 
	#BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
) \

72 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
*) \

73 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
 const*) \

74 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
 volatile*) \

75 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
 const volatile*) \

76 

	)

78 
	#BOOST_TT_BROKEN_COMPILER_SPEC
(
T
) \

79 
«me•a˚
 
boo°
 {Çame•a˚ 
dëaû
 { \

80 
övoke_BOOST_TT_BROKEN_COMPILER_SPEC_outside_Æl_«me•a˚s
 \

81 
	t∂ó£_övoke_BOOST_TT_BROKEN_COMPILER_SPEC_outside_Æl_«me•a˚s
; \

82 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_1_SPEC
(
T
) \

83 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
) \

84 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
*) \

85 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
 const*) \

86 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
 volatile*) \

87 
	`BOOST_TT_AUX_REMOVE_ALL_RANK_2_SPEC
(
T
 const volatile*) \

89 

	)

91 
	~<boo°/ty≥_åaôs/dëaû/ty≥_åaô_undef.hµ
>

95 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(
boﬁ
)

96 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

97 #i‚de‡
BOOST_NO_INTRINSIC_WCHAR_T


98 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(
wch¨_t
)

100 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(signed )

101 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

102 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(signed )

103 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

104 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(signed )

105 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

106 
	$BOOST_TT_BROKEN_COMPILER_SPEC
(signed )

107 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

108 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

109 
	$BOOST_TT_BROKEN_COMPILER_SPEC
()

113 
	#BOOST_BROKEN_COMPILER_TYPE_TRAITS_SPECIALIZATION
(
T
) \

114 
	`BOOST_TT_BROKEN_COMPILER_SPEC
(
T
) \

115 

	)

	@/usr/include/boost/type_traits/config.hpp

9 #i‚de‡
BOOST_TT_CONFIG_HPP_INCLUDED


10 
	#BOOST_TT_CONFIG_HPP_INCLUDED


	)

12 #i‚de‡
BOOST_CONFIG_HPP


13 
	~<boo°/c⁄fig.hµ
>

16 
	~<boo°/dëaû/w‹k¨ound.hµ
>

23 #i‡
deföed
(
BOOST_MSVC
Ë|| (deföed(
__BORLANDC__
Ë&& !deföed(
BOOST_DISABLE_WIN32
))

24 
	#BOOST_TT_DECL
 
__cde˛


	)

26 
	#BOOST_TT_DECL


	)

29 #i‡(
BOOST_WORKAROUND
(
__MWERKS__
, < 0x3000) \

30 || 
BOOST_WORKAROUND
(
BOOST_MSVC
, <= 1301) \

31 || !
deföed
(
__EDG_VERSION__
Ë&& 
BOOST_WORKAROUND
(
__GNUC__
, < 3) \

32 || 
BOOST_WORKAROUND
(
__IBMCPP__
, < 600 ) \

33 || 
BOOST_WORKAROUND
(
__BORLANDC__
, 
BOOST_TESTED_AT
(0x564)) \

34 || 
deföed
(
__ghs
) \

35 || 
BOOST_WORKAROUND
(
__HP_aCC
, < 60700) \

36 || 
BOOST_WORKAROUND
(
MPW_CPLUS
, 
BOOST_TESTED_AT
(0x890)) \

37 || 
BOOST_WORKAROUND
(
__SUNPRO_CC
, 
BOOST_TESTED_AT
(0x580))) \

38 && 
	$deföed
(
BOOST_NO_IS_ABSTRACT
)

40 
	#BOOST_TT_NO_CONFORMING_IS_CLASS_IMPLEMENTATION
 1

	)

44 #i‚de‡
BOOST_TT_NO_CONFORMING_IS_CLASS_IMPLEMENTATION


45 
	#BOOST_TT_HAS_CONFORMING_IS_CLASS_IMPLEMENTATION
 1

	)

52 #i‡
	`BOOST_WORKAROUND
(
__GNUC__
, < 3)

53 
	#BOOST_TT_NO_ELLIPSIS_IN_FUNC_TESTING


	)

61 #i‡
	`deföed
(
_MSC_EXTENSIONS
Ë&& !deföed(
__BORLANDC__
)

62 
	#BOOST_TT_TEST_MS_FUNC_SIGS


	)

70 #i‡
	`BOOST_WORKAROUND
(
__MWERKS__
, < 0x3000Ë|| BOOST_WORKAROUND(
__IBMCPP__
, <= 600)

71 
	#BOOST_TT_NO_CV_FUNC_TEST


	)

	@/usr/include/boost/type_traits/detail/bool_trait_def.hpp

14 
	~<boo°/ty≥_åaôs/dëaû/ãm∂©e_¨ôy_•ec.hµ
>

15 
	~<boo°/ty≥_åaôs/öãgøl_c⁄°™t.hµ
>

16 
	~<boo°/m∂/boﬁ.hµ
>

17 
	~<boo°/m∂/aux_/œmbda_suµ‹t.hµ
>

18 
	~<boo°/c⁄fig.hµ
>

25 #ifde‡
BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL


26 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL


27 #unde‡
BOOST_TT_AUX_BOOL_C_BASE


28 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_DEF1


29 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_DEF2


30 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_SPEC1


31 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_SPEC2


32 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1


33 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC2


34 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1


35 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2


36 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_1


37 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_2


38 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_PARTIAL_SPEC2_1


39 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1


42 #i‡
deföed
(
__SUNPRO_CC
) && (__SUNPRO_CC < 0x570)

43 
	#BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

44 ::
boo°
::
	töãgøl_c⁄°™t
<
	tboﬁ
,
	tC
> 
	tty≥
; \

45 íum { 
vÆue
 = 
ty≥
::value }; \

46 

	)

47 
	#BOOST_TT_AUX_BOOL_C_BASE
(
C
)

	)

49 #ñi‡
deföed
(
BOOST_MSVC
) && BOOST_MSVC < 1300

51 
	#BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

52 ::
boo°
::
	töãgøl_c⁄°™t
<
	tboﬁ
,
	tC
> 
	tba£_
; \

53 
usög
 
ba£_
::
vÆue
; \

54 

	)

58 #i‚de‡
BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL


59 
	#BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
Ë

	)

62 #i‚de‡
BOOST_TT_AUX_BOOL_C_BASE


63 
	#BOOST_TT_AUX_BOOL_C_BASE
(
C
Ë: ::
boo°
::
öãgøl_c⁄°™t
<
boﬁ
,C>

	)

67 
	#BOOST_TT_AUX_BOOL_TRAIT_DEF1
(
åaô
,
T
,
C
) \

68 
ãm∂©e
< 
ty≥«me
 
T
 > 
åaô
 \

69 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

71 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

72 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT
(1,
åaô
,(
T
)) \

75 
	`BOOST_TT_AUX_TEMPLATE_ARITY_SPEC
(1,
åaô
) \

76 

	)

79 
	#BOOST_TT_AUX_BOOL_TRAIT_DEF2
(
åaô
,
T1
,
T2
,
C
) \

80 
ãm∂©e
< 
ty≥«me
 
T1
,Åy≥«mê
T2
 > 
åaô
 \

81 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

83 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

84 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT
(2,
åaô
,(
T1
,
T2
)) \

87 
	`BOOST_TT_AUX_TEMPLATE_ARITY_SPEC
(2,
åaô
) \

88 

	)

90 
	#BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
,
C
) \

91 
ãm∂©e
<> 
åaô
< 
•
 > \

92 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

94 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

95 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(1,
åaô
,(
•
)) \

97 

	)

99 
	#BOOST_TT_AUX_BOOL_TRAIT_SPEC2
(
åaô
,
•1
,
•2
,
C
) \

100 
ãm∂©e
<> 
åaô
< 
•1
,
•2
 > \

101 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

103 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

104 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(2,
åaô
,(
•1
,
•2
)) \

106 

	)

108 
	#BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1
(
åaô
,
•
,
C
) \

109 
ãm∂©e
<> 
åaô
##
_im∂
< 
•
 > \

111 
	`BOOST_STATIC_CONSTANT
(
boﬁ
, 
vÆue
 = (
C
)); \

113 

	)

115 
	#BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC2
(
åaô
,
•1
,
•2
,
C
) \

116 
ãm∂©e
<> 
åaô
##
_im∂
< 
•1
,
•2
 > \

118 
	`BOOST_STATIC_CONSTANT
(
boﬁ
, 
vÆue
 = (
C
)); \

120 

	)

122 
	#BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1
(
∑øm
,
åaô
,
•
,
C
) \

123 
ãm∂©e
< 
∑øm
 > 
åaô
< 
•
 > \

124 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

126 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

128 

	)

130 
	#BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2
(
∑øm1
,
∑øm2
,
åaô
,
•
,
C
) \

131 
ãm∂©e
< 
∑øm1
, 
∑øm2
 > 
åaô
< 
•
 > \

132 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

134 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

136 

	)

138 
	#BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_1
(
∑øm
,
åaô
,
•1
,
•2
,
C
) \

139 
ãm∂©e
< 
∑øm
 > 
åaô
< 
•1
,
•2
 > \

140 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

142 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

143 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(2,
åaô
,(
•1
,
•2
)) \

145 

	)

147 
	#BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_2
(
∑øm1
,
∑øm2
,
åaô
,
•1
,
•2
,
C
) \

148 
ãm∂©e
< 
∑øm1
, 
∑øm2
 > 
åaô
< 
•1
,
•2
 > \

149 
	`BOOST_TT_AUX_BOOL_C_BASE
(
C
) \

151 
	`BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL
(
C
) \

153 

	)

155 
	#BOOST_TT_AUX_BOOL_TRAIT_IMPL_PARTIAL_SPEC2_1
(
∑øm
,
åaô
,
•1
,
•2
,
C
) \

156 
ãm∂©e
< 
∑øm
 > 
åaô
##
_im∂
< 
•1
,
•2
 > \

158 
	`BOOST_STATIC_CONSTANT
(
boﬁ
, 
vÆue
 = (
C
)); \

160 

	)

162 #i‚de‡
BOOST_NO_CV_SPECIALIZATIONS


163 
	#BOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1
(
åaô
,
•
,
vÆue
) \

164 
	`BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
,
vÆue
) \

165 
	`BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
 c⁄°,
vÆue
) \

166 
	`BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
 vﬁ©ûe,
vÆue
) \

167 
	`BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
 c⁄° vﬁ©ûe,
vÆue
) \

168 

	)

170 
	#BOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1
(
åaô
,
•
,
vÆue
) \

171 
	`BOOST_TT_AUX_BOOL_TRAIT_SPEC1
(
åaô
,
•
,
vÆue
) \

172 

	)

	@/usr/include/boost/type_traits/detail/bool_trait_undef.hpp

14 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_VALUE_DECL


15 #unde‡
BOOST_TT_AUX_BOOL_C_BASE


16 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_DEF1


17 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_DEF2


18 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_SPEC1


19 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_SPEC2


20 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC1


21 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_SPEC2


22 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_1


23 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC1_2


24 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_1


25 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_PARTIAL_SPEC2_2


26 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_IMPL_PARTIAL_SPEC2_1


27 #unde‡
BOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1


	@/usr/include/boost/type_traits/detail/type_trait_def.hpp

14 
	~<boo°/ty≥_åaôs/dëaû/ãm∂©e_¨ôy_•ec.hµ
>

15 
	~<boo°/m∂/aux_/œmbda_suµ‹t.hµ
>

17 
	#BOOST_TT_AUX_TYPE_TRAIT_DEF1
(
åaô
,
T
,
ªsu…
) \

18 
ãm∂©e
< 
ty≥«me
 
T
 > 
åaô
 \

20 
ªsu…
 
	tty≥
; \

21 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT
(1,
åaô
,(
T
)) \

24 
	`BOOST_TT_AUX_TEMPLATE_ARITY_SPEC
(1,
åaô
) \

25 

	)

27 
	#BOOST_TT_AUX_TYPE_TRAIT_SPEC1
(
åaô
,
•ec
,
ªsu…
) \

28 
ãm∂©e
<> 
åaô
<
•ec
> \

30 
ªsu…
 
	tty≥
; \

31 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(1,
åaô
,(
•ec
)) \

33 

	)

35 
	#BOOST_TT_AUX_TYPE_TRAIT_IMPL_SPEC1
(
åaô
,
•ec
,
ªsu…
) \

36 
ãm∂©e
<> 
åaô
##
_im∂
<
•ec
> \

38 
ªsu…
 
	tty≥
; \

40 

	)

42 
	#BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1
(
∑øm
,
åaô
,
•ec
,
ªsu…
) \

43 
ãm∂©e
< 
∑øm
 > 
åaô
<
•ec
> \

45 
ªsu…
 
	tty≥
; \

47 

	)

49 
	#BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_2
(
∑øm1
,
∑øm2
,
åaô
,
•ec
,
ªsu…
) \

50 
ãm∂©e
< 
∑øm1
, 
∑øm2
 > 
åaô
<
•ec
> \

52 
ªsu…
; \

54 

	)

56 
	#BOOST_TT_AUX_TYPE_TRAIT_IMPL_PARTIAL_SPEC1_1
(
∑øm
,
åaô
,
•ec
,
ªsu…
) \

57 
ãm∂©e
< 
∑øm
 > 
åaô
##
_im∂
<
•ec
> \

59 
ªsu…
 
	tty≥
; \

61 

	)

	@/usr/include/boost/type_traits/detail/type_trait_undef.hpp

14 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_DEF1


15 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_SPEC1


16 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_IMPL_SPEC1


17 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_1


18 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_PARTIAL_SPEC1_2


19 #unde‡
BOOST_TT_AUX_TYPE_TRAIT_IMPL_PARTIAL_SPEC1_1


	@/usr/include/boost/type_traits/detail/wrap.hpp

8 #i‚de‡
BOOST_TT_DETAIL_WRAP_HPP_INCLUDED


9 
	#BOOST_TT_DETAIL_WRAP_HPP_INCLUDED


	)

11 
«me•a˚
 
	gboo°
 {

12 
«me•a˚
 
	gty≥_åaôs
 {

14 
	gãm∂©e
 <
˛ass
 
	gT
> 
	swøp
 {};

	@/usr/include/boost/type_traits/detail/yes_no_type.hpp

11 #i‚de‡
BOOST_TT_DETAIL_YES_NO_TYPE_HPP_INCLUDED


12 
	#BOOST_TT_DETAIL_YES_NO_TYPE_HPP_INCLUDED


	)

14 
«me•a˚
 
	gboo°
 {

15 
«me•a˚
 
	gty≥_åaôs
 {

17 
	tyes_ty≥
;

18 
	sno_ty≥


20 
	g∑ddög
[8];

	@/usr/include/boost/type_traits/msvc/remove_reference.hpp

5 #i‚de‡
BOOST_TYPE_TRAITS_MSVC_REMOVE_REFERENCE_HOLT_2004_0827


6 
	#BOOST_TYPE_TRAITS_MSVC_REMOVE_REFERENCE_HOLT_2004_0827


	)

8 
	~<boo°/ty≥_åaôs/msvc/ty≥of.hµ
>

9 
	~<boo°/ty≥_åaôs/is_ª„ªn˚.hµ
>

11 
«me•a˚
 
	gboo°
 {

12 
«me•a˚
 
	gdëaû
 {

13 
	gãm∂©e
<
boﬁ
 
	gIsRe„ªn˚
>

14 
	sªmove_ª„ªn˚_im∂_ty≥of
 {

15 
	gãm∂©e
<
ty≥«me
 
	gT
,ty≥«mê
	gID
>

16 
	sö√r
 {

17 
T
 
	tty≥
;

20 
	gãm∂©e
<>

21 
	gªmove_ª„ªn˚_im∂_ty≥of
<
	gåue
> {

22 
	gãm∂©e
<
ty≥«me
 
	gT
,ty≥«mê
	gID
>

23 
	sö√r
 {

24 
	gãm∂©e
<
ty≥«me
 
	gU
>

25 
	gmsvc_ªgi°î_ty≥
<
	gU
,
	gID
> 
ã°
(
U
&(*)());

26 
	gmsvc_ªgi°î_ty≥
<
	gT
,
	gID
> 
ã°
(...);

27 
BOOST_STATIC_CONSTANT
(,
ªgi°î_ã°
=(
ã°
–(
T
(*)())(
NULL
) ) ));

28 
ty≥«me
 
	tmsvc_exåa˘_ty≥
<
	tID
>::
	tid2ty≥
::
	tty≥
Åype;

33 
	gãm∂©e
<
ty≥«me
 
	gT
>

34 
	sªmove_ª„ªn˚
 {

35 
ty≥«me
 
	tdëaû
::
	tªmove_ª„ªn˚_im∂_ty≥of
<

36 
	tboo°
::
	tis_ª„ªn˚
<
	tT
>::
	tvÆue


37 >::
	tãm∂©e
 
	tö√r
<
	tT
,
	tªmove_ª„ªn˚
<T> >::
	tty≥
Åype;

38 
BOOST_MPL_AUX_LAMBDA_SUPPORT
(1,
ªmove_ª„ªn˚
,
T
)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/google/protobuf/stubs/template_util.h

50 #i‚de‡
GOOGLE_PROTOBUF_TEMPLATE_UTIL_H_


51 
	#GOOGLE_PROTOBUF_TEMPLATE_UTIL_H_


	)

53 
«me•a˚
 
	ggoogÀ
 {

54 
«me•a˚
 
	g¥Ÿobuf
 {

55 
«me•a˚
 
	göã∫Æ
 {

59 
	tsmÆl_
;

61 
	sbig_
 {

62 
	gdummy
[2];

66 
	gãm∂©e
 <
˛ass
 
	gT
>

67 
	sidítôy_
 {

68 
T
 
	tty≥
;

76 
	gãm∂©e
<
˛ass
 
	gT
, 
T
 
	gv
>

77 
	söãgøl_c⁄°™t
 {

78 c⁄° 
T
 
	gvÆue
 = 
v
;

79 
T
 
	tvÆue_ty≥
;

80 
	göãgøl_c⁄°™t
<
	tT
, 
	tv
> 
	tty≥
;

83 
	gãm∂©e
 <
˛ass
 
	gT
, 
T
 
	gv
> c⁄° T 
	göãgøl_c⁄°™t
<T, v>::
vÆue
;

89 
	göãgøl_c⁄°™t
<
	tboﬁ
, 
	tåue
> 
	tåue_ty≥
;

90 
	göãgøl_c⁄°™t
<
	tboﬁ
, 
	tÁl£
> 
	tÁl£_ty≥
;

91 
åue_ty≥
 
	tåue_
;

92 
Ál£_ty≥
 
	tÁl£_
;

97 
	gãm∂©e
<
boﬁ
 
	gc⁄d
, 
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

98 
	sif_
{

99 
A
 
	tty≥
;

102 
	gãm∂©e
<
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

103 
	gif_
<
	gÁl£
, 
	gA
, 
	gB
> {

104 
B
 
	tty≥
;

113 
	gãm∂©e
<
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

114 
	gty≥_equÆs_
 : 
public
 
Ál£_
 {

117 
	gãm∂©e
<
ty≥«me
 
	gA
>

118 
	gty≥_equÆs_
<
	gA
, A> : 
public
 
åue_
 {

123 
	gãm∂©e
<
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

124 
	g™d_
 : 
public
 
öãgøl_c⁄°™t
<
boﬁ
, (
	gA
::
vÆue
 && 
B
::value)> {

129 
	gãm∂©e
<
ty≥«me
 
	gA
,Åy≥«mê
	gB
>

130 
	g‹_
 : 
public
 
öãgøl_c⁄°™t
<
boﬁ
, (
	gA
::
vÆue
 || 
B
::value)> {

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/sockios.h

1 #i‚de‡
_ASM_X86_SOCKIOS_H


2 
	#_ASM_X86_SOCKIOS_H


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

11 
	#SIOCGSTAMPNS
 0x8907

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

41 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


42 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


43 
±hªad_muãx_t
 
	t__libc_lock_t
;

44 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

46 
	t__libc_lock_t
;

47 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

49 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

50 #ifde‡
__USE_UNIX98


51 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

53 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

56 
__libc_lock_›aque__
 
	t__libc_lock_t
;

57 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

58 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

62 
±hªad_key_t
 
	t__libc_key_t
;

71 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

73 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

75 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

77 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

89 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

90 #i‡
LLL_LOCK_INITIALIZER
 == 0

91 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

92 
CLASS
 
__libc_lock_t
 
NAME
;

	)

94 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

95 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

98 #i‡
__LT_SPINLOCK_INIT
 == 0

99 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

100 
CLASS
 
__libc_lock_t
 
NAME
;

	)

102 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

103 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

107 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

108 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

112 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

113 #i‡
LLL_LOCK_INITIALIZER
 == 0

114 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

115 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

117 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

118 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

120 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

121 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

123 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

124 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

125 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

126 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

129 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

130 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

131 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

132 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

134 
	#__πld_lock_öôülize
(
NAME
) \

135 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

142 #ifde‡
__PIC__


143 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

144 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

145 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

147 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

148 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

152 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


153 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

154 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

155 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

156 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

157 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

159 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

160 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

161 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

162 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

163 
FUNC
 
ARGS


	)

169 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

170 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

172 
	#__libc_lock_öô
(
NAME
) \

173 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

175 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


178 
	#__libc_rwlock_öô
(
NAME
) \

179 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

181 
	#__libc_rwlock_öô
(
NAME
) \

182 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

186 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

187 
	#__libc_lock_öô_ªcursive
(
NAME
) \

188 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

190 
	#__libc_lock_öô_ªcursive
(
NAME
) \

192 i‡(
__±hªad_muãx_öô
 !
NULL
) \

194 
±hªad_muãx©å_t
 
__©å
; \

195 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

196 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

197 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

198 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

200 } 0)

	)

203 
	#__πld_lock_öô_ªcursive
(
NAME
) \

205 i‡(
__±hªad_muãx_öô
 !
NULL
) \

207 
±hªad_muãx©å_t
 
__©å
; \

208 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

209 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

210 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

211 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

213 } 0)

	)

218 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

219 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

221 
	#__libc_lock_föi
(
NAME
) \

222 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

224 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


225 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

227 
	#__libc_rwlock_föi
(
NAME
) \

228 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

232 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

233 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

235 
	#__libc_lock_föi_ªcursive
(
NAME
) \

236 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

240 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

241 
	#__libc_lock_lock
(
NAME
) \

242 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

244 
	#__libc_lock_lock
(
NAME
) \

245 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

247 
	#__libc_rwlock_rdlock
(
NAME
) \

248 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

249 
	#__libc_rwlock_wæock
(
NAME
) \

250 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

253 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

254 
	#__libc_lock_lock_ªcursive
(
NAME
) \

256 *
£lf
 = 
THREAD_SELF
; \

257 i‡((
NAME
).
ow√r
 !
£lf
) \

259 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

260 (
NAME
).
ow√r
 = 
£lf
; \

262 ++(
NAME
).
˙t
; \

263 } 0)

	)

265 
	#__libc_lock_lock_ªcursive
(
NAME
) \

266 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

270 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

271 
	#__libc_lock_åylock
(
NAME
) \

272 
	`Œl_åylock
 (
NAME
)

	)

274 
	#__libc_lock_åylock
(
NAME
) \

275 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

277 
	#__libc_rwlock_åyrdlock
(
NAME
) \

278 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

279 
	#__libc_rwlock_åywæock
(
NAME
) \

280 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

283 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

284 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

286 
ªsu…
 = 0; \

287 *
£lf
 = 
THREAD_SELF
; \

288 i‡((
NAME
).
ow√r
 !
£lf
) \

290 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

292 (
NAME
).
ow√r
 = 
£lf
; \

293 (
NAME
).
˙t
 = 1; \

296 
ªsu…
 = 
EBUSY
; \

299 ++(
NAME
).
˙t
; \

300 
ªsu…
; \

301 })

	)

303 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

304 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

307 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

308 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

311 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

312 
	#__libc_lock_u∆ock
(
NAME
) \

313 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

315 
	#__libc_lock_u∆ock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

318 
	#__libc_rwlock_u∆ock
(
NAME
) \

319 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

322 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

324 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

326 i‡(--(
NAME
).
˙t
 == 0) \

328 (
NAME
).
ow√r
 = 
NULL
; \

329 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

331 } 0)

	)

333 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

334 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

337 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


338 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

339 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

341 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

342 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

344 
	#__πld_lock_lock_ªcursive
(
NAME
) \

345 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

347 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

348 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

350 
	#__πld_lock_lock_ªcursive
(
NAME
) \

351 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

353 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

358 #i‡
PTHREAD_ONCE_INIT
 == 0

361 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

362 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

364 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

365 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

369 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

371 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

372 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

373 
INIT_FUNCTION
)); \

374 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

375 
	`INIT_FUNCTION
 (); \

376 (
ONCE_CONTROL
) |= 2; \

378 } 0)

	)

381 
	#__libc_⁄˚_gë
(
ONCE_CONTROL
) \

382 ((
ONCE_CONTROL
Ë!
PTHREAD_ONCE_INIT
)

	)

388 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

389 (*
routöe
Ë(*), *
¨g
);

390 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

391 
execuã
);

392 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

393 (*
routöe
Ë(*), *
¨g
);

394 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

395 
execuã
);

398 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

399 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

400 
_avaû
; \

401 i‡(
DOIT
) { \

402 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

403 i‡(
_avaû
) { \

404 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

405 
ARG
)); \

407 
_buf„r
.
__routöe
 = (
FCT
); \

408 
_buf„r
.
__¨g
 = (
ARG
); \

411 
_avaû
 = 0; \

412 }

	)

415 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

416 i‡(
_avaû
) { \

417 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

418 } i‡(
DOIT
) \

419 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

420 
	}

	)
}

423 
	#__libc_˛ónup_íd
(
DOIT
) \

424 i‡(
_avaû
) { \

425 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

426 } i‡(
DOIT
) \

427 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

431 
__exã∫_ölöe
 

432 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

434 i‡(
f
->
__do_ô
)

435 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

436 
	}
}

438 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

440 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

441 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

442 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

443 .
__do_ô
 = 1 };

	)

445 
	#__libc_˛ónup_p›
(
execuã
) \

446 
__˛‰ame
.
__do_ô
 = (
execuã
); \

447 } 0)

	)

451 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

452 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

455 
	#__libc_gë•ecific
(
KEY
) \

456 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

459 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

460 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

466 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

467 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

468 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

469 (*
__∑ª¡
) (),

470 (*
__chûd
) (),

471 *
__dso_h™dÀ
);

476 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

477 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

479 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

481 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

483 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

485 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

487 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

489 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

491 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

492 
__köd
);

494 #ifde‡
__USE_UNIX98


495 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

496 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

498 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

500 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

502 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

504 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

506 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

508 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

511 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

512 (*
__de°r_fun˘i⁄
) (*));

514 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

515 
__c⁄°
 *
__poöãr
);

517 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

519 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

520 (*
__öô_routöe
) ());

522 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

523 (*
__∑ª¡
) (),

524 (*
__chûd
) ());

530 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


531 #ifde‡
wók_exã∫


532 #i‡
_LIBC


533 
	~<bp-sym.h
>

535 
	#BP_SYM
 (
sym
Ë
	)
sym

537 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

538 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

539 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

540 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

541 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

542 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

543 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

544 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

545 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

546 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

547 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

548 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

549 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

550 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

551 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

552 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

553 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

554 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

555 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

556 
	$wók_exã∫
 (
__±hªad_öôülize
)

557 
	$wók_exã∫
 (
__±hªad_©f‹k
)

558 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

559 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

560 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

562 #¥agm®
wók
 
__±hªad_muãx_öô


563 #¥agm®
wók
 
__±hªad_muãx_de°roy


564 #¥agm®
wók
 
__±hªad_muãx_lock


565 #¥agm®
wók
 
__±hªad_muãx_åylock


566 #¥agm®
wók
 
__±hªad_muãx_u∆ock


567 #¥agm®
wók
 
__±hªad_muãx©å_öô


568 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


569 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


570 #¥agm®
wók
 
__±hªad_rwlock_de°roy


571 #¥agm®
wók
 
__±hªad_rwlock_rdlock


572 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


573 #¥agm®
wók
 
__±hªad_rwlock_wæock


574 #¥agm®
wók
 
__±hªad_rwlock_åywæock


575 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


576 #¥agm®
wók
 
__±hªad_key_¸óã


577 #¥agm®
wók
 
__±hªad_£t•ecific


578 #¥agm®
wók
 
__±hªad_gë•ecific


579 #¥agm®
wók
 
__±hªad_⁄˚


580 #¥agm®
wók
 
__±hªad_öôülize


581 #¥agm®
wók
 
__±hªad_©f‹k


582 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


583 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


584 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/boost/config/no_tr1/utility.hpp

13 #i‚de‡
BOOST_CONFIG_UTILITY


14 
	#BOOST_CONFIG_UTILITY


	)

16 #i‚de‡
BOOST_TR1_NO_RECURSION


17 
	#BOOST_TR1_NO_RECURSION


	)

18 
	#BOOST_CONFIG_NO_UTILITY_RECURSION


	)

21 
	~<utûôy
>

23 #ifde‡
BOOST_CONFIG_NO_UTILITY_RECURSION


24 #unde‡
BOOST_TR1_NO_RECURSION


25 #unde‡
BOOST_CONFIG_NO_UTILITY_RECURSION


	@/usr/include/boost/config/posix_features.hpp

17 #i‡
deföed
(
BOOST_HAS_UNISTD_H
)

18 
	~<uni°d.h
>

21 #i‡
deföed
(
_XOPEN_VERSION
) && (_XOPEN_VERSION >= 3)

22 
	#BOOST_HAS_NL_TYPES_H


	)

26 #i‡
deföed
(
_POSIX_VERSION
) && (_POSIX_VERSION >= 200100)

27 
	#BOOST_HAS_STDINT_H


	)

31 #i‡
deföed
(
_POSIX_VERSION
) && (_POSIX_VERSION >= 199009L)

32 
	#BOOST_HAS_DIRENT_H


	)

36 #i‡
deföed
(
_POSIX_VERSION
) && (_POSIX_VERSION >= 199506L)

37 
	#BOOST_HAS_SIGACTION


	)

45 #i‡
deföed
(
_POSIX_THREADS
Ë&& (_POSIX_THREADS+0 >0Ë&& !deföed(
BOOST_HAS_WINTHREADS
Ë&& !deföed(
BOOST_HAS_MPTASKS
)

46 
	#BOOST_HAS_PTHREADS


	)

51 #i‡(
deföed
(
_POSIX_TIMERS
) && (_POSIX_TIMERS+0 >= 0)) \

52 || (
deföed
(
_XOPEN_REALTIME
Ë&& (
	g_XOPEN_REALTIME
+0 >= 0))

53 
	#BOOST_HAS_NANOSLEEP


	)

60 #i‡(
deföed
(
_POSIX_TIMERS
) && (_POSIX_TIMERS+0 >= 0))

61 
	#BOOST_HAS_CLOCK_GETTIME


	)

67 #i‡
deföed
(
_POSIX_PRIORITY_SCHEDULING
) && (_POSIX_PRIORITY_SCHEDULING+0 > 0)\

68 || (
deföed
(
_POSIX_THREAD_PRIORITY_SCHEDULING
) && (_POSIX_THREAD_PRIORITY_SCHEDULING+0 > 0))\

69 || (
deföed
(
_XOPEN_REALTIME
) && (_XOPEN_REALTIME+0 >= 0))

70 
	#BOOST_HAS_SCHED_YIELD


	)

78 #i‡
deföed
(
_XOPEN_VERSION
) && (_XOPEN_VERSION+0 >= 500)

79 
	#BOOST_HAS_GETTIMEOFDAY


	)

80 #i‡
deföed
(
_XOPEN_SOURCE
) && (_XOPEN_SOURCE+0 >= 500)

81 
	#BOOST_HAS_PTHREAD_MUTEXATTR_SETTYPE


	)

83 #i‚de‡
BOOST_HAS_LOG1P


84 
	#BOOST_HAS_LOG1P


	)

86 #i‚de‡
BOOST_HAS_EXPM1


87 
	#BOOST_HAS_EXPM1


	)

	@/usr/include/boost/mpl/aux_/lambda_support.hpp

2 #i‚de‡
BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/œmbda.hµ
>

19 #i‡!
deföed
(
BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT
)

21 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
Ë

	)

22 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
,
«me
,
∑øms
Ë

	)

26 
	~<boo°/m∂/öt_fwd.hµ
>

27 
	~<boo°/m∂/aux_/yes_no.hµ
>

28 
	~<boo°/m∂/aux_/«_fwd.hµ
>

29 
	~<boo°/m∂/aux_/¥ïro˚ss‹/∑øms.hµ
>

30 
	~<boo°/m∂/aux_/¥ïro˚ss‹/íum.hµ
>

31 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

32 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

34 
	~<boo°/¥ïro˚ss‹/tu∂e/to_li°.hµ
>

35 
	~<boo°/¥ïro˚ss‹/li°/f‹_óch_i.hµ
>

36 
	~<boo°/¥ïro˚ss‹/öc.hµ
>

37 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

39 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_ARG_TYPEDEF_FUNC
(
R
,
ty≥def_
,
i
,
∑øm
) \

40 
ty≥def_
 
∑øm
 
	`BOOST_PP_CAT
(
¨g
,
	`BOOST_PP_INC
(
i
)); \

41 

	)

44 #i‡
BOOST_WORKAROUND
(
__EDG_VERSION__
, <= 238)

46 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
, 
«me
, 
∑øms
) \

47 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
	töt_
<
	ti
> 
	t¨ôy
; \

48 
	`BOOST_PP_LIST_FOR_EACH_I_R
( \

50 , 
BOOST_MPL_AUX_LAMBDA_SUPPORT_ARG_TYPEDEF_FUNC
 \

52 , 
	`BOOST_PP_TUPLE_TO_LIST
(
	ti
,
	t∑øms
) \

54 
	tªböd
 \

56 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
U
Ë> 
≠∂y
 \

57 : 
«me
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
U
) > \

61 

	)

63 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

64 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
, 
«me
, 
∑øms
) \

65 

	)

67 #ñi‡
BOOST_WORKAROUND
(
__EDG_VERSION__
, <244Ë&& !
deföed
(
BOOST_INTEL_CXX_VERSION
)

72 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

73 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
	töt_
<
	ti
> 
	t¨ôy
; \

74 
	`BOOST_PP_LIST_FOR_EACH_I_R
( \

76 , 
BOOST_MPL_AUX_LAMBDA_SUPPORT_ARG_TYPEDEF_FUNC
 \

78 , 
	`BOOST_PP_TUPLE_TO_LIST
(
	ti
,
	t∑øms
) \

80 
	tªböd
; \

81 

	)

83 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
, 
«me
, 
∑øms
) \

84 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

86 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
T
) > \

87 
«me
<
	`BOOST_MPL_PP_PARAMS
(
i
,
T
)>::
ªböd
 \

89 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
U
Ë> 
≠∂y
 \

90 : 
«me
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
U
) > \

93 

	)

97 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gm∂
 {Çame•a˚ 
	gaux
 {

98 
	gãm∂©e
< 
ty≥«me
 
	gT
 > 
	ghas_ªböd_èg
;

101 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

102 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
	töt_
<
	ti
> 
	t¨ôy
; \

103 
	`BOOST_PP_LIST_FOR_EACH_I_R
( \

105 , 
BOOST_MPL_AUX_LAMBDA_SUPPORT_ARG_TYPEDEF_FUNC
 \

107 , 
	`BOOST_PP_TUPLE_TO_LIST
(
	ti
,
	t∑øms
) \

109 
	t‰õnd
 
	t˛ass
 
	tBOOST_PP_CAT
(
	t«me
,
	t_ªböd
); \

110 
	`BOOST_PP_CAT
(
	t«me
,
	t_ªböd
Ë
	tªböd
; \

111 

	)

113 #i‡
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x600)

114 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_HAS_REBIND
(
i
, 
«me
, 
∑øms
) \

115 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
T
) > \

116 ::
boo°
::
m∂
::
aux
::
yes_èg
 
›î©‹
|( \

117 ::
boo°
::
m∂
::
aux
::
has_ªböd_èg
<> \

118 , 
«me
<
	`BOOST_MPL_PP_PARAMS
(
i
,
T
)>* \

120 ::
boo°
::
m∂
::
aux
::
no_èg
 
›î©‹
|( \

121 ::
boo°
::
m∂
::
aux
::
has_ªböd_èg
<> \

122 , 
«me
< 
	`BOOST_MPL_PP_ENUM
(
i
,::
boo°
::
m∂
::
«
) >* \

124 

	)

125 #ñi‡!
BOOST_WORKAROUND
(
BOOST_MSVC
, < 1300)

126 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_HAS_REBIND
(
i
, 
«me
, 
∑øms
) \

127 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
T
) > \

128 ::
boo°
::
m∂
::
aux
::
yes_èg
 
›î©‹
|( \

129 ::
boo°
::
m∂
::
aux
::
has_ªböd_èg
<> \

130 , ::
boo°
::
m∂
::
aux
::
has_ªböd_èg
< 
«me
<
	`BOOST_MPL_PP_PARAMS
(
i
,
T
)> >* \

132 

	)

134 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT_HAS_REBIND
(
i
, 
«me
, 
∑øms
Ë

	)

137 #i‡!
deföed
(
__BORLANDC__
)

138 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
, 
«me
, 
∑øms
) \

139 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

141 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_HAS_REBIND
(
i
, 
«me
, 
∑øms
) \

142 
˛ass
 
	`BOOST_PP_CAT
(
«me
,
_ªböd
) \

144 
public
: \

145 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
U
Ë> 
≠∂y
 \

146 : 
«me
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
U
) > \

149 

	)

151 
	#BOOST_MPL_AUX_LAMBDA_SUPPORT
(
i
, 
«me
, 
∑øms
) \

152 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC
(
i
, 
«me
, 
∑øms
) \

154 
	`BOOST_MPL_AUX_LAMBDA_SUPPORT_HAS_REBIND
(
i
, 
«me
, 
∑øms
) \

155 
˛ass
 
	`BOOST_PP_CAT
(
«me
,
_ªböd
) \

157 
public
: \

158 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
,
ty≥«me
 
U
Ë> 
≠∂y
 \

160 
ty≥«me
 
	t«me
< 
	tBOOST_MPL_PP_PARAMS
(
	ti
,
	tU
Ë>::
	tty≥
Åype; \

162 

	)

	@/usr/include/boost/mpl/bool.hpp

2 #i‚de‡
BOOST_MPL_BOOL_HPP_INCLUDED


3 
	#BOOST_MPL_BOOL_HPP_INCLUDED


	)

17 
	~<boo°/m∂/boﬁ_fwd.hµ
>

18 
	~<boo°/m∂/öãgøl_c_èg.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/°©ic_c⁄°™t.hµ
>

21 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


23 
	gãm∂©e
< 
boﬁ
 
	gC_
 > 
	sboﬁ_


25 
BOOST_STATIC_CONSTANT
(
boﬁ
, 
vÆue
 = 
C_
);

26 
öãgøl_c_èg
 
	tèg
;

27 
boﬁ_
 
	tty≥
;

28 
boﬁ
 
	tvÆue_ty≥
;

29 
›î©‹
 
boﬁ
(Ëc⁄° {  
	mthis
->
	mvÆue
; }

32 #i‡!
deföed
(
BOOST_NO_INCLASS_MEMBER_INITIALIZATION
)

33 
	gãm∂©e
< 
boﬁ
 
	gC_
 >

34 
boﬁ
 c⁄° 
	gboﬁ_
<
	gC_
>::
vÆue
;

37 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


	@/usr/include/boost/non_type.hpp

11 #i‚de‡
BOOST_NON_TYPE_HPP_GP_20030417


12 
	#BOOST_NON_TYPE_HPP_GP_20030417


	)

15 
«me•a˚
 
	gboo°
 {

20 
	gãm∂©e
 <
ty≥«me
 
	gT
, 
T
 
	gn
>

21 
	sn⁄_ty≥
 { };

	@/usr/include/boost/type.hpp

6 #i‚de‡
BOOST_TYPE_DWA20010120_HPP


7 
	#BOOST_TYPE_DWA20010120_HPP


	)

9 
«me•a˚
 
	gboo°
 {

13 
	gãm∂©e
 <
˛ass
 
	gT
>

14 
	sty≥
 {};

	@/usr/include/boost/type_traits/detail/template_arity_spec.hpp

10 
	~<boo°/m∂/öt.hµ
>

11 
	~<boo°/m∂/aux_/ãm∂©e_¨ôy_fwd.hµ
>

12 
	~<boo°/m∂/aux_/¥ïro˚ss‹/∑øms.hµ
>

13 
	~<boo°/m∂/aux_/c⁄fig/œmbda.hµ
>

14 
	~<boo°/m∂/aux_/c⁄fig/ovîlﬂd_ªsﬁuti⁄.hµ
>

16 #i‡
deföed
(
BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT
) \

17 && 
	$deföed
(
BOOST_MPL_CFG_BROKEN_OVERLOAD_RESOLUTION
)

18 
	#BOOST_TT_AUX_TEMPLATE_ARITY_SPEC
(
i
, 
«me
) \

19 
«me•a˚
 
m∂
 {Çame•a˚ 
aux
 { \

20 
ãm∂©e
< 
	`BOOST_MPL_PP_PARAMS
(
i
, 
ty≥«me
 
T
) > \

21 
ãm∂©e_¨ôy
< \

22 
«me
< 
	`BOOST_MPL_PP_PARAMS
(
i
, 
T
) > \

24 : 
öt_
<
i
> \

27 }
	}
} \

28 

	)

30 
	#BOOST_TT_AUX_TEMPLATE_ARITY_SPEC
(
i
, 
«me
Ë

	)

	@/usr/include/boost/type_traits/integral_constant.hpp

6 #i‚de‡
BOOST_TYPE_TRAITS_INTEGRAL_CONSTANT_HPP


7 
	#BOOST_TYPE_TRAITS_INTEGRAL_CONSTANT_HPP


	)

9 
	~<boo°/c⁄fig.hµ
>

10 
	~<boo°/m∂/boﬁ.hµ
>

11 
	~<boo°/m∂/öãgøl_c.hµ
>

13 
«me•a˚
 
	gboo°
{

15 #i‡
deföed
(
BOOST_NO_DEPENDENT_TYPES_IN_TEMPLATE_VALUE_PARAMETERS
Ë|| deföed(
__BORLANDC__
)

16 
	gãm∂©e
 <
˛ass
 
	gT
, 
	gvÆ
>

18 
	gãm∂©e
 <
˛ass
 
	gT
, 
T
 
	gvÆ
>

20 
	göãgøl_c⁄°™t
 : 
public
 
m∂
::
öãgøl_c
<
T
, 
	gvÆ
>

22 
	göãgøl_c⁄°™t
<
	tT
,
	tvÆ
> 
	tty≥
;

25 
	gãm∂©e
<> 
	göãgøl_c⁄°™t
<
	gboﬁ
,
	gåue
> : 
public
 
m∂
::
åue_


27 #i‡
BOOST_WORKAROUND
(
BOOST_MSVC
, < 1300)

28 #¥agm®
w¨nög
(
push
)

29 #¥agm®
w¨nög
(
dißbÀ
:4097)

30 
	gm∂
::
	tåue_
 
	tba£_
;

31 
usög
 
	gba£_
::
vÆue
;

32 #¥agm®
w¨nög
(
p›
)

34 
	göãgøl_c⁄°™t
<
	tboﬁ
,
	tåue
> 
	tty≥
;

36 
	gãm∂©e
<> 
	göãgøl_c⁄°™t
<
	gboﬁ
,
	gÁl£
> : 
public
 
m∂
::
Ál£_


38 #i‡
BOOST_WORKAROUND
(
BOOST_MSVC
, < 1300)

39 #¥agm®
w¨nög
(
push
)

40 #¥agm®
w¨nög
(
dißbÀ
:4097)

41 
	gm∂
::
	tÁl£_
 
	tba£_
;

42 
usög
 
	gba£_
::
vÆue
;

43 #¥agm®
w¨nög
(
p›
)

45 
	göãgøl_c⁄°™t
<
	tboﬁ
,
	tÁl£
> 
	tty≥
;

48 
	göãgøl_c⁄°™t
<
	tboﬁ
,
	tåue
> 
	tåue_ty≥
;

49 
	göãgøl_c⁄°™t
<
	tboﬁ
,
	tÁl£
> 
	tÁl£_ty≥
;

	@/usr/include/boost/type_traits/msvc/typeof.hpp

5 #i‚de‡
BOOST_TYPETRAITS_MSVC_TYPEOF_HPP


6 
	#BOOST_TYPETRAITS_MSVC_TYPEOF_HPP


	)

8 
	~<boo°/c⁄fig.hµ
>

9 
	~<boo°/dëaû/w‹k¨ound.hµ
>

11 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gdëaû
 {

12 #i‡
BOOST_WORKAROUND
(
BOOST_MSVC
,==1300)

13 
	gãm∂©e
<
ty≥«me
 
	gID
>

14 
	smsvc_exåa˘_ty≥


16 
	gãm∂©e
<
	gboﬁ
>

17 
	gid2ty≥_im∂
;

19 
	gid2ty≥_im∂
<
	tåue
> 
	tid2ty≥
;

22 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gID
>

23 
	gmsvc_ªgi°î_ty≥
 : 
msvc_exåa˘_ty≥
<
ID
>

25 
ãm∂©e
<>

26 
id2ty≥_im∂
<
åue
>

28 
T
 
	tty≥
;

32 
	gãm∂©e
<
ty≥«me
 
	gID
>

33 
	smsvc_exåa˘_ty≥


35 
	gid2ty≥
;

38 
	gãm∂©e
<
ty≥«me
 
	gT
,Åy≥«mê
	gID
>

39 
	gmsvc_ªgi°î_ty≥
 : 
msvc_exåa˘_ty≥
<
ID
>

41 
msvc_exåa˘_ty≥
<
	tID
> 
	tba£_ty≥
;

42 
	gba£_ty≥
::
id2ty≥


44 
T
 
	tty≥
;

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


76 
	#__mb°©e_t_deföed
 1

	)

80 
	m__cou¡
;

83 #ifde‡
__WINT_TYPE__


84 
__WINT_TYPE__
 
	m__wch
;

86 
wöt_t
 
	m__wch
;

88 
	m__wchb
[4];

89 } 
	m__vÆue
;

90 } 
	t__mb°©e_t
;

92 #unde‡
__√ed_mb°©e_t


97 #ifde‡
_WCHAR_H


99 
__BEGIN_NAMESPACE_C99


101 
__mb°©e_t
 
	tmb°©e_t
;

102 
	g__END_NAMESPACE_C99


103 #ifde‡
__USE_GNU


104 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

107 #i‚de‡
WCHAR_MIN


109 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

110 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

113 #i‚de‡
WEOF


114 
	#WEOF
 (0xffffffffu)

	)

119 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


120 
	~<w˘y≥.h
>

124 
__BEGIN_DECLS


126 
__BEGIN_NAMESPACE_STD


129 
tm
;

130 
__END_NAMESPACE_STD


134 
	$__USING_NAMESPACE_STD
(
tm
)

137 
__BEGIN_NAMESPACE_STD


139 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

142 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

143 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

144 
__THROW
;

147 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

156 
__THROW
 
__©åibuã_puª__
;

158 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

159 
__THROW
 
__©åibuã_puª__
;

160 
__END_NAMESPACE_STD


162 #ifde‡
__USE_GNU


164 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

167 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
size_t
 
__n
Ë
__THROW
;

172 
	~<xloˇÀ.h
>

174 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

175 
__loˇÀ_t
 
__loc
Ë
__THROW
;

177 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

178 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

181 
__BEGIN_NAMESPACE_STD


184 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

188 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

189 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_GNU


198 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

199 
__loˇÀ_t
 
__loc
Ë
__THROW
;

204 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

205 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

208 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

211 
__BEGIN_NAMESPACE_STD


213 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

214 
__THROW
 
__©åibuã_puª__
;

216 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

217 
__THROW
 
__©åibuã_puª__
;

218 
__END_NAMESPACE_STD


220 #ifde‡
__USE_GNU


223 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

224 
__THROW
 
__©åibuã_puª__
;

227 
__BEGIN_NAMESPACE_STD


230 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

231 
__THROW
 
__©åibuã_puª__
;

234 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

235 
__THROW
 
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

238 
__THROW
 
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

241 
__THROW
 
__©åibuã_puª__
;

244 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

245 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

246 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

249 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

250 
__END_NAMESPACE_STD


252 #ifde‡
__USE_XOPEN


254 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

255 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__USE_GNU


260 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

261 
__THROW
 
__©åibuã_puª__
;

265 
__BEGIN_NAMESPACE_STD


267 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

268 
__THROW
 
__©åibuã_puª__
;

271 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

272 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

273 
__THROW
 
__©åibuã_puª__
;

276 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

281 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

282 
__THROW
;

285 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

286 
__END_NAMESPACE_STD


288 #ifde‡
__USE_GNU


291 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

292 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

293 
__THROW
;

297 
__BEGIN_NAMESPACE_STD


300 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

304 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

308 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

312 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

313 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

314 
mb°©e_t
 *
__p
Ë
__THROW
;

317 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

318 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

321 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

322 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

323 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 
__END_NAMESPACE_STD


327 #ifde‡
__USE_EXTERN_INLINES


333 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

334 
__exã∫_ölöe
 
wöt_t


335 
	`__NTH
 (
	$btowc
 (
__c
))

336 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

337 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

339 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

340 
__exã∫_ölöe
 

341 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

342 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

343 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

345 
__exã∫_ölöe
 
size_t


346 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

347 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

348 {  (
__ps
 !
NULL


349 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

352 
__BEGIN_NAMESPACE_STD


355 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

356 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

357 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

361 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

362 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

363 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

364 
__END_NAMESPACE_STD


367 #ifdef 
__USE_GNU


370 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

371 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

372 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

377 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

378 
size_t
 
__nwc
, size_à
__Àn
,

379 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

384 #ifde‡
__USE_XOPEN


386 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

390 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

394 
__BEGIN_NAMESPACE_STD


397 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

398 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

399 
__END_NAMESPACE_STD


401 #ifde‡
__USE_ISOC99


402 
__BEGIN_NAMESPACE_C99


404 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

405 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

406 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

408 
__END_NAMESPACE_C99


412 
__BEGIN_NAMESPACE_STD


415 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

416 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

420 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

421 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

422 
__THROW
;

423 
__END_NAMESPACE_STD


425 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

426 
__BEGIN_NAMESPACE_C99


429 
__exãnsi⁄__


430 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

431 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

432 
__THROW
;

436 
__exãnsi⁄__


437 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__ba£
Ë
__THROW
;

440 
__END_NAMESPACE_C99


443 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


446 
__exãnsi⁄__


447 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

449 
__THROW
;

453 
__exãnsi⁄__


454 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

456 
__ba£
Ë
__THROW
;

459 #ifde‡
__USE_GNU


473 
	~<xloˇÀ.h
>

477 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

479 
__loˇÀ_t
 
__loc
Ë
__THROW
;

481 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

483 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

485 
__exãnsi⁄__


486 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

488 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
, 
__loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

502 
__THROW
;

504 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__loˇÀ_t
 
__loc
Ë
__THROW
;

510 #ifdef 
__USE_GNU


513 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

517 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

518 
__THROW
;

524 #ifdef 
__USE_GNU


527 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

530 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


531 
__BEGIN_NAMESPACE_STD


534 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

541 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

542 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

548 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

551 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

552 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

553 
__THROW
 ;

559 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

560 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
)

567 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

568 
__gnuc_va_li°
 
__¨g
)

572 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

573 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

574 
__gnuc_va_li°
 
__¨g
)

575 
__THROW
 ;

582 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

583 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

589 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

594 
__THROW
 ;

596 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

597 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

598 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

599 #ifde‡
__REDIRECT


603 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

604 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

605 
__isoc99_fwsˇnf
)

607 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

608 
__isoc99_wsˇnf
)

610 
	`__REDIRECT
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

612 
__isoc99_swsˇnf
)

613 
__THROW
 ;

615 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

616 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

617 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

618 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

619 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

620 
__THROW
;

621 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

622 
	#wsˇnf
 
__isoc99_wsˇnf


	)

623 
	#swsˇnf
 
__isoc99_swsˇnf


	)

627 
__END_NAMESPACE_STD


630 #ifde‡
__USE_ISOC99


631 
__BEGIN_NAMESPACE_C99


636 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

637 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

638 
__gnuc_va_li°
 
__¨g
)

644 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

645 
__gnuc_va_li°
 
__¨g
)

648 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

650 
__gnuc_va_li°
 
__¨g
)

651 
__THROW
 ;

653 #i‡!
deföed
 
__USE_GNU
 \

654 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

655 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

656 #ifde‡
__REDIRECT


657 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

658 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

659 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

661 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

664 
	`__REDIRECT
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

665 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

666 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

667 
__THROW
 ;

669 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

671 
__gnuc_va_li°
 
__¨g
);

672 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

673 
__gnuc_va_li°
 
__¨g
);

674 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

676 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

677 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

678 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

679 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

683 
__END_NAMESPACE_C99


687 
__BEGIN_NAMESPACE_STD


692 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

693 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

699 
wöt_t
 
	`gëwch¨
 ();

706 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

707 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

713 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

721 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

722 
__FILE
 *
__ª°ri˘
 
__°ªam
);

728 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

729 
__FILE
 *
__ª°ri˘
 
__°ªam
);

736 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

737 
__END_NAMESPACE_STD


740 #ifde‡
__USE_GNU


748 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

757 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

765 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

774 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

775 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

784 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

793 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

794 
__FILE
 *
__ª°ri˘
 
__°ªam
);

798 
__BEGIN_NAMESPACE_C99


802 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

803 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

805 
__END_NAMESPACE_C99


807 #ifde‡
__USE_GNU


808 
	~<xloˇÀ.h
>

812 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

813 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

814 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

815 
__loˇÀ_t
 
__loc
Ë
__THROW
;

824 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


825 
	#__√ed_iswxxx


	)

826 
	~<w˘y≥.h
>

830 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


831 
	~<bôs/wch¨2.h
>

834 #ifde‡
__LDBL_COMPAT


835 
	~<bôs/wch¨-ldbl.h
>

838 
__END_DECLS


844 #unde‡
__√ed_mb°©e_t


845 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

72 
__övÆid_size_¨gumít_f‹_IOC
;

73 
	#_IOC_TYPECHECK
(
t
) \

74 (((
t
) == (t[1]) && \

75 (
t
Ë< (1 << 
_IOC_SIZEBITS
)) ? \

76 (
t
Ë: 
__övÆid_size_¨gumít_f‹_IOC
)

	)

79 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

80 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

81 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

82 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

83 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

84 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

85 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

88 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

89 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

90 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

91 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

95 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

96 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

97 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

98 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

99 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemmove_chk
)

66 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

69 
__exã∫_Æways_ölöe
 
wch¨_t
 *

70 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

71 
size_t
 
__n
))

73 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

75 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

76  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

77 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

79 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

80  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

81 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

83  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

84 
	}
}

87 #ifde‡
__USE_GNU


88 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

89 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

90 
size_t
 
__ns1
Ë
__THROW
;

91 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

92 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

93 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

94 
size_t
 
__n
), 
wmemp˝y
);

95 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

96 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

97 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

98 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

99 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

102 
__exã∫_Æways_ölöe
 
wch¨_t
 *

103 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

104 
size_t
 
__n
))

106 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

108 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

109  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

110 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

112 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

113  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

114 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

116  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

117 
	}
}

121 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

122 
size_t
 
__ns
Ë
__THROW
;

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

124 
size_t
 
__n
), 
wmem£t
);

125 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

126 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

127 
size_t
 
__ns
), 
__wmem£t_chk
)

128 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

131 
__exã∫_Æways_ölöe
 
wch¨_t
 *

132 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__ª°ri˘
 
__s
, wch¨_à
__c
, 
size_t
 
__n
))

134 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

136 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

137  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__exã∫_Æways_ölöe
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

157 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

159  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

160 
	}
}

163 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
,

164 
size_t
 
__de°Àn
Ë
__THROW
;

165 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
, (wch¨_à*
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__§c
),

167 
w˝˝y
);

169 
__exã∫_Æways_ölöe
 
wch¨_t
 *

170 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

172 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

173  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

174  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

175 
	}
}

178 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

179 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

180 
size_t
 
__de°Àn
Ë
__THROW
;

181 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

182 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

183 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

184 
size_t
 
__n
), 
wc¢˝y
);

185 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

186 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

187 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

188 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

189 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

192 
__exã∫_Æways_ölöe
 
wch¨_t
 *

193 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__exã∫_Æways_ölöe
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__exã∫_Æways_ölöe
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
))

265 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

266  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

267 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

268  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

269 
	}
}

272 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

273 
__Êag
, 
size_t
 
__s_Àn
,

274 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

275 
__THROW
 ;

277 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

278 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

279 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

280 
sw¥ötf
);

282 #ifde‡
__va_¨g_∑ck


283 
__exã∫_Æways_ölöe
 

284 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

287 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

288  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

289 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

290 
__fmt
, 
	`__va_¨g_∑ck
 ());

291  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

292 
	}
}

293 #ñi‡!
deföed
 
__˝lu•lus


295 
	#sw¥ötf
(
s
, 
n
, ...) \

296 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

297 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

298 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

299 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

302 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

303 
__Êag
, 
size_t
 
__s_Àn
,

304 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

305 
__gnuc_va_li°
 
__¨g
)

306 
__THROW
 ;

308 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

309 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

310 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

311 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

313 
__exã∫_Æways_ölöe
 

314 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

315 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

317 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

318  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

319 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

320  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

321 
	}
}

324 #i‡
__USE_FORTIFY_LEVEL
 > 1

326 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

328 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

330 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

331 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__gnuc_va_li°
 
__≠
);

333 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

336 #ifde‡
__va_¨g_∑ck


337 
__exã∫_Æways_ölöe
 

338 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

340  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

341 
	}
}

343 
__exã∫_Æways_ölöe
 

344 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

346  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

347 
	`__va_¨g_∑ck
 ());

348 
	}
}

349 #ñi‡!
deföed
 
__˝lu•lus


350 
	#w¥ötf
(...) \

351 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

352 
	#fw¥ötf
(
°ªam
, ...) \

353 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

356 
__exã∫_Æways_ölöe
 

357 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

359  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

360 
	}
}

362 
__exã∫_Æways_ölöe
 

363 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

364 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

366  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

367 
	}
}

371 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

372 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

373 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

374 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

375 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

376 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

377 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

378 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

379 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

382 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

383 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

385 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

387 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

388  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

389 
__n
, 
__°ªam
);

391 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

392  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

393 
__n
, 
__°ªam
);

395  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

396 
	}
}

398 #ifde‡
__USE_GNU


399 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

400 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

401 
__wur
;

402 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

403 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

404 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

405 
__wur
;

406 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

407 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

408 
__FILE
 *
__ª°ri˘
 
__°ªam
),

409 
__fgëws_u∆ocked_chk
)

410 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

413 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

414 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

416 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

418 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

419  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

420 
__n
, 
__°ªam
);

422 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

423  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

424 
__n
, 
__°ªam
);

426  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

427 
	}
}

431 
size_t
 
	$__w¸tomb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__p
,

432 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

433 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

434 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

437 
__exã∫_Æways_ölöe
 
__wur
 
size_t


438 
	`__NTH
 (
	$w¸tomb
 (*
__s
, 
wch¨_t
 
__wch¨
, 
mb°©e_t
 *
__ps
))

443 
	#__WCHAR_MB_LEN_MAX
 16

	)

444 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


447 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

448  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

449  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

450 
	}
}

453 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

454 
__c⁄°
 **
__ª°ri˘
 
__§c
,

455 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

456 
size_t
 
__d°Àn
Ë
__THROW
;

457 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

458 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

459 
__c⁄°
 **
__ª°ri˘
 
__§c
,

460 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

461 
mb§towcs
);

462 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

463 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

464 
__c⁄°
 **
__ª°ri˘
 
__§c
,

465 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

466 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

467 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

470 
__exã∫_Æways_ölöe
 
size_t


471 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

474 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

476 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

477  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

478 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

480 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

481  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

485 
	}
}

488 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

489 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

490 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

491 
size_t
 
__d°Àn
Ë
__THROW
;

492 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

493 (*
__ª°ri˘
 
__d°
,

494 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

495 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

496 
wc§tombs
);

497 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

498 (*
__ª°ri˘
 
__d°
,

499 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

500 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

501 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

502 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

504 
__exã∫_Æways_ölöe
 
size_t


505 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

506 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

508 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

510 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

511  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

513 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

514  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

517 
	}
}

520 #ifde‡
__USE_GNU


521 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

522 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

523 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

524 
size_t
 
__d°Àn
Ë
__THROW
;

525 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

526 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

527 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

528 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

529 
mb¢πowcs
);

530 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

531 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

532 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

533 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

534 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

535 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

538 
__exã∫_Æways_ölöe
 
size_t


539 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

540 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

542 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

544 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

545  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

546 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

548 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

549  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

553 
	}
}

556 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

557 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

558 
size_t
 
__nwc
, size_à
__Àn
,

559 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

560 
__THROW
;

561 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

562 (*
__ª°ri˘
 
__d°
,

563 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

564 
size_t
 
__nwc
, size_à
__Àn
,

565 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

566 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

567 (*
__ª°ri˘
 
__d°
,

568 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

569 
size_t
 
__nwc
, size_à
__Àn
,

570 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

571 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

572 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

574 
__exã∫_Æways_ölöe
 
size_t


575 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

576 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

578 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

580 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

581  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

582 
	`__bos
 (
__d°
));

584 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

585  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

589 
	}
}

	@/usr/include/boost/mpl/aux_/config/lambda.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_LAMBDA_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_LAMBDA_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/âp.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/˘ps.hµ
>

23 #i‡ !
deföed
(
BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT
) \

24 && ( 
deföed
(
BOOST_MPL_CFG_NO_TEMPLATE_TEMPLATE_PARAMETERS
) \

25 || 
deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

28 
	#BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT


	)

	@/usr/include/boost/mpl/aux_/config/msvc.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_MSVC_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_MSVC_HPP_INCLUDED


	)

19 
	~<boo°/c⁄fig.hµ
>

	@/usr/include/boost/mpl/aux_/config/overload_resolution.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_OVERLOAD_RESOLUTION_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_OVERLOAD_RESOLUTION_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

19 #i‡ !
deföed
(
BOOST_MPL_CFG_BROKEN_OVERLOAD_RESOLUTION
) \

20 && !
deföed
(
BOOST_MPL_PREPROCESSING_MODE
) \

21 && ( 
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x590) \

22 || 
BOOST_WORKAROUND
(
__MWERKS__
, < 0x3001) \

25 
	#BOOST_MPL_CFG_BROKEN_OVERLOAD_RESOLUTION


	)

	@/usr/include/boost/mpl/aux_/config/static_constant.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_STATIC_CONSTANT_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_STATIC_CONSTANT_HPP_INCLUDED


	)

17 #i‡!
deföed
(
BOOST_MPL_PREPROCESSING_MODE
)

19 
	~<boo°/c⁄fig.hµ
>

22 #unde‡
BOOST_STATIC_CONSTANT


	@/usr/include/boost/mpl/aux_/config/workaround.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_WORKAROUND_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_WORKAROUND_HPP_INCLUDED


	)

17 
	~<boo°/dëaû/w‹k¨ound.hµ
>

	@/usr/include/boost/mpl/aux_/na_fwd.hpp

2 #i‚de‡
BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/adl_b¨rõr.hµ
>

19 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


22 
	s«


24 
«
 
	tty≥
;

25 íum { 
	mvÆue
 = 0 };

28 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


29 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
«
)

	@/usr/include/boost/mpl/aux_/preprocessor/enum.hpp

2 #i‚de‡
BOOST_MPL_AUX_PREPROCESSOR_ENUM_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_PREPROCESSOR_ENUM_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/¥ïro˚ss‹.hµ
>

24 #i‡!
deföed
(
BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES
)

26 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

28 
	#BOOST_MPL_PP_ENUM
(
n
, 
∑øm
) \

29 
	`BOOST_PP_CAT
(
BOOST_MPL_PP_ENUM_
,
n
)(
∑øm
) \

30 

	)

32 
	#BOOST_MPL_PP_ENUM_0
(
p
)

	)

33 
	#BOOST_MPL_PP_ENUM_1
(
p
Ë
	)
p

34 
	#BOOST_MPL_PP_ENUM_2
(
p
Ëp,
	)
p

35 
	#BOOST_MPL_PP_ENUM_3
(
p
Ëp,p,
	)
p

36 
	#BOOST_MPL_PP_ENUM_4
(
p
Ëp,p,p,
	)
p

37 
	#BOOST_MPL_PP_ENUM_5
(
p
Ëp,p,p,p,
	)
p

38 
	#BOOST_MPL_PP_ENUM_6
(
p
Ëp,p,p,p,p,
	)
p

39 
	#BOOST_MPL_PP_ENUM_7
(
p
Ëp,p,p,p,p,p,
	)
p

40 
	#BOOST_MPL_PP_ENUM_8
(
p
Ëp,p,p,p,p,p,p,
	)
p

41 
	#BOOST_MPL_PP_ENUM_9
(
p
Ëp,p,p,p,p,p,p,p,
	)
p

45 
	~<boo°/¥ïro˚ss‹/comma_if.hµ
>

46 
	~<boo°/¥ïro˚ss‹/ª≥©.hµ
>

48 
	#BOOST_MPL_PP_AUX_ENUM_FUNC
(
unu£d
, 
i
, 
∑øm
) \

49 
	`BOOST_PP_COMMA_IF
(
i
Ë
∑øm
 \

50 

	)

52 
	#BOOST_MPL_PP_ENUM
(
n
, 
∑øm
) \

53 
	`BOOST_PP_REPEAT
( \

54 
n
 \

55 , 
BOOST_MPL_PP_AUX_ENUM_FUNC
 \

56 , 
∑øm
 \

58 

	)

	@/usr/include/boost/mpl/aux_/preprocessor/params.hpp

2 #i‚de‡
BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_PREPROCESSOR_PARAMS_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/¥ïro˚ss‹.hµ
>

24 #i‡!
deföed
(
BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES
)

26 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

28 
	#BOOST_MPL_PP_PARAMS
(
n
,
p
) \

29 
	`BOOST_PP_CAT
(
BOOST_MPL_PP_PARAMS_
,
n
)(
p
) \

30 

	)

32 
	#BOOST_MPL_PP_PARAMS_0
(
p
)

	)

33 
	#BOOST_MPL_PP_PARAMS_1
(
p
Ëp##1

	)

34 
	#BOOST_MPL_PP_PARAMS_2
(
p
Ëp##1,p##2

	)

35 
	#BOOST_MPL_PP_PARAMS_3
(
p
Ëp##1,p##2,p##3

	)

36 
	#BOOST_MPL_PP_PARAMS_4
(
p
Ëp##1,p##2,p##3,p##4

	)

37 
	#BOOST_MPL_PP_PARAMS_5
(
p
Ëp##1,p##2,p##3,p##4,p##5

	)

38 
	#BOOST_MPL_PP_PARAMS_6
(
p
Ëp##1,p##2,p##3,p##4,p##5,p##6

	)

39 
	#BOOST_MPL_PP_PARAMS_7
(
p
Ëp##1,p##2,p##3,p##4,p##5,p##6,p##7

	)

40 
	#BOOST_MPL_PP_PARAMS_8
(
p
Ëp##1,p##2,p##3,p##4,p##5,p##6,p##7,p##8

	)

41 
	#BOOST_MPL_PP_PARAMS_9
(
p
Ëp##1,p##2,p##3,p##4,p##5,p##6,p##7,p##8,p##9

	)

45 
	~<boo°/¥ïro˚ss‹/comma_if.hµ
>

46 
	~<boo°/¥ïro˚ss‹/ª≥©.hµ
>

47 
	~<boo°/¥ïro˚ss‹/öc.hµ
>

48 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

50 
	#BOOST_MPL_PP_AUX_PARAM_FUNC
(
unu£d
, 
i
, 
∑øm
) \

51 
	`BOOST_PP_COMMA_IF
(
i
) \

52 
	`BOOST_PP_CAT
(
∑øm
, 
	`BOOST_PP_INC
(
i
)) \

53 

	)

55 
	#BOOST_MPL_PP_PARAMS
(
n
, 
∑øm
) \

56 
	`BOOST_PP_REPEAT
( \

57 
n
 \

58 , 
BOOST_MPL_PP_AUX_PARAM_FUNC
 \

59 , 
∑øm
 \

61 

	)

	@/usr/include/boost/mpl/aux_/template_arity_fwd.hpp

2 #i‚de‡
BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED


	)

17 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gm∂
 {Çame•a˚ 
	gaux
 {

19 
	gãm∂©e
< 
ty≥«me
 
	gF
 > 
	gãm∂©e_¨ôy
;

	@/usr/include/boost/mpl/aux_/yes_no.hpp

2 #i‚de‡
BOOST_MPL_AUX_YES_NO_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_YES_NO_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/¡ç_de˛.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/¨øys.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

20 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

23 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gm∂
 {Çame•a˚ 
	gaux
 {

25 (&
	gno_èg
)[1];

26 (&
	gyes_èg
)[2];

28 
	gãm∂©e
< 
boﬁ
 
	gC_
 > 
	syes_no_èg


30 
no_èg
 
	tty≥
;

33 
	gãm∂©e
<> 
	gyes_no_èg
<
	gåue
>

35 
yes_èg
 
	tty≥
;

39 
	gãm∂©e
< 
BOOST_MPL_AUX_NTTP_DECL
(, 
n
Ë> 
	sweighãd_èg


41 #i‡!
BOOST_WORKAROUND
(
BOOST_MSVC
, < 1300)

42 (&
	gty≥
)[
n
];

44 
	gbuf
[
n
];

45 
weighãd_èg
 
	tty≥
;

49 #i‡
deföed
(
BOOST_MPL_CFG_NO_DEPENDENT_ARRAY_TYPES
)

50 
	gãm∂©e
<> 
	gweighãd_èg
<0>

52 (&
	gty≥
)[1];

	@/usr/include/boost/mpl/bool_fwd.hpp

2 #i‚de‡
BOOST_MPL_BOOL_FWD_HPP_INCLUDED


3 
	#BOOST_MPL_BOOL_FWD_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/adl_b¨rõr.hµ
>

19 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


21 
	gãm∂©e
< 
boﬁ
 
	gC_
 > 
	gboﬁ_
;

24 
	gboﬁ_
<
	tåue
> 
	tåue_
;

25 
	gboﬁ_
<
	tÁl£
> 
	tÁl£_
;

27 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


29 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
boﬁ_
)

30 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
åue_
)

31 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
Ál£_
)

	@/usr/include/boost/mpl/int.hpp

2 #i‚de‡
BOOST_MPL_INT_HPP_INCLUDED


3 
	#BOOST_MPL_INT_HPP_INCLUDED


	)

17 
	~<boo°/m∂/öt_fwd.hµ
>

19 
	#AUX_WRAPPER_VALUE_TYPE
 

	)

20 
	~<boo°/m∂/aux_/öãgøl_wøµî.hµ
>

	@/usr/include/boost/mpl/int_fwd.hpp

2 #i‚de‡
BOOST_MPL_INT_FWD_HPP_INCLUDED


3 
	#BOOST_MPL_INT_FWD_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/adl_b¨rõr.hµ
>

18 
	~<boo°/m∂/aux_/¡ç_de˛.hµ
>

20 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


22 
	gãm∂©e
< 
BOOST_MPL_AUX_NTTP_DECL
(, 
N
Ë> 
	göt_
;

24 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


25 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
öt_
)

	@/usr/include/boost/mpl/integral_c.hpp

2 #i‚de‡
BOOST_MPL_INTEGRAL_C_HPP_INCLUDED


3 
	#BOOST_MPL_INTEGRAL_C_HPP_INCLUDED


	)

17 
	~<boo°/m∂/öãgøl_c_fwd.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/˘ps.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/°©ic_c⁄°™t.hµ
>

20 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

22 #i‡
BOOST_WORKAROUND
(
__HP_aCC
, <= 53800)

24 
	#AUX_WRAPPER_PARAMS
(
N
Ë
ty≥«me
 
T
, 
	)
N

26 
	#AUX_WRAPPER_PARAMS
(
N
Ë
ty≥«me
 
T
, T 
	)
N

29 
	#AUX_WRAPPER_NAME
 
öãgøl_c


	)

30 
	#AUX_WRAPPER_VALUE_TYPE
 
T


	)

31 
	#AUX_WRAPPER_INST
(
vÆue
Ë
AUX_WRAPPER_NAME
< 
T
, vÆuê>

	)

32 
	~<boo°/m∂/aux_/öãgøl_wøµî.hµ
>

35 #i‡!
deföed
(
BOOST_NO_TEMPLATE_PARTIAL_SPECIALIZATION
) \

36 && !
BOOST_WORKAROUND
(
__BORLANDC__
, <= 0x551)

37 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


39 
ãm∂©e
< 
boﬁ
 
C
 >

40 
öãgøl_c
<
boﬁ
, 
	gC
>

42 
BOOST_STATIC_CONSTANT
(
boﬁ
, 
vÆue
 = 
C
);

43 
öãgøl_c_èg
 
	tèg
;

44 
öãgøl_c
 
	tty≥
;

45 
boﬁ
 
	tvÆue_ty≥
;

46 
›î©‹
 
boﬁ
(Ëc⁄° {  
	gthis
->
	gvÆue
; }

48 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


	@/usr/include/boost/mpl/integral_c_tag.hpp

2 #i‚de‡
BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED


3 
	#BOOST_MPL_INTEGRAL_C_TAG_HPP_INCLUDED


	)

18 
	~<boo°/m∂/aux_/adl_b¨rõr.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/°©ic_c⁄°™t.hµ
>

21 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


22 
	söãgøl_c_èg
 { 
BOOST_STATIC_CONSTANT
(, 
vÆue
 = 0); };

23 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


24 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
öãgøl_c_èg
)

	@/usr/include/boost/preprocessor/cat.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_CAT_HPP


12 
	#BOOST_PREPROCESSOR_CAT_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_CAT
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_CAT
(
a
, 
b
Ë
	`BOOST_PP_CAT_I
◊, b)

	)

18 
	#BOOST_PP_CAT
(
a
, 
b
Ë
	`BOOST_PP_CAT_OO
(◊, b))

	)

19 
	#BOOST_PP_CAT_OO
(
∑r
Ë
BOOST_PP_CAT_I
 ## 
	)
par

21 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

22 
	#BOOST_PP_CAT_I
(
a
, 
b
Ë®## 
	)
b

24 
	#BOOST_PP_CAT_I
(
a
, 
b
Ë
	`BOOST_PP_CAT_II
◊ ## b)

	)

25 
	#BOOST_PP_CAT_II
(
ªs
Ë
	)
res

	@/usr/include/boost/preprocessor/inc.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_INC_HPP


11 
	#BOOST_PREPROCESSOR_INC_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/¨ôhmëic/öc.hµ
>

	@/usr/include/boost/preprocessor/list/for_each_i.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_LIST_LIST_FOR_EACH_I_HPP


12 
	#BOOST_PREPROCESSOR_LIST_LIST_FOR_EACH_I_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/¨ôhmëic/öc.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

15 
	~<boo°/¥ïro˚ss‹/li°/adt.hµ
>

16 
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/f‹.hµ
>

17 
	~<boo°/¥ïro˚ss‹/tu∂e/ñem.hµ
>

18 
	~<boo°/¥ïro˚ss‹/tu∂e/ªm.hµ
>

19 #
#/* 
BOOST_PP_LIST_FOR_EACH_I
 */

20 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
(Ë&& ~BOOST_PP_CONFIG_FLAGS(Ë& 
BOOST_PP_CONFIG_MSVC
()

21 
	#BOOST_PP_LIST_FOR_EACH_I
(
ma¸o
, 
d©a
, 
li°
Ë
	`BOOST_PP_FOR
((ma¸o, d©a,Üi°, 0), 
BOOST_PP_LIST_FOR_EACH_I_P
, 
BOOST_PP_LIST_FOR_EACH_I_O
, 
BOOST_PP_LIST_FOR_EACH_I_M
)

	)

23 
	#BOOST_PP_LIST_FOR_EACH_I
(
ma¸o
, 
d©a
, 
li°
Ë
	`BOOST_PP_LIST_FOR_EACH_I_I
(ma¸o, d©a,Üi°)

	)

24 
	#BOOST_PP_LIST_FOR_EACH_I_I
(
ma¸o
, 
d©a
, 
li°
Ë
	`BOOST_PP_FOR
((ma¸o, d©a,Üi°, 0), 
BOOST_PP_LIST_FOR_EACH_I_P
, 
BOOST_PP_LIST_FOR_EACH_I_O
, 
BOOST_PP_LIST_FOR_EACH_I_M
)

	)

26 #
#i‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_STRICT
()

27 
	#BOOST_PP_LIST_FOR_EACH_I_P
(
r
, 
x
Ë
BOOST_PP_LIST_FOR_EACH_I_P_D
 
	)
x

28 
	#BOOST_PP_LIST_FOR_EACH_I_P_D
(
m
, 
d
, 
l
, 
i
Ë
	`BOOST_PP_LIST_IS_CONS
÷)

	)

30 
	#BOOST_PP_LIST_FOR_EACH_I_P
(
r
, 
x
Ë
	`BOOST_PP_LIST_IS_CONS
(
	`BOOST_PP_TUPLE_ELEM
(4, 2, x))

	)

32 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

33 
	#BOOST_PP_LIST_FOR_EACH_I_O
(
r
, 
x
Ë
BOOST_PP_LIST_FOR_EACH_I_O_D
 
	)
x

34 
	#BOOST_PP_LIST_FOR_EACH_I_O_D
(
m
, 
d
, 
l
, 
i
Ë(m, d, 
	`BOOST_PP_LIST_REST
÷), 
	`BOOST_PP_INC
(i))

	)

36 
	#BOOST_PP_LIST_FOR_EACH_I_O
(
r
, 
x
Ë(
	`BOOST_PP_TUPLE_ELEM
(4, 0, x), BOOST_PP_TUPLE_ELEM(4, 1, x), 
	`BOOST_PP_LIST_REST
(BOOST_PP_TUPLE_ELEM(4, 2, x)), 
	`BOOST_PP_INC
(BOOST_PP_TUPLE_ELEM(4, 3, x)))

	)

38 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

39 
	#BOOST_PP_LIST_FOR_EACH_I_M
(
r
, 
x
Ë
	`BOOST_PP_LIST_FOR_EACH_I_M_D
‘, 
	`BOOST_PP_TUPLE_ELEM
(4, 0, x), BOOST_PP_TUPLE_ELEM(4, 1, x), BOOST_PP_TUPLE_ELEM(4, 2, x), BOOST_PP_TUPLE_ELEM(4, 3, x))

	)

41 
	#BOOST_PP_LIST_FOR_EACH_I_M
(
r
, 
x
Ë
	`BOOST_PP_LIST_FOR_EACH_I_M_I
‘, 
BOOST_PP_TUPLE_REM_4
 x)

	)

42 
	#BOOST_PP_LIST_FOR_EACH_I_M_I
(
r
, 
x_e
Ë
	`BOOST_PP_LIST_FOR_EACH_I_M_D
‘, x_e)

	)

44 
#deföê
	#BOOST_PP_LIST_FOR_EACH_I_M_D
(
r
, 
m
, 
d
, 
l
, 
i
Ë
	`m
‘, d, i, 
	`BOOST_PP_LIST_FIRST
÷))

	)

45 #
#/* 
BOOST_PP_LIST_FOR_EACH_I_R
 */

46 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

47 
	#BOOST_PP_LIST_FOR_EACH_I_R
(
r
, 
ma¸o
, 
d©a
, 
li°
Ë
BOOST_PP_FOR_
 ## 
	`r
((ma¸o, d©a,Üi°, 0), 
BOOST_PP_LIST_FOR_EACH_I_P
, 
BOOST_PP_LIST_FOR_EACH_I_O
, 
BOOST_PP_LIST_FOR_EACH_I_M
)

	)

49 
	#BOOST_PP_LIST_FOR_EACH_I_R
(
r
, 
ma¸o
, 
d©a
, 
li°
Ë
	`BOOST_PP_LIST_FOR_EACH_I_R_I
‘, ma¸o, d©a,Üi°)

	)

50 
	#BOOST_PP_LIST_FOR_EACH_I_R_I
(
r
, 
ma¸o
, 
d©a
, 
li°
Ë
BOOST_PP_FOR_
 ## 
	`r
((ma¸o, d©a,Üi°, 0), 
BOOST_PP_LIST_FOR_EACH_I_P
, 
BOOST_PP_LIST_FOR_EACH_I_O
, 
BOOST_PP_LIST_FOR_EACH_I_M
)

	)

	@/usr/include/boost/preprocessor/tuple/to_list.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_TUPLE_TO_LIST_HPP


12 
	#BOOST_PREPROCESSOR_TUPLE_TO_LIST_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_TUPLE_TO_LIST
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_TUPLE_TO_LIST
(
size
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_TO_LIST_I
(size,Åu∂e)

	)

17 #i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

18 
	#BOOST_PP_TUPLE_TO_LIST_I
(
s
, 
t
Ë
BOOST_PP_TUPLE_TO_LIST_
 ## s 
	)
t

20 
	#BOOST_PP_TUPLE_TO_LIST_I
(
s
, 
t
Ë
	`BOOST_PP_TUPLE_TO_LIST_II
(
BOOST_PP_TUPLE_TO_LIST_
 ## sÅ)

	)

21 
	#BOOST_PP_TUPLE_TO_LIST_II
(
ªs
Ë
	)
res

24 
	#BOOST_PP_TUPLE_TO_LIST
(
size
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_TO_LIST_OO
((size,Åu∂e))

	)

25 
	#BOOST_PP_TUPLE_TO_LIST_OO
(
∑r
Ë
BOOST_PP_TUPLE_TO_LIST_I
 ## 
	)
par

26 
	#BOOST_PP_TUPLE_TO_LIST_I
(
s
, 
t
Ë
BOOST_PP_TUPLE_TO_LIST_
 ## s ## 
	)
t

28 
#deföê
	#BOOST_PP_TUPLE_TO_LIST_0
(Ë
BOOST_PP_NIL


	)

29 
	#BOOST_PP_TUPLE_TO_LIST_1
(
a
Ë◊, 
BOOST_PP_NIL
)

	)

30 
	#BOOST_PP_TUPLE_TO_LIST_2
(
a
, 
b
Ë◊, (b, 
BOOST_PP_NIL
))

	)

31 
	#BOOST_PP_TUPLE_TO_LIST_3
(
a
, 
b
, 
c
Ë◊, (b, (c, 
BOOST_PP_NIL
)))

	)

32 
	#BOOST_PP_TUPLE_TO_LIST_4
(
a
, 
b
, 
c
, 
d
Ë◊, (b, (c, (d, 
BOOST_PP_NIL
))))

	)

33 
	#BOOST_PP_TUPLE_TO_LIST_5
(
a
, 
b
, 
c
, 
d
, 
e
Ë◊, (b, (c, (d, (e, 
BOOST_PP_NIL
)))))

	)

34 
	#BOOST_PP_TUPLE_TO_LIST_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë◊, (b, (c, (d, (e, (f, 
BOOST_PP_NIL
))))))

	)

35 
	#BOOST_PP_TUPLE_TO_LIST_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë◊, (b, (c, (d, (e, (f, (g, 
BOOST_PP_NIL
)))))))

	)

36 
	#BOOST_PP_TUPLE_TO_LIST_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë◊, (b, (c, (d, (e, (f, (g, (h, 
BOOST_PP_NIL
))))))))

	)

37 
	#BOOST_PP_TUPLE_TO_LIST_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, 
BOOST_PP_NIL
)))))))))

	)

38 
	#BOOST_PP_TUPLE_TO_LIST_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, 
BOOST_PP_NIL
))))))))))

	)

39 
	#BOOST_PP_TUPLE_TO_LIST_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, 
BOOST_PP_NIL
)))))))))))

	)

40 
	#BOOST_PP_TUPLE_TO_LIST_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, 
BOOST_PP_NIL
))))))))))))

	)

41 
	#BOOST_PP_TUPLE_TO_LIST_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, 
BOOST_PP_NIL
)))))))))))))

	)

42 
	#BOOST_PP_TUPLE_TO_LIST_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, 
BOOST_PP_NIL
))))))))))))))

	)

43 
	#BOOST_PP_TUPLE_TO_LIST_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, 
BOOST_PP_NIL
)))))))))))))))

	)

44 
	#BOOST_PP_TUPLE_TO_LIST_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, 
BOOST_PP_NIL
))))))))))))))))

	)

45 
	#BOOST_PP_TUPLE_TO_LIST_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, 
BOOST_PP_NIL
)))))))))))))))))

	)

46 
	#BOOST_PP_TUPLE_TO_LIST_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, 
BOOST_PP_NIL
))))))))))))))))))

	)

47 
	#BOOST_PP_TUPLE_TO_LIST_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, 
BOOST_PP_NIL
)))))))))))))))))))

	)

48 
	#BOOST_PP_TUPLE_TO_LIST_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, 
BOOST_PP_NIL
))))))))))))))))))))

	)

49 
	#BOOST_PP_TUPLE_TO_LIST_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, (u, 
BOOST_PP_NIL
)))))))))))))))))))))

	)

50 
	#BOOST_PP_TUPLE_TO_LIST_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, (u, (v, 
BOOST_PP_NIL
))))))))))))))))))))))

	)

51 
	#BOOST_PP_TUPLE_TO_LIST_23
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, (u, (v, (w, 
BOOST_PP_NIL
)))))))))))))))))))))))

	)

52 
	#BOOST_PP_TUPLE_TO_LIST_24
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, (u, (v, (w, (x, 
BOOST_PP_NIL
))))))))))))))))))))))))

	)

53 
	#BOOST_PP_TUPLE_TO_LIST_25
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë◊, (b, (c, (d, (e, (f, (g, (h, (i, (j, (k, (l, (m, (n, (o, (p, (q, (r, (s, (t, (u, (v, (w, (x, (y, 
BOOST_PP_NIL
)))))))))))))))))))))))))

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_GNU


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/boost/mpl/aux_/adl_barrier.hpp

2 #i‚de‡
BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/adl.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/gcc.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

21 #i‡!
deföed
(
BOOST_MPL_CFG_NO_ADL_BARRIER_NAMESPACE
)

23 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
 
m∂_


	)

24 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN
 
«me•a˚
 
m∂_
 {

	)

25 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE
 }

	)

26 
	#BOOST_MPL_AUX_ADL_BARRIER_DECL
(
ty≥
) \

27 
«me•a˚
 
boo°
 {Çame•a˚ 
m∂
 { \

28 
usög
 ::
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
ty≥
; \

30 

	)

32 #i‡!
deföed
(
BOOST_MPL_PREPROCESSING_MODE
)

33 
«me•a˚
 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
 {Çame•a˚ 
	gaux
 {} }

34 
«me•a˚
 
	gboo°
 {Çame•a˚ 
	gm∂
 { 
usög
Çame•a˚ 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
;

35 
«me•a˚
 
	gaux
 { 
usög
Çame•a˚ 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
aux
; }

41 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
 
boo°
::
m∂


	)

42 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN
 
«me•a˚
 
boo°
 {Çame•a˚ 
m∂
 {

	)

43 
	#BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE
 }}

	)

44 
	#BOOST_MPL_AUX_ADL_BARRIER_DECL
(
ty≥
Ë

	)

	@/usr/include/boost/mpl/aux_/config/arrays.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_ARRAYS_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_ARRAYS_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

20 #i‡ !
deföed
(
BOOST_MPL_CFG_NO_DEPENDENT_ARRAY_TYPES
) \

21 && !
deföed
(
BOOST_MPL_PREPROCESSING_MODE
) \

22 && ( 
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x600) \

23 || 
BOOST_WORKAROUND
(
BOOST_MSVC
, <= 1300) \

26 
	#BOOST_MPL_CFG_NO_DEPENDENT_ARRAY_TYPES


	)

	@/usr/include/boost/mpl/aux_/config/ctps.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_CTPS_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_CTPS_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

18 
	~<boo°/c⁄fig.hµ
>

20 #i‡ !
deföed
(
BOOST_MPL_CFG_NO_NONTYPE_TEMPLATE_PARTIAL_SPEC
) \

21 && !
deföed
(
BOOST_MPL_PREPROCESSING_MODE
) \

22 && 
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x582)

24 
	#BOOST_MPL_CFG_NO_NONTYPE_TEMPLATE_PARTIAL_SPEC


	)

	@/usr/include/boost/mpl/aux_/config/preprocessor.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_PREPROCESSOR_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_PREPROCESSOR_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

19 #i‡!
deföed
(
BOOST_MPL_CFG_BROKEN_PP_MACRO_EXPANSION
) \

20 && ( 
BOOST_WORKAROUND
(
__MWERKS__
, <= 0x3003) \

21 || 
BOOST_WORKAROUND
(
__BORLANDC__
, 
BOOST_TESTED_AT
(0x561)) \

22 || 
BOOST_WORKAROUND
(
__IBMCPP__
, 
BOOST_TESTED_AT
(502)) \

25 
	#BOOST_MPL_CFG_BROKEN_PP_MACRO_EXPANSION


	)

29 #i‡!
deföed
(
BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES
)

30 
	#BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES


	)

33 #i‡!
deföed
(
BOOST_NEEDS_TOKEN_PASTING_OP_FOR_TOKENS_JUXTAPOSING
) \

34 && 
BOOST_WORKAROUND
(
__DMC__
, 
	$BOOST_TESTED_AT
(0x840))

35 
	#BOOST_NEEDS_TOKEN_PASTING_OP_FOR_TOKENS_JUXTAPOSING


	)

	@/usr/include/boost/mpl/aux_/config/ttp.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_TTP_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_TTP_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/gcc.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

21 #i‡!
deföed
(
BOOST_MPL_CFG_NO_TEMPLATE_TEMPLATE_PARAMETERS
) \

22 && ( 
deföed
(
BOOST_NO_TEMPLATE_TEMPLATES
) \

23 || 
BOOST_WORKAROUND
–
__BORLANDC__
, 
BOOST_TESTED_AT
( 0x590) ) \

26 
	#BOOST_MPL_CFG_NO_TEMPLATE_TEMPLATE_PARAMETERS


	)

31 #i‡ !
deföed
(
BOOST_MPL_CFG_EXTENDED_TEMPLATE_PARAMETERS_MATCHING
) \

32 && !
deföed
(
BOOST_MPL_PREPROCESSING_MODE
) \

33 && ( 
BOOST_WORKAROUND
(
BOOST_MPL_CFG_GCC
, 
BOOST_TESTED_AT
(0x0302)) \

34 || 
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x600) \

37 
	#BOOST_MPL_CFG_EXTENDED_TEMPLATE_PARAMETERS_MATCHING


	)

	@/usr/include/boost/mpl/aux_/integral_wrapper.hpp

16 
	~<boo°/m∂/öãgøl_c_èg.hµ
>

17 
	~<boo°/m∂/aux_/°©ic_ˇ°.hµ
>

18 
	~<boo°/m∂/aux_/¡ç_de˛.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/°©ic_c⁄°™t.hµ
>

20 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

22 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

24 #i‡!
deföed
(
AUX_WRAPPER_NAME
)

25 
	#AUX_WRAPPER_NAME
 
	`BOOST_PP_CAT
(
AUX_WRAPPER_VALUE_TYPE
,
_
)

	)

28 #i‡!
deföed
(
AUX_WRAPPER_PARAMS
)

29 
	#AUX_WRAPPER_PARAMS
(
N
Ë
	`BOOST_MPL_AUX_NTTP_DECL
(
AUX_WRAPPER_VALUE_TYPE
, N)

	)

32 #i‡!
deföed
(
AUX_WRAPPER_INST
)

33 #i‡
BOOST_WORKAROUND
(
__MWERKS__
, <= 0x2407)

34 
	#AUX_WRAPPER_INST
(
vÆue
Ë
AUX_WRAPPER_NAME
< vÆuê>

	)

36 
	#AUX_WRAPPER_INST
(
vÆue
Ë
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE
::
AUX_WRAPPER_NAME
< vÆuê>

	)

40 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


42 
	gãm∂©e
< 
AUX_WRAPPER_PARAMS
(
N
) >

43 
	sAUX_WRAPPER_NAME


45 
BOOST_STATIC_CONSTANT
(
AUX_WRAPPER_VALUE_TYPE
, 
vÆue
 = 
N
);

48 #i‡
BOOST_WORKAROUND
(
__EDG_VERSION__
, <= 238)

49 
AUX_WRAPPER_NAME
 
	tty≥
;

51 
AUX_WRAPPER_NAME
 
	tty≥
;

53 
AUX_WRAPPER_VALUE_TYPE
 
	tvÆue_ty≥
;

54 
öãgøl_c_èg
 
	tèg
;

59 #i‡
BOOST_WORKAROUND
(
__EDG_VERSION__
, <= 243)

60 
	m¥iv©e
:

61 
BOOST_STATIC_CONSTANT
(
AUX_WRAPPER_VALUE_TYPE
, 
√xt_vÆue
 = 
BOOST_MPL_AUX_STATIC_CAST
(AUX_WRAPPER_VALUE_TYPE, (
N
 + 1)));

62 
BOOST_STATIC_CONSTANT
(
AUX_WRAPPER_VALUE_TYPE
, 
¥i‹_vÆue
 = 
BOOST_MPL_AUX_STATIC_CAST
(AUX_WRAPPER_VALUE_TYPE, (
N
 - 1)));

63 
	mpublic
:

64 
AUX_WRAPPER_INST
(
	t√xt_vÆue
Ë
	t√xt
;

65 
AUX_WRAPPER_INST
(
	t¥i‹_vÆue
Ë
	t¥i‹
;

66 #ñi‡
BOOST_WORKAROUND
(
__BORLANDC__
, 
BOOST_TESTED_AT
(0x561)) \

67 || 
BOOST_WORKAROUND
(
__IBMCPP__
, 
BOOST_TESTED_AT
(502)) \

68 || (
BOOST_WORKAROUND
(
__HP_aCC
, <53800Ë&& (BOOST_WORKAROUND(
__hpx°d98
, != 1)))

69 
AUX_WRAPPER_INST
–
	tBOOST_MPL_AUX_STATIC_CAST
(
	tAUX_WRAPPER_VALUE_TYPE
, (
	tN
 + 1)ËË
	t√xt
;

70 
AUX_WRAPPER_INST
–
	tBOOST_MPL_AUX_STATIC_CAST
(
	tAUX_WRAPPER_VALUE_TYPE
, (
	tN
 - 1)ËË
	t¥i‹
;

72 
AUX_WRAPPER_INST
–
	tBOOST_MPL_AUX_STATIC_CAST
(
	tAUX_WRAPPER_VALUE_TYPE
, (
	tvÆue
 + 1)ËË
	t√xt
;

73 
AUX_WRAPPER_INST
–
	tBOOST_MPL_AUX_STATIC_CAST
(
	tAUX_WRAPPER_VALUE_TYPE
, (
	tvÆue
 - 1)ËË
	t¥i‹
;

80 
›î©‹
 
AUX_WRAPPER_VALUE_TYPE
(Ëc⁄° {  
	m°©ic_ˇ°
<
	mAUX_WRAPPER_VALUE_TYPE
>(
	mthis
->
	mvÆue
); }

83 #i‡!
deföed
(
BOOST_NO_INCLASS_MEMBER_INITIALIZATION
)

84 
	gãm∂©e
< 
AUX_WRAPPER_PARAMS
(
N
) >

85 
AUX_WRAPPER_VALUE_TYPE
 c⁄° 
	$AUX_WRAPPER_INST
(
N
)::
vÆue
;

88 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


90 #unde‡
AUX_WRAPPER_NAME


91 #unde‡
AUX_WRAPPER_PARAMS


92 #unde‡
AUX_WRAPPER_INST


93 #unde‡
AUX_WRAPPER_VALUE_TYPE


	@/usr/include/boost/mpl/aux_/nttp_decl.hpp

2 #i‚de‡
BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/¡ç.hµ
>

19 #i‡
deföed
(
BOOST_MPL_CFG_NTTP_BUG
)

21 
boﬁ
 
	t_m∂_¡ç_boﬁ
;

22 
	t_m∂_¡ç_öt
;

23 
	t_m∂_¡ç_unsig√d
;

24 
	t_m∂_¡ç_l⁄g
;

26 
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

27 
	#BOOST_MPL_AUX_NTTP_DECL
(
T
, 
x
Ë
	`BOOST_PP_CAT
(
_m∂_¡ç_
,TËx

	)

31 
	#BOOST_MPL_AUX_NTTP_DECL
(
T
, 
x
ËT x

	)

	@/usr/include/boost/mpl/integral_c_fwd.hpp

2 #i‚de‡
BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED


3 
	#BOOST_MPL_INTEGRAL_C_FWD_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

18 
	~<boo°/m∂/aux_/adl_b¨rõr.hµ
>

20 
	gBOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN


22 #i‡
BOOST_WORKAROUND
(
__HP_aCC
, <= 53800)

24 
	gãm∂©e
< 
ty≥«me
 
	gT
, 
	gN
 > 
	göãgøl_c
;

26 
	gãm∂©e
< 
ty≥«me
 
	gT
, 
T
 
	gN
 > 
	göãgøl_c
;

29 
BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE


30 
	$BOOST_MPL_AUX_ADL_BARRIER_DECL
(
öãgøl_c
)

	@/usr/include/boost/preprocessor/arithmetic/inc.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_ARITHMETIC_INC_HPP


12 
	#BOOST_PREPROCESSOR_ARITHMETIC_INC_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_INC
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_INC
(
x
Ë
	`BOOST_PP_INC_I
(x)

	)

18 
	#BOOST_PP_INC
(
x
Ë
	`BOOST_PP_INC_OO
((x))

	)

19 
	#BOOST_PP_INC_OO
(
∑r
Ë
BOOST_PP_INC_I
 ## 
	)
par

21 
#deföê
	#BOOST_PP_INC_I
(
x
Ë
BOOST_PP_INC_
 ## 
	)
x

22 
#deföê
	#BOOST_PP_INC_0
 1

	)

23 
	#BOOST_PP_INC_1
 2

	)

24 
	#BOOST_PP_INC_2
 3

	)

25 
	#BOOST_PP_INC_3
 4

	)

26 
	#BOOST_PP_INC_4
 5

	)

27 
	#BOOST_PP_INC_5
 6

	)

28 
	#BOOST_PP_INC_6
 7

	)

29 
	#BOOST_PP_INC_7
 8

	)

30 
	#BOOST_PP_INC_8
 9

	)

31 
	#BOOST_PP_INC_9
 10

	)

32 
	#BOOST_PP_INC_10
 11

	)

33 
	#BOOST_PP_INC_11
 12

	)

34 
	#BOOST_PP_INC_12
 13

	)

35 
	#BOOST_PP_INC_13
 14

	)

36 
	#BOOST_PP_INC_14
 15

	)

37 
	#BOOST_PP_INC_15
 16

	)

38 
	#BOOST_PP_INC_16
 17

	)

39 
	#BOOST_PP_INC_17
 18

	)

40 
	#BOOST_PP_INC_18
 19

	)

41 
	#BOOST_PP_INC_19
 20

	)

42 
	#BOOST_PP_INC_20
 21

	)

43 
	#BOOST_PP_INC_21
 22

	)

44 
	#BOOST_PP_INC_22
 23

	)

45 
	#BOOST_PP_INC_23
 24

	)

46 
	#BOOST_PP_INC_24
 25

	)

47 
	#BOOST_PP_INC_25
 26

	)

48 
	#BOOST_PP_INC_26
 27

	)

49 
	#BOOST_PP_INC_27
 28

	)

50 
	#BOOST_PP_INC_28
 29

	)

51 
	#BOOST_PP_INC_29
 30

	)

52 
	#BOOST_PP_INC_30
 31

	)

53 
	#BOOST_PP_INC_31
 32

	)

54 
	#BOOST_PP_INC_32
 33

	)

55 
	#BOOST_PP_INC_33
 34

	)

56 
	#BOOST_PP_INC_34
 35

	)

57 
	#BOOST_PP_INC_35
 36

	)

58 
	#BOOST_PP_INC_36
 37

	)

59 
	#BOOST_PP_INC_37
 38

	)

60 
	#BOOST_PP_INC_38
 39

	)

61 
	#BOOST_PP_INC_39
 40

	)

62 
	#BOOST_PP_INC_40
 41

	)

63 
	#BOOST_PP_INC_41
 42

	)

64 
	#BOOST_PP_INC_42
 43

	)

65 
	#BOOST_PP_INC_43
 44

	)

66 
	#BOOST_PP_INC_44
 45

	)

67 
	#BOOST_PP_INC_45
 46

	)

68 
	#BOOST_PP_INC_46
 47

	)

69 
	#BOOST_PP_INC_47
 48

	)

70 
	#BOOST_PP_INC_48
 49

	)

71 
	#BOOST_PP_INC_49
 50

	)

72 
	#BOOST_PP_INC_50
 51

	)

73 
	#BOOST_PP_INC_51
 52

	)

74 
	#BOOST_PP_INC_52
 53

	)

75 
	#BOOST_PP_INC_53
 54

	)

76 
	#BOOST_PP_INC_54
 55

	)

77 
	#BOOST_PP_INC_55
 56

	)

78 
	#BOOST_PP_INC_56
 57

	)

79 
	#BOOST_PP_INC_57
 58

	)

80 
	#BOOST_PP_INC_58
 59

	)

81 
	#BOOST_PP_INC_59
 60

	)

82 
	#BOOST_PP_INC_60
 61

	)

83 
	#BOOST_PP_INC_61
 62

	)

84 
	#BOOST_PP_INC_62
 63

	)

85 
	#BOOST_PP_INC_63
 64

	)

86 
	#BOOST_PP_INC_64
 65

	)

87 
	#BOOST_PP_INC_65
 66

	)

88 
	#BOOST_PP_INC_66
 67

	)

89 
	#BOOST_PP_INC_67
 68

	)

90 
	#BOOST_PP_INC_68
 69

	)

91 
	#BOOST_PP_INC_69
 70

	)

92 
	#BOOST_PP_INC_70
 71

	)

93 
	#BOOST_PP_INC_71
 72

	)

94 
	#BOOST_PP_INC_72
 73

	)

95 
	#BOOST_PP_INC_73
 74

	)

96 
	#BOOST_PP_INC_74
 75

	)

97 
	#BOOST_PP_INC_75
 76

	)

98 
	#BOOST_PP_INC_76
 77

	)

99 
	#BOOST_PP_INC_77
 78

	)

100 
	#BOOST_PP_INC_78
 79

	)

101 
	#BOOST_PP_INC_79
 80

	)

102 
	#BOOST_PP_INC_80
 81

	)

103 
	#BOOST_PP_INC_81
 82

	)

104 
	#BOOST_PP_INC_82
 83

	)

105 
	#BOOST_PP_INC_83
 84

	)

106 
	#BOOST_PP_INC_84
 85

	)

107 
	#BOOST_PP_INC_85
 86

	)

108 
	#BOOST_PP_INC_86
 87

	)

109 
	#BOOST_PP_INC_87
 88

	)

110 
	#BOOST_PP_INC_88
 89

	)

111 
	#BOOST_PP_INC_89
 90

	)

112 
	#BOOST_PP_INC_90
 91

	)

113 
	#BOOST_PP_INC_91
 92

	)

114 
	#BOOST_PP_INC_92
 93

	)

115 
	#BOOST_PP_INC_93
 94

	)

116 
	#BOOST_PP_INC_94
 95

	)

117 
	#BOOST_PP_INC_95
 96

	)

118 
	#BOOST_PP_INC_96
 97

	)

119 
	#BOOST_PP_INC_97
 98

	)

120 
	#BOOST_PP_INC_98
 99

	)

121 
	#BOOST_PP_INC_99
 100

	)

122 
	#BOOST_PP_INC_100
 101

	)

123 
	#BOOST_PP_INC_101
 102

	)

124 
	#BOOST_PP_INC_102
 103

	)

125 
	#BOOST_PP_INC_103
 104

	)

126 
	#BOOST_PP_INC_104
 105

	)

127 
	#BOOST_PP_INC_105
 106

	)

128 
	#BOOST_PP_INC_106
 107

	)

129 
	#BOOST_PP_INC_107
 108

	)

130 
	#BOOST_PP_INC_108
 109

	)

131 
	#BOOST_PP_INC_109
 110

	)

132 
	#BOOST_PP_INC_110
 111

	)

133 
	#BOOST_PP_INC_111
 112

	)

134 
	#BOOST_PP_INC_112
 113

	)

135 
	#BOOST_PP_INC_113
 114

	)

136 
	#BOOST_PP_INC_114
 115

	)

137 
	#BOOST_PP_INC_115
 116

	)

138 
	#BOOST_PP_INC_116
 117

	)

139 
	#BOOST_PP_INC_117
 118

	)

140 
	#BOOST_PP_INC_118
 119

	)

141 
	#BOOST_PP_INC_119
 120

	)

142 
	#BOOST_PP_INC_120
 121

	)

143 
	#BOOST_PP_INC_121
 122

	)

144 
	#BOOST_PP_INC_122
 123

	)

145 
	#BOOST_PP_INC_123
 124

	)

146 
	#BOOST_PP_INC_124
 125

	)

147 
	#BOOST_PP_INC_125
 126

	)

148 
	#BOOST_PP_INC_126
 127

	)

149 
	#BOOST_PP_INC_127
 128

	)

150 
	#BOOST_PP_INC_128
 129

	)

151 
	#BOOST_PP_INC_129
 130

	)

152 
	#BOOST_PP_INC_130
 131

	)

153 
	#BOOST_PP_INC_131
 132

	)

154 
	#BOOST_PP_INC_132
 133

	)

155 
	#BOOST_PP_INC_133
 134

	)

156 
	#BOOST_PP_INC_134
 135

	)

157 
	#BOOST_PP_INC_135
 136

	)

158 
	#BOOST_PP_INC_136
 137

	)

159 
	#BOOST_PP_INC_137
 138

	)

160 
	#BOOST_PP_INC_138
 139

	)

161 
	#BOOST_PP_INC_139
 140

	)

162 
	#BOOST_PP_INC_140
 141

	)

163 
	#BOOST_PP_INC_141
 142

	)

164 
	#BOOST_PP_INC_142
 143

	)

165 
	#BOOST_PP_INC_143
 144

	)

166 
	#BOOST_PP_INC_144
 145

	)

167 
	#BOOST_PP_INC_145
 146

	)

168 
	#BOOST_PP_INC_146
 147

	)

169 
	#BOOST_PP_INC_147
 148

	)

170 
	#BOOST_PP_INC_148
 149

	)

171 
	#BOOST_PP_INC_149
 150

	)

172 
	#BOOST_PP_INC_150
 151

	)

173 
	#BOOST_PP_INC_151
 152

	)

174 
	#BOOST_PP_INC_152
 153

	)

175 
	#BOOST_PP_INC_153
 154

	)

176 
	#BOOST_PP_INC_154
 155

	)

177 
	#BOOST_PP_INC_155
 156

	)

178 
	#BOOST_PP_INC_156
 157

	)

179 
	#BOOST_PP_INC_157
 158

	)

180 
	#BOOST_PP_INC_158
 159

	)

181 
	#BOOST_PP_INC_159
 160

	)

182 
	#BOOST_PP_INC_160
 161

	)

183 
	#BOOST_PP_INC_161
 162

	)

184 
	#BOOST_PP_INC_162
 163

	)

185 
	#BOOST_PP_INC_163
 164

	)

186 
	#BOOST_PP_INC_164
 165

	)

187 
	#BOOST_PP_INC_165
 166

	)

188 
	#BOOST_PP_INC_166
 167

	)

189 
	#BOOST_PP_INC_167
 168

	)

190 
	#BOOST_PP_INC_168
 169

	)

191 
	#BOOST_PP_INC_169
 170

	)

192 
	#BOOST_PP_INC_170
 171

	)

193 
	#BOOST_PP_INC_171
 172

	)

194 
	#BOOST_PP_INC_172
 173

	)

195 
	#BOOST_PP_INC_173
 174

	)

196 
	#BOOST_PP_INC_174
 175

	)

197 
	#BOOST_PP_INC_175
 176

	)

198 
	#BOOST_PP_INC_176
 177

	)

199 
	#BOOST_PP_INC_177
 178

	)

200 
	#BOOST_PP_INC_178
 179

	)

201 
	#BOOST_PP_INC_179
 180

	)

202 
	#BOOST_PP_INC_180
 181

	)

203 
	#BOOST_PP_INC_181
 182

	)

204 
	#BOOST_PP_INC_182
 183

	)

205 
	#BOOST_PP_INC_183
 184

	)

206 
	#BOOST_PP_INC_184
 185

	)

207 
	#BOOST_PP_INC_185
 186

	)

208 
	#BOOST_PP_INC_186
 187

	)

209 
	#BOOST_PP_INC_187
 188

	)

210 
	#BOOST_PP_INC_188
 189

	)

211 
	#BOOST_PP_INC_189
 190

	)

212 
	#BOOST_PP_INC_190
 191

	)

213 
	#BOOST_PP_INC_191
 192

	)

214 
	#BOOST_PP_INC_192
 193

	)

215 
	#BOOST_PP_INC_193
 194

	)

216 
	#BOOST_PP_INC_194
 195

	)

217 
	#BOOST_PP_INC_195
 196

	)

218 
	#BOOST_PP_INC_196
 197

	)

219 
	#BOOST_PP_INC_197
 198

	)

220 
	#BOOST_PP_INC_198
 199

	)

221 
	#BOOST_PP_INC_199
 200

	)

222 
	#BOOST_PP_INC_200
 201

	)

223 
	#BOOST_PP_INC_201
 202

	)

224 
	#BOOST_PP_INC_202
 203

	)

225 
	#BOOST_PP_INC_203
 204

	)

226 
	#BOOST_PP_INC_204
 205

	)

227 
	#BOOST_PP_INC_205
 206

	)

228 
	#BOOST_PP_INC_206
 207

	)

229 
	#BOOST_PP_INC_207
 208

	)

230 
	#BOOST_PP_INC_208
 209

	)

231 
	#BOOST_PP_INC_209
 210

	)

232 
	#BOOST_PP_INC_210
 211

	)

233 
	#BOOST_PP_INC_211
 212

	)

234 
	#BOOST_PP_INC_212
 213

	)

235 
	#BOOST_PP_INC_213
 214

	)

236 
	#BOOST_PP_INC_214
 215

	)

237 
	#BOOST_PP_INC_215
 216

	)

238 
	#BOOST_PP_INC_216
 217

	)

239 
	#BOOST_PP_INC_217
 218

	)

240 
	#BOOST_PP_INC_218
 219

	)

241 
	#BOOST_PP_INC_219
 220

	)

242 
	#BOOST_PP_INC_220
 221

	)

243 
	#BOOST_PP_INC_221
 222

	)

244 
	#BOOST_PP_INC_222
 223

	)

245 
	#BOOST_PP_INC_223
 224

	)

246 
	#BOOST_PP_INC_224
 225

	)

247 
	#BOOST_PP_INC_225
 226

	)

248 
	#BOOST_PP_INC_226
 227

	)

249 
	#BOOST_PP_INC_227
 228

	)

250 
	#BOOST_PP_INC_228
 229

	)

251 
	#BOOST_PP_INC_229
 230

	)

252 
	#BOOST_PP_INC_230
 231

	)

253 
	#BOOST_PP_INC_231
 232

	)

254 
	#BOOST_PP_INC_232
 233

	)

255 
	#BOOST_PP_INC_233
 234

	)

256 
	#BOOST_PP_INC_234
 235

	)

257 
	#BOOST_PP_INC_235
 236

	)

258 
	#BOOST_PP_INC_236
 237

	)

259 
	#BOOST_PP_INC_237
 238

	)

260 
	#BOOST_PP_INC_238
 239

	)

261 
	#BOOST_PP_INC_239
 240

	)

262 
	#BOOST_PP_INC_240
 241

	)

263 
	#BOOST_PP_INC_241
 242

	)

264 
	#BOOST_PP_INC_242
 243

	)

265 
	#BOOST_PP_INC_243
 244

	)

266 
	#BOOST_PP_INC_244
 245

	)

267 
	#BOOST_PP_INC_245
 246

	)

268 
	#BOOST_PP_INC_246
 247

	)

269 
	#BOOST_PP_INC_247
 248

	)

270 
	#BOOST_PP_INC_248
 249

	)

271 
	#BOOST_PP_INC_249
 250

	)

272 
	#BOOST_PP_INC_250
 251

	)

273 
	#BOOST_PP_INC_251
 252

	)

274 
	#BOOST_PP_INC_252
 253

	)

275 
	#BOOST_PP_INC_253
 254

	)

276 
	#BOOST_PP_INC_254
 255

	)

277 
	#BOOST_PP_INC_255
 256

	)

278 
	#BOOST_PP_INC_256
 256

	)

	@/usr/include/boost/preprocessor/comma_if.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_COMMA_IF_HPP


11 
	#BOOST_PREPROCESSOR_COMMA_IF_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/pun˘u©i⁄/comma_if.hµ
>

	@/usr/include/boost/preprocessor/config/config.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_CONFIG_CONFIG_HPP


11 
	#BOOST_PREPROCESSOR_CONFIG_CONFIG_HPP


	)

12 #
#/* 
BOOST_PP_CONFIG_FLAGS
 */

13 
#deföê
	#BOOST_PP_CONFIG_STRICT
(Ë0x0001

	)

14 
	#BOOST_PP_CONFIG_IDEAL
(Ë0x0002

	)

15 
#deföê
	#BOOST_PP_CONFIG_MSVC
(Ë0x0004

	)

16 
	#BOOST_PP_CONFIG_MWCC
(Ë0x0008

	)

17 
	#BOOST_PP_CONFIG_BCC
(Ë0x0010

	)

18 
	#BOOST_PP_CONFIG_EDG
(Ë0x0020

	)

19 
	#BOOST_PP_CONFIG_DMC
(Ë0x0040

	)

20 #
#i‚de‡
BOOST_PP_CONFIG_FLAGS


21 #i‡
deföed
(
__GCCXML__
)

22 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_STRICT
())

	)

23 #ñi‡
deföed
(
__WAVE__
)

24 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_STRICT
())

	)

25 #ñi‡
deföed
(
__MWERKS__
) && __MWERKS__ >= 0x3200

26 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_STRICT
())

	)

27 #ñi‡
deföed
(
__EDG__
Ë|| deföed(
__EDG_VERSION__
)

28 #i‡
deföed
(
_MSC_VER
Ë&& 
__EDG_VERSION__
 >= 308

29 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_MSVC
())

	)

31 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_EDG
(Ë| 
	`BOOST_PP_CONFIG_STRICT
())

	)

33 #ñi‡
deföed
(
__MWERKS__
)

34 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_MWCC
())

	)

35 #ñi‡
deföed
(
__DMC__
)

36 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_DMC
())

	)

37 #ñi‡
deföed
(
__BORLANDC__
) && __BORLANDC__ >= 0x581

38 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_STRICT
())

	)

39 #ñi‡
deföed
(
__BORLANDC__
Ë|| deföed(
__IBMC__
Ë|| deföed(
__IBMCPP__
Ë|| deföed(
__SUNPRO_CC
)

40 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_BCC
())

	)

41 #ñi‡
deföed
(
_MSC_VER
)

42 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_MSVC
())

	)

44 
	#BOOST_PP_CONFIG_FLAGS
(Ë(
	`BOOST_PP_CONFIG_STRICT
())

	)

47 #
#/* 
BOOST_PP_CONFIG_EXTENDED_LINE_INFO
 */

48 #
#i‚de‡
BOOST_PP_CONFIG_EXTENDED_LINE_INFO


49 
	#BOOST_PP_CONFIG_EXTENDED_LINE_INFO
 0

	)

51 #
#/* 
BOOST_PP_CONFIG_ERRORS
 */

52 #
#i‚de‡
BOOST_PP_CONFIG_ERRORS


53 #ifde‡
NDEBUG


54 
	#BOOST_PP_CONFIG_ERRORS
 0

	)

56 
	#BOOST_PP_CONFIG_ERRORS
 1

	)

	@/usr/include/boost/preprocessor/list/adt.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #* 
Sì
 
hâp
:

11 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

12 #
#i‚de‡
BOOST_PREPROCESSOR_LIST_ADT_HPP


13 
	#BOOST_PREPROCESSOR_LIST_ADT_HPP


	)

14 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

15 
	~<boo°/¥ïro˚ss‹/dëaû/is_bö¨y.hµ
>

16 
	~<boo°/¥ïro˚ss‹/logiˇl/com∂.hµ
>

17 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

18 #
#/* 
BOOST_PP_LIST_CONS
 */

19 
#deföê
	#BOOST_PP_LIST_CONS
(
hód
, 
èû
Ë(hód,Åaû)

	)

20 #
#/* 
BOOST_PP_LIST_NIL
 */

21 
#deföê
	#BOOST_PP_LIST_NIL
 
BOOST_PP_NIL


	)

22 #
#/* 
BOOST_PP_LIST_FIRST
 */

23 
#deföê
	#BOOST_PP_LIST_FIRST
(
li°
Ë
	`BOOST_PP_LIST_FIRST_D
÷i°)

	)

24 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

25 
	#BOOST_PP_LIST_FIRST_D
(
li°
Ë
BOOST_PP_LIST_FIRST_I
 
	)
list

27 
	#BOOST_PP_LIST_FIRST_D
(
li°
Ë
BOOST_PP_LIST_FIRST_I
 ## 
	)
list

29 
#deföê
	#BOOST_PP_LIST_FIRST_I
(
hód
, 
èû
Ë
	)
head

30 #
#/* 
BOOST_PP_LIST_REST
 */

31 
#deföê
	#BOOST_PP_LIST_REST
(
li°
Ë
	`BOOST_PP_LIST_REST_D
÷i°)

	)

32 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

33 
	#BOOST_PP_LIST_REST_D
(
li°
Ë
BOOST_PP_LIST_REST_I
 
	)
list

35 
	#BOOST_PP_LIST_REST_D
(
li°
Ë
BOOST_PP_LIST_REST_I
 ## 
	)
list

37 
#deföê
	#BOOST_PP_LIST_REST_I
(
hód
, 
èû
Ë
	)
tail

38 #
#/* 
BOOST_PP_LIST_IS_CONS
 */

39 #
#i‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_BCC
()

40 
	#BOOST_PP_LIST_IS_CONS
(
li°
Ë
	`BOOST_PP_LIST_IS_CONS_D
÷i°)

	)

41 
	#BOOST_PP_LIST_IS_CONS_D
(
li°
Ë
BOOST_PP_LIST_IS_CONS_
 ## 
	)
list

42 
	#BOOST_PP_LIST_IS_CONS_
(
hód
, 
èû
Ë1

	)

43 
	#BOOST_PP_LIST_IS_CONS_BOOST_PP_NIL
 0

	)

45 
	#BOOST_PP_LIST_IS_CONS
(
li°
Ë
	`BOOST_PP_IS_BINARY
÷i°)

	)

47 #
#/* 
BOOST_PP_LIST_IS_NIL
 */

48 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_BCC
()

49 
	#BOOST_PP_LIST_IS_NIL
(
li°
Ë
	`BOOST_PP_COMPL
(
	`BOOST_PP_IS_BINARY
÷i°))

	)

51 
	#BOOST_PP_LIST_IS_NIL
(
li°
Ë
	`BOOST_PP_COMPL
(
	`BOOST_PP_LIST_IS_CONS
÷i°))

	)

	@/usr/include/boost/preprocessor/repeat.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_REPEAT_HPP


11 
	#BOOST_PREPROCESSOR_REPEAT_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/ª≥©.hµ
>

	@/usr/include/boost/preprocessor/repetition/for.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_FOR_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_FOR_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

14 
	~<boo°/¥ïro˚ss‹/debug/îr‹.hµ
>

15 
	~<boo°/¥ïro˚ss‹/dëaû/auto_ªc.hµ
>

16 #
#/* 
BOOST_PP_FOR
 */

18 
	#BOOST_PP_FOR
(
°©e
, 
¥ed
, 
›
, 
ma¸o
)

	)

20 
#deföê
	#BOOST_PP_FOR
 
	`BOOST_PP_CAT
(
BOOST_PP_FOR_
, 
	`BOOST_PP_AUTO_REC
(
BOOST_PP_FOR_P
, 256))

	)

21 
#deföê
	#BOOST_PP_FOR_P
(
n
Ë
	`BOOST_PP_CAT
(
BOOST_PP_FOR_CHECK_
, 
BOOST_PP_FOR_
 ## 
	`n
(1, 
BOOST_PP_FOR_SR_P
, 
BOOST_PP_FOR_SR_O
, 
BOOST_PP_FOR_SR_M
))

	)

22 
#deföê
	#BOOST_PP_FOR_SR_P
(
r
, 
s
Ë
	)
s

23 
	#BOOST_PP_FOR_SR_O
(
r
, 
s
Ë0

	)

24 
	#BOOST_PP_FOR_SR_M
(
r
, 
s
Ë
BOOST_PP_NIL


	)

25 #
#i‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

26 
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/dëaû/edg/f‹.hµ
>

27 #ñi‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

28 
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/dëaû/msvc/f‹.hµ
>

29 #ñi‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_DMC
()

30 
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/dëaû/dmc/f‹.hµ
>

32 
	~<boo°/¥ïro˚ss‹/ª≥tôi⁄/dëaû/f‹.hµ
>

34 
#deföê
	#BOOST_PP_FOR_257
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_ERROR
(0x0002)

	)

35 
#deföê
	#BOOST_PP_FOR_CHECK_BOOST_PP_NIL
 1

	)

36 
#deföê
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_1
(
s
, 
p
, 
o
, 
m
Ë0

	)

37 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_2
(
s
, 
p
, 
o
, 
m
Ë0

	)

38 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_3
(
s
, 
p
, 
o
, 
m
Ë0

	)

39 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_4
(
s
, 
p
, 
o
, 
m
Ë0

	)

40 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_5
(
s
, 
p
, 
o
, 
m
Ë0

	)

41 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_6
(
s
, 
p
, 
o
, 
m
Ë0

	)

42 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_7
(
s
, 
p
, 
o
, 
m
Ë0

	)

43 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_8
(
s
, 
p
, 
o
, 
m
Ë0

	)

44 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_9
(
s
, 
p
, 
o
, 
m
Ë0

	)

45 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_10
(
s
, 
p
, 
o
, 
m
Ë0

	)

46 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_11
(
s
, 
p
, 
o
, 
m
Ë0

	)

47 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_12
(
s
, 
p
, 
o
, 
m
Ë0

	)

48 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_13
(
s
, 
p
, 
o
, 
m
Ë0

	)

49 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_14
(
s
, 
p
, 
o
, 
m
Ë0

	)

50 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_15
(
s
, 
p
, 
o
, 
m
Ë0

	)

51 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_16
(
s
, 
p
, 
o
, 
m
Ë0

	)

52 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_17
(
s
, 
p
, 
o
, 
m
Ë0

	)

53 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_18
(
s
, 
p
, 
o
, 
m
Ë0

	)

54 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_19
(
s
, 
p
, 
o
, 
m
Ë0

	)

55 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_20
(
s
, 
p
, 
o
, 
m
Ë0

	)

56 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_21
(
s
, 
p
, 
o
, 
m
Ë0

	)

57 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_22
(
s
, 
p
, 
o
, 
m
Ë0

	)

58 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_23
(
s
, 
p
, 
o
, 
m
Ë0

	)

59 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_24
(
s
, 
p
, 
o
, 
m
Ë0

	)

60 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_25
(
s
, 
p
, 
o
, 
m
Ë0

	)

61 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_26
(
s
, 
p
, 
o
, 
m
Ë0

	)

62 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_27
(
s
, 
p
, 
o
, 
m
Ë0

	)

63 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_28
(
s
, 
p
, 
o
, 
m
Ë0

	)

64 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_29
(
s
, 
p
, 
o
, 
m
Ë0

	)

65 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_30
(
s
, 
p
, 
o
, 
m
Ë0

	)

66 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_31
(
s
, 
p
, 
o
, 
m
Ë0

	)

67 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_32
(
s
, 
p
, 
o
, 
m
Ë0

	)

68 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_33
(
s
, 
p
, 
o
, 
m
Ë0

	)

69 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_34
(
s
, 
p
, 
o
, 
m
Ë0

	)

70 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_35
(
s
, 
p
, 
o
, 
m
Ë0

	)

71 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_36
(
s
, 
p
, 
o
, 
m
Ë0

	)

72 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_37
(
s
, 
p
, 
o
, 
m
Ë0

	)

73 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_38
(
s
, 
p
, 
o
, 
m
Ë0

	)

74 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_39
(
s
, 
p
, 
o
, 
m
Ë0

	)

75 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_40
(
s
, 
p
, 
o
, 
m
Ë0

	)

76 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_41
(
s
, 
p
, 
o
, 
m
Ë0

	)

77 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_42
(
s
, 
p
, 
o
, 
m
Ë0

	)

78 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_43
(
s
, 
p
, 
o
, 
m
Ë0

	)

79 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_44
(
s
, 
p
, 
o
, 
m
Ë0

	)

80 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_45
(
s
, 
p
, 
o
, 
m
Ë0

	)

81 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_46
(
s
, 
p
, 
o
, 
m
Ë0

	)

82 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_47
(
s
, 
p
, 
o
, 
m
Ë0

	)

83 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_48
(
s
, 
p
, 
o
, 
m
Ë0

	)

84 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_49
(
s
, 
p
, 
o
, 
m
Ë0

	)

85 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_50
(
s
, 
p
, 
o
, 
m
Ë0

	)

86 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_51
(
s
, 
p
, 
o
, 
m
Ë0

	)

87 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_52
(
s
, 
p
, 
o
, 
m
Ë0

	)

88 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_53
(
s
, 
p
, 
o
, 
m
Ë0

	)

89 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_54
(
s
, 
p
, 
o
, 
m
Ë0

	)

90 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_55
(
s
, 
p
, 
o
, 
m
Ë0

	)

91 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_56
(
s
, 
p
, 
o
, 
m
Ë0

	)

92 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_57
(
s
, 
p
, 
o
, 
m
Ë0

	)

93 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_58
(
s
, 
p
, 
o
, 
m
Ë0

	)

94 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_59
(
s
, 
p
, 
o
, 
m
Ë0

	)

95 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_60
(
s
, 
p
, 
o
, 
m
Ë0

	)

96 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_61
(
s
, 
p
, 
o
, 
m
Ë0

	)

97 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_62
(
s
, 
p
, 
o
, 
m
Ë0

	)

98 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_63
(
s
, 
p
, 
o
, 
m
Ë0

	)

99 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_64
(
s
, 
p
, 
o
, 
m
Ë0

	)

100 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_65
(
s
, 
p
, 
o
, 
m
Ë0

	)

101 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_66
(
s
, 
p
, 
o
, 
m
Ë0

	)

102 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_67
(
s
, 
p
, 
o
, 
m
Ë0

	)

103 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_68
(
s
, 
p
, 
o
, 
m
Ë0

	)

104 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_69
(
s
, 
p
, 
o
, 
m
Ë0

	)

105 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_70
(
s
, 
p
, 
o
, 
m
Ë0

	)

106 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_71
(
s
, 
p
, 
o
, 
m
Ë0

	)

107 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_72
(
s
, 
p
, 
o
, 
m
Ë0

	)

108 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_73
(
s
, 
p
, 
o
, 
m
Ë0

	)

109 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_74
(
s
, 
p
, 
o
, 
m
Ë0

	)

110 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_75
(
s
, 
p
, 
o
, 
m
Ë0

	)

111 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_76
(
s
, 
p
, 
o
, 
m
Ë0

	)

112 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_77
(
s
, 
p
, 
o
, 
m
Ë0

	)

113 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_78
(
s
, 
p
, 
o
, 
m
Ë0

	)

114 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_79
(
s
, 
p
, 
o
, 
m
Ë0

	)

115 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_80
(
s
, 
p
, 
o
, 
m
Ë0

	)

116 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_81
(
s
, 
p
, 
o
, 
m
Ë0

	)

117 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_82
(
s
, 
p
, 
o
, 
m
Ë0

	)

118 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_83
(
s
, 
p
, 
o
, 
m
Ë0

	)

119 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_84
(
s
, 
p
, 
o
, 
m
Ë0

	)

120 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_85
(
s
, 
p
, 
o
, 
m
Ë0

	)

121 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_86
(
s
, 
p
, 
o
, 
m
Ë0

	)

122 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_87
(
s
, 
p
, 
o
, 
m
Ë0

	)

123 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_88
(
s
, 
p
, 
o
, 
m
Ë0

	)

124 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_89
(
s
, 
p
, 
o
, 
m
Ë0

	)

125 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_90
(
s
, 
p
, 
o
, 
m
Ë0

	)

126 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_91
(
s
, 
p
, 
o
, 
m
Ë0

	)

127 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_92
(
s
, 
p
, 
o
, 
m
Ë0

	)

128 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_93
(
s
, 
p
, 
o
, 
m
Ë0

	)

129 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_94
(
s
, 
p
, 
o
, 
m
Ë0

	)

130 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_95
(
s
, 
p
, 
o
, 
m
Ë0

	)

131 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_96
(
s
, 
p
, 
o
, 
m
Ë0

	)

132 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_97
(
s
, 
p
, 
o
, 
m
Ë0

	)

133 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_98
(
s
, 
p
, 
o
, 
m
Ë0

	)

134 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_99
(
s
, 
p
, 
o
, 
m
Ë0

	)

135 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_100
(
s
, 
p
, 
o
, 
m
Ë0

	)

136 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_101
(
s
, 
p
, 
o
, 
m
Ë0

	)

137 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_102
(
s
, 
p
, 
o
, 
m
Ë0

	)

138 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_103
(
s
, 
p
, 
o
, 
m
Ë0

	)

139 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_104
(
s
, 
p
, 
o
, 
m
Ë0

	)

140 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_105
(
s
, 
p
, 
o
, 
m
Ë0

	)

141 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_106
(
s
, 
p
, 
o
, 
m
Ë0

	)

142 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_107
(
s
, 
p
, 
o
, 
m
Ë0

	)

143 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_108
(
s
, 
p
, 
o
, 
m
Ë0

	)

144 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_109
(
s
, 
p
, 
o
, 
m
Ë0

	)

145 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_110
(
s
, 
p
, 
o
, 
m
Ë0

	)

146 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_111
(
s
, 
p
, 
o
, 
m
Ë0

	)

147 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_112
(
s
, 
p
, 
o
, 
m
Ë0

	)

148 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_113
(
s
, 
p
, 
o
, 
m
Ë0

	)

149 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_114
(
s
, 
p
, 
o
, 
m
Ë0

	)

150 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_115
(
s
, 
p
, 
o
, 
m
Ë0

	)

151 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_116
(
s
, 
p
, 
o
, 
m
Ë0

	)

152 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_117
(
s
, 
p
, 
o
, 
m
Ë0

	)

153 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_118
(
s
, 
p
, 
o
, 
m
Ë0

	)

154 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_119
(
s
, 
p
, 
o
, 
m
Ë0

	)

155 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_120
(
s
, 
p
, 
o
, 
m
Ë0

	)

156 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_121
(
s
, 
p
, 
o
, 
m
Ë0

	)

157 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_122
(
s
, 
p
, 
o
, 
m
Ë0

	)

158 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_123
(
s
, 
p
, 
o
, 
m
Ë0

	)

159 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_124
(
s
, 
p
, 
o
, 
m
Ë0

	)

160 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_125
(
s
, 
p
, 
o
, 
m
Ë0

	)

161 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_126
(
s
, 
p
, 
o
, 
m
Ë0

	)

162 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_127
(
s
, 
p
, 
o
, 
m
Ë0

	)

163 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_128
(
s
, 
p
, 
o
, 
m
Ë0

	)

164 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_129
(
s
, 
p
, 
o
, 
m
Ë0

	)

165 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_130
(
s
, 
p
, 
o
, 
m
Ë0

	)

166 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_131
(
s
, 
p
, 
o
, 
m
Ë0

	)

167 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_132
(
s
, 
p
, 
o
, 
m
Ë0

	)

168 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_133
(
s
, 
p
, 
o
, 
m
Ë0

	)

169 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_134
(
s
, 
p
, 
o
, 
m
Ë0

	)

170 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_135
(
s
, 
p
, 
o
, 
m
Ë0

	)

171 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_136
(
s
, 
p
, 
o
, 
m
Ë0

	)

172 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_137
(
s
, 
p
, 
o
, 
m
Ë0

	)

173 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_138
(
s
, 
p
, 
o
, 
m
Ë0

	)

174 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_139
(
s
, 
p
, 
o
, 
m
Ë0

	)

175 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_140
(
s
, 
p
, 
o
, 
m
Ë0

	)

176 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_141
(
s
, 
p
, 
o
, 
m
Ë0

	)

177 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_142
(
s
, 
p
, 
o
, 
m
Ë0

	)

178 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_143
(
s
, 
p
, 
o
, 
m
Ë0

	)

179 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_144
(
s
, 
p
, 
o
, 
m
Ë0

	)

180 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_145
(
s
, 
p
, 
o
, 
m
Ë0

	)

181 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_146
(
s
, 
p
, 
o
, 
m
Ë0

	)

182 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_147
(
s
, 
p
, 
o
, 
m
Ë0

	)

183 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_148
(
s
, 
p
, 
o
, 
m
Ë0

	)

184 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_149
(
s
, 
p
, 
o
, 
m
Ë0

	)

185 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_150
(
s
, 
p
, 
o
, 
m
Ë0

	)

186 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_151
(
s
, 
p
, 
o
, 
m
Ë0

	)

187 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_152
(
s
, 
p
, 
o
, 
m
Ë0

	)

188 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_153
(
s
, 
p
, 
o
, 
m
Ë0

	)

189 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_154
(
s
, 
p
, 
o
, 
m
Ë0

	)

190 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_155
(
s
, 
p
, 
o
, 
m
Ë0

	)

191 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_156
(
s
, 
p
, 
o
, 
m
Ë0

	)

192 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_157
(
s
, 
p
, 
o
, 
m
Ë0

	)

193 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_158
(
s
, 
p
, 
o
, 
m
Ë0

	)

194 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_159
(
s
, 
p
, 
o
, 
m
Ë0

	)

195 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_160
(
s
, 
p
, 
o
, 
m
Ë0

	)

196 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_161
(
s
, 
p
, 
o
, 
m
Ë0

	)

197 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_162
(
s
, 
p
, 
o
, 
m
Ë0

	)

198 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_163
(
s
, 
p
, 
o
, 
m
Ë0

	)

199 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_164
(
s
, 
p
, 
o
, 
m
Ë0

	)

200 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_165
(
s
, 
p
, 
o
, 
m
Ë0

	)

201 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_166
(
s
, 
p
, 
o
, 
m
Ë0

	)

202 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_167
(
s
, 
p
, 
o
, 
m
Ë0

	)

203 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_168
(
s
, 
p
, 
o
, 
m
Ë0

	)

204 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_169
(
s
, 
p
, 
o
, 
m
Ë0

	)

205 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_170
(
s
, 
p
, 
o
, 
m
Ë0

	)

206 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_171
(
s
, 
p
, 
o
, 
m
Ë0

	)

207 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_172
(
s
, 
p
, 
o
, 
m
Ë0

	)

208 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_173
(
s
, 
p
, 
o
, 
m
Ë0

	)

209 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_174
(
s
, 
p
, 
o
, 
m
Ë0

	)

210 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_175
(
s
, 
p
, 
o
, 
m
Ë0

	)

211 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_176
(
s
, 
p
, 
o
, 
m
Ë0

	)

212 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_177
(
s
, 
p
, 
o
, 
m
Ë0

	)

213 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_178
(
s
, 
p
, 
o
, 
m
Ë0

	)

214 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_179
(
s
, 
p
, 
o
, 
m
Ë0

	)

215 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_180
(
s
, 
p
, 
o
, 
m
Ë0

	)

216 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_181
(
s
, 
p
, 
o
, 
m
Ë0

	)

217 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_182
(
s
, 
p
, 
o
, 
m
Ë0

	)

218 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_183
(
s
, 
p
, 
o
, 
m
Ë0

	)

219 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_184
(
s
, 
p
, 
o
, 
m
Ë0

	)

220 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_185
(
s
, 
p
, 
o
, 
m
Ë0

	)

221 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_186
(
s
, 
p
, 
o
, 
m
Ë0

	)

222 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_187
(
s
, 
p
, 
o
, 
m
Ë0

	)

223 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_188
(
s
, 
p
, 
o
, 
m
Ë0

	)

224 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_189
(
s
, 
p
, 
o
, 
m
Ë0

	)

225 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_190
(
s
, 
p
, 
o
, 
m
Ë0

	)

226 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_191
(
s
, 
p
, 
o
, 
m
Ë0

	)

227 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_192
(
s
, 
p
, 
o
, 
m
Ë0

	)

228 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_193
(
s
, 
p
, 
o
, 
m
Ë0

	)

229 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_194
(
s
, 
p
, 
o
, 
m
Ë0

	)

230 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_195
(
s
, 
p
, 
o
, 
m
Ë0

	)

231 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_196
(
s
, 
p
, 
o
, 
m
Ë0

	)

232 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_197
(
s
, 
p
, 
o
, 
m
Ë0

	)

233 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_198
(
s
, 
p
, 
o
, 
m
Ë0

	)

234 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_199
(
s
, 
p
, 
o
, 
m
Ë0

	)

235 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_200
(
s
, 
p
, 
o
, 
m
Ë0

	)

236 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_201
(
s
, 
p
, 
o
, 
m
Ë0

	)

237 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_202
(
s
, 
p
, 
o
, 
m
Ë0

	)

238 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_203
(
s
, 
p
, 
o
, 
m
Ë0

	)

239 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_204
(
s
, 
p
, 
o
, 
m
Ë0

	)

240 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_205
(
s
, 
p
, 
o
, 
m
Ë0

	)

241 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_206
(
s
, 
p
, 
o
, 
m
Ë0

	)

242 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_207
(
s
, 
p
, 
o
, 
m
Ë0

	)

243 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_208
(
s
, 
p
, 
o
, 
m
Ë0

	)

244 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_209
(
s
, 
p
, 
o
, 
m
Ë0

	)

245 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_210
(
s
, 
p
, 
o
, 
m
Ë0

	)

246 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_211
(
s
, 
p
, 
o
, 
m
Ë0

	)

247 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_212
(
s
, 
p
, 
o
, 
m
Ë0

	)

248 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_213
(
s
, 
p
, 
o
, 
m
Ë0

	)

249 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_214
(
s
, 
p
, 
o
, 
m
Ë0

	)

250 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_215
(
s
, 
p
, 
o
, 
m
Ë0

	)

251 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_216
(
s
, 
p
, 
o
, 
m
Ë0

	)

252 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_217
(
s
, 
p
, 
o
, 
m
Ë0

	)

253 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_218
(
s
, 
p
, 
o
, 
m
Ë0

	)

254 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_219
(
s
, 
p
, 
o
, 
m
Ë0

	)

255 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_220
(
s
, 
p
, 
o
, 
m
Ë0

	)

256 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_221
(
s
, 
p
, 
o
, 
m
Ë0

	)

257 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_222
(
s
, 
p
, 
o
, 
m
Ë0

	)

258 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_223
(
s
, 
p
, 
o
, 
m
Ë0

	)

259 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_224
(
s
, 
p
, 
o
, 
m
Ë0

	)

260 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_225
(
s
, 
p
, 
o
, 
m
Ë0

	)

261 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_226
(
s
, 
p
, 
o
, 
m
Ë0

	)

262 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_227
(
s
, 
p
, 
o
, 
m
Ë0

	)

263 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_228
(
s
, 
p
, 
o
, 
m
Ë0

	)

264 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_229
(
s
, 
p
, 
o
, 
m
Ë0

	)

265 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_230
(
s
, 
p
, 
o
, 
m
Ë0

	)

266 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_231
(
s
, 
p
, 
o
, 
m
Ë0

	)

267 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_232
(
s
, 
p
, 
o
, 
m
Ë0

	)

268 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_233
(
s
, 
p
, 
o
, 
m
Ë0

	)

269 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_234
(
s
, 
p
, 
o
, 
m
Ë0

	)

270 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_235
(
s
, 
p
, 
o
, 
m
Ë0

	)

271 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_236
(
s
, 
p
, 
o
, 
m
Ë0

	)

272 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_237
(
s
, 
p
, 
o
, 
m
Ë0

	)

273 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_238
(
s
, 
p
, 
o
, 
m
Ë0

	)

274 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_239
(
s
, 
p
, 
o
, 
m
Ë0

	)

275 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_240
(
s
, 
p
, 
o
, 
m
Ë0

	)

276 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_241
(
s
, 
p
, 
o
, 
m
Ë0

	)

277 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_242
(
s
, 
p
, 
o
, 
m
Ë0

	)

278 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_243
(
s
, 
p
, 
o
, 
m
Ë0

	)

279 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_244
(
s
, 
p
, 
o
, 
m
Ë0

	)

280 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_245
(
s
, 
p
, 
o
, 
m
Ë0

	)

281 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_246
(
s
, 
p
, 
o
, 
m
Ë0

	)

282 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_247
(
s
, 
p
, 
o
, 
m
Ë0

	)

283 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_248
(
s
, 
p
, 
o
, 
m
Ë0

	)

284 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_249
(
s
, 
p
, 
o
, 
m
Ë0

	)

285 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_250
(
s
, 
p
, 
o
, 
m
Ë0

	)

286 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_251
(
s
, 
p
, 
o
, 
m
Ë0

	)

287 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_252
(
s
, 
p
, 
o
, 
m
Ë0

	)

288 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_253
(
s
, 
p
, 
o
, 
m
Ë0

	)

289 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_254
(
s
, 
p
, 
o
, 
m
Ë0

	)

290 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_255
(
s
, 
p
, 
o
, 
m
Ë0

	)

291 
	#BOOST_PP_FOR_CHECK_BOOST_PP_FOR_256
(
s
, 
p
, 
o
, 
m
Ë0

	)

	@/usr/include/boost/preprocessor/tuple/elem.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_TUPLE_ELEM_HPP


12 
	#BOOST_PREPROCESSOR_TUPLE_ELEM_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

15 
	#BOOST_PP_TUPLE_ELEM
(
size
, 
ödex
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_ELEM_I
(size, index,Åu∂e)

	)

17 
	#BOOST_PP_TUPLE_ELEM
(
size
, 
ödex
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_ELEM_OO
((size, index,Åu∂e))

	)

18 
	#BOOST_PP_TUPLE_ELEM_OO
(
∑r
Ë
BOOST_PP_TUPLE_ELEM_I
 ## 
	)
par

20 #
#i‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

21 
	#BOOST_PP_TUPLE_ELEM_I
(
s
, 
i
, 
t
Ë
BOOST_PP_TUPLE_ELEM_
 ## s ## 
_
 ## i ## 
	)
t

22 #ñi‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

23 
	#BOOST_PP_TUPLE_ELEM_I
(
s
, 
i
, 
t
Ë
	`BOOST_PP_TUPLE_ELEM_II
(
BOOST_PP_TUPLE_ELEM_
 ## s ## 
_
 ## iÅ)

	)

24 
	#BOOST_PP_TUPLE_ELEM_II
(
ªs
Ë
	)
res

26 
	#BOOST_PP_TUPLE_ELEM_I
(
s
, 
i
, 
t
Ë
BOOST_PP_TUPLE_ELEM_
 ## s ## 
_
 ## i 
	)
t

28 
#deföê
	#BOOST_PP_TUPLE_ELEM_1_0
(
a
Ë
	)
a

29 
#deföê
	#BOOST_PP_TUPLE_ELEM_2_0
(
a
, 
b
Ë
	)
a

30 
	#BOOST_PP_TUPLE_ELEM_2_1
(
a
, 
b
Ë
	)
b

31 
#deföê
	#BOOST_PP_TUPLE_ELEM_3_0
(
a
, 
b
, 
c
Ë
	)
a

32 
	#BOOST_PP_TUPLE_ELEM_3_1
(
a
, 
b
, 
c
Ë
	)
b

33 
	#BOOST_PP_TUPLE_ELEM_3_2
(
a
, 
b
, 
c
Ë
	)
c

34 
#deföê
	#BOOST_PP_TUPLE_ELEM_4_0
(
a
, 
b
, 
c
, 
d
Ë
	)
a

35 
	#BOOST_PP_TUPLE_ELEM_4_1
(
a
, 
b
, 
c
, 
d
Ë
	)
b

36 
	#BOOST_PP_TUPLE_ELEM_4_2
(
a
, 
b
, 
c
, 
d
Ë
	)
c

37 
	#BOOST_PP_TUPLE_ELEM_4_3
(
a
, 
b
, 
c
, 
d
Ë
	)
d

38 
#deföê
	#BOOST_PP_TUPLE_ELEM_5_0
(
a
, 
b
, 
c
, 
d
, 
e
Ë
	)
a

39 
	#BOOST_PP_TUPLE_ELEM_5_1
(
a
, 
b
, 
c
, 
d
, 
e
Ë
	)
b

40 
	#BOOST_PP_TUPLE_ELEM_5_2
(
a
, 
b
, 
c
, 
d
, 
e
Ë
	)
c

41 
	#BOOST_PP_TUPLE_ELEM_5_3
(
a
, 
b
, 
c
, 
d
, 
e
Ë
	)
d

42 
	#BOOST_PP_TUPLE_ELEM_5_4
(
a
, 
b
, 
c
, 
d
, 
e
Ë
	)
e

43 
#deföê
	#BOOST_PP_TUPLE_ELEM_6_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
a

44 
	#BOOST_PP_TUPLE_ELEM_6_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
b

45 
	#BOOST_PP_TUPLE_ELEM_6_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
c

46 
	#BOOST_PP_TUPLE_ELEM_6_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
d

47 
	#BOOST_PP_TUPLE_ELEM_6_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
e

48 
	#BOOST_PP_TUPLE_ELEM_6_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ë
	)
f

49 
#deföê
	#BOOST_PP_TUPLE_ELEM_7_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
a

50 
	#BOOST_PP_TUPLE_ELEM_7_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
b

51 
	#BOOST_PP_TUPLE_ELEM_7_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
c

52 
	#BOOST_PP_TUPLE_ELEM_7_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
d

53 
	#BOOST_PP_TUPLE_ELEM_7_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
e

54 
	#BOOST_PP_TUPLE_ELEM_7_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
f

55 
	#BOOST_PP_TUPLE_ELEM_7_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ë
	)
g

56 
#deföê
	#BOOST_PP_TUPLE_ELEM_8_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
a

57 
	#BOOST_PP_TUPLE_ELEM_8_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
b

58 
	#BOOST_PP_TUPLE_ELEM_8_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
c

59 
	#BOOST_PP_TUPLE_ELEM_8_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
d

60 
	#BOOST_PP_TUPLE_ELEM_8_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
e

61 
	#BOOST_PP_TUPLE_ELEM_8_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
f

62 
	#BOOST_PP_TUPLE_ELEM_8_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
g

63 
	#BOOST_PP_TUPLE_ELEM_8_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ë
	)
h

64 
#deföê
	#BOOST_PP_TUPLE_ELEM_9_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
a

65 
	#BOOST_PP_TUPLE_ELEM_9_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
b

66 
	#BOOST_PP_TUPLE_ELEM_9_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
c

67 
	#BOOST_PP_TUPLE_ELEM_9_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
d

68 
	#BOOST_PP_TUPLE_ELEM_9_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
e

69 
	#BOOST_PP_TUPLE_ELEM_9_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
f

70 
	#BOOST_PP_TUPLE_ELEM_9_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
g

71 
	#BOOST_PP_TUPLE_ELEM_9_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
h

72 
	#BOOST_PP_TUPLE_ELEM_9_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ë
	)
i

73 
#deföê
	#BOOST_PP_TUPLE_ELEM_10_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
a

74 
	#BOOST_PP_TUPLE_ELEM_10_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
b

75 
	#BOOST_PP_TUPLE_ELEM_10_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
c

76 
	#BOOST_PP_TUPLE_ELEM_10_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
d

77 
	#BOOST_PP_TUPLE_ELEM_10_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
e

78 
	#BOOST_PP_TUPLE_ELEM_10_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
f

79 
	#BOOST_PP_TUPLE_ELEM_10_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
g

80 
	#BOOST_PP_TUPLE_ELEM_10_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
h

81 
	#BOOST_PP_TUPLE_ELEM_10_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
i

82 
	#BOOST_PP_TUPLE_ELEM_10_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ë
	)
j

83 
#deföê
	#BOOST_PP_TUPLE_ELEM_11_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
a

84 
	#BOOST_PP_TUPLE_ELEM_11_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
b

85 
	#BOOST_PP_TUPLE_ELEM_11_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
c

86 
	#BOOST_PP_TUPLE_ELEM_11_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
d

87 
	#BOOST_PP_TUPLE_ELEM_11_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
e

88 
	#BOOST_PP_TUPLE_ELEM_11_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
f

89 
	#BOOST_PP_TUPLE_ELEM_11_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
g

90 
	#BOOST_PP_TUPLE_ELEM_11_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
h

91 
	#BOOST_PP_TUPLE_ELEM_11_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
i

92 
	#BOOST_PP_TUPLE_ELEM_11_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
j

93 
	#BOOST_PP_TUPLE_ELEM_11_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ë
	)
k

94 
#deföê
	#BOOST_PP_TUPLE_ELEM_12_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
a

95 
	#BOOST_PP_TUPLE_ELEM_12_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
b

96 
	#BOOST_PP_TUPLE_ELEM_12_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
c

97 
	#BOOST_PP_TUPLE_ELEM_12_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
d

98 
	#BOOST_PP_TUPLE_ELEM_12_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
e

99 
	#BOOST_PP_TUPLE_ELEM_12_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
f

100 
	#BOOST_PP_TUPLE_ELEM_12_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
g

101 
	#BOOST_PP_TUPLE_ELEM_12_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
h

102 
	#BOOST_PP_TUPLE_ELEM_12_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
i

103 
	#BOOST_PP_TUPLE_ELEM_12_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
j

104 
	#BOOST_PP_TUPLE_ELEM_12_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
k

105 
	#BOOST_PP_TUPLE_ELEM_12_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ë
	)
l

106 
#deföê
	#BOOST_PP_TUPLE_ELEM_13_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
a

107 
	#BOOST_PP_TUPLE_ELEM_13_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
b

108 
	#BOOST_PP_TUPLE_ELEM_13_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
c

109 
	#BOOST_PP_TUPLE_ELEM_13_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
d

110 
	#BOOST_PP_TUPLE_ELEM_13_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
e

111 
	#BOOST_PP_TUPLE_ELEM_13_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
f

112 
	#BOOST_PP_TUPLE_ELEM_13_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
g

113 
	#BOOST_PP_TUPLE_ELEM_13_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
h

114 
	#BOOST_PP_TUPLE_ELEM_13_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
i

115 
	#BOOST_PP_TUPLE_ELEM_13_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
j

116 
	#BOOST_PP_TUPLE_ELEM_13_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
k

117 
	#BOOST_PP_TUPLE_ELEM_13_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
l

118 
	#BOOST_PP_TUPLE_ELEM_13_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ë
	)
m

119 
#deföê
	#BOOST_PP_TUPLE_ELEM_14_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
a

120 
	#BOOST_PP_TUPLE_ELEM_14_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
b

121 
	#BOOST_PP_TUPLE_ELEM_14_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
c

122 
	#BOOST_PP_TUPLE_ELEM_14_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
d

123 
	#BOOST_PP_TUPLE_ELEM_14_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
e

124 
	#BOOST_PP_TUPLE_ELEM_14_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
f

125 
	#BOOST_PP_TUPLE_ELEM_14_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
g

126 
	#BOOST_PP_TUPLE_ELEM_14_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
h

127 
	#BOOST_PP_TUPLE_ELEM_14_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
i

128 
	#BOOST_PP_TUPLE_ELEM_14_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
j

129 
	#BOOST_PP_TUPLE_ELEM_14_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
k

130 
	#BOOST_PP_TUPLE_ELEM_14_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
l

131 
	#BOOST_PP_TUPLE_ELEM_14_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
m

132 
	#BOOST_PP_TUPLE_ELEM_14_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ë
	)
n

133 
#deföê
	#BOOST_PP_TUPLE_ELEM_15_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
a

134 
	#BOOST_PP_TUPLE_ELEM_15_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
b

135 
	#BOOST_PP_TUPLE_ELEM_15_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
c

136 
	#BOOST_PP_TUPLE_ELEM_15_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
d

137 
	#BOOST_PP_TUPLE_ELEM_15_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
e

138 
	#BOOST_PP_TUPLE_ELEM_15_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
f

139 
	#BOOST_PP_TUPLE_ELEM_15_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
g

140 
	#BOOST_PP_TUPLE_ELEM_15_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
h

141 
	#BOOST_PP_TUPLE_ELEM_15_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
i

142 
	#BOOST_PP_TUPLE_ELEM_15_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
j

143 
	#BOOST_PP_TUPLE_ELEM_15_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
k

144 
	#BOOST_PP_TUPLE_ELEM_15_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
l

145 
	#BOOST_PP_TUPLE_ELEM_15_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
m

146 
	#BOOST_PP_TUPLE_ELEM_15_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
n

147 
	#BOOST_PP_TUPLE_ELEM_15_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ë
	)
o

148 
#deföê
	#BOOST_PP_TUPLE_ELEM_16_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
a

149 
	#BOOST_PP_TUPLE_ELEM_16_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
b

150 
	#BOOST_PP_TUPLE_ELEM_16_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
c

151 
	#BOOST_PP_TUPLE_ELEM_16_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
d

152 
	#BOOST_PP_TUPLE_ELEM_16_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
e

153 
	#BOOST_PP_TUPLE_ELEM_16_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
f

154 
	#BOOST_PP_TUPLE_ELEM_16_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
g

155 
	#BOOST_PP_TUPLE_ELEM_16_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
h

156 
	#BOOST_PP_TUPLE_ELEM_16_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
i

157 
	#BOOST_PP_TUPLE_ELEM_16_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
j

158 
	#BOOST_PP_TUPLE_ELEM_16_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
k

159 
	#BOOST_PP_TUPLE_ELEM_16_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
l

160 
	#BOOST_PP_TUPLE_ELEM_16_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
m

161 
	#BOOST_PP_TUPLE_ELEM_16_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
n

162 
	#BOOST_PP_TUPLE_ELEM_16_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
o

163 
	#BOOST_PP_TUPLE_ELEM_16_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ë
	)
p

164 
#deföê
	#BOOST_PP_TUPLE_ELEM_17_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
a

165 
	#BOOST_PP_TUPLE_ELEM_17_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
b

166 
	#BOOST_PP_TUPLE_ELEM_17_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
c

167 
	#BOOST_PP_TUPLE_ELEM_17_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
d

168 
	#BOOST_PP_TUPLE_ELEM_17_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
e

169 
	#BOOST_PP_TUPLE_ELEM_17_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
f

170 
	#BOOST_PP_TUPLE_ELEM_17_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
g

171 
	#BOOST_PP_TUPLE_ELEM_17_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
h

172 
	#BOOST_PP_TUPLE_ELEM_17_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
i

173 
	#BOOST_PP_TUPLE_ELEM_17_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
j

174 
	#BOOST_PP_TUPLE_ELEM_17_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
k

175 
	#BOOST_PP_TUPLE_ELEM_17_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
l

176 
	#BOOST_PP_TUPLE_ELEM_17_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
m

177 
	#BOOST_PP_TUPLE_ELEM_17_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
n

178 
	#BOOST_PP_TUPLE_ELEM_17_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
o

179 
	#BOOST_PP_TUPLE_ELEM_17_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
p

180 
	#BOOST_PP_TUPLE_ELEM_17_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ë
	)
q

181 
#deföê
	#BOOST_PP_TUPLE_ELEM_18_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
a

182 
	#BOOST_PP_TUPLE_ELEM_18_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
b

183 
	#BOOST_PP_TUPLE_ELEM_18_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
c

184 
	#BOOST_PP_TUPLE_ELEM_18_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
d

185 
	#BOOST_PP_TUPLE_ELEM_18_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
e

186 
	#BOOST_PP_TUPLE_ELEM_18_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
f

187 
	#BOOST_PP_TUPLE_ELEM_18_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
g

188 
	#BOOST_PP_TUPLE_ELEM_18_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
h

189 
	#BOOST_PP_TUPLE_ELEM_18_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
i

190 
	#BOOST_PP_TUPLE_ELEM_18_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
j

191 
	#BOOST_PP_TUPLE_ELEM_18_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
k

192 
	#BOOST_PP_TUPLE_ELEM_18_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
l

193 
	#BOOST_PP_TUPLE_ELEM_18_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
m

194 
	#BOOST_PP_TUPLE_ELEM_18_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
n

195 
	#BOOST_PP_TUPLE_ELEM_18_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
o

196 
	#BOOST_PP_TUPLE_ELEM_18_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
p

197 
	#BOOST_PP_TUPLE_ELEM_18_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
q

198 
	#BOOST_PP_TUPLE_ELEM_18_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ë
	)
r

199 
#deföê
	#BOOST_PP_TUPLE_ELEM_19_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
a

200 
	#BOOST_PP_TUPLE_ELEM_19_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
b

201 
	#BOOST_PP_TUPLE_ELEM_19_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
c

202 
	#BOOST_PP_TUPLE_ELEM_19_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
d

203 
	#BOOST_PP_TUPLE_ELEM_19_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
e

204 
	#BOOST_PP_TUPLE_ELEM_19_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
f

205 
	#BOOST_PP_TUPLE_ELEM_19_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
g

206 
	#BOOST_PP_TUPLE_ELEM_19_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
h

207 
	#BOOST_PP_TUPLE_ELEM_19_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
i

208 
	#BOOST_PP_TUPLE_ELEM_19_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
j

209 
	#BOOST_PP_TUPLE_ELEM_19_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
k

210 
	#BOOST_PP_TUPLE_ELEM_19_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
l

211 
	#BOOST_PP_TUPLE_ELEM_19_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
m

212 
	#BOOST_PP_TUPLE_ELEM_19_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
n

213 
	#BOOST_PP_TUPLE_ELEM_19_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
o

214 
	#BOOST_PP_TUPLE_ELEM_19_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
p

215 
	#BOOST_PP_TUPLE_ELEM_19_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
q

216 
	#BOOST_PP_TUPLE_ELEM_19_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
r

217 
	#BOOST_PP_TUPLE_ELEM_19_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ë
	)
s

218 
#deföê
	#BOOST_PP_TUPLE_ELEM_20_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
a

219 
	#BOOST_PP_TUPLE_ELEM_20_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
b

220 
	#BOOST_PP_TUPLE_ELEM_20_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
c

221 
	#BOOST_PP_TUPLE_ELEM_20_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
d

222 
	#BOOST_PP_TUPLE_ELEM_20_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
e

223 
	#BOOST_PP_TUPLE_ELEM_20_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
f

224 
	#BOOST_PP_TUPLE_ELEM_20_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
g

225 
	#BOOST_PP_TUPLE_ELEM_20_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
h

226 
	#BOOST_PP_TUPLE_ELEM_20_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
i

227 
	#BOOST_PP_TUPLE_ELEM_20_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
j

228 
	#BOOST_PP_TUPLE_ELEM_20_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
k

229 
	#BOOST_PP_TUPLE_ELEM_20_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
l

230 
	#BOOST_PP_TUPLE_ELEM_20_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
m

231 
	#BOOST_PP_TUPLE_ELEM_20_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
n

232 
	#BOOST_PP_TUPLE_ELEM_20_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
o

233 
	#BOOST_PP_TUPLE_ELEM_20_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
p

234 
	#BOOST_PP_TUPLE_ELEM_20_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
q

235 
	#BOOST_PP_TUPLE_ELEM_20_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
r

236 
	#BOOST_PP_TUPLE_ELEM_20_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
s

237 
	#BOOST_PP_TUPLE_ELEM_20_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ë
	)
t

238 
#deföê
	#BOOST_PP_TUPLE_ELEM_21_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
a

239 
	#BOOST_PP_TUPLE_ELEM_21_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
b

240 
	#BOOST_PP_TUPLE_ELEM_21_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
c

241 
	#BOOST_PP_TUPLE_ELEM_21_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
d

242 
	#BOOST_PP_TUPLE_ELEM_21_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
e

243 
	#BOOST_PP_TUPLE_ELEM_21_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
f

244 
	#BOOST_PP_TUPLE_ELEM_21_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
g

245 
	#BOOST_PP_TUPLE_ELEM_21_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
h

246 
	#BOOST_PP_TUPLE_ELEM_21_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
i

247 
	#BOOST_PP_TUPLE_ELEM_21_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
j

248 
	#BOOST_PP_TUPLE_ELEM_21_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
k

249 
	#BOOST_PP_TUPLE_ELEM_21_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
l

250 
	#BOOST_PP_TUPLE_ELEM_21_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
m

251 
	#BOOST_PP_TUPLE_ELEM_21_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
n

252 
	#BOOST_PP_TUPLE_ELEM_21_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
o

253 
	#BOOST_PP_TUPLE_ELEM_21_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
p

254 
	#BOOST_PP_TUPLE_ELEM_21_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
q

255 
	#BOOST_PP_TUPLE_ELEM_21_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
r

256 
	#BOOST_PP_TUPLE_ELEM_21_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
s

257 
	#BOOST_PP_TUPLE_ELEM_21_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
t

258 
	#BOOST_PP_TUPLE_ELEM_21_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ë
	)
u

259 
#deföê
	#BOOST_PP_TUPLE_ELEM_22_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
a

260 
	#BOOST_PP_TUPLE_ELEM_22_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
b

261 
	#BOOST_PP_TUPLE_ELEM_22_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
c

262 
	#BOOST_PP_TUPLE_ELEM_22_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
d

263 
	#BOOST_PP_TUPLE_ELEM_22_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
e

264 
	#BOOST_PP_TUPLE_ELEM_22_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
f

265 
	#BOOST_PP_TUPLE_ELEM_22_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
g

266 
	#BOOST_PP_TUPLE_ELEM_22_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
h

267 
	#BOOST_PP_TUPLE_ELEM_22_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
i

268 
	#BOOST_PP_TUPLE_ELEM_22_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
j

269 
	#BOOST_PP_TUPLE_ELEM_22_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
k

270 
	#BOOST_PP_TUPLE_ELEM_22_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
l

271 
	#BOOST_PP_TUPLE_ELEM_22_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
m

272 
	#BOOST_PP_TUPLE_ELEM_22_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
n

273 
	#BOOST_PP_TUPLE_ELEM_22_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
o

274 
	#BOOST_PP_TUPLE_ELEM_22_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
p

275 
	#BOOST_PP_TUPLE_ELEM_22_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
q

276 
	#BOOST_PP_TUPLE_ELEM_22_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
r

277 
	#BOOST_PP_TUPLE_ELEM_22_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
s

278 
	#BOOST_PP_TUPLE_ELEM_22_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
t

279 
	#BOOST_PP_TUPLE_ELEM_22_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
u

280 
	#BOOST_PP_TUPLE_ELEM_22_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ë
	)
v

281 
#deföê
	#BOOST_PP_TUPLE_ELEM_23_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
a

282 
	#BOOST_PP_TUPLE_ELEM_23_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
b

283 
	#BOOST_PP_TUPLE_ELEM_23_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
c

284 
	#BOOST_PP_TUPLE_ELEM_23_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
d

285 
	#BOOST_PP_TUPLE_ELEM_23_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
e

286 
	#BOOST_PP_TUPLE_ELEM_23_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
f

287 
	#BOOST_PP_TUPLE_ELEM_23_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
g

288 
	#BOOST_PP_TUPLE_ELEM_23_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
h

289 
	#BOOST_PP_TUPLE_ELEM_23_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
i

290 
	#BOOST_PP_TUPLE_ELEM_23_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
j

291 
	#BOOST_PP_TUPLE_ELEM_23_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
k

292 
	#BOOST_PP_TUPLE_ELEM_23_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
l

293 
	#BOOST_PP_TUPLE_ELEM_23_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
m

294 
	#BOOST_PP_TUPLE_ELEM_23_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
n

295 
	#BOOST_PP_TUPLE_ELEM_23_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
o

296 
	#BOOST_PP_TUPLE_ELEM_23_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
p

297 
	#BOOST_PP_TUPLE_ELEM_23_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
q

298 
	#BOOST_PP_TUPLE_ELEM_23_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
r

299 
	#BOOST_PP_TUPLE_ELEM_23_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
s

300 
	#BOOST_PP_TUPLE_ELEM_23_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
t

301 
	#BOOST_PP_TUPLE_ELEM_23_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
u

302 
	#BOOST_PP_TUPLE_ELEM_23_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
v

303 
	#BOOST_PP_TUPLE_ELEM_23_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ë
	)
w

304 
#deföê
	#BOOST_PP_TUPLE_ELEM_24_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
a

305 
	#BOOST_PP_TUPLE_ELEM_24_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
b

306 
	#BOOST_PP_TUPLE_ELEM_24_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
c

307 
	#BOOST_PP_TUPLE_ELEM_24_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
d

308 
	#BOOST_PP_TUPLE_ELEM_24_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
e

309 
	#BOOST_PP_TUPLE_ELEM_24_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
f

310 
	#BOOST_PP_TUPLE_ELEM_24_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
g

311 
	#BOOST_PP_TUPLE_ELEM_24_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
h

312 
	#BOOST_PP_TUPLE_ELEM_24_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
i

313 
	#BOOST_PP_TUPLE_ELEM_24_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
j

314 
	#BOOST_PP_TUPLE_ELEM_24_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
k

315 
	#BOOST_PP_TUPLE_ELEM_24_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
l

316 
	#BOOST_PP_TUPLE_ELEM_24_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
m

317 
	#BOOST_PP_TUPLE_ELEM_24_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
n

318 
	#BOOST_PP_TUPLE_ELEM_24_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
o

319 
	#BOOST_PP_TUPLE_ELEM_24_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
p

320 
	#BOOST_PP_TUPLE_ELEM_24_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
q

321 
	#BOOST_PP_TUPLE_ELEM_24_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
r

322 
	#BOOST_PP_TUPLE_ELEM_24_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
s

323 
	#BOOST_PP_TUPLE_ELEM_24_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
t

324 
	#BOOST_PP_TUPLE_ELEM_24_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
u

325 
	#BOOST_PP_TUPLE_ELEM_24_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
v

326 
	#BOOST_PP_TUPLE_ELEM_24_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
w

327 
	#BOOST_PP_TUPLE_ELEM_24_23
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ë
	)
x

328 
#deföê
	#BOOST_PP_TUPLE_ELEM_25_0
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
a

329 
	#BOOST_PP_TUPLE_ELEM_25_1
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
b

330 
	#BOOST_PP_TUPLE_ELEM_25_2
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
c

331 
	#BOOST_PP_TUPLE_ELEM_25_3
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
d

332 
	#BOOST_PP_TUPLE_ELEM_25_4
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
e

333 
	#BOOST_PP_TUPLE_ELEM_25_5
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
f

334 
	#BOOST_PP_TUPLE_ELEM_25_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
g

335 
	#BOOST_PP_TUPLE_ELEM_25_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
h

336 
	#BOOST_PP_TUPLE_ELEM_25_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
i

337 
	#BOOST_PP_TUPLE_ELEM_25_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
j

338 
	#BOOST_PP_TUPLE_ELEM_25_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
k

339 
	#BOOST_PP_TUPLE_ELEM_25_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
l

340 
	#BOOST_PP_TUPLE_ELEM_25_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
m

341 
	#BOOST_PP_TUPLE_ELEM_25_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
n

342 
	#BOOST_PP_TUPLE_ELEM_25_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
o

343 
	#BOOST_PP_TUPLE_ELEM_25_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
p

344 
	#BOOST_PP_TUPLE_ELEM_25_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
q

345 
	#BOOST_PP_TUPLE_ELEM_25_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
r

346 
	#BOOST_PP_TUPLE_ELEM_25_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
s

347 
	#BOOST_PP_TUPLE_ELEM_25_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
t

348 
	#BOOST_PP_TUPLE_ELEM_25_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
u

349 
	#BOOST_PP_TUPLE_ELEM_25_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
v

350 
	#BOOST_PP_TUPLE_ELEM_25_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
w

351 
	#BOOST_PP_TUPLE_ELEM_25_23
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
x

352 
	#BOOST_PP_TUPLE_ELEM_25_24
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ë
	)
y

	@/usr/include/boost/preprocessor/tuple/rem.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_TUPLE_REM_HPP


11 
	#BOOST_PREPROCESSOR_TUPLE_REM_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

13 #
#/* 
BOOST_PP_TUPLE_REM
 */

14 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

15 
	#BOOST_PP_TUPLE_REM
(
size
Ë
	`BOOST_PP_TUPLE_REM_I
(size)

	)

17 
	#BOOST_PP_TUPLE_REM
(
size
Ë
	`BOOST_PP_TUPLE_REM_OO
((size))

	)

18 
	#BOOST_PP_TUPLE_REM_OO
(
∑r
Ë
BOOST_PP_TUPLE_REM_I
 ## 
	)
par

20 
#deföê
	#BOOST_PP_TUPLE_REM_I
(
size
Ë
BOOST_PP_TUPLE_REM_
 ## 
	)
size

21 
#deföê
	#BOOST_PP_TUPLE_REM_0
()

	)

22 
	#BOOST_PP_TUPLE_REM_1
(
a
Ë
	)
a

23 
	#BOOST_PP_TUPLE_REM_2
(
a
, 
b
Ëa, 
	)
b

24 
	#BOOST_PP_TUPLE_REM_3
(
a
, 
b
, 
c
Ëa, b, 
	)
c

25 
	#BOOST_PP_TUPLE_REM_4
(
a
, 
b
, 
c
, 
d
Ëa, b, c, 
	)
d

26 
	#BOOST_PP_TUPLE_REM_5
(
a
, 
b
, 
c
, 
d
, 
e
Ëa, b, c, d, 
	)
e

27 
	#BOOST_PP_TUPLE_REM_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
Ëa, b, c, d,É, 
	)
f

28 
	#BOOST_PP_TUPLE_REM_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
Ëa, b, c, d,É, f, 
	)
g

29 
	#BOOST_PP_TUPLE_REM_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
Ëa, b, c, d,É, f, g, 
	)
h

30 
	#BOOST_PP_TUPLE_REM_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
Ëa, b, c, d,É, f, g, h, 
	)
i

31 
	#BOOST_PP_TUPLE_REM_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
Ëa, b, c, d,É, f, g, h, i, 
	)
j

32 
	#BOOST_PP_TUPLE_REM_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
Ëa, b, c, d,É, f, g, h, i, j, 
	)
k

33 
	#BOOST_PP_TUPLE_REM_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
Ëa, b, c, d,É, f, g, h, i, j, k, 
	)
l

34 
	#BOOST_PP_TUPLE_REM_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, 
	)
m

35 
	#BOOST_PP_TUPLE_REM_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m, 
	)
n

36 
	#BOOST_PP_TUPLE_REM_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, 
	)
o

37 
	#BOOST_PP_TUPLE_REM_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o, 
	)
p

38 
	#BOOST_PP_TUPLE_REM_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, 
	)
q

39 
	#BOOST_PP_TUPLE_REM_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q, 
	)
r

40 
	#BOOST_PP_TUPLE_REM_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, 
	)
s

41 
	#BOOST_PP_TUPLE_REM_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s, 
	)
t

42 
	#BOOST_PP_TUPLE_REM_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s,Å, 
	)
u

43 
	#BOOST_PP_TUPLE_REM_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s,Å, u, 
	)
v

44 
	#BOOST_PP_TUPLE_REM_23
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s,Å, u, v, 
	)
w

45 
	#BOOST_PP_TUPLE_REM_24
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s,Å, u, v, w, 
	)
x

46 
	#BOOST_PP_TUPLE_REM_25
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
Ëa, b, c, d,É, f, g, h, i, j, k,Ü, m,Ç, o,Ö, q,Ñ, s,Å, u, v, w, x, 
	)
y

47 #
#/* 
BOOST_PP_TUPLE_REM_CTOR
 */

48 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

49 
	#BOOST_PP_TUPLE_REM_CTOR
(
size
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_REM_CTOR_I
(
	`BOOST_PP_TUPLE_REM
(size),Åu∂e)

	)

51 
	#BOOST_PP_TUPLE_REM_CTOR
(
size
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_REM_CTOR_D
(size,Åu∂e)

	)

52 
	#BOOST_PP_TUPLE_REM_CTOR_D
(
size
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_REM_CTOR_I
(
	`BOOST_PP_TUPLE_REM
(size),Åu∂e)

	)

54 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

55 
	#BOOST_PP_TUPLE_REM_CTOR_I
(
ext
, 
tu∂e
Ëexà
	)
tuple

57 
	#BOOST_PP_TUPLE_REM_CTOR_I
(
ext
, 
tu∂e
Ë
	`BOOST_PP_TUPLE_REM_CTOR_OO
(”xt,Åu∂e))

	)

58 
	#BOOST_PP_TUPLE_REM_CTOR_OO
(
∑r
Ë
BOOST_PP_TUPLE_REM_CTOR_II
 ## 
	)
par

59 
	#BOOST_PP_TUPLE_REM_CTOR_II
(
ext
, 
tu∂e
Ëexà## 
	)
tuple

	@/usr/include/boost/mpl/aux_/config/adl.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/öãl.hµ
>

19 
	~<boo°/m∂/aux_/c⁄fig/gcc.hµ
>

20 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

28 #i‡!
deföed
(
BOOST_MPL_CFG_NO_ADL_BARRIER_NAMESPACE
) \

29 && ( 
BOOST_WORKAROUND
(
BOOST_MSVC
, 
BOOST_TESTED_AT
(1400)) \

30 || 
BOOST_WORKAROUND
(
__BORLANDC__
, < 0x600) \

31 || 
BOOST_WORKAROUND
(
__DMC__
, 
BOOST_TESTED_AT
(0x840)) \

32 || 
BOOST_WORKAROUND
(
__MWERKS__
, 
BOOST_TESTED_AT
(0x3202)) \

33 || 
BOOST_WORKAROUND
(
BOOST_INTEL_CXX_VERSION
, 
BOOST_TESTED_AT
(810)) \

36 
	#BOOST_MPL_CFG_NO_ADL_BARRIER_NAMESPACE


	)

	@/usr/include/boost/mpl/aux_/config/gcc.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_GCC_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_GCC_HPP_INCLUDED


	)

17 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__EDG_VERSION__
)

18 
	#BOOST_MPL_CFG_GCC
 ((
__GNUC__
 << 8Ë| 
__GNUC_MINOR__
)

	)

20 
	#BOOST_MPL_CFG_GCC
 0

	)

	@/usr/include/boost/mpl/aux_/config/nttp.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_NTTP_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_NTTP_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/msvc.hµ
>

18 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

33 #i‡ !
deföed
(
BOOST_MPL_CFG_NTTP_BUG
) \

34 && !
deföed
(
BOOST_MPL_PREPROCESSING_MODE
) \

35 && 
BOOST_WORKAROUND
(
BOOST_MSVC
, < 1300)

37 
	#BOOST_MPL_CFG_NTTP_BUG


	)

	@/usr/include/boost/mpl/aux_/static_cast.hpp

2 #i‚de‡
BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED


	)

17 
	~<boo°/m∂/aux_/c⁄fig/w‹k¨ound.hµ
>

19 #i‡
BOOST_WORKAROUND
(
__BORLANDC__
, 
BOOST_TESTED_AT
(0x561)) \

20 || 
BOOST_WORKAROUND
(
__GNUC__
, < 3) \

21 || 
BOOST_WORKAROUND
(
__MWERKS__
, <= 0x3001)

22 
	#BOOST_MPL_AUX_STATIC_CAST
(
T
, 
ex¥
Ë(T)”x¥)

	)

24 
	#BOOST_MPL_AUX_STATIC_CAST
(
T
, 
ex¥
Ë
°©ic_ˇ°
<T>”x¥)

	)

	@/usr/include/boost/preprocessor/debug/error.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_DEBUG_ERROR_HPP


11 
	#BOOST_PREPROCESSOR_DEBUG_ERROR_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

13 
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_ERROR
 */

15 #
#i‡
BOOST_PP_CONFIG_ERRORS


16 
	#BOOST_PP_ERROR
(
code
Ë
	`BOOST_PP_CAT
(
BOOST_PP_ERROR_
, code)

	)

18 
#deföê
	#BOOST_PP_ERROR_0x0000
 
	`BOOST_PP_ERROR
(0x0000, 
BOOST_PP_INDEX_OUT_OF_BOUNDS
)

	)

19 
	#BOOST_PP_ERROR_0x0001
 
	`BOOST_PP_ERROR
(0x0001, 
BOOST_PP_WHILE_OVERFLOW
)

	)

20 
	#BOOST_PP_ERROR_0x0002
 
	`BOOST_PP_ERROR
(0x0002, 
BOOST_PP_FOR_OVERFLOW
)

	)

21 
	#BOOST_PP_ERROR_0x0003
 
	`BOOST_PP_ERROR
(0x0003, 
BOOST_PP_REPEAT_OVERFLOW
)

	)

22 
	#BOOST_PP_ERROR_0x0004
 
	`BOOST_PP_ERROR
(0x0004, 
BOOST_PP_LIST_FOLD_OVERFLOW
)

	)

23 
	#BOOST_PP_ERROR_0x0005
 
	`BOOST_PP_ERROR
(0x0005, 
BOOST_PP_SEQ_FOLD_OVERFLOW
)

	)

24 
	#BOOST_PP_ERROR_0x0006
 
	`BOOST_PP_ERROR
(0x0006, 
BOOST_PP_ARITHMETIC_OVERFLOW
)

	)

25 
	#BOOST_PP_ERROR_0x0007
 
	`BOOST_PP_ERROR
(0x0007, 
BOOST_PP_DIVISION_BY_ZERO
)

	)

	@/usr/include/boost/preprocessor/detail/auto_rec.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

11 #
#i‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_DMC
()

12 
	~<boo°/¥ïro˚ss‹/dëaû/dmc/auto_ªc.hµ
>

14 #
#i‚de‡
BOOST_PREPROCESSOR_DETAIL_AUTO_REC_HPP


15 
	#BOOST_PREPROCESSOR_DETAIL_AUTO_REC_HPP


	)

16 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/iif.hµ
>

17 #
#/* 
BOOST_PP_AUTO_REC
 */

18 
#deföê
	#BOOST_PP_AUTO_REC
(
¥ed
, 
n
Ë
BOOST_PP_NODE_ENTRY_
 ## 
	`n
’ªd)

	)

19 
#deföê
	#BOOST_PP_NODE_ENTRY_256
(
p
Ë
	`BOOST_PP_NODE_128
’)’)’)’)’)’)’)’)

	)

20 
	#BOOST_PP_NODE_ENTRY_128
(
p
Ë
	`BOOST_PP_NODE_64
’)’)’)’)’)’)’)

	)

21 
	#BOOST_PP_NODE_ENTRY_64
(
p
Ë
	`BOOST_PP_NODE_32
’)’)’)’)’)’)

	)

22 
	#BOOST_PP_NODE_ENTRY_32
(
p
Ë
	`BOOST_PP_NODE_16
’)’)’)’)’)

	)

23 
	#BOOST_PP_NODE_ENTRY_16
(
p
Ë
	`BOOST_PP_NODE_8
’)’)’)’)

	)

24 
	#BOOST_PP_NODE_ENTRY_8
(
p
Ë
	`BOOST_PP_NODE_4
’)’)’)

	)

25 
	#BOOST_PP_NODE_ENTRY_4
(
p
Ë
	`BOOST_PP_NODE_2
’)’)

	)

26 
	#BOOST_PP_NODE_ENTRY_2
(
p
Ë
	`BOOST_PP_NODE_1
’)

	)

27 
#deföê
	#BOOST_PP_NODE_128
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(128), 
BOOST_PP_NODE_64
, 
BOOST_PP_NODE_192
)

	)

28 
	#BOOST_PP_NODE_64
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(64), 
BOOST_PP_NODE_32
, 
BOOST_PP_NODE_96
)

	)

29 
	#BOOST_PP_NODE_32
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(32), 
BOOST_PP_NODE_16
, 
BOOST_PP_NODE_48
)

	)

30 
	#BOOST_PP_NODE_16
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(16), 
BOOST_PP_NODE_8
, 
BOOST_PP_NODE_24
)

	)

31 
	#BOOST_PP_NODE_8
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(8), 
BOOST_PP_NODE_4
, 
BOOST_PP_NODE_12
)

	)

32 
	#BOOST_PP_NODE_4
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(4), 
BOOST_PP_NODE_2
, 
BOOST_PP_NODE_6
)

	)

33 
	#BOOST_PP_NODE_2
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(2), 
BOOST_PP_NODE_1
, 
BOOST_PP_NODE_3
)

	)

34 
	#BOOST_PP_NODE_1
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(1), 1, 2)

	)

35 
	#BOOST_PP_NODE_3
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(3), 3, 4)

	)

36 
	#BOOST_PP_NODE_6
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(6), 
BOOST_PP_NODE_5
, 
BOOST_PP_NODE_7
)

	)

37 
	#BOOST_PP_NODE_5
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(5), 5, 6)

	)

38 
	#BOOST_PP_NODE_7
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(7), 7, 8)

	)

39 
	#BOOST_PP_NODE_12
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(12), 
BOOST_PP_NODE_10
, 
BOOST_PP_NODE_14
)

	)

40 
	#BOOST_PP_NODE_10
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(10), 
BOOST_PP_NODE_9
, 
BOOST_PP_NODE_11
)

	)

41 
	#BOOST_PP_NODE_9
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(9), 9, 10)

	)

42 
	#BOOST_PP_NODE_11
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(11), 11, 12)

	)

43 
	#BOOST_PP_NODE_14
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(14), 
BOOST_PP_NODE_13
, 
BOOST_PP_NODE_15
)

	)

44 
	#BOOST_PP_NODE_13
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(13), 13, 14)

	)

45 
	#BOOST_PP_NODE_15
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(15), 15, 16)

	)

46 
	#BOOST_PP_NODE_24
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(24), 
BOOST_PP_NODE_20
, 
BOOST_PP_NODE_28
)

	)

47 
	#BOOST_PP_NODE_20
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(20), 
BOOST_PP_NODE_18
, 
BOOST_PP_NODE_22
)

	)

48 
	#BOOST_PP_NODE_18
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(18), 
BOOST_PP_NODE_17
, 
BOOST_PP_NODE_19
)

	)

49 
	#BOOST_PP_NODE_17
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(17), 17, 18)

	)

50 
	#BOOST_PP_NODE_19
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(19), 19, 20)

	)

51 
	#BOOST_PP_NODE_22
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(22), 
BOOST_PP_NODE_21
, 
BOOST_PP_NODE_23
)

	)

52 
	#BOOST_PP_NODE_21
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(21), 21, 22)

	)

53 
	#BOOST_PP_NODE_23
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(23), 23, 24)

	)

54 
	#BOOST_PP_NODE_28
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(28), 
BOOST_PP_NODE_26
, 
BOOST_PP_NODE_30
)

	)

55 
	#BOOST_PP_NODE_26
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(26), 
BOOST_PP_NODE_25
, 
BOOST_PP_NODE_27
)

	)

56 
	#BOOST_PP_NODE_25
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(25), 25, 26)

	)

57 
	#BOOST_PP_NODE_27
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(27), 27, 28)

	)

58 
	#BOOST_PP_NODE_30
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(30), 
BOOST_PP_NODE_29
, 
BOOST_PP_NODE_31
)

	)

59 
	#BOOST_PP_NODE_29
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(29), 29, 30)

	)

60 
	#BOOST_PP_NODE_31
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(31), 31, 32)

	)

61 
	#BOOST_PP_NODE_48
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(48), 
BOOST_PP_NODE_40
, 
BOOST_PP_NODE_56
)

	)

62 
	#BOOST_PP_NODE_40
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(40), 
BOOST_PP_NODE_36
, 
BOOST_PP_NODE_44
)

	)

63 
	#BOOST_PP_NODE_36
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(36), 
BOOST_PP_NODE_34
, 
BOOST_PP_NODE_38
)

	)

64 
	#BOOST_PP_NODE_34
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(34), 
BOOST_PP_NODE_33
, 
BOOST_PP_NODE_35
)

	)

65 
	#BOOST_PP_NODE_33
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(33), 33, 34)

	)

66 
	#BOOST_PP_NODE_35
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(35), 35, 36)

	)

67 
	#BOOST_PP_NODE_38
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(38), 
BOOST_PP_NODE_37
, 
BOOST_PP_NODE_39
)

	)

68 
	#BOOST_PP_NODE_37
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(37), 37, 38)

	)

69 
	#BOOST_PP_NODE_39
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(39), 39, 40)

	)

70 
	#BOOST_PP_NODE_44
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(44), 
BOOST_PP_NODE_42
, 
BOOST_PP_NODE_46
)

	)

71 
	#BOOST_PP_NODE_42
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(42), 
BOOST_PP_NODE_41
, 
BOOST_PP_NODE_43
)

	)

72 
	#BOOST_PP_NODE_41
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(41), 41, 42)

	)

73 
	#BOOST_PP_NODE_43
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(43), 43, 44)

	)

74 
	#BOOST_PP_NODE_46
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(46), 
BOOST_PP_NODE_45
, 
BOOST_PP_NODE_47
)

	)

75 
	#BOOST_PP_NODE_45
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(45), 45, 46)

	)

76 
	#BOOST_PP_NODE_47
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(47), 47, 48)

	)

77 
	#BOOST_PP_NODE_56
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(56), 
BOOST_PP_NODE_52
, 
BOOST_PP_NODE_60
)

	)

78 
	#BOOST_PP_NODE_52
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(52), 
BOOST_PP_NODE_50
, 
BOOST_PP_NODE_54
)

	)

79 
	#BOOST_PP_NODE_50
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(50), 
BOOST_PP_NODE_49
, 
BOOST_PP_NODE_51
)

	)

80 
	#BOOST_PP_NODE_49
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(49), 49, 50)

	)

81 
	#BOOST_PP_NODE_51
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(51), 51, 52)

	)

82 
	#BOOST_PP_NODE_54
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(54), 
BOOST_PP_NODE_53
, 
BOOST_PP_NODE_55
)

	)

83 
	#BOOST_PP_NODE_53
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(53), 53, 54)

	)

84 
	#BOOST_PP_NODE_55
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(55), 55, 56)

	)

85 
	#BOOST_PP_NODE_60
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(60), 
BOOST_PP_NODE_58
, 
BOOST_PP_NODE_62
)

	)

86 
	#BOOST_PP_NODE_58
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(58), 
BOOST_PP_NODE_57
, 
BOOST_PP_NODE_59
)

	)

87 
	#BOOST_PP_NODE_57
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(57), 57, 58)

	)

88 
	#BOOST_PP_NODE_59
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(59), 59, 60)

	)

89 
	#BOOST_PP_NODE_62
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(62), 
BOOST_PP_NODE_61
, 
BOOST_PP_NODE_63
)

	)

90 
	#BOOST_PP_NODE_61
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(61), 61, 62)

	)

91 
	#BOOST_PP_NODE_63
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(63), 63, 64)

	)

92 
	#BOOST_PP_NODE_96
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(96), 
BOOST_PP_NODE_80
, 
BOOST_PP_NODE_112
)

	)

93 
	#BOOST_PP_NODE_80
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(80), 
BOOST_PP_NODE_72
, 
BOOST_PP_NODE_88
)

	)

94 
	#BOOST_PP_NODE_72
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(72), 
BOOST_PP_NODE_68
, 
BOOST_PP_NODE_76
)

	)

95 
	#BOOST_PP_NODE_68
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(68), 
BOOST_PP_NODE_66
, 
BOOST_PP_NODE_70
)

	)

96 
	#BOOST_PP_NODE_66
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(66), 
BOOST_PP_NODE_65
, 
BOOST_PP_NODE_67
)

	)

97 
	#BOOST_PP_NODE_65
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(65), 65, 66)

	)

98 
	#BOOST_PP_NODE_67
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(67), 67, 68)

	)

99 
	#BOOST_PP_NODE_70
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(70), 
BOOST_PP_NODE_69
, 
BOOST_PP_NODE_71
)

	)

100 
	#BOOST_PP_NODE_69
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(69), 69, 70)

	)

101 
	#BOOST_PP_NODE_71
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(71), 71, 72)

	)

102 
	#BOOST_PP_NODE_76
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(76), 
BOOST_PP_NODE_74
, 
BOOST_PP_NODE_78
)

	)

103 
	#BOOST_PP_NODE_74
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(74), 
BOOST_PP_NODE_73
, 
BOOST_PP_NODE_75
)

	)

104 
	#BOOST_PP_NODE_73
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(73), 73, 74)

	)

105 
	#BOOST_PP_NODE_75
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(75), 75, 76)

	)

106 
	#BOOST_PP_NODE_78
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(78), 
BOOST_PP_NODE_77
, 
BOOST_PP_NODE_79
)

	)

107 
	#BOOST_PP_NODE_77
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(77), 77, 78)

	)

108 
	#BOOST_PP_NODE_79
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(79), 79, 80)

	)

109 
	#BOOST_PP_NODE_88
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(88), 
BOOST_PP_NODE_84
, 
BOOST_PP_NODE_92
)

	)

110 
	#BOOST_PP_NODE_84
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(84), 
BOOST_PP_NODE_82
, 
BOOST_PP_NODE_86
)

	)

111 
	#BOOST_PP_NODE_82
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(82), 
BOOST_PP_NODE_81
, 
BOOST_PP_NODE_83
)

	)

112 
	#BOOST_PP_NODE_81
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(81), 81, 82)

	)

113 
	#BOOST_PP_NODE_83
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(83), 83, 84)

	)

114 
	#BOOST_PP_NODE_86
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(86), 
BOOST_PP_NODE_85
, 
BOOST_PP_NODE_87
)

	)

115 
	#BOOST_PP_NODE_85
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(85), 85, 86)

	)

116 
	#BOOST_PP_NODE_87
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(87), 87, 88)

	)

117 
	#BOOST_PP_NODE_92
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(92), 
BOOST_PP_NODE_90
, 
BOOST_PP_NODE_94
)

	)

118 
	#BOOST_PP_NODE_90
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(90), 
BOOST_PP_NODE_89
, 
BOOST_PP_NODE_91
)

	)

119 
	#BOOST_PP_NODE_89
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(89), 89, 90)

	)

120 
	#BOOST_PP_NODE_91
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(91), 91, 92)

	)

121 
	#BOOST_PP_NODE_94
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(94), 
BOOST_PP_NODE_93
, 
BOOST_PP_NODE_95
)

	)

122 
	#BOOST_PP_NODE_93
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(93), 93, 94)

	)

123 
	#BOOST_PP_NODE_95
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(95), 95, 96)

	)

124 
	#BOOST_PP_NODE_112
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(112), 
BOOST_PP_NODE_104
, 
BOOST_PP_NODE_120
)

	)

125 
	#BOOST_PP_NODE_104
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(104), 
BOOST_PP_NODE_100
, 
BOOST_PP_NODE_108
)

	)

126 
	#BOOST_PP_NODE_100
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(100), 
BOOST_PP_NODE_98
, 
BOOST_PP_NODE_102
)

	)

127 
	#BOOST_PP_NODE_98
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(98), 
BOOST_PP_NODE_97
, 
BOOST_PP_NODE_99
)

	)

128 
	#BOOST_PP_NODE_97
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(97), 97, 98)

	)

129 
	#BOOST_PP_NODE_99
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(99), 99, 100)

	)

130 
	#BOOST_PP_NODE_102
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(102), 
BOOST_PP_NODE_101
, 
BOOST_PP_NODE_103
)

	)

131 
	#BOOST_PP_NODE_101
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(101), 101, 102)

	)

132 
	#BOOST_PP_NODE_103
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(103), 103, 104)

	)

133 
	#BOOST_PP_NODE_108
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(108), 
BOOST_PP_NODE_106
, 
BOOST_PP_NODE_110
)

	)

134 
	#BOOST_PP_NODE_106
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(106), 
BOOST_PP_NODE_105
, 
BOOST_PP_NODE_107
)

	)

135 
	#BOOST_PP_NODE_105
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(105), 105, 106)

	)

136 
	#BOOST_PP_NODE_107
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(107), 107, 108)

	)

137 
	#BOOST_PP_NODE_110
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(110), 
BOOST_PP_NODE_109
, 
BOOST_PP_NODE_111
)

	)

138 
	#BOOST_PP_NODE_109
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(109), 109, 110)

	)

139 
	#BOOST_PP_NODE_111
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(111), 111, 112)

	)

140 
	#BOOST_PP_NODE_120
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(120), 
BOOST_PP_NODE_116
, 
BOOST_PP_NODE_124
)

	)

141 
	#BOOST_PP_NODE_116
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(116), 
BOOST_PP_NODE_114
, 
BOOST_PP_NODE_118
)

	)

142 
	#BOOST_PP_NODE_114
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(114), 
BOOST_PP_NODE_113
, 
BOOST_PP_NODE_115
)

	)

143 
	#BOOST_PP_NODE_113
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(113), 113, 114)

	)

144 
	#BOOST_PP_NODE_115
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(115), 115, 116)

	)

145 
	#BOOST_PP_NODE_118
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(118), 
BOOST_PP_NODE_117
, 
BOOST_PP_NODE_119
)

	)

146 
	#BOOST_PP_NODE_117
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(117), 117, 118)

	)

147 
	#BOOST_PP_NODE_119
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(119), 119, 120)

	)

148 
	#BOOST_PP_NODE_124
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(124), 
BOOST_PP_NODE_122
, 
BOOST_PP_NODE_126
)

	)

149 
	#BOOST_PP_NODE_122
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(122), 
BOOST_PP_NODE_121
, 
BOOST_PP_NODE_123
)

	)

150 
	#BOOST_PP_NODE_121
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(121), 121, 122)

	)

151 
	#BOOST_PP_NODE_123
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(123), 123, 124)

	)

152 
	#BOOST_PP_NODE_126
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(126), 
BOOST_PP_NODE_125
, 
BOOST_PP_NODE_127
)

	)

153 
	#BOOST_PP_NODE_125
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(125), 125, 126)

	)

154 
	#BOOST_PP_NODE_127
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(127), 127, 128)

	)

155 
	#BOOST_PP_NODE_192
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(192), 
BOOST_PP_NODE_160
, 
BOOST_PP_NODE_224
)

	)

156 
	#BOOST_PP_NODE_160
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(160), 
BOOST_PP_NODE_144
, 
BOOST_PP_NODE_176
)

	)

157 
	#BOOST_PP_NODE_144
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(144), 
BOOST_PP_NODE_136
, 
BOOST_PP_NODE_152
)

	)

158 
	#BOOST_PP_NODE_136
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(136), 
BOOST_PP_NODE_132
, 
BOOST_PP_NODE_140
)

	)

159 
	#BOOST_PP_NODE_132
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(132), 
BOOST_PP_NODE_130
, 
BOOST_PP_NODE_134
)

	)

160 
	#BOOST_PP_NODE_130
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(130), 
BOOST_PP_NODE_129
, 
BOOST_PP_NODE_131
)

	)

161 
	#BOOST_PP_NODE_129
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(129), 129, 130)

	)

162 
	#BOOST_PP_NODE_131
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(131), 131, 132)

	)

163 
	#BOOST_PP_NODE_134
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(134), 
BOOST_PP_NODE_133
, 
BOOST_PP_NODE_135
)

	)

164 
	#BOOST_PP_NODE_133
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(133), 133, 134)

	)

165 
	#BOOST_PP_NODE_135
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(135), 135, 136)

	)

166 
	#BOOST_PP_NODE_140
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(140), 
BOOST_PP_NODE_138
, 
BOOST_PP_NODE_142
)

	)

167 
	#BOOST_PP_NODE_138
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(138), 
BOOST_PP_NODE_137
, 
BOOST_PP_NODE_139
)

	)

168 
	#BOOST_PP_NODE_137
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(137), 137, 138)

	)

169 
	#BOOST_PP_NODE_139
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(139), 139, 140)

	)

170 
	#BOOST_PP_NODE_142
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(142), 
BOOST_PP_NODE_141
, 
BOOST_PP_NODE_143
)

	)

171 
	#BOOST_PP_NODE_141
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(141), 141, 142)

	)

172 
	#BOOST_PP_NODE_143
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(143), 143, 144)

	)

173 
	#BOOST_PP_NODE_152
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(152), 
BOOST_PP_NODE_148
, 
BOOST_PP_NODE_156
)

	)

174 
	#BOOST_PP_NODE_148
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(148), 
BOOST_PP_NODE_146
, 
BOOST_PP_NODE_150
)

	)

175 
	#BOOST_PP_NODE_146
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(146), 
BOOST_PP_NODE_145
, 
BOOST_PP_NODE_147
)

	)

176 
	#BOOST_PP_NODE_145
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(145), 145, 146)

	)

177 
	#BOOST_PP_NODE_147
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(147), 147, 148)

	)

178 
	#BOOST_PP_NODE_150
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(150), 
BOOST_PP_NODE_149
, 
BOOST_PP_NODE_151
)

	)

179 
	#BOOST_PP_NODE_149
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(149), 149, 150)

	)

180 
	#BOOST_PP_NODE_151
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(151), 151, 152)

	)

181 
	#BOOST_PP_NODE_156
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(156), 
BOOST_PP_NODE_154
, 
BOOST_PP_NODE_158
)

	)

182 
	#BOOST_PP_NODE_154
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(154), 
BOOST_PP_NODE_153
, 
BOOST_PP_NODE_155
)

	)

183 
	#BOOST_PP_NODE_153
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(153), 153, 154)

	)

184 
	#BOOST_PP_NODE_155
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(155), 155, 156)

	)

185 
	#BOOST_PP_NODE_158
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(158), 
BOOST_PP_NODE_157
, 
BOOST_PP_NODE_159
)

	)

186 
	#BOOST_PP_NODE_157
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(157), 157, 158)

	)

187 
	#BOOST_PP_NODE_159
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(159), 159, 160)

	)

188 
	#BOOST_PP_NODE_176
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(176), 
BOOST_PP_NODE_168
, 
BOOST_PP_NODE_184
)

	)

189 
	#BOOST_PP_NODE_168
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(168), 
BOOST_PP_NODE_164
, 
BOOST_PP_NODE_172
)

	)

190 
	#BOOST_PP_NODE_164
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(164), 
BOOST_PP_NODE_162
, 
BOOST_PP_NODE_166
)

	)

191 
	#BOOST_PP_NODE_162
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(162), 
BOOST_PP_NODE_161
, 
BOOST_PP_NODE_163
)

	)

192 
	#BOOST_PP_NODE_161
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(161), 161, 162)

	)

193 
	#BOOST_PP_NODE_163
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(163), 163, 164)

	)

194 
	#BOOST_PP_NODE_166
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(166), 
BOOST_PP_NODE_165
, 
BOOST_PP_NODE_167
)

	)

195 
	#BOOST_PP_NODE_165
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(165), 165, 166)

	)

196 
	#BOOST_PP_NODE_167
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(167), 167, 168)

	)

197 
	#BOOST_PP_NODE_172
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(172), 
BOOST_PP_NODE_170
, 
BOOST_PP_NODE_174
)

	)

198 
	#BOOST_PP_NODE_170
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(170), 
BOOST_PP_NODE_169
, 
BOOST_PP_NODE_171
)

	)

199 
	#BOOST_PP_NODE_169
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(169), 169, 170)

	)

200 
	#BOOST_PP_NODE_171
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(171), 171, 172)

	)

201 
	#BOOST_PP_NODE_174
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(174), 
BOOST_PP_NODE_173
, 
BOOST_PP_NODE_175
)

	)

202 
	#BOOST_PP_NODE_173
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(173), 173, 174)

	)

203 
	#BOOST_PP_NODE_175
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(175), 175, 176)

	)

204 
	#BOOST_PP_NODE_184
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(184), 
BOOST_PP_NODE_180
, 
BOOST_PP_NODE_188
)

	)

205 
	#BOOST_PP_NODE_180
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(180), 
BOOST_PP_NODE_178
, 
BOOST_PP_NODE_182
)

	)

206 
	#BOOST_PP_NODE_178
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(178), 
BOOST_PP_NODE_177
, 
BOOST_PP_NODE_179
)

	)

207 
	#BOOST_PP_NODE_177
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(177), 177, 178)

	)

208 
	#BOOST_PP_NODE_179
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(179), 179, 180)

	)

209 
	#BOOST_PP_NODE_182
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(182), 
BOOST_PP_NODE_181
, 
BOOST_PP_NODE_183
)

	)

210 
	#BOOST_PP_NODE_181
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(181), 181, 182)

	)

211 
	#BOOST_PP_NODE_183
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(183), 183, 184)

	)

212 
	#BOOST_PP_NODE_188
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(188), 
BOOST_PP_NODE_186
, 
BOOST_PP_NODE_190
)

	)

213 
	#BOOST_PP_NODE_186
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(186), 
BOOST_PP_NODE_185
, 
BOOST_PP_NODE_187
)

	)

214 
	#BOOST_PP_NODE_185
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(185), 185, 186)

	)

215 
	#BOOST_PP_NODE_187
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(187), 187, 188)

	)

216 
	#BOOST_PP_NODE_190
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(190), 
BOOST_PP_NODE_189
, 
BOOST_PP_NODE_191
)

	)

217 
	#BOOST_PP_NODE_189
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(189), 189, 190)

	)

218 
	#BOOST_PP_NODE_191
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(191), 191, 192)

	)

219 
	#BOOST_PP_NODE_224
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(224), 
BOOST_PP_NODE_208
, 
BOOST_PP_NODE_240
)

	)

220 
	#BOOST_PP_NODE_208
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(208), 
BOOST_PP_NODE_200
, 
BOOST_PP_NODE_216
)

	)

221 
	#BOOST_PP_NODE_200
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(200), 
BOOST_PP_NODE_196
, 
BOOST_PP_NODE_204
)

	)

222 
	#BOOST_PP_NODE_196
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(196), 
BOOST_PP_NODE_194
, 
BOOST_PP_NODE_198
)

	)

223 
	#BOOST_PP_NODE_194
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(194), 
BOOST_PP_NODE_193
, 
BOOST_PP_NODE_195
)

	)

224 
	#BOOST_PP_NODE_193
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(193), 193, 194)

	)

225 
	#BOOST_PP_NODE_195
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(195), 195, 196)

	)

226 
	#BOOST_PP_NODE_198
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(198), 
BOOST_PP_NODE_197
, 
BOOST_PP_NODE_199
)

	)

227 
	#BOOST_PP_NODE_197
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(197), 197, 198)

	)

228 
	#BOOST_PP_NODE_199
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(199), 199, 200)

	)

229 
	#BOOST_PP_NODE_204
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(204), 
BOOST_PP_NODE_202
, 
BOOST_PP_NODE_206
)

	)

230 
	#BOOST_PP_NODE_202
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(202), 
BOOST_PP_NODE_201
, 
BOOST_PP_NODE_203
)

	)

231 
	#BOOST_PP_NODE_201
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(201), 201, 202)

	)

232 
	#BOOST_PP_NODE_203
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(203), 203, 204)

	)

233 
	#BOOST_PP_NODE_206
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(206), 
BOOST_PP_NODE_205
, 
BOOST_PP_NODE_207
)

	)

234 
	#BOOST_PP_NODE_205
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(205), 205, 206)

	)

235 
	#BOOST_PP_NODE_207
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(207), 207, 208)

	)

236 
	#BOOST_PP_NODE_216
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(216), 
BOOST_PP_NODE_212
, 
BOOST_PP_NODE_220
)

	)

237 
	#BOOST_PP_NODE_212
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(212), 
BOOST_PP_NODE_210
, 
BOOST_PP_NODE_214
)

	)

238 
	#BOOST_PP_NODE_210
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(210), 
BOOST_PP_NODE_209
, 
BOOST_PP_NODE_211
)

	)

239 
	#BOOST_PP_NODE_209
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(209), 209, 210)

	)

240 
	#BOOST_PP_NODE_211
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(211), 211, 212)

	)

241 
	#BOOST_PP_NODE_214
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(214), 
BOOST_PP_NODE_213
, 
BOOST_PP_NODE_215
)

	)

242 
	#BOOST_PP_NODE_213
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(213), 213, 214)

	)

243 
	#BOOST_PP_NODE_215
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(215), 215, 216)

	)

244 
	#BOOST_PP_NODE_220
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(220), 
BOOST_PP_NODE_218
, 
BOOST_PP_NODE_222
)

	)

245 
	#BOOST_PP_NODE_218
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(218), 
BOOST_PP_NODE_217
, 
BOOST_PP_NODE_219
)

	)

246 
	#BOOST_PP_NODE_217
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(217), 217, 218)

	)

247 
	#BOOST_PP_NODE_219
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(219), 219, 220)

	)

248 
	#BOOST_PP_NODE_222
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(222), 
BOOST_PP_NODE_221
, 
BOOST_PP_NODE_223
)

	)

249 
	#BOOST_PP_NODE_221
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(221), 221, 222)

	)

250 
	#BOOST_PP_NODE_223
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(223), 223, 224)

	)

251 
	#BOOST_PP_NODE_240
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(240), 
BOOST_PP_NODE_232
, 
BOOST_PP_NODE_248
)

	)

252 
	#BOOST_PP_NODE_232
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(232), 
BOOST_PP_NODE_228
, 
BOOST_PP_NODE_236
)

	)

253 
	#BOOST_PP_NODE_228
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(228), 
BOOST_PP_NODE_226
, 
BOOST_PP_NODE_230
)

	)

254 
	#BOOST_PP_NODE_226
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(226), 
BOOST_PP_NODE_225
, 
BOOST_PP_NODE_227
)

	)

255 
	#BOOST_PP_NODE_225
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(225), 225, 226)

	)

256 
	#BOOST_PP_NODE_227
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(227), 227, 228)

	)

257 
	#BOOST_PP_NODE_230
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(230), 
BOOST_PP_NODE_229
, 
BOOST_PP_NODE_231
)

	)

258 
	#BOOST_PP_NODE_229
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(229), 229, 230)

	)

259 
	#BOOST_PP_NODE_231
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(231), 231, 232)

	)

260 
	#BOOST_PP_NODE_236
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(236), 
BOOST_PP_NODE_234
, 
BOOST_PP_NODE_238
)

	)

261 
	#BOOST_PP_NODE_234
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(234), 
BOOST_PP_NODE_233
, 
BOOST_PP_NODE_235
)

	)

262 
	#BOOST_PP_NODE_233
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(233), 233, 234)

	)

263 
	#BOOST_PP_NODE_235
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(235), 235, 236)

	)

264 
	#BOOST_PP_NODE_238
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(238), 
BOOST_PP_NODE_237
, 
BOOST_PP_NODE_239
)

	)

265 
	#BOOST_PP_NODE_237
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(237), 237, 238)

	)

266 
	#BOOST_PP_NODE_239
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(239), 239, 240)

	)

267 
	#BOOST_PP_NODE_248
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(248), 
BOOST_PP_NODE_244
, 
BOOST_PP_NODE_252
)

	)

268 
	#BOOST_PP_NODE_244
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(244), 
BOOST_PP_NODE_242
, 
BOOST_PP_NODE_246
)

	)

269 
	#BOOST_PP_NODE_242
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(242), 
BOOST_PP_NODE_241
, 
BOOST_PP_NODE_243
)

	)

270 
	#BOOST_PP_NODE_241
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(241), 241, 242)

	)

271 
	#BOOST_PP_NODE_243
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(243), 243, 244)

	)

272 
	#BOOST_PP_NODE_246
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(246), 
BOOST_PP_NODE_245
, 
BOOST_PP_NODE_247
)

	)

273 
	#BOOST_PP_NODE_245
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(245), 245, 246)

	)

274 
	#BOOST_PP_NODE_247
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(247), 247, 248)

	)

275 
	#BOOST_PP_NODE_252
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(252), 
BOOST_PP_NODE_250
, 
BOOST_PP_NODE_254
)

	)

276 
	#BOOST_PP_NODE_250
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(250), 
BOOST_PP_NODE_249
, 
BOOST_PP_NODE_251
)

	)

277 
	#BOOST_PP_NODE_249
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(249), 249, 250)

	)

278 
	#BOOST_PP_NODE_251
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(251), 251, 252)

	)

279 
	#BOOST_PP_NODE_254
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(254), 
BOOST_PP_NODE_253
, 
BOOST_PP_NODE_255
)

	)

280 
	#BOOST_PP_NODE_253
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(253), 253, 254)

	)

281 
	#BOOST_PP_NODE_255
(
p
Ë
	`BOOST_PP_IIF
(
	`p
(255), 255, 256)

	)

	@/usr/include/boost/preprocessor/detail/is_binary.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_DETAIL_IS_BINARY_HPP


11 
	#BOOST_PREPROCESSOR_DETAIL_IS_BINARY_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

13 
	~<boo°/¥ïro˚ss‹/dëaû/check.hµ
>

14 #
#/* 
BOOST_PP_IS_BINARY
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

16 
	#BOOST_PP_IS_BINARY
(
x
Ë
	`BOOST_PP_CHECK
(x, 
BOOST_PP_IS_BINARY_CHECK
)

	)

18 
	#BOOST_PP_IS_BINARY
(
x
Ë
	`BOOST_PP_IS_BINARY_I
(x)

	)

19 
	#BOOST_PP_IS_BINARY_I
(
x
Ë
	`BOOST_PP_CHECK
(x, 
BOOST_PP_IS_BINARY_CHECK
)

	)

21 
#deföê
	#BOOST_PP_IS_BINARY_CHECK
(
a
, 
b
Ë1

	)

22 
	#BOOST_PP_CHECK_RESULT_BOOST_PP_IS_BINARY_CHECK
 0, 
BOOST_PP_NIL


	)

	@/usr/include/boost/preprocessor/logical/compl.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_LOGICAL_COMPL_HPP


11 
	#BOOST_PREPROCESSOR_LOGICAL_COMPL_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

13 #
#/* 
BOOST_PP_COMPL
 */

14 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

15 
	#BOOST_PP_COMPL
(
x
Ë
	`BOOST_PP_COMPL_I
(x)

	)

17 
	#BOOST_PP_COMPL
(
x
Ë
	`BOOST_PP_COMPL_OO
((x))

	)

18 
	#BOOST_PP_COMPL_OO
(
∑r
Ë
BOOST_PP_COMPL_I
 ## 
	)
par

20 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

21 
	#BOOST_PP_COMPL_I
(
x
Ë
BOOST_PP_COMPL_
 ## 
	)
x

23 
	#BOOST_PP_COMPL_I
(
x
Ë
	`BOOST_PP_COMPL_ID
(
BOOST_PP_COMPL_
 ## x)

	)

24 
	#BOOST_PP_COMPL_ID
(
id
Ë
	)
id

26 
#deföê
	#BOOST_PP_COMPL_0
 1

	)

27 
	#BOOST_PP_COMPL_1
 0

	)

	@/usr/include/boost/preprocessor/punctuation/comma_if.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_PUNCTUATION_COMMA_IF_HPP


12 
	#BOOST_PREPROCESSOR_PUNCTUATION_COMMA_IF_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/if.hµ
>

15 
	~<boo°/¥ïro˚ss‹/Ácûôõs/em±y.hµ
>

16 
	~<boo°/¥ïro˚ss‹/pun˘u©i⁄/comma.hµ
>

17 #
#/* 
BOOST_PP_COMMA_IF
 */

18 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

19 
	#BOOST_PP_COMMA_IF
(
c⁄d
Ë
	`BOOST_PP_IF
(c⁄d, 
BOOST_PP_COMMA
, 
BOOST_PP_EMPTY
)()

	)

21 
	#BOOST_PP_COMMA_IF
(
c⁄d
Ë
	`BOOST_PP_COMMA_IF_I
(c⁄d)

	)

22 
	#BOOST_PP_COMMA_IF_I
(
c⁄d
Ë
	`BOOST_PP_IF
(c⁄d, 
BOOST_PP_COMMA
, 
BOOST_PP_EMPTY
)()

	)

	@/usr/include/boost/preprocessor/repetition/detail/dmc/for.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_DETAIL_FOR_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_DETAIL_FOR_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/ex¥_iif.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/iif.hµ
>

15 
	~<boo°/¥ïro˚ss‹/logiˇl/boﬁ.hµ
>

16 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

17 
#deföê
	#BOOST_PP_FOR_1
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_1_C
(
	`BOOST_PP_BOOL
’##(2, s)), s,Ö, o, m)

	)

18 
	#BOOST_PP_FOR_2
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_2_C
(
	`BOOST_PP_BOOL
’##(3, s)), s,Ö, o, m)

	)

19 
	#BOOST_PP_FOR_3
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_3_C
(
	`BOOST_PP_BOOL
’##(4, s)), s,Ö, o, m)

	)

20 
	#BOOST_PP_FOR_4
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_4_C
(
	`BOOST_PP_BOOL
’##(5, s)), s,Ö, o, m)

	)

21 
	#BOOST_PP_FOR_5
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_5_C
(
	`BOOST_PP_BOOL
’##(6, s)), s,Ö, o, m)

	)

22 
	#BOOST_PP_FOR_6
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_6_C
(
	`BOOST_PP_BOOL
’##(7, s)), s,Ö, o, m)

	)

23 
	#BOOST_PP_FOR_7
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_7_C
(
	`BOOST_PP_BOOL
’##(8, s)), s,Ö, o, m)

	)

24 
	#BOOST_PP_FOR_8
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_8_C
(
	`BOOST_PP_BOOL
’##(9, s)), s,Ö, o, m)

	)

25 
	#BOOST_PP_FOR_9
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_9_C
(
	`BOOST_PP_BOOL
’##(10, s)), s,Ö, o, m)

	)

26 
	#BOOST_PP_FOR_10
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_10_C
(
	`BOOST_PP_BOOL
’##(11, s)), s,Ö, o, m)

	)

27 
	#BOOST_PP_FOR_11
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_11_C
(
	`BOOST_PP_BOOL
’##(12, s)), s,Ö, o, m)

	)

28 
	#BOOST_PP_FOR_12
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_12_C
(
	`BOOST_PP_BOOL
’##(13, s)), s,Ö, o, m)

	)

29 
	#BOOST_PP_FOR_13
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_13_C
(
	`BOOST_PP_BOOL
’##(14, s)), s,Ö, o, m)

	)

30 
	#BOOST_PP_FOR_14
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_14_C
(
	`BOOST_PP_BOOL
’##(15, s)), s,Ö, o, m)

	)

31 
	#BOOST_PP_FOR_15
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_15_C
(
	`BOOST_PP_BOOL
’##(16, s)), s,Ö, o, m)

	)

32 
	#BOOST_PP_FOR_16
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_16_C
(
	`BOOST_PP_BOOL
’##(17, s)), s,Ö, o, m)

	)

33 
	#BOOST_PP_FOR_17
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_17_C
(
	`BOOST_PP_BOOL
’##(18, s)), s,Ö, o, m)

	)

34 
	#BOOST_PP_FOR_18
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_18_C
(
	`BOOST_PP_BOOL
’##(19, s)), s,Ö, o, m)

	)

35 
	#BOOST_PP_FOR_19
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_19_C
(
	`BOOST_PP_BOOL
’##(20, s)), s,Ö, o, m)

	)

36 
	#BOOST_PP_FOR_20
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_20_C
(
	`BOOST_PP_BOOL
’##(21, s)), s,Ö, o, m)

	)

37 
	#BOOST_PP_FOR_21
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_21_C
(
	`BOOST_PP_BOOL
’##(22, s)), s,Ö, o, m)

	)

38 
	#BOOST_PP_FOR_22
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_22_C
(
	`BOOST_PP_BOOL
’##(23, s)), s,Ö, o, m)

	)

39 
	#BOOST_PP_FOR_23
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_23_C
(
	`BOOST_PP_BOOL
’##(24, s)), s,Ö, o, m)

	)

40 
	#BOOST_PP_FOR_24
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_24_C
(
	`BOOST_PP_BOOL
’##(25, s)), s,Ö, o, m)

	)

41 
	#BOOST_PP_FOR_25
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_25_C
(
	`BOOST_PP_BOOL
’##(26, s)), s,Ö, o, m)

	)

42 
	#BOOST_PP_FOR_26
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_26_C
(
	`BOOST_PP_BOOL
’##(27, s)), s,Ö, o, m)

	)

43 
	#BOOST_PP_FOR_27
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_27_C
(
	`BOOST_PP_BOOL
’##(28, s)), s,Ö, o, m)

	)

44 
	#BOOST_PP_FOR_28
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_28_C
(
	`BOOST_PP_BOOL
’##(29, s)), s,Ö, o, m)

	)

45 
	#BOOST_PP_FOR_29
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_29_C
(
	`BOOST_PP_BOOL
’##(30, s)), s,Ö, o, m)

	)

46 
	#BOOST_PP_FOR_30
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_30_C
(
	`BOOST_PP_BOOL
’##(31, s)), s,Ö, o, m)

	)

47 
	#BOOST_PP_FOR_31
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_31_C
(
	`BOOST_PP_BOOL
’##(32, s)), s,Ö, o, m)

	)

48 
	#BOOST_PP_FOR_32
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_32_C
(
	`BOOST_PP_BOOL
’##(33, s)), s,Ö, o, m)

	)

49 
	#BOOST_PP_FOR_33
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_33_C
(
	`BOOST_PP_BOOL
’##(34, s)), s,Ö, o, m)

	)

50 
	#BOOST_PP_FOR_34
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_34_C
(
	`BOOST_PP_BOOL
’##(35, s)), s,Ö, o, m)

	)

51 
	#BOOST_PP_FOR_35
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_35_C
(
	`BOOST_PP_BOOL
’##(36, s)), s,Ö, o, m)

	)

52 
	#BOOST_PP_FOR_36
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_36_C
(
	`BOOST_PP_BOOL
’##(37, s)), s,Ö, o, m)

	)

53 
	#BOOST_PP_FOR_37
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_37_C
(
	`BOOST_PP_BOOL
’##(38, s)), s,Ö, o, m)

	)

54 
	#BOOST_PP_FOR_38
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_38_C
(
	`BOOST_PP_BOOL
’##(39, s)), s,Ö, o, m)

	)

55 
	#BOOST_PP_FOR_39
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_39_C
(
	`BOOST_PP_BOOL
’##(40, s)), s,Ö, o, m)

	)

56 
	#BOOST_PP_FOR_40
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_40_C
(
	`BOOST_PP_BOOL
’##(41, s)), s,Ö, o, m)

	)

57 
	#BOOST_PP_FOR_41
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_41_C
(
	`BOOST_PP_BOOL
’##(42, s)), s,Ö, o, m)

	)

58 
	#BOOST_PP_FOR_42
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_42_C
(
	`BOOST_PP_BOOL
’##(43, s)), s,Ö, o, m)

	)

59 
	#BOOST_PP_FOR_43
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_43_C
(
	`BOOST_PP_BOOL
’##(44, s)), s,Ö, o, m)

	)

60 
	#BOOST_PP_FOR_44
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_44_C
(
	`BOOST_PP_BOOL
’##(45, s)), s,Ö, o, m)

	)

61 
	#BOOST_PP_FOR_45
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_45_C
(
	`BOOST_PP_BOOL
’##(46, s)), s,Ö, o, m)

	)

62 
	#BOOST_PP_FOR_46
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_46_C
(
	`BOOST_PP_BOOL
’##(47, s)), s,Ö, o, m)

	)

63 
	#BOOST_PP_FOR_47
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_47_C
(
	`BOOST_PP_BOOL
’##(48, s)), s,Ö, o, m)

	)

64 
	#BOOST_PP_FOR_48
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_48_C
(
	`BOOST_PP_BOOL
’##(49, s)), s,Ö, o, m)

	)

65 
	#BOOST_PP_FOR_49
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_49_C
(
	`BOOST_PP_BOOL
’##(50, s)), s,Ö, o, m)

	)

66 
	#BOOST_PP_FOR_50
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_50_C
(
	`BOOST_PP_BOOL
’##(51, s)), s,Ö, o, m)

	)

67 
	#BOOST_PP_FOR_51
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_51_C
(
	`BOOST_PP_BOOL
’##(52, s)), s,Ö, o, m)

	)

68 
	#BOOST_PP_FOR_52
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_52_C
(
	`BOOST_PP_BOOL
’##(53, s)), s,Ö, o, m)

	)

69 
	#BOOST_PP_FOR_53
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_53_C
(
	`BOOST_PP_BOOL
’##(54, s)), s,Ö, o, m)

	)

70 
	#BOOST_PP_FOR_54
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_54_C
(
	`BOOST_PP_BOOL
’##(55, s)), s,Ö, o, m)

	)

71 
	#BOOST_PP_FOR_55
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_55_C
(
	`BOOST_PP_BOOL
’##(56, s)), s,Ö, o, m)

	)

72 
	#BOOST_PP_FOR_56
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_56_C
(
	`BOOST_PP_BOOL
’##(57, s)), s,Ö, o, m)

	)

73 
	#BOOST_PP_FOR_57
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_57_C
(
	`BOOST_PP_BOOL
’##(58, s)), s,Ö, o, m)

	)

74 
	#BOOST_PP_FOR_58
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_58_C
(
	`BOOST_PP_BOOL
’##(59, s)), s,Ö, o, m)

	)

75 
	#BOOST_PP_FOR_59
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_59_C
(
	`BOOST_PP_BOOL
’##(60, s)), s,Ö, o, m)

	)

76 
	#BOOST_PP_FOR_60
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_60_C
(
	`BOOST_PP_BOOL
’##(61, s)), s,Ö, o, m)

	)

77 
	#BOOST_PP_FOR_61
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_61_C
(
	`BOOST_PP_BOOL
’##(62, s)), s,Ö, o, m)

	)

78 
	#BOOST_PP_FOR_62
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_62_C
(
	`BOOST_PP_BOOL
’##(63, s)), s,Ö, o, m)

	)

79 
	#BOOST_PP_FOR_63
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_63_C
(
	`BOOST_PP_BOOL
’##(64, s)), s,Ö, o, m)

	)

80 
	#BOOST_PP_FOR_64
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_64_C
(
	`BOOST_PP_BOOL
’##(65, s)), s,Ö, o, m)

	)

81 
	#BOOST_PP_FOR_65
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_65_C
(
	`BOOST_PP_BOOL
’##(66, s)), s,Ö, o, m)

	)

82 
	#BOOST_PP_FOR_66
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_66_C
(
	`BOOST_PP_BOOL
’##(67, s)), s,Ö, o, m)

	)

83 
	#BOOST_PP_FOR_67
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_67_C
(
	`BOOST_PP_BOOL
’##(68, s)), s,Ö, o, m)

	)

84 
	#BOOST_PP_FOR_68
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_68_C
(
	`BOOST_PP_BOOL
’##(69, s)), s,Ö, o, m)

	)

85 
	#BOOST_PP_FOR_69
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_69_C
(
	`BOOST_PP_BOOL
’##(70, s)), s,Ö, o, m)

	)

86 
	#BOOST_PP_FOR_70
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_70_C
(
	`BOOST_PP_BOOL
’##(71, s)), s,Ö, o, m)

	)

87 
	#BOOST_PP_FOR_71
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_71_C
(
	`BOOST_PP_BOOL
’##(72, s)), s,Ö, o, m)

	)

88 
	#BOOST_PP_FOR_72
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_72_C
(
	`BOOST_PP_BOOL
’##(73, s)), s,Ö, o, m)

	)

89 
	#BOOST_PP_FOR_73
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_73_C
(
	`BOOST_PP_BOOL
’##(74, s)), s,Ö, o, m)

	)

90 
	#BOOST_PP_FOR_74
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_74_C
(
	`BOOST_PP_BOOL
’##(75, s)), s,Ö, o, m)

	)

91 
	#BOOST_PP_FOR_75
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_75_C
(
	`BOOST_PP_BOOL
’##(76, s)), s,Ö, o, m)

	)

92 
	#BOOST_PP_FOR_76
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_76_C
(
	`BOOST_PP_BOOL
’##(77, s)), s,Ö, o, m)

	)

93 
	#BOOST_PP_FOR_77
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_77_C
(
	`BOOST_PP_BOOL
’##(78, s)), s,Ö, o, m)

	)

94 
	#BOOST_PP_FOR_78
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_78_C
(
	`BOOST_PP_BOOL
’##(79, s)), s,Ö, o, m)

	)

95 
	#BOOST_PP_FOR_79
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_79_C
(
	`BOOST_PP_BOOL
’##(80, s)), s,Ö, o, m)

	)

96 
	#BOOST_PP_FOR_80
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_80_C
(
	`BOOST_PP_BOOL
’##(81, s)), s,Ö, o, m)

	)

97 
	#BOOST_PP_FOR_81
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_81_C
(
	`BOOST_PP_BOOL
’##(82, s)), s,Ö, o, m)

	)

98 
	#BOOST_PP_FOR_82
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_82_C
(
	`BOOST_PP_BOOL
’##(83, s)), s,Ö, o, m)

	)

99 
	#BOOST_PP_FOR_83
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_83_C
(
	`BOOST_PP_BOOL
’##(84, s)), s,Ö, o, m)

	)

100 
	#BOOST_PP_FOR_84
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_84_C
(
	`BOOST_PP_BOOL
’##(85, s)), s,Ö, o, m)

	)

101 
	#BOOST_PP_FOR_85
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_85_C
(
	`BOOST_PP_BOOL
’##(86, s)), s,Ö, o, m)

	)

102 
	#BOOST_PP_FOR_86
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_86_C
(
	`BOOST_PP_BOOL
’##(87, s)), s,Ö, o, m)

	)

103 
	#BOOST_PP_FOR_87
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_87_C
(
	`BOOST_PP_BOOL
’##(88, s)), s,Ö, o, m)

	)

104 
	#BOOST_PP_FOR_88
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_88_C
(
	`BOOST_PP_BOOL
’##(89, s)), s,Ö, o, m)

	)

105 
	#BOOST_PP_FOR_89
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_89_C
(
	`BOOST_PP_BOOL
’##(90, s)), s,Ö, o, m)

	)

106 
	#BOOST_PP_FOR_90
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_90_C
(
	`BOOST_PP_BOOL
’##(91, s)), s,Ö, o, m)

	)

107 
	#BOOST_PP_FOR_91
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_91_C
(
	`BOOST_PP_BOOL
’##(92, s)), s,Ö, o, m)

	)

108 
	#BOOST_PP_FOR_92
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_92_C
(
	`BOOST_PP_BOOL
’##(93, s)), s,Ö, o, m)

	)

109 
	#BOOST_PP_FOR_93
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_93_C
(
	`BOOST_PP_BOOL
’##(94, s)), s,Ö, o, m)

	)

110 
	#BOOST_PP_FOR_94
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_94_C
(
	`BOOST_PP_BOOL
’##(95, s)), s,Ö, o, m)

	)

111 
	#BOOST_PP_FOR_95
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_95_C
(
	`BOOST_PP_BOOL
’##(96, s)), s,Ö, o, m)

	)

112 
	#BOOST_PP_FOR_96
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_96_C
(
	`BOOST_PP_BOOL
’##(97, s)), s,Ö, o, m)

	)

113 
	#BOOST_PP_FOR_97
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_97_C
(
	`BOOST_PP_BOOL
’##(98, s)), s,Ö, o, m)

	)

114 
	#BOOST_PP_FOR_98
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_98_C
(
	`BOOST_PP_BOOL
’##(99, s)), s,Ö, o, m)

	)

115 
	#BOOST_PP_FOR_99
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_99_C
(
	`BOOST_PP_BOOL
’##(100, s)), s,Ö, o, m)

	)

116 
	#BOOST_PP_FOR_100
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_100_C
(
	`BOOST_PP_BOOL
’##(101, s)), s,Ö, o, m)

	)

117 
	#BOOST_PP_FOR_101
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_101_C
(
	`BOOST_PP_BOOL
’##(102, s)), s,Ö, o, m)

	)

118 
	#BOOST_PP_FOR_102
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_102_C
(
	`BOOST_PP_BOOL
’##(103, s)), s,Ö, o, m)

	)

119 
	#BOOST_PP_FOR_103
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_103_C
(
	`BOOST_PP_BOOL
’##(104, s)), s,Ö, o, m)

	)

120 
	#BOOST_PP_FOR_104
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_104_C
(
	`BOOST_PP_BOOL
’##(105, s)), s,Ö, o, m)

	)

121 
	#BOOST_PP_FOR_105
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_105_C
(
	`BOOST_PP_BOOL
’##(106, s)), s,Ö, o, m)

	)

122 
	#BOOST_PP_FOR_106
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_106_C
(
	`BOOST_PP_BOOL
’##(107, s)), s,Ö, o, m)

	)

123 
	#BOOST_PP_FOR_107
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_107_C
(
	`BOOST_PP_BOOL
’##(108, s)), s,Ö, o, m)

	)

124 
	#BOOST_PP_FOR_108
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_108_C
(
	`BOOST_PP_BOOL
’##(109, s)), s,Ö, o, m)

	)

125 
	#BOOST_PP_FOR_109
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_109_C
(
	`BOOST_PP_BOOL
’##(110, s)), s,Ö, o, m)

	)

126 
	#BOOST_PP_FOR_110
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_110_C
(
	`BOOST_PP_BOOL
’##(111, s)), s,Ö, o, m)

	)

127 
	#BOOST_PP_FOR_111
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_111_C
(
	`BOOST_PP_BOOL
’##(112, s)), s,Ö, o, m)

	)

128 
	#BOOST_PP_FOR_112
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_112_C
(
	`BOOST_PP_BOOL
’##(113, s)), s,Ö, o, m)

	)

129 
	#BOOST_PP_FOR_113
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_113_C
(
	`BOOST_PP_BOOL
’##(114, s)), s,Ö, o, m)

	)

130 
	#BOOST_PP_FOR_114
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_114_C
(
	`BOOST_PP_BOOL
’##(115, s)), s,Ö, o, m)

	)

131 
	#BOOST_PP_FOR_115
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_115_C
(
	`BOOST_PP_BOOL
’##(116, s)), s,Ö, o, m)

	)

132 
	#BOOST_PP_FOR_116
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_116_C
(
	`BOOST_PP_BOOL
’##(117, s)), s,Ö, o, m)

	)

133 
	#BOOST_PP_FOR_117
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_117_C
(
	`BOOST_PP_BOOL
’##(118, s)), s,Ö, o, m)

	)

134 
	#BOOST_PP_FOR_118
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_118_C
(
	`BOOST_PP_BOOL
’##(119, s)), s,Ö, o, m)

	)

135 
	#BOOST_PP_FOR_119
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_119_C
(
	`BOOST_PP_BOOL
’##(120, s)), s,Ö, o, m)

	)

136 
	#BOOST_PP_FOR_120
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_120_C
(
	`BOOST_PP_BOOL
’##(121, s)), s,Ö, o, m)

	)

137 
	#BOOST_PP_FOR_121
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_121_C
(
	`BOOST_PP_BOOL
’##(122, s)), s,Ö, o, m)

	)

138 
	#BOOST_PP_FOR_122
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_122_C
(
	`BOOST_PP_BOOL
’##(123, s)), s,Ö, o, m)

	)

139 
	#BOOST_PP_FOR_123
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_123_C
(
	`BOOST_PP_BOOL
’##(124, s)), s,Ö, o, m)

	)

140 
	#BOOST_PP_FOR_124
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_124_C
(
	`BOOST_PP_BOOL
’##(125, s)), s,Ö, o, m)

	)

141 
	#BOOST_PP_FOR_125
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_125_C
(
	`BOOST_PP_BOOL
’##(126, s)), s,Ö, o, m)

	)

142 
	#BOOST_PP_FOR_126
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_126_C
(
	`BOOST_PP_BOOL
’##(127, s)), s,Ö, o, m)

	)

143 
	#BOOST_PP_FOR_127
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_127_C
(
	`BOOST_PP_BOOL
’##(128, s)), s,Ö, o, m)

	)

144 
	#BOOST_PP_FOR_128
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_128_C
(
	`BOOST_PP_BOOL
’##(129, s)), s,Ö, o, m)

	)

145 
	#BOOST_PP_FOR_129
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_129_C
(
	`BOOST_PP_BOOL
’##(130, s)), s,Ö, o, m)

	)

146 
	#BOOST_PP_FOR_130
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_130_C
(
	`BOOST_PP_BOOL
’##(131, s)), s,Ö, o, m)

	)

147 
	#BOOST_PP_FOR_131
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_131_C
(
	`BOOST_PP_BOOL
’##(132, s)), s,Ö, o, m)

	)

148 
	#BOOST_PP_FOR_132
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_132_C
(
	`BOOST_PP_BOOL
’##(133, s)), s,Ö, o, m)

	)

149 
	#BOOST_PP_FOR_133
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_133_C
(
	`BOOST_PP_BOOL
’##(134, s)), s,Ö, o, m)

	)

150 
	#BOOST_PP_FOR_134
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_134_C
(
	`BOOST_PP_BOOL
’##(135, s)), s,Ö, o, m)

	)

151 
	#BOOST_PP_FOR_135
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_135_C
(
	`BOOST_PP_BOOL
’##(136, s)), s,Ö, o, m)

	)

152 
	#BOOST_PP_FOR_136
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_136_C
(
	`BOOST_PP_BOOL
’##(137, s)), s,Ö, o, m)

	)

153 
	#BOOST_PP_FOR_137
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_137_C
(
	`BOOST_PP_BOOL
’##(138, s)), s,Ö, o, m)

	)

154 
	#BOOST_PP_FOR_138
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_138_C
(
	`BOOST_PP_BOOL
’##(139, s)), s,Ö, o, m)

	)

155 
	#BOOST_PP_FOR_139
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_139_C
(
	`BOOST_PP_BOOL
’##(140, s)), s,Ö, o, m)

	)

156 
	#BOOST_PP_FOR_140
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_140_C
(
	`BOOST_PP_BOOL
’##(141, s)), s,Ö, o, m)

	)

157 
	#BOOST_PP_FOR_141
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_141_C
(
	`BOOST_PP_BOOL
’##(142, s)), s,Ö, o, m)

	)

158 
	#BOOST_PP_FOR_142
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_142_C
(
	`BOOST_PP_BOOL
’##(143, s)), s,Ö, o, m)

	)

159 
	#BOOST_PP_FOR_143
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_143_C
(
	`BOOST_PP_BOOL
’##(144, s)), s,Ö, o, m)

	)

160 
	#BOOST_PP_FOR_144
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_144_C
(
	`BOOST_PP_BOOL
’##(145, s)), s,Ö, o, m)

	)

161 
	#BOOST_PP_FOR_145
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_145_C
(
	`BOOST_PP_BOOL
’##(146, s)), s,Ö, o, m)

	)

162 
	#BOOST_PP_FOR_146
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_146_C
(
	`BOOST_PP_BOOL
’##(147, s)), s,Ö, o, m)

	)

163 
	#BOOST_PP_FOR_147
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_147_C
(
	`BOOST_PP_BOOL
’##(148, s)), s,Ö, o, m)

	)

164 
	#BOOST_PP_FOR_148
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_148_C
(
	`BOOST_PP_BOOL
’##(149, s)), s,Ö, o, m)

	)

165 
	#BOOST_PP_FOR_149
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_149_C
(
	`BOOST_PP_BOOL
’##(150, s)), s,Ö, o, m)

	)

166 
	#BOOST_PP_FOR_150
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_150_C
(
	`BOOST_PP_BOOL
’##(151, s)), s,Ö, o, m)

	)

167 
	#BOOST_PP_FOR_151
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_151_C
(
	`BOOST_PP_BOOL
’##(152, s)), s,Ö, o, m)

	)

168 
	#BOOST_PP_FOR_152
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_152_C
(
	`BOOST_PP_BOOL
’##(153, s)), s,Ö, o, m)

	)

169 
	#BOOST_PP_FOR_153
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_153_C
(
	`BOOST_PP_BOOL
’##(154, s)), s,Ö, o, m)

	)

170 
	#BOOST_PP_FOR_154
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_154_C
(
	`BOOST_PP_BOOL
’##(155, s)), s,Ö, o, m)

	)

171 
	#BOOST_PP_FOR_155
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_155_C
(
	`BOOST_PP_BOOL
’##(156, s)), s,Ö, o, m)

	)

172 
	#BOOST_PP_FOR_156
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_156_C
(
	`BOOST_PP_BOOL
’##(157, s)), s,Ö, o, m)

	)

173 
	#BOOST_PP_FOR_157
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_157_C
(
	`BOOST_PP_BOOL
’##(158, s)), s,Ö, o, m)

	)

174 
	#BOOST_PP_FOR_158
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_158_C
(
	`BOOST_PP_BOOL
’##(159, s)), s,Ö, o, m)

	)

175 
	#BOOST_PP_FOR_159
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_159_C
(
	`BOOST_PP_BOOL
’##(160, s)), s,Ö, o, m)

	)

176 
	#BOOST_PP_FOR_160
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_160_C
(
	`BOOST_PP_BOOL
’##(161, s)), s,Ö, o, m)

	)

177 
	#BOOST_PP_FOR_161
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_161_C
(
	`BOOST_PP_BOOL
’##(162, s)), s,Ö, o, m)

	)

178 
	#BOOST_PP_FOR_162
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_162_C
(
	`BOOST_PP_BOOL
’##(163, s)), s,Ö, o, m)

	)

179 
	#BOOST_PP_FOR_163
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_163_C
(
	`BOOST_PP_BOOL
’##(164, s)), s,Ö, o, m)

	)

180 
	#BOOST_PP_FOR_164
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_164_C
(
	`BOOST_PP_BOOL
’##(165, s)), s,Ö, o, m)

	)

181 
	#BOOST_PP_FOR_165
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_165_C
(
	`BOOST_PP_BOOL
’##(166, s)), s,Ö, o, m)

	)

182 
	#BOOST_PP_FOR_166
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_166_C
(
	`BOOST_PP_BOOL
’##(167, s)), s,Ö, o, m)

	)

183 
	#BOOST_PP_FOR_167
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_167_C
(
	`BOOST_PP_BOOL
’##(168, s)), s,Ö, o, m)

	)

184 
	#BOOST_PP_FOR_168
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_168_C
(
	`BOOST_PP_BOOL
’##(169, s)), s,Ö, o, m)

	)

185 
	#BOOST_PP_FOR_169
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_169_C
(
	`BOOST_PP_BOOL
’##(170, s)), s,Ö, o, m)

	)

186 
	#BOOST_PP_FOR_170
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_170_C
(
	`BOOST_PP_BOOL
’##(171, s)), s,Ö, o, m)

	)

187 
	#BOOST_PP_FOR_171
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_171_C
(
	`BOOST_PP_BOOL
’##(172, s)), s,Ö, o, m)

	)

188 
	#BOOST_PP_FOR_172
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_172_C
(
	`BOOST_PP_BOOL
’##(173, s)), s,Ö, o, m)

	)

189 
	#BOOST_PP_FOR_173
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_173_C
(
	`BOOST_PP_BOOL
’##(174, s)), s,Ö, o, m)

	)

190 
	#BOOST_PP_FOR_174
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_174_C
(
	`BOOST_PP_BOOL
’##(175, s)), s,Ö, o, m)

	)

191 
	#BOOST_PP_FOR_175
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_175_C
(
	`BOOST_PP_BOOL
’##(176, s)), s,Ö, o, m)

	)

192 
	#BOOST_PP_FOR_176
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_176_C
(
	`BOOST_PP_BOOL
’##(177, s)), s,Ö, o, m)

	)

193 
	#BOOST_PP_FOR_177
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_177_C
(
	`BOOST_PP_BOOL
’##(178, s)), s,Ö, o, m)

	)

194 
	#BOOST_PP_FOR_178
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_178_C
(
	`BOOST_PP_BOOL
’##(179, s)), s,Ö, o, m)

	)

195 
	#BOOST_PP_FOR_179
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_179_C
(
	`BOOST_PP_BOOL
’##(180, s)), s,Ö, o, m)

	)

196 
	#BOOST_PP_FOR_180
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_180_C
(
	`BOOST_PP_BOOL
’##(181, s)), s,Ö, o, m)

	)

197 
	#BOOST_PP_FOR_181
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_181_C
(
	`BOOST_PP_BOOL
’##(182, s)), s,Ö, o, m)

	)

198 
	#BOOST_PP_FOR_182
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_182_C
(
	`BOOST_PP_BOOL
’##(183, s)), s,Ö, o, m)

	)

199 
	#BOOST_PP_FOR_183
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_183_C
(
	`BOOST_PP_BOOL
’##(184, s)), s,Ö, o, m)

	)

200 
	#BOOST_PP_FOR_184
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_184_C
(
	`BOOST_PP_BOOL
’##(185, s)), s,Ö, o, m)

	)

201 
	#BOOST_PP_FOR_185
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_185_C
(
	`BOOST_PP_BOOL
’##(186, s)), s,Ö, o, m)

	)

202 
	#BOOST_PP_FOR_186
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_186_C
(
	`BOOST_PP_BOOL
’##(187, s)), s,Ö, o, m)

	)

203 
	#BOOST_PP_FOR_187
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_187_C
(
	`BOOST_PP_BOOL
’##(188, s)), s,Ö, o, m)

	)

204 
	#BOOST_PP_FOR_188
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_188_C
(
	`BOOST_PP_BOOL
’##(189, s)), s,Ö, o, m)

	)

205 
	#BOOST_PP_FOR_189
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_189_C
(
	`BOOST_PP_BOOL
’##(190, s)), s,Ö, o, m)

	)

206 
	#BOOST_PP_FOR_190
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_190_C
(
	`BOOST_PP_BOOL
’##(191, s)), s,Ö, o, m)

	)

207 
	#BOOST_PP_FOR_191
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_191_C
(
	`BOOST_PP_BOOL
’##(192, s)), s,Ö, o, m)

	)

208 
	#BOOST_PP_FOR_192
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_192_C
(
	`BOOST_PP_BOOL
’##(193, s)), s,Ö, o, m)

	)

209 
	#BOOST_PP_FOR_193
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_193_C
(
	`BOOST_PP_BOOL
’##(194, s)), s,Ö, o, m)

	)

210 
	#BOOST_PP_FOR_194
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_194_C
(
	`BOOST_PP_BOOL
’##(195, s)), s,Ö, o, m)

	)

211 
	#BOOST_PP_FOR_195
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_195_C
(
	`BOOST_PP_BOOL
’##(196, s)), s,Ö, o, m)

	)

212 
	#BOOST_PP_FOR_196
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_196_C
(
	`BOOST_PP_BOOL
’##(197, s)), s,Ö, o, m)

	)

213 
	#BOOST_PP_FOR_197
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_197_C
(
	`BOOST_PP_BOOL
’##(198, s)), s,Ö, o, m)

	)

214 
	#BOOST_PP_FOR_198
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_198_C
(
	`BOOST_PP_BOOL
’##(199, s)), s,Ö, o, m)

	)

215 
	#BOOST_PP_FOR_199
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_199_C
(
	`BOOST_PP_BOOL
’##(200, s)), s,Ö, o, m)

	)

216 
	#BOOST_PP_FOR_200
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_200_C
(
	`BOOST_PP_BOOL
’##(201, s)), s,Ö, o, m)

	)

217 
	#BOOST_PP_FOR_201
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_201_C
(
	`BOOST_PP_BOOL
’##(202, s)), s,Ö, o, m)

	)

218 
	#BOOST_PP_FOR_202
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_202_C
(
	`BOOST_PP_BOOL
’##(203, s)), s,Ö, o, m)

	)

219 
	#BOOST_PP_FOR_203
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_203_C
(
	`BOOST_PP_BOOL
’##(204, s)), s,Ö, o, m)

	)

220 
	#BOOST_PP_FOR_204
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_204_C
(
	`BOOST_PP_BOOL
’##(205, s)), s,Ö, o, m)

	)

221 
	#BOOST_PP_FOR_205
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_205_C
(
	`BOOST_PP_BOOL
’##(206, s)), s,Ö, o, m)

	)

222 
	#BOOST_PP_FOR_206
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_206_C
(
	`BOOST_PP_BOOL
’##(207, s)), s,Ö, o, m)

	)

223 
	#BOOST_PP_FOR_207
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_207_C
(
	`BOOST_PP_BOOL
’##(208, s)), s,Ö, o, m)

	)

224 
	#BOOST_PP_FOR_208
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_208_C
(
	`BOOST_PP_BOOL
’##(209, s)), s,Ö, o, m)

	)

225 
	#BOOST_PP_FOR_209
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_209_C
(
	`BOOST_PP_BOOL
’##(210, s)), s,Ö, o, m)

	)

226 
	#BOOST_PP_FOR_210
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_210_C
(
	`BOOST_PP_BOOL
’##(211, s)), s,Ö, o, m)

	)

227 
	#BOOST_PP_FOR_211
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_211_C
(
	`BOOST_PP_BOOL
’##(212, s)), s,Ö, o, m)

	)

228 
	#BOOST_PP_FOR_212
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_212_C
(
	`BOOST_PP_BOOL
’##(213, s)), s,Ö, o, m)

	)

229 
	#BOOST_PP_FOR_213
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_213_C
(
	`BOOST_PP_BOOL
’##(214, s)), s,Ö, o, m)

	)

230 
	#BOOST_PP_FOR_214
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_214_C
(
	`BOOST_PP_BOOL
’##(215, s)), s,Ö, o, m)

	)

231 
	#BOOST_PP_FOR_215
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_215_C
(
	`BOOST_PP_BOOL
’##(216, s)), s,Ö, o, m)

	)

232 
	#BOOST_PP_FOR_216
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_216_C
(
	`BOOST_PP_BOOL
’##(217, s)), s,Ö, o, m)

	)

233 
	#BOOST_PP_FOR_217
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_217_C
(
	`BOOST_PP_BOOL
’##(218, s)), s,Ö, o, m)

	)

234 
	#BOOST_PP_FOR_218
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_218_C
(
	`BOOST_PP_BOOL
’##(219, s)), s,Ö, o, m)

	)

235 
	#BOOST_PP_FOR_219
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_219_C
(
	`BOOST_PP_BOOL
’##(220, s)), s,Ö, o, m)

	)

236 
	#BOOST_PP_FOR_220
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_220_C
(
	`BOOST_PP_BOOL
’##(221, s)), s,Ö, o, m)

	)

237 
	#BOOST_PP_FOR_221
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_221_C
(
	`BOOST_PP_BOOL
’##(222, s)), s,Ö, o, m)

	)

238 
	#BOOST_PP_FOR_222
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_222_C
(
	`BOOST_PP_BOOL
’##(223, s)), s,Ö, o, m)

	)

239 
	#BOOST_PP_FOR_223
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_223_C
(
	`BOOST_PP_BOOL
’##(224, s)), s,Ö, o, m)

	)

240 
	#BOOST_PP_FOR_224
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_224_C
(
	`BOOST_PP_BOOL
’##(225, s)), s,Ö, o, m)

	)

241 
	#BOOST_PP_FOR_225
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_225_C
(
	`BOOST_PP_BOOL
’##(226, s)), s,Ö, o, m)

	)

242 
	#BOOST_PP_FOR_226
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_226_C
(
	`BOOST_PP_BOOL
’##(227, s)), s,Ö, o, m)

	)

243 
	#BOOST_PP_FOR_227
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_227_C
(
	`BOOST_PP_BOOL
’##(228, s)), s,Ö, o, m)

	)

244 
	#BOOST_PP_FOR_228
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_228_C
(
	`BOOST_PP_BOOL
’##(229, s)), s,Ö, o, m)

	)

245 
	#BOOST_PP_FOR_229
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_229_C
(
	`BOOST_PP_BOOL
’##(230, s)), s,Ö, o, m)

	)

246 
	#BOOST_PP_FOR_230
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_230_C
(
	`BOOST_PP_BOOL
’##(231, s)), s,Ö, o, m)

	)

247 
	#BOOST_PP_FOR_231
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_231_C
(
	`BOOST_PP_BOOL
’##(232, s)), s,Ö, o, m)

	)

248 
	#BOOST_PP_FOR_232
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_232_C
(
	`BOOST_PP_BOOL
’##(233, s)), s,Ö, o, m)

	)

249 
	#BOOST_PP_FOR_233
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_233_C
(
	`BOOST_PP_BOOL
’##(234, s)), s,Ö, o, m)

	)

250 
	#BOOST_PP_FOR_234
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_234_C
(
	`BOOST_PP_BOOL
’##(235, s)), s,Ö, o, m)

	)

251 
	#BOOST_PP_FOR_235
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_235_C
(
	`BOOST_PP_BOOL
’##(236, s)), s,Ö, o, m)

	)

252 
	#BOOST_PP_FOR_236
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_236_C
(
	`BOOST_PP_BOOL
’##(237, s)), s,Ö, o, m)

	)

253 
	#BOOST_PP_FOR_237
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_237_C
(
	`BOOST_PP_BOOL
’##(238, s)), s,Ö, o, m)

	)

254 
	#BOOST_PP_FOR_238
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_238_C
(
	`BOOST_PP_BOOL
’##(239, s)), s,Ö, o, m)

	)

255 
	#BOOST_PP_FOR_239
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_239_C
(
	`BOOST_PP_BOOL
’##(240, s)), s,Ö, o, m)

	)

256 
	#BOOST_PP_FOR_240
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_240_C
(
	`BOOST_PP_BOOL
’##(241, s)), s,Ö, o, m)

	)

257 
	#BOOST_PP_FOR_241
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_241_C
(
	`BOOST_PP_BOOL
’##(242, s)), s,Ö, o, m)

	)

258 
	#BOOST_PP_FOR_242
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_242_C
(
	`BOOST_PP_BOOL
’##(243, s)), s,Ö, o, m)

	)

259 
	#BOOST_PP_FOR_243
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_243_C
(
	`BOOST_PP_BOOL
’##(244, s)), s,Ö, o, m)

	)

260 
	#BOOST_PP_FOR_244
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_244_C
(
	`BOOST_PP_BOOL
’##(245, s)), s,Ö, o, m)

	)

261 
	#BOOST_PP_FOR_245
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_245_C
(
	`BOOST_PP_BOOL
’##(246, s)), s,Ö, o, m)

	)

262 
	#BOOST_PP_FOR_246
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_246_C
(
	`BOOST_PP_BOOL
’##(247, s)), s,Ö, o, m)

	)

263 
	#BOOST_PP_FOR_247
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_247_C
(
	`BOOST_PP_BOOL
’##(248, s)), s,Ö, o, m)

	)

264 
	#BOOST_PP_FOR_248
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_248_C
(
	`BOOST_PP_BOOL
’##(249, s)), s,Ö, o, m)

	)

265 
	#BOOST_PP_FOR_249
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_249_C
(
	`BOOST_PP_BOOL
’##(250, s)), s,Ö, o, m)

	)

266 
	#BOOST_PP_FOR_250
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_250_C
(
	`BOOST_PP_BOOL
’##(251, s)), s,Ö, o, m)

	)

267 
	#BOOST_PP_FOR_251
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_251_C
(
	`BOOST_PP_BOOL
’##(252, s)), s,Ö, o, m)

	)

268 
	#BOOST_PP_FOR_252
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_252_C
(
	`BOOST_PP_BOOL
’##(253, s)), s,Ö, o, m)

	)

269 
	#BOOST_PP_FOR_253
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_253_C
(
	`BOOST_PP_BOOL
’##(254, s)), s,Ö, o, m)

	)

270 
	#BOOST_PP_FOR_254
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_254_C
(
	`BOOST_PP_BOOL
’##(255, s)), s,Ö, o, m)

	)

271 
	#BOOST_PP_FOR_255
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_255_C
(
	`BOOST_PP_BOOL
’##(256, s)), s,Ö, o, m)

	)

272 
	#BOOST_PP_FOR_256
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_256_C
(
	`BOOST_PP_BOOL
’##(257, s)), s,Ö, o, m)

	)

273 
#deföê
	#BOOST_PP_FOR_1_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(2, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_2
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(2, s),Ö, o, m)

	)

274 
	#BOOST_PP_FOR_2_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(3, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_3
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(3, s),Ö, o, m)

	)

275 
	#BOOST_PP_FOR_3_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(4, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_4
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(4, s),Ö, o, m)

	)

276 
	#BOOST_PP_FOR_4_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(5, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_5
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(5, s),Ö, o, m)

	)

277 
	#BOOST_PP_FOR_5_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(6, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_6
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(6, s),Ö, o, m)

	)

278 
	#BOOST_PP_FOR_6_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(7, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_7
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(7, s),Ö, o, m)

	)

279 
	#BOOST_PP_FOR_7_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(8, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_8
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(8, s),Ö, o, m)

	)

280 
	#BOOST_PP_FOR_8_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(9, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_9
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(9, s),Ö, o, m)

	)

281 
	#BOOST_PP_FOR_9_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(10, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_10
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(10, s),Ö, o, m)

	)

282 
	#BOOST_PP_FOR_10_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(11, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_11
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(11, s),Ö, o, m)

	)

283 
	#BOOST_PP_FOR_11_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(12, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_12
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(12, s),Ö, o, m)

	)

284 
	#BOOST_PP_FOR_12_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(13, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_13
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(13, s),Ö, o, m)

	)

285 
	#BOOST_PP_FOR_13_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(14, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_14
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(14, s),Ö, o, m)

	)

286 
	#BOOST_PP_FOR_14_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(15, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_15
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(15, s),Ö, o, m)

	)

287 
	#BOOST_PP_FOR_15_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(16, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_16
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(16, s),Ö, o, m)

	)

288 
	#BOOST_PP_FOR_16_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(17, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_17
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(17, s),Ö, o, m)

	)

289 
	#BOOST_PP_FOR_17_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(18, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_18
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(18, s),Ö, o, m)

	)

290 
	#BOOST_PP_FOR_18_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(19, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_19
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(19, s),Ö, o, m)

	)

291 
	#BOOST_PP_FOR_19_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(20, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_20
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(20, s),Ö, o, m)

	)

292 
	#BOOST_PP_FOR_20_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(21, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_21
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(21, s),Ö, o, m)

	)

293 
	#BOOST_PP_FOR_21_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(22, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_22
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(22, s),Ö, o, m)

	)

294 
	#BOOST_PP_FOR_22_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(23, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_23
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(23, s),Ö, o, m)

	)

295 
	#BOOST_PP_FOR_23_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(24, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_24
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(24, s),Ö, o, m)

	)

296 
	#BOOST_PP_FOR_24_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(25, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_25
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(25, s),Ö, o, m)

	)

297 
	#BOOST_PP_FOR_25_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(26, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_26
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(26, s),Ö, o, m)

	)

298 
	#BOOST_PP_FOR_26_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(27, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_27
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(27, s),Ö, o, m)

	)

299 
	#BOOST_PP_FOR_27_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(28, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_28
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(28, s),Ö, o, m)

	)

300 
	#BOOST_PP_FOR_28_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(29, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_29
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(29, s),Ö, o, m)

	)

301 
	#BOOST_PP_FOR_29_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(30, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_30
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(30, s),Ö, o, m)

	)

302 
	#BOOST_PP_FOR_30_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(31, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_31
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(31, s),Ö, o, m)

	)

303 
	#BOOST_PP_FOR_31_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(32, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_32
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(32, s),Ö, o, m)

	)

304 
	#BOOST_PP_FOR_32_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(33, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_33
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(33, s),Ö, o, m)

	)

305 
	#BOOST_PP_FOR_33_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(34, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_34
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(34, s),Ö, o, m)

	)

306 
	#BOOST_PP_FOR_34_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(35, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_35
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(35, s),Ö, o, m)

	)

307 
	#BOOST_PP_FOR_35_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(36, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_36
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(36, s),Ö, o, m)

	)

308 
	#BOOST_PP_FOR_36_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(37, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_37
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(37, s),Ö, o, m)

	)

309 
	#BOOST_PP_FOR_37_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(38, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_38
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(38, s),Ö, o, m)

	)

310 
	#BOOST_PP_FOR_38_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(39, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_39
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(39, s),Ö, o, m)

	)

311 
	#BOOST_PP_FOR_39_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(40, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_40
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(40, s),Ö, o, m)

	)

312 
	#BOOST_PP_FOR_40_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(41, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_41
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(41, s),Ö, o, m)

	)

313 
	#BOOST_PP_FOR_41_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(42, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_42
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(42, s),Ö, o, m)

	)

314 
	#BOOST_PP_FOR_42_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(43, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_43
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(43, s),Ö, o, m)

	)

315 
	#BOOST_PP_FOR_43_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(44, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_44
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(44, s),Ö, o, m)

	)

316 
	#BOOST_PP_FOR_44_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(45, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_45
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(45, s),Ö, o, m)

	)

317 
	#BOOST_PP_FOR_45_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(46, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_46
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(46, s),Ö, o, m)

	)

318 
	#BOOST_PP_FOR_46_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(47, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_47
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(47, s),Ö, o, m)

	)

319 
	#BOOST_PP_FOR_47_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(48, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_48
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(48, s),Ö, o, m)

	)

320 
	#BOOST_PP_FOR_48_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(49, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_49
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(49, s),Ö, o, m)

	)

321 
	#BOOST_PP_FOR_49_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(50, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_50
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(50, s),Ö, o, m)

	)

322 
	#BOOST_PP_FOR_50_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(51, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_51
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(51, s),Ö, o, m)

	)

323 
	#BOOST_PP_FOR_51_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(52, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_52
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(52, s),Ö, o, m)

	)

324 
	#BOOST_PP_FOR_52_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(53, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_53
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(53, s),Ö, o, m)

	)

325 
	#BOOST_PP_FOR_53_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(54, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_54
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(54, s),Ö, o, m)

	)

326 
	#BOOST_PP_FOR_54_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(55, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_55
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(55, s),Ö, o, m)

	)

327 
	#BOOST_PP_FOR_55_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(56, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_56
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(56, s),Ö, o, m)

	)

328 
	#BOOST_PP_FOR_56_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(57, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_57
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(57, s),Ö, o, m)

	)

329 
	#BOOST_PP_FOR_57_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(58, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_58
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(58, s),Ö, o, m)

	)

330 
	#BOOST_PP_FOR_58_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(59, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_59
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(59, s),Ö, o, m)

	)

331 
	#BOOST_PP_FOR_59_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(60, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_60
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(60, s),Ö, o, m)

	)

332 
	#BOOST_PP_FOR_60_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(61, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_61
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(61, s),Ö, o, m)

	)

333 
	#BOOST_PP_FOR_61_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(62, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_62
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(62, s),Ö, o, m)

	)

334 
	#BOOST_PP_FOR_62_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(63, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_63
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(63, s),Ö, o, m)

	)

335 
	#BOOST_PP_FOR_63_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(64, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_64
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(64, s),Ö, o, m)

	)

336 
	#BOOST_PP_FOR_64_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(65, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_65
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(65, s),Ö, o, m)

	)

337 
	#BOOST_PP_FOR_65_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(66, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_66
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(66, s),Ö, o, m)

	)

338 
	#BOOST_PP_FOR_66_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(67, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_67
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(67, s),Ö, o, m)

	)

339 
	#BOOST_PP_FOR_67_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(68, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_68
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(68, s),Ö, o, m)

	)

340 
	#BOOST_PP_FOR_68_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(69, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_69
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(69, s),Ö, o, m)

	)

341 
	#BOOST_PP_FOR_69_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(70, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_70
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(70, s),Ö, o, m)

	)

342 
	#BOOST_PP_FOR_70_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(71, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_71
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(71, s),Ö, o, m)

	)

343 
	#BOOST_PP_FOR_71_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(72, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_72
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(72, s),Ö, o, m)

	)

344 
	#BOOST_PP_FOR_72_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(73, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_73
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(73, s),Ö, o, m)

	)

345 
	#BOOST_PP_FOR_73_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(74, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_74
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(74, s),Ö, o, m)

	)

346 
	#BOOST_PP_FOR_74_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(75, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_75
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(75, s),Ö, o, m)

	)

347 
	#BOOST_PP_FOR_75_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(76, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_76
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(76, s),Ö, o, m)

	)

348 
	#BOOST_PP_FOR_76_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(77, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_77
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(77, s),Ö, o, m)

	)

349 
	#BOOST_PP_FOR_77_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(78, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_78
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(78, s),Ö, o, m)

	)

350 
	#BOOST_PP_FOR_78_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(79, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_79
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(79, s),Ö, o, m)

	)

351 
	#BOOST_PP_FOR_79_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(80, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_80
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(80, s),Ö, o, m)

	)

352 
	#BOOST_PP_FOR_80_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(81, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_81
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(81, s),Ö, o, m)

	)

353 
	#BOOST_PP_FOR_81_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(82, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_82
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(82, s),Ö, o, m)

	)

354 
	#BOOST_PP_FOR_82_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(83, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_83
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(83, s),Ö, o, m)

	)

355 
	#BOOST_PP_FOR_83_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(84, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_84
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(84, s),Ö, o, m)

	)

356 
	#BOOST_PP_FOR_84_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(85, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_85
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(85, s),Ö, o, m)

	)

357 
	#BOOST_PP_FOR_85_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(86, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_86
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(86, s),Ö, o, m)

	)

358 
	#BOOST_PP_FOR_86_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(87, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_87
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(87, s),Ö, o, m)

	)

359 
	#BOOST_PP_FOR_87_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(88, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_88
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(88, s),Ö, o, m)

	)

360 
	#BOOST_PP_FOR_88_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(89, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_89
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(89, s),Ö, o, m)

	)

361 
	#BOOST_PP_FOR_89_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(90, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_90
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(90, s),Ö, o, m)

	)

362 
	#BOOST_PP_FOR_90_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(91, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_91
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(91, s),Ö, o, m)

	)

363 
	#BOOST_PP_FOR_91_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(92, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_92
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(92, s),Ö, o, m)

	)

364 
	#BOOST_PP_FOR_92_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(93, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_93
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(93, s),Ö, o, m)

	)

365 
	#BOOST_PP_FOR_93_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(94, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_94
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(94, s),Ö, o, m)

	)

366 
	#BOOST_PP_FOR_94_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(95, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_95
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(95, s),Ö, o, m)

	)

367 
	#BOOST_PP_FOR_95_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(96, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_96
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(96, s),Ö, o, m)

	)

368 
	#BOOST_PP_FOR_96_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(97, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_97
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(97, s),Ö, o, m)

	)

369 
	#BOOST_PP_FOR_97_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(98, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_98
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(98, s),Ö, o, m)

	)

370 
	#BOOST_PP_FOR_98_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(99, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_99
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(99, s),Ö, o, m)

	)

371 
	#BOOST_PP_FOR_99_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(100, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_100
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(100, s),Ö, o, m)

	)

372 
	#BOOST_PP_FOR_100_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(101, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_101
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(101, s),Ö, o, m)

	)

373 
	#BOOST_PP_FOR_101_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(102, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_102
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(102, s),Ö, o, m)

	)

374 
	#BOOST_PP_FOR_102_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(103, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_103
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(103, s),Ö, o, m)

	)

375 
	#BOOST_PP_FOR_103_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(104, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_104
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(104, s),Ö, o, m)

	)

376 
	#BOOST_PP_FOR_104_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(105, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_105
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(105, s),Ö, o, m)

	)

377 
	#BOOST_PP_FOR_105_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(106, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_106
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(106, s),Ö, o, m)

	)

378 
	#BOOST_PP_FOR_106_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(107, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_107
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(107, s),Ö, o, m)

	)

379 
	#BOOST_PP_FOR_107_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(108, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_108
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(108, s),Ö, o, m)

	)

380 
	#BOOST_PP_FOR_108_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(109, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_109
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(109, s),Ö, o, m)

	)

381 
	#BOOST_PP_FOR_109_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(110, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_110
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(110, s),Ö, o, m)

	)

382 
	#BOOST_PP_FOR_110_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(111, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_111
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(111, s),Ö, o, m)

	)

383 
	#BOOST_PP_FOR_111_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(112, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_112
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(112, s),Ö, o, m)

	)

384 
	#BOOST_PP_FOR_112_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(113, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_113
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(113, s),Ö, o, m)

	)

385 
	#BOOST_PP_FOR_113_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(114, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_114
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(114, s),Ö, o, m)

	)

386 
	#BOOST_PP_FOR_114_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(115, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_115
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(115, s),Ö, o, m)

	)

387 
	#BOOST_PP_FOR_115_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(116, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_116
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(116, s),Ö, o, m)

	)

388 
	#BOOST_PP_FOR_116_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(117, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_117
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(117, s),Ö, o, m)

	)

389 
	#BOOST_PP_FOR_117_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(118, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_118
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(118, s),Ö, o, m)

	)

390 
	#BOOST_PP_FOR_118_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(119, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_119
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(119, s),Ö, o, m)

	)

391 
	#BOOST_PP_FOR_119_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(120, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_120
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(120, s),Ö, o, m)

	)

392 
	#BOOST_PP_FOR_120_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(121, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_121
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(121, s),Ö, o, m)

	)

393 
	#BOOST_PP_FOR_121_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(122, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_122
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(122, s),Ö, o, m)

	)

394 
	#BOOST_PP_FOR_122_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(123, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_123
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(123, s),Ö, o, m)

	)

395 
	#BOOST_PP_FOR_123_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(124, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_124
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(124, s),Ö, o, m)

	)

396 
	#BOOST_PP_FOR_124_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(125, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_125
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(125, s),Ö, o, m)

	)

397 
	#BOOST_PP_FOR_125_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(126, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_126
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(126, s),Ö, o, m)

	)

398 
	#BOOST_PP_FOR_126_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(127, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_127
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(127, s),Ö, o, m)

	)

399 
	#BOOST_PP_FOR_127_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(128, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_128
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(128, s),Ö, o, m)

	)

400 
	#BOOST_PP_FOR_128_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(129, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_129
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(129, s),Ö, o, m)

	)

401 
	#BOOST_PP_FOR_129_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(130, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_130
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(130, s),Ö, o, m)

	)

402 
	#BOOST_PP_FOR_130_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(131, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_131
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(131, s),Ö, o, m)

	)

403 
	#BOOST_PP_FOR_131_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(132, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_132
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(132, s),Ö, o, m)

	)

404 
	#BOOST_PP_FOR_132_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(133, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_133
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(133, s),Ö, o, m)

	)

405 
	#BOOST_PP_FOR_133_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(134, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_134
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(134, s),Ö, o, m)

	)

406 
	#BOOST_PP_FOR_134_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(135, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_135
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(135, s),Ö, o, m)

	)

407 
	#BOOST_PP_FOR_135_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(136, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_136
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(136, s),Ö, o, m)

	)

408 
	#BOOST_PP_FOR_136_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(137, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_137
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(137, s),Ö, o, m)

	)

409 
	#BOOST_PP_FOR_137_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(138, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_138
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(138, s),Ö, o, m)

	)

410 
	#BOOST_PP_FOR_138_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(139, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_139
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(139, s),Ö, o, m)

	)

411 
	#BOOST_PP_FOR_139_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(140, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_140
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(140, s),Ö, o, m)

	)

412 
	#BOOST_PP_FOR_140_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(141, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_141
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(141, s),Ö, o, m)

	)

413 
	#BOOST_PP_FOR_141_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(142, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_142
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(142, s),Ö, o, m)

	)

414 
	#BOOST_PP_FOR_142_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(143, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_143
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(143, s),Ö, o, m)

	)

415 
	#BOOST_PP_FOR_143_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(144, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_144
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(144, s),Ö, o, m)

	)

416 
	#BOOST_PP_FOR_144_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(145, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_145
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(145, s),Ö, o, m)

	)

417 
	#BOOST_PP_FOR_145_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(146, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_146
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(146, s),Ö, o, m)

	)

418 
	#BOOST_PP_FOR_146_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(147, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_147
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(147, s),Ö, o, m)

	)

419 
	#BOOST_PP_FOR_147_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(148, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_148
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(148, s),Ö, o, m)

	)

420 
	#BOOST_PP_FOR_148_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(149, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_149
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(149, s),Ö, o, m)

	)

421 
	#BOOST_PP_FOR_149_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(150, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_150
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(150, s),Ö, o, m)

	)

422 
	#BOOST_PP_FOR_150_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(151, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_151
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(151, s),Ö, o, m)

	)

423 
	#BOOST_PP_FOR_151_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(152, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_152
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(152, s),Ö, o, m)

	)

424 
	#BOOST_PP_FOR_152_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(153, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_153
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(153, s),Ö, o, m)

	)

425 
	#BOOST_PP_FOR_153_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(154, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_154
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(154, s),Ö, o, m)

	)

426 
	#BOOST_PP_FOR_154_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(155, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_155
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(155, s),Ö, o, m)

	)

427 
	#BOOST_PP_FOR_155_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(156, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_156
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(156, s),Ö, o, m)

	)

428 
	#BOOST_PP_FOR_156_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(157, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_157
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(157, s),Ö, o, m)

	)

429 
	#BOOST_PP_FOR_157_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(158, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_158
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(158, s),Ö, o, m)

	)

430 
	#BOOST_PP_FOR_158_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(159, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_159
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(159, s),Ö, o, m)

	)

431 
	#BOOST_PP_FOR_159_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(160, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_160
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(160, s),Ö, o, m)

	)

432 
	#BOOST_PP_FOR_160_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(161, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_161
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(161, s),Ö, o, m)

	)

433 
	#BOOST_PP_FOR_161_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(162, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_162
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(162, s),Ö, o, m)

	)

434 
	#BOOST_PP_FOR_162_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(163, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_163
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(163, s),Ö, o, m)

	)

435 
	#BOOST_PP_FOR_163_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(164, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_164
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(164, s),Ö, o, m)

	)

436 
	#BOOST_PP_FOR_164_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(165, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_165
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(165, s),Ö, o, m)

	)

437 
	#BOOST_PP_FOR_165_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(166, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_166
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(166, s),Ö, o, m)

	)

438 
	#BOOST_PP_FOR_166_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(167, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_167
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(167, s),Ö, o, m)

	)

439 
	#BOOST_PP_FOR_167_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(168, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_168
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(168, s),Ö, o, m)

	)

440 
	#BOOST_PP_FOR_168_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(169, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_169
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(169, s),Ö, o, m)

	)

441 
	#BOOST_PP_FOR_169_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(170, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_170
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(170, s),Ö, o, m)

	)

442 
	#BOOST_PP_FOR_170_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(171, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_171
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(171, s),Ö, o, m)

	)

443 
	#BOOST_PP_FOR_171_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(172, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_172
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(172, s),Ö, o, m)

	)

444 
	#BOOST_PP_FOR_172_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(173, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_173
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(173, s),Ö, o, m)

	)

445 
	#BOOST_PP_FOR_173_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(174, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_174
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(174, s),Ö, o, m)

	)

446 
	#BOOST_PP_FOR_174_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(175, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_175
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(175, s),Ö, o, m)

	)

447 
	#BOOST_PP_FOR_175_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(176, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_176
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(176, s),Ö, o, m)

	)

448 
	#BOOST_PP_FOR_176_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(177, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_177
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(177, s),Ö, o, m)

	)

449 
	#BOOST_PP_FOR_177_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(178, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_178
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(178, s),Ö, o, m)

	)

450 
	#BOOST_PP_FOR_178_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(179, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_179
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(179, s),Ö, o, m)

	)

451 
	#BOOST_PP_FOR_179_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(180, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_180
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(180, s),Ö, o, m)

	)

452 
	#BOOST_PP_FOR_180_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(181, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_181
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(181, s),Ö, o, m)

	)

453 
	#BOOST_PP_FOR_181_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(182, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_182
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(182, s),Ö, o, m)

	)

454 
	#BOOST_PP_FOR_182_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(183, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_183
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(183, s),Ö, o, m)

	)

455 
	#BOOST_PP_FOR_183_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(184, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_184
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(184, s),Ö, o, m)

	)

456 
	#BOOST_PP_FOR_184_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(185, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_185
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(185, s),Ö, o, m)

	)

457 
	#BOOST_PP_FOR_185_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(186, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_186
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(186, s),Ö, o, m)

	)

458 
	#BOOST_PP_FOR_186_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(187, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_187
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(187, s),Ö, o, m)

	)

459 
	#BOOST_PP_FOR_187_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(188, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_188
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(188, s),Ö, o, m)

	)

460 
	#BOOST_PP_FOR_188_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(189, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_189
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(189, s),Ö, o, m)

	)

461 
	#BOOST_PP_FOR_189_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(190, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_190
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(190, s),Ö, o, m)

	)

462 
	#BOOST_PP_FOR_190_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(191, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_191
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(191, s),Ö, o, m)

	)

463 
	#BOOST_PP_FOR_191_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(192, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_192
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(192, s),Ö, o, m)

	)

464 
	#BOOST_PP_FOR_192_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(193, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_193
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(193, s),Ö, o, m)

	)

465 
	#BOOST_PP_FOR_193_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(194, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_194
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(194, s),Ö, o, m)

	)

466 
	#BOOST_PP_FOR_194_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(195, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_195
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(195, s),Ö, o, m)

	)

467 
	#BOOST_PP_FOR_195_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(196, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_196
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(196, s),Ö, o, m)

	)

468 
	#BOOST_PP_FOR_196_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(197, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_197
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(197, s),Ö, o, m)

	)

469 
	#BOOST_PP_FOR_197_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(198, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_198
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(198, s),Ö, o, m)

	)

470 
	#BOOST_PP_FOR_198_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(199, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_199
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(199, s),Ö, o, m)

	)

471 
	#BOOST_PP_FOR_199_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(200, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_200
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(200, s),Ö, o, m)

	)

472 
	#BOOST_PP_FOR_200_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(201, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_201
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(201, s),Ö, o, m)

	)

473 
	#BOOST_PP_FOR_201_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(202, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_202
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(202, s),Ö, o, m)

	)

474 
	#BOOST_PP_FOR_202_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(203, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_203
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(203, s),Ö, o, m)

	)

475 
	#BOOST_PP_FOR_203_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(204, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_204
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(204, s),Ö, o, m)

	)

476 
	#BOOST_PP_FOR_204_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(205, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_205
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(205, s),Ö, o, m)

	)

477 
	#BOOST_PP_FOR_205_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(206, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_206
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(206, s),Ö, o, m)

	)

478 
	#BOOST_PP_FOR_206_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(207, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_207
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(207, s),Ö, o, m)

	)

479 
	#BOOST_PP_FOR_207_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(208, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_208
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(208, s),Ö, o, m)

	)

480 
	#BOOST_PP_FOR_208_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(209, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_209
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(209, s),Ö, o, m)

	)

481 
	#BOOST_PP_FOR_209_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(210, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_210
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(210, s),Ö, o, m)

	)

482 
	#BOOST_PP_FOR_210_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(211, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_211
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(211, s),Ö, o, m)

	)

483 
	#BOOST_PP_FOR_211_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(212, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_212
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(212, s),Ö, o, m)

	)

484 
	#BOOST_PP_FOR_212_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(213, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_213
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(213, s),Ö, o, m)

	)

485 
	#BOOST_PP_FOR_213_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(214, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_214
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(214, s),Ö, o, m)

	)

486 
	#BOOST_PP_FOR_214_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(215, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_215
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(215, s),Ö, o, m)

	)

487 
	#BOOST_PP_FOR_215_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(216, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_216
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(216, s),Ö, o, m)

	)

488 
	#BOOST_PP_FOR_216_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(217, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_217
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(217, s),Ö, o, m)

	)

489 
	#BOOST_PP_FOR_217_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(218, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_218
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(218, s),Ö, o, m)

	)

490 
	#BOOST_PP_FOR_218_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(219, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_219
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(219, s),Ö, o, m)

	)

491 
	#BOOST_PP_FOR_219_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(220, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_220
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(220, s),Ö, o, m)

	)

492 
	#BOOST_PP_FOR_220_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(221, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_221
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(221, s),Ö, o, m)

	)

493 
	#BOOST_PP_FOR_221_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(222, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_222
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(222, s),Ö, o, m)

	)

494 
	#BOOST_PP_FOR_222_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(223, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_223
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(223, s),Ö, o, m)

	)

495 
	#BOOST_PP_FOR_223_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(224, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_224
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(224, s),Ö, o, m)

	)

496 
	#BOOST_PP_FOR_224_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(225, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_225
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(225, s),Ö, o, m)

	)

497 
	#BOOST_PP_FOR_225_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(226, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_226
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(226, s),Ö, o, m)

	)

498 
	#BOOST_PP_FOR_226_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(227, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_227
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(227, s),Ö, o, m)

	)

499 
	#BOOST_PP_FOR_227_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(228, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_228
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(228, s),Ö, o, m)

	)

500 
	#BOOST_PP_FOR_228_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(229, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_229
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(229, s),Ö, o, m)

	)

501 
	#BOOST_PP_FOR_229_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(230, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_230
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(230, s),Ö, o, m)

	)

502 
	#BOOST_PP_FOR_230_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(231, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_231
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(231, s),Ö, o, m)

	)

503 
	#BOOST_PP_FOR_231_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(232, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_232
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(232, s),Ö, o, m)

	)

504 
	#BOOST_PP_FOR_232_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(233, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_233
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(233, s),Ö, o, m)

	)

505 
	#BOOST_PP_FOR_233_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(234, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_234
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(234, s),Ö, o, m)

	)

506 
	#BOOST_PP_FOR_234_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(235, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_235
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(235, s),Ö, o, m)

	)

507 
	#BOOST_PP_FOR_235_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(236, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_236
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(236, s),Ö, o, m)

	)

508 
	#BOOST_PP_FOR_236_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(237, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_237
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(237, s),Ö, o, m)

	)

509 
	#BOOST_PP_FOR_237_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(238, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_238
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(238, s),Ö, o, m)

	)

510 
	#BOOST_PP_FOR_238_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(239, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_239
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(239, s),Ö, o, m)

	)

511 
	#BOOST_PP_FOR_239_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(240, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_240
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(240, s),Ö, o, m)

	)

512 
	#BOOST_PP_FOR_240_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(241, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_241
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(241, s),Ö, o, m)

	)

513 
	#BOOST_PP_FOR_241_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(242, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_242
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(242, s),Ö, o, m)

	)

514 
	#BOOST_PP_FOR_242_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(243, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_243
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(243, s),Ö, o, m)

	)

515 
	#BOOST_PP_FOR_243_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(244, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_244
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(244, s),Ö, o, m)

	)

516 
	#BOOST_PP_FOR_244_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(245, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_245
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(245, s),Ö, o, m)

	)

517 
	#BOOST_PP_FOR_245_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(246, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_246
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(246, s),Ö, o, m)

	)

518 
	#BOOST_PP_FOR_246_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(247, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_247
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(247, s),Ö, o, m)

	)

519 
	#BOOST_PP_FOR_247_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(248, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_248
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(248, s),Ö, o, m)

	)

520 
	#BOOST_PP_FOR_248_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(249, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_249
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(249, s),Ö, o, m)

	)

521 
	#BOOST_PP_FOR_249_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(250, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_250
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(250, s),Ö, o, m)

	)

522 
	#BOOST_PP_FOR_250_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(251, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_251
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(251, s),Ö, o, m)

	)

523 
	#BOOST_PP_FOR_251_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(252, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_252
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(252, s),Ö, o, m)

	)

524 
	#BOOST_PP_FOR_252_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(253, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_253
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(253, s),Ö, o, m)

	)

525 
	#BOOST_PP_FOR_253_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(254, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_254
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(254, s),Ö, o, m)

	)

526 
	#BOOST_PP_FOR_254_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(255, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_255
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(255, s),Ö, o, m)

	)

527 
	#BOOST_PP_FOR_255_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(256, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_256
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(256, s),Ö, o, m)

	)

528 
	#BOOST_PP_FOR_256_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(257, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_257
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(257, s),Ö, o, m)

	)

	@/usr/include/boost/preprocessor/repetition/detail/edg/for.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_DETAIL_EDG_FOR_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_DETAIL_EDG_FOR_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/if.hµ
>

14 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

15 
#deföê
	#BOOST_PP_FOR_1
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_1_I
(s,Ö, o, m)

	)

16 
	#BOOST_PP_FOR_2
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_2_I
(s,Ö, o, m)

	)

17 
	#BOOST_PP_FOR_3
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_3_I
(s,Ö, o, m)

	)

18 
	#BOOST_PP_FOR_4
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_4_I
(s,Ö, o, m)

	)

19 
	#BOOST_PP_FOR_5
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_5_I
(s,Ö, o, m)

	)

20 
	#BOOST_PP_FOR_6
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_6_I
(s,Ö, o, m)

	)

21 
	#BOOST_PP_FOR_7
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_7_I
(s,Ö, o, m)

	)

22 
	#BOOST_PP_FOR_8
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_8_I
(s,Ö, o, m)

	)

23 
	#BOOST_PP_FOR_9
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_9_I
(s,Ö, o, m)

	)

24 
	#BOOST_PP_FOR_10
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_10_I
(s,Ö, o, m)

	)

25 
	#BOOST_PP_FOR_11
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_11_I
(s,Ö, o, m)

	)

26 
	#BOOST_PP_FOR_12
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_12_I
(s,Ö, o, m)

	)

27 
	#BOOST_PP_FOR_13
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_13_I
(s,Ö, o, m)

	)

28 
	#BOOST_PP_FOR_14
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_14_I
(s,Ö, o, m)

	)

29 
	#BOOST_PP_FOR_15
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_15_I
(s,Ö, o, m)

	)

30 
	#BOOST_PP_FOR_16
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_16_I
(s,Ö, o, m)

	)

31 
	#BOOST_PP_FOR_17
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_17_I
(s,Ö, o, m)

	)

32 
	#BOOST_PP_FOR_18
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_18_I
(s,Ö, o, m)

	)

33 
	#BOOST_PP_FOR_19
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_19_I
(s,Ö, o, m)

	)

34 
	#BOOST_PP_FOR_20
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_20_I
(s,Ö, o, m)

	)

35 
	#BOOST_PP_FOR_21
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_21_I
(s,Ö, o, m)

	)

36 
	#BOOST_PP_FOR_22
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_22_I
(s,Ö, o, m)

	)

37 
	#BOOST_PP_FOR_23
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_23_I
(s,Ö, o, m)

	)

38 
	#BOOST_PP_FOR_24
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_24_I
(s,Ö, o, m)

	)

39 
	#BOOST_PP_FOR_25
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_25_I
(s,Ö, o, m)

	)

40 
	#BOOST_PP_FOR_26
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_26_I
(s,Ö, o, m)

	)

41 
	#BOOST_PP_FOR_27
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_27_I
(s,Ö, o, m)

	)

42 
	#BOOST_PP_FOR_28
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_28_I
(s,Ö, o, m)

	)

43 
	#BOOST_PP_FOR_29
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_29_I
(s,Ö, o, m)

	)

44 
	#BOOST_PP_FOR_30
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_30_I
(s,Ö, o, m)

	)

45 
	#BOOST_PP_FOR_31
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_31_I
(s,Ö, o, m)

	)

46 
	#BOOST_PP_FOR_32
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_32_I
(s,Ö, o, m)

	)

47 
	#BOOST_PP_FOR_33
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_33_I
(s,Ö, o, m)

	)

48 
	#BOOST_PP_FOR_34
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_34_I
(s,Ö, o, m)

	)

49 
	#BOOST_PP_FOR_35
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_35_I
(s,Ö, o, m)

	)

50 
	#BOOST_PP_FOR_36
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_36_I
(s,Ö, o, m)

	)

51 
	#BOOST_PP_FOR_37
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_37_I
(s,Ö, o, m)

	)

52 
	#BOOST_PP_FOR_38
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_38_I
(s,Ö, o, m)

	)

53 
	#BOOST_PP_FOR_39
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_39_I
(s,Ö, o, m)

	)

54 
	#BOOST_PP_FOR_40
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_40_I
(s,Ö, o, m)

	)

55 
	#BOOST_PP_FOR_41
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_41_I
(s,Ö, o, m)

	)

56 
	#BOOST_PP_FOR_42
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_42_I
(s,Ö, o, m)

	)

57 
	#BOOST_PP_FOR_43
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_43_I
(s,Ö, o, m)

	)

58 
	#BOOST_PP_FOR_44
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_44_I
(s,Ö, o, m)

	)

59 
	#BOOST_PP_FOR_45
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_45_I
(s,Ö, o, m)

	)

60 
	#BOOST_PP_FOR_46
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_46_I
(s,Ö, o, m)

	)

61 
	#BOOST_PP_FOR_47
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_47_I
(s,Ö, o, m)

	)

62 
	#BOOST_PP_FOR_48
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_48_I
(s,Ö, o, m)

	)

63 
	#BOOST_PP_FOR_49
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_49_I
(s,Ö, o, m)

	)

64 
	#BOOST_PP_FOR_50
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_50_I
(s,Ö, o, m)

	)

65 
	#BOOST_PP_FOR_51
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_51_I
(s,Ö, o, m)

	)

66 
	#BOOST_PP_FOR_52
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_52_I
(s,Ö, o, m)

	)

67 
	#BOOST_PP_FOR_53
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_53_I
(s,Ö, o, m)

	)

68 
	#BOOST_PP_FOR_54
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_54_I
(s,Ö, o, m)

	)

69 
	#BOOST_PP_FOR_55
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_55_I
(s,Ö, o, m)

	)

70 
	#BOOST_PP_FOR_56
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_56_I
(s,Ö, o, m)

	)

71 
	#BOOST_PP_FOR_57
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_57_I
(s,Ö, o, m)

	)

72 
	#BOOST_PP_FOR_58
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_58_I
(s,Ö, o, m)

	)

73 
	#BOOST_PP_FOR_59
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_59_I
(s,Ö, o, m)

	)

74 
	#BOOST_PP_FOR_60
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_60_I
(s,Ö, o, m)

	)

75 
	#BOOST_PP_FOR_61
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_61_I
(s,Ö, o, m)

	)

76 
	#BOOST_PP_FOR_62
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_62_I
(s,Ö, o, m)

	)

77 
	#BOOST_PP_FOR_63
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_63_I
(s,Ö, o, m)

	)

78 
	#BOOST_PP_FOR_64
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_64_I
(s,Ö, o, m)

	)

79 
	#BOOST_PP_FOR_65
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_65_I
(s,Ö, o, m)

	)

80 
	#BOOST_PP_FOR_66
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_66_I
(s,Ö, o, m)

	)

81 
	#BOOST_PP_FOR_67
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_67_I
(s,Ö, o, m)

	)

82 
	#BOOST_PP_FOR_68
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_68_I
(s,Ö, o, m)

	)

83 
	#BOOST_PP_FOR_69
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_69_I
(s,Ö, o, m)

	)

84 
	#BOOST_PP_FOR_70
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_70_I
(s,Ö, o, m)

	)

85 
	#BOOST_PP_FOR_71
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_71_I
(s,Ö, o, m)

	)

86 
	#BOOST_PP_FOR_72
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_72_I
(s,Ö, o, m)

	)

87 
	#BOOST_PP_FOR_73
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_73_I
(s,Ö, o, m)

	)

88 
	#BOOST_PP_FOR_74
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_74_I
(s,Ö, o, m)

	)

89 
	#BOOST_PP_FOR_75
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_75_I
(s,Ö, o, m)

	)

90 
	#BOOST_PP_FOR_76
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_76_I
(s,Ö, o, m)

	)

91 
	#BOOST_PP_FOR_77
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_77_I
(s,Ö, o, m)

	)

92 
	#BOOST_PP_FOR_78
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_78_I
(s,Ö, o, m)

	)

93 
	#BOOST_PP_FOR_79
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_79_I
(s,Ö, o, m)

	)

94 
	#BOOST_PP_FOR_80
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_80_I
(s,Ö, o, m)

	)

95 
	#BOOST_PP_FOR_81
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_81_I
(s,Ö, o, m)

	)

96 
	#BOOST_PP_FOR_82
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_82_I
(s,Ö, o, m)

	)

97 
	#BOOST_PP_FOR_83
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_83_I
(s,Ö, o, m)

	)

98 
	#BOOST_PP_FOR_84
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_84_I
(s,Ö, o, m)

	)

99 
	#BOOST_PP_FOR_85
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_85_I
(s,Ö, o, m)

	)

100 
	#BOOST_PP_FOR_86
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_86_I
(s,Ö, o, m)

	)

101 
	#BOOST_PP_FOR_87
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_87_I
(s,Ö, o, m)

	)

102 
	#BOOST_PP_FOR_88
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_88_I
(s,Ö, o, m)

	)

103 
	#BOOST_PP_FOR_89
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_89_I
(s,Ö, o, m)

	)

104 
	#BOOST_PP_FOR_90
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_90_I
(s,Ö, o, m)

	)

105 
	#BOOST_PP_FOR_91
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_91_I
(s,Ö, o, m)

	)

106 
	#BOOST_PP_FOR_92
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_92_I
(s,Ö, o, m)

	)

107 
	#BOOST_PP_FOR_93
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_93_I
(s,Ö, o, m)

	)

108 
	#BOOST_PP_FOR_94
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_94_I
(s,Ö, o, m)

	)

109 
	#BOOST_PP_FOR_95
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_95_I
(s,Ö, o, m)

	)

110 
	#BOOST_PP_FOR_96
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_96_I
(s,Ö, o, m)

	)

111 
	#BOOST_PP_FOR_97
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_97_I
(s,Ö, o, m)

	)

112 
	#BOOST_PP_FOR_98
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_98_I
(s,Ö, o, m)

	)

113 
	#BOOST_PP_FOR_99
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_99_I
(s,Ö, o, m)

	)

114 
	#BOOST_PP_FOR_100
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_100_I
(s,Ö, o, m)

	)

115 
	#BOOST_PP_FOR_101
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_101_I
(s,Ö, o, m)

	)

116 
	#BOOST_PP_FOR_102
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_102_I
(s,Ö, o, m)

	)

117 
	#BOOST_PP_FOR_103
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_103_I
(s,Ö, o, m)

	)

118 
	#BOOST_PP_FOR_104
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_104_I
(s,Ö, o, m)

	)

119 
	#BOOST_PP_FOR_105
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_105_I
(s,Ö, o, m)

	)

120 
	#BOOST_PP_FOR_106
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_106_I
(s,Ö, o, m)

	)

121 
	#BOOST_PP_FOR_107
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_107_I
(s,Ö, o, m)

	)

122 
	#BOOST_PP_FOR_108
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_108_I
(s,Ö, o, m)

	)

123 
	#BOOST_PP_FOR_109
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_109_I
(s,Ö, o, m)

	)

124 
	#BOOST_PP_FOR_110
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_110_I
(s,Ö, o, m)

	)

125 
	#BOOST_PP_FOR_111
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_111_I
(s,Ö, o, m)

	)

126 
	#BOOST_PP_FOR_112
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_112_I
(s,Ö, o, m)

	)

127 
	#BOOST_PP_FOR_113
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_113_I
(s,Ö, o, m)

	)

128 
	#BOOST_PP_FOR_114
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_114_I
(s,Ö, o, m)

	)

129 
	#BOOST_PP_FOR_115
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_115_I
(s,Ö, o, m)

	)

130 
	#BOOST_PP_FOR_116
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_116_I
(s,Ö, o, m)

	)

131 
	#BOOST_PP_FOR_117
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_117_I
(s,Ö, o, m)

	)

132 
	#BOOST_PP_FOR_118
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_118_I
(s,Ö, o, m)

	)

133 
	#BOOST_PP_FOR_119
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_119_I
(s,Ö, o, m)

	)

134 
	#BOOST_PP_FOR_120
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_120_I
(s,Ö, o, m)

	)

135 
	#BOOST_PP_FOR_121
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_121_I
(s,Ö, o, m)

	)

136 
	#BOOST_PP_FOR_122
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_122_I
(s,Ö, o, m)

	)

137 
	#BOOST_PP_FOR_123
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_123_I
(s,Ö, o, m)

	)

138 
	#BOOST_PP_FOR_124
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_124_I
(s,Ö, o, m)

	)

139 
	#BOOST_PP_FOR_125
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_125_I
(s,Ö, o, m)

	)

140 
	#BOOST_PP_FOR_126
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_126_I
(s,Ö, o, m)

	)

141 
	#BOOST_PP_FOR_127
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_127_I
(s,Ö, o, m)

	)

142 
	#BOOST_PP_FOR_128
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_128_I
(s,Ö, o, m)

	)

143 
	#BOOST_PP_FOR_129
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_129_I
(s,Ö, o, m)

	)

144 
	#BOOST_PP_FOR_130
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_130_I
(s,Ö, o, m)

	)

145 
	#BOOST_PP_FOR_131
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_131_I
(s,Ö, o, m)

	)

146 
	#BOOST_PP_FOR_132
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_132_I
(s,Ö, o, m)

	)

147 
	#BOOST_PP_FOR_133
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_133_I
(s,Ö, o, m)

	)

148 
	#BOOST_PP_FOR_134
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_134_I
(s,Ö, o, m)

	)

149 
	#BOOST_PP_FOR_135
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_135_I
(s,Ö, o, m)

	)

150 
	#BOOST_PP_FOR_136
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_136_I
(s,Ö, o, m)

	)

151 
	#BOOST_PP_FOR_137
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_137_I
(s,Ö, o, m)

	)

152 
	#BOOST_PP_FOR_138
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_138_I
(s,Ö, o, m)

	)

153 
	#BOOST_PP_FOR_139
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_139_I
(s,Ö, o, m)

	)

154 
	#BOOST_PP_FOR_140
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_140_I
(s,Ö, o, m)

	)

155 
	#BOOST_PP_FOR_141
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_141_I
(s,Ö, o, m)

	)

156 
	#BOOST_PP_FOR_142
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_142_I
(s,Ö, o, m)

	)

157 
	#BOOST_PP_FOR_143
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_143_I
(s,Ö, o, m)

	)

158 
	#BOOST_PP_FOR_144
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_144_I
(s,Ö, o, m)

	)

159 
	#BOOST_PP_FOR_145
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_145_I
(s,Ö, o, m)

	)

160 
	#BOOST_PP_FOR_146
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_146_I
(s,Ö, o, m)

	)

161 
	#BOOST_PP_FOR_147
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_147_I
(s,Ö, o, m)

	)

162 
	#BOOST_PP_FOR_148
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_148_I
(s,Ö, o, m)

	)

163 
	#BOOST_PP_FOR_149
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_149_I
(s,Ö, o, m)

	)

164 
	#BOOST_PP_FOR_150
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_150_I
(s,Ö, o, m)

	)

165 
	#BOOST_PP_FOR_151
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_151_I
(s,Ö, o, m)

	)

166 
	#BOOST_PP_FOR_152
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_152_I
(s,Ö, o, m)

	)

167 
	#BOOST_PP_FOR_153
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_153_I
(s,Ö, o, m)

	)

168 
	#BOOST_PP_FOR_154
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_154_I
(s,Ö, o, m)

	)

169 
	#BOOST_PP_FOR_155
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_155_I
(s,Ö, o, m)

	)

170 
	#BOOST_PP_FOR_156
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_156_I
(s,Ö, o, m)

	)

171 
	#BOOST_PP_FOR_157
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_157_I
(s,Ö, o, m)

	)

172 
	#BOOST_PP_FOR_158
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_158_I
(s,Ö, o, m)

	)

173 
	#BOOST_PP_FOR_159
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_159_I
(s,Ö, o, m)

	)

174 
	#BOOST_PP_FOR_160
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_160_I
(s,Ö, o, m)

	)

175 
	#BOOST_PP_FOR_161
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_161_I
(s,Ö, o, m)

	)

176 
	#BOOST_PP_FOR_162
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_162_I
(s,Ö, o, m)

	)

177 
	#BOOST_PP_FOR_163
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_163_I
(s,Ö, o, m)

	)

178 
	#BOOST_PP_FOR_164
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_164_I
(s,Ö, o, m)

	)

179 
	#BOOST_PP_FOR_165
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_165_I
(s,Ö, o, m)

	)

180 
	#BOOST_PP_FOR_166
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_166_I
(s,Ö, o, m)

	)

181 
	#BOOST_PP_FOR_167
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_167_I
(s,Ö, o, m)

	)

182 
	#BOOST_PP_FOR_168
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_168_I
(s,Ö, o, m)

	)

183 
	#BOOST_PP_FOR_169
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_169_I
(s,Ö, o, m)

	)

184 
	#BOOST_PP_FOR_170
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_170_I
(s,Ö, o, m)

	)

185 
	#BOOST_PP_FOR_171
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_171_I
(s,Ö, o, m)

	)

186 
	#BOOST_PP_FOR_172
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_172_I
(s,Ö, o, m)

	)

187 
	#BOOST_PP_FOR_173
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_173_I
(s,Ö, o, m)

	)

188 
	#BOOST_PP_FOR_174
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_174_I
(s,Ö, o, m)

	)

189 
	#BOOST_PP_FOR_175
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_175_I
(s,Ö, o, m)

	)

190 
	#BOOST_PP_FOR_176
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_176_I
(s,Ö, o, m)

	)

191 
	#BOOST_PP_FOR_177
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_177_I
(s,Ö, o, m)

	)

192 
	#BOOST_PP_FOR_178
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_178_I
(s,Ö, o, m)

	)

193 
	#BOOST_PP_FOR_179
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_179_I
(s,Ö, o, m)

	)

194 
	#BOOST_PP_FOR_180
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_180_I
(s,Ö, o, m)

	)

195 
	#BOOST_PP_FOR_181
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_181_I
(s,Ö, o, m)

	)

196 
	#BOOST_PP_FOR_182
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_182_I
(s,Ö, o, m)

	)

197 
	#BOOST_PP_FOR_183
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_183_I
(s,Ö, o, m)

	)

198 
	#BOOST_PP_FOR_184
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_184_I
(s,Ö, o, m)

	)

199 
	#BOOST_PP_FOR_185
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_185_I
(s,Ö, o, m)

	)

200 
	#BOOST_PP_FOR_186
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_186_I
(s,Ö, o, m)

	)

201 
	#BOOST_PP_FOR_187
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_187_I
(s,Ö, o, m)

	)

202 
	#BOOST_PP_FOR_188
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_188_I
(s,Ö, o, m)

	)

203 
	#BOOST_PP_FOR_189
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_189_I
(s,Ö, o, m)

	)

204 
	#BOOST_PP_FOR_190
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_190_I
(s,Ö, o, m)

	)

205 
	#BOOST_PP_FOR_191
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_191_I
(s,Ö, o, m)

	)

206 
	#BOOST_PP_FOR_192
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_192_I
(s,Ö, o, m)

	)

207 
	#BOOST_PP_FOR_193
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_193_I
(s,Ö, o, m)

	)

208 
	#BOOST_PP_FOR_194
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_194_I
(s,Ö, o, m)

	)

209 
	#BOOST_PP_FOR_195
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_195_I
(s,Ö, o, m)

	)

210 
	#BOOST_PP_FOR_196
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_196_I
(s,Ö, o, m)

	)

211 
	#BOOST_PP_FOR_197
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_197_I
(s,Ö, o, m)

	)

212 
	#BOOST_PP_FOR_198
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_198_I
(s,Ö, o, m)

	)

213 
	#BOOST_PP_FOR_199
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_199_I
(s,Ö, o, m)

	)

214 
	#BOOST_PP_FOR_200
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_200_I
(s,Ö, o, m)

	)

215 
	#BOOST_PP_FOR_201
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_201_I
(s,Ö, o, m)

	)

216 
	#BOOST_PP_FOR_202
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_202_I
(s,Ö, o, m)

	)

217 
	#BOOST_PP_FOR_203
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_203_I
(s,Ö, o, m)

	)

218 
	#BOOST_PP_FOR_204
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_204_I
(s,Ö, o, m)

	)

219 
	#BOOST_PP_FOR_205
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_205_I
(s,Ö, o, m)

	)

220 
	#BOOST_PP_FOR_206
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_206_I
(s,Ö, o, m)

	)

221 
	#BOOST_PP_FOR_207
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_207_I
(s,Ö, o, m)

	)

222 
	#BOOST_PP_FOR_208
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_208_I
(s,Ö, o, m)

	)

223 
	#BOOST_PP_FOR_209
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_209_I
(s,Ö, o, m)

	)

224 
	#BOOST_PP_FOR_210
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_210_I
(s,Ö, o, m)

	)

225 
	#BOOST_PP_FOR_211
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_211_I
(s,Ö, o, m)

	)

226 
	#BOOST_PP_FOR_212
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_212_I
(s,Ö, o, m)

	)

227 
	#BOOST_PP_FOR_213
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_213_I
(s,Ö, o, m)

	)

228 
	#BOOST_PP_FOR_214
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_214_I
(s,Ö, o, m)

	)

229 
	#BOOST_PP_FOR_215
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_215_I
(s,Ö, o, m)

	)

230 
	#BOOST_PP_FOR_216
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_216_I
(s,Ö, o, m)

	)

231 
	#BOOST_PP_FOR_217
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_217_I
(s,Ö, o, m)

	)

232 
	#BOOST_PP_FOR_218
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_218_I
(s,Ö, o, m)

	)

233 
	#BOOST_PP_FOR_219
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_219_I
(s,Ö, o, m)

	)

234 
	#BOOST_PP_FOR_220
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_220_I
(s,Ö, o, m)

	)

235 
	#BOOST_PP_FOR_221
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_221_I
(s,Ö, o, m)

	)

236 
	#BOOST_PP_FOR_222
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_222_I
(s,Ö, o, m)

	)

237 
	#BOOST_PP_FOR_223
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_223_I
(s,Ö, o, m)

	)

238 
	#BOOST_PP_FOR_224
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_224_I
(s,Ö, o, m)

	)

239 
	#BOOST_PP_FOR_225
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_225_I
(s,Ö, o, m)

	)

240 
	#BOOST_PP_FOR_226
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_226_I
(s,Ö, o, m)

	)

241 
	#BOOST_PP_FOR_227
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_227_I
(s,Ö, o, m)

	)

242 
	#BOOST_PP_FOR_228
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_228_I
(s,Ö, o, m)

	)

243 
	#BOOST_PP_FOR_229
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_229_I
(s,Ö, o, m)

	)

244 
	#BOOST_PP_FOR_230
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_230_I
(s,Ö, o, m)

	)

245 
	#BOOST_PP_FOR_231
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_231_I
(s,Ö, o, m)

	)

246 
	#BOOST_PP_FOR_232
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_232_I
(s,Ö, o, m)

	)

247 
	#BOOST_PP_FOR_233
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_233_I
(s,Ö, o, m)

	)

248 
	#BOOST_PP_FOR_234
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_234_I
(s,Ö, o, m)

	)

249 
	#BOOST_PP_FOR_235
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_235_I
(s,Ö, o, m)

	)

250 
	#BOOST_PP_FOR_236
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_236_I
(s,Ö, o, m)

	)

251 
	#BOOST_PP_FOR_237
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_237_I
(s,Ö, o, m)

	)

252 
	#BOOST_PP_FOR_238
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_238_I
(s,Ö, o, m)

	)

253 
	#BOOST_PP_FOR_239
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_239_I
(s,Ö, o, m)

	)

254 
	#BOOST_PP_FOR_240
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_240_I
(s,Ö, o, m)

	)

255 
	#BOOST_PP_FOR_241
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_241_I
(s,Ö, o, m)

	)

256 
	#BOOST_PP_FOR_242
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_242_I
(s,Ö, o, m)

	)

257 
	#BOOST_PP_FOR_243
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_243_I
(s,Ö, o, m)

	)

258 
	#BOOST_PP_FOR_244
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_244_I
(s,Ö, o, m)

	)

259 
	#BOOST_PP_FOR_245
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_245_I
(s,Ö, o, m)

	)

260 
	#BOOST_PP_FOR_246
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_246_I
(s,Ö, o, m)

	)

261 
	#BOOST_PP_FOR_247
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_247_I
(s,Ö, o, m)

	)

262 
	#BOOST_PP_FOR_248
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_248_I
(s,Ö, o, m)

	)

263 
	#BOOST_PP_FOR_249
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_249_I
(s,Ö, o, m)

	)

264 
	#BOOST_PP_FOR_250
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_250_I
(s,Ö, o, m)

	)

265 
	#BOOST_PP_FOR_251
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_251_I
(s,Ö, o, m)

	)

266 
	#BOOST_PP_FOR_252
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_252_I
(s,Ö, o, m)

	)

267 
	#BOOST_PP_FOR_253
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_253_I
(s,Ö, o, m)

	)

268 
	#BOOST_PP_FOR_254
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_254_I
(s,Ö, o, m)

	)

269 
	#BOOST_PP_FOR_255
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_255_I
(s,Ö, o, m)

	)

270 
	#BOOST_PP_FOR_256
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_256_I
(s,Ö, o, m)

	)

271 
#deföê
	#BOOST_PP_FOR_1_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(2, s), m, 
BOOST_PP_TUPLE_EAT_2
)(2, sËBOOST_PP_IF’(2, s), 
BOOST_PP_FOR_2
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(2, s),Ö, o, m)

	)

272 
	#BOOST_PP_FOR_2_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(3, s), m, 
BOOST_PP_TUPLE_EAT_2
)(3, sËBOOST_PP_IF’(3, s), 
BOOST_PP_FOR_3
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(3, s),Ö, o, m)

	)

273 
	#BOOST_PP_FOR_3_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(4, s), m, 
BOOST_PP_TUPLE_EAT_2
)(4, sËBOOST_PP_IF’(4, s), 
BOOST_PP_FOR_4
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(4, s),Ö, o, m)

	)

274 
	#BOOST_PP_FOR_4_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(5, s), m, 
BOOST_PP_TUPLE_EAT_2
)(5, sËBOOST_PP_IF’(5, s), 
BOOST_PP_FOR_5
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(5, s),Ö, o, m)

	)

275 
	#BOOST_PP_FOR_5_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(6, s), m, 
BOOST_PP_TUPLE_EAT_2
)(6, sËBOOST_PP_IF’(6, s), 
BOOST_PP_FOR_6
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(6, s),Ö, o, m)

	)

276 
	#BOOST_PP_FOR_6_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(7, s), m, 
BOOST_PP_TUPLE_EAT_2
)(7, sËBOOST_PP_IF’(7, s), 
BOOST_PP_FOR_7
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(7, s),Ö, o, m)

	)

277 
	#BOOST_PP_FOR_7_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(8, s), m, 
BOOST_PP_TUPLE_EAT_2
)(8, sËBOOST_PP_IF’(8, s), 
BOOST_PP_FOR_8
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(8, s),Ö, o, m)

	)

278 
	#BOOST_PP_FOR_8_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(9, s), m, 
BOOST_PP_TUPLE_EAT_2
)(9, sËBOOST_PP_IF’(9, s), 
BOOST_PP_FOR_9
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(9, s),Ö, o, m)

	)

279 
	#BOOST_PP_FOR_9_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(10, s), m, 
BOOST_PP_TUPLE_EAT_2
)(10, sËBOOST_PP_IF’(10, s), 
BOOST_PP_FOR_10
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(10, s),Ö, o, m)

	)

280 
	#BOOST_PP_FOR_10_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(11, s), m, 
BOOST_PP_TUPLE_EAT_2
)(11, sËBOOST_PP_IF’(11, s), 
BOOST_PP_FOR_11
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(11, s),Ö, o, m)

	)

281 
	#BOOST_PP_FOR_11_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(12, s), m, 
BOOST_PP_TUPLE_EAT_2
)(12, sËBOOST_PP_IF’(12, s), 
BOOST_PP_FOR_12
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(12, s),Ö, o, m)

	)

282 
	#BOOST_PP_FOR_12_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(13, s), m, 
BOOST_PP_TUPLE_EAT_2
)(13, sËBOOST_PP_IF’(13, s), 
BOOST_PP_FOR_13
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(13, s),Ö, o, m)

	)

283 
	#BOOST_PP_FOR_13_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(14, s), m, 
BOOST_PP_TUPLE_EAT_2
)(14, sËBOOST_PP_IF’(14, s), 
BOOST_PP_FOR_14
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(14, s),Ö, o, m)

	)

284 
	#BOOST_PP_FOR_14_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(15, s), m, 
BOOST_PP_TUPLE_EAT_2
)(15, sËBOOST_PP_IF’(15, s), 
BOOST_PP_FOR_15
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(15, s),Ö, o, m)

	)

285 
	#BOOST_PP_FOR_15_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(16, s), m, 
BOOST_PP_TUPLE_EAT_2
)(16, sËBOOST_PP_IF’(16, s), 
BOOST_PP_FOR_16
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(16, s),Ö, o, m)

	)

286 
	#BOOST_PP_FOR_16_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(17, s), m, 
BOOST_PP_TUPLE_EAT_2
)(17, sËBOOST_PP_IF’(17, s), 
BOOST_PP_FOR_17
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(17, s),Ö, o, m)

	)

287 
	#BOOST_PP_FOR_17_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(18, s), m, 
BOOST_PP_TUPLE_EAT_2
)(18, sËBOOST_PP_IF’(18, s), 
BOOST_PP_FOR_18
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(18, s),Ö, o, m)

	)

288 
	#BOOST_PP_FOR_18_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(19, s), m, 
BOOST_PP_TUPLE_EAT_2
)(19, sËBOOST_PP_IF’(19, s), 
BOOST_PP_FOR_19
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(19, s),Ö, o, m)

	)

289 
	#BOOST_PP_FOR_19_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(20, s), m, 
BOOST_PP_TUPLE_EAT_2
)(20, sËBOOST_PP_IF’(20, s), 
BOOST_PP_FOR_20
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(20, s),Ö, o, m)

	)

290 
	#BOOST_PP_FOR_20_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(21, s), m, 
BOOST_PP_TUPLE_EAT_2
)(21, sËBOOST_PP_IF’(21, s), 
BOOST_PP_FOR_21
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(21, s),Ö, o, m)

	)

291 
	#BOOST_PP_FOR_21_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(22, s), m, 
BOOST_PP_TUPLE_EAT_2
)(22, sËBOOST_PP_IF’(22, s), 
BOOST_PP_FOR_22
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(22, s),Ö, o, m)

	)

292 
	#BOOST_PP_FOR_22_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(23, s), m, 
BOOST_PP_TUPLE_EAT_2
)(23, sËBOOST_PP_IF’(23, s), 
BOOST_PP_FOR_23
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(23, s),Ö, o, m)

	)

293 
	#BOOST_PP_FOR_23_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(24, s), m, 
BOOST_PP_TUPLE_EAT_2
)(24, sËBOOST_PP_IF’(24, s), 
BOOST_PP_FOR_24
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(24, s),Ö, o, m)

	)

294 
	#BOOST_PP_FOR_24_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(25, s), m, 
BOOST_PP_TUPLE_EAT_2
)(25, sËBOOST_PP_IF’(25, s), 
BOOST_PP_FOR_25
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(25, s),Ö, o, m)

	)

295 
	#BOOST_PP_FOR_25_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(26, s), m, 
BOOST_PP_TUPLE_EAT_2
)(26, sËBOOST_PP_IF’(26, s), 
BOOST_PP_FOR_26
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(26, s),Ö, o, m)

	)

296 
	#BOOST_PP_FOR_26_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(27, s), m, 
BOOST_PP_TUPLE_EAT_2
)(27, sËBOOST_PP_IF’(27, s), 
BOOST_PP_FOR_27
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(27, s),Ö, o, m)

	)

297 
	#BOOST_PP_FOR_27_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(28, s), m, 
BOOST_PP_TUPLE_EAT_2
)(28, sËBOOST_PP_IF’(28, s), 
BOOST_PP_FOR_28
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(28, s),Ö, o, m)

	)

298 
	#BOOST_PP_FOR_28_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(29, s), m, 
BOOST_PP_TUPLE_EAT_2
)(29, sËBOOST_PP_IF’(29, s), 
BOOST_PP_FOR_29
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(29, s),Ö, o, m)

	)

299 
	#BOOST_PP_FOR_29_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(30, s), m, 
BOOST_PP_TUPLE_EAT_2
)(30, sËBOOST_PP_IF’(30, s), 
BOOST_PP_FOR_30
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(30, s),Ö, o, m)

	)

300 
	#BOOST_PP_FOR_30_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(31, s), m, 
BOOST_PP_TUPLE_EAT_2
)(31, sËBOOST_PP_IF’(31, s), 
BOOST_PP_FOR_31
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(31, s),Ö, o, m)

	)

301 
	#BOOST_PP_FOR_31_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(32, s), m, 
BOOST_PP_TUPLE_EAT_2
)(32, sËBOOST_PP_IF’(32, s), 
BOOST_PP_FOR_32
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(32, s),Ö, o, m)

	)

302 
	#BOOST_PP_FOR_32_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(33, s), m, 
BOOST_PP_TUPLE_EAT_2
)(33, sËBOOST_PP_IF’(33, s), 
BOOST_PP_FOR_33
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(33, s),Ö, o, m)

	)

303 
	#BOOST_PP_FOR_33_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(34, s), m, 
BOOST_PP_TUPLE_EAT_2
)(34, sËBOOST_PP_IF’(34, s), 
BOOST_PP_FOR_34
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(34, s),Ö, o, m)

	)

304 
	#BOOST_PP_FOR_34_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(35, s), m, 
BOOST_PP_TUPLE_EAT_2
)(35, sËBOOST_PP_IF’(35, s), 
BOOST_PP_FOR_35
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(35, s),Ö, o, m)

	)

305 
	#BOOST_PP_FOR_35_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(36, s), m, 
BOOST_PP_TUPLE_EAT_2
)(36, sËBOOST_PP_IF’(36, s), 
BOOST_PP_FOR_36
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(36, s),Ö, o, m)

	)

306 
	#BOOST_PP_FOR_36_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(37, s), m, 
BOOST_PP_TUPLE_EAT_2
)(37, sËBOOST_PP_IF’(37, s), 
BOOST_PP_FOR_37
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(37, s),Ö, o, m)

	)

307 
	#BOOST_PP_FOR_37_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(38, s), m, 
BOOST_PP_TUPLE_EAT_2
)(38, sËBOOST_PP_IF’(38, s), 
BOOST_PP_FOR_38
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(38, s),Ö, o, m)

	)

308 
	#BOOST_PP_FOR_38_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(39, s), m, 
BOOST_PP_TUPLE_EAT_2
)(39, sËBOOST_PP_IF’(39, s), 
BOOST_PP_FOR_39
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(39, s),Ö, o, m)

	)

309 
	#BOOST_PP_FOR_39_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(40, s), m, 
BOOST_PP_TUPLE_EAT_2
)(40, sËBOOST_PP_IF’(40, s), 
BOOST_PP_FOR_40
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(40, s),Ö, o, m)

	)

310 
	#BOOST_PP_FOR_40_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(41, s), m, 
BOOST_PP_TUPLE_EAT_2
)(41, sËBOOST_PP_IF’(41, s), 
BOOST_PP_FOR_41
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(41, s),Ö, o, m)

	)

311 
	#BOOST_PP_FOR_41_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(42, s), m, 
BOOST_PP_TUPLE_EAT_2
)(42, sËBOOST_PP_IF’(42, s), 
BOOST_PP_FOR_42
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(42, s),Ö, o, m)

	)

312 
	#BOOST_PP_FOR_42_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(43, s), m, 
BOOST_PP_TUPLE_EAT_2
)(43, sËBOOST_PP_IF’(43, s), 
BOOST_PP_FOR_43
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(43, s),Ö, o, m)

	)

313 
	#BOOST_PP_FOR_43_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(44, s), m, 
BOOST_PP_TUPLE_EAT_2
)(44, sËBOOST_PP_IF’(44, s), 
BOOST_PP_FOR_44
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(44, s),Ö, o, m)

	)

314 
	#BOOST_PP_FOR_44_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(45, s), m, 
BOOST_PP_TUPLE_EAT_2
)(45, sËBOOST_PP_IF’(45, s), 
BOOST_PP_FOR_45
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(45, s),Ö, o, m)

	)

315 
	#BOOST_PP_FOR_45_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(46, s), m, 
BOOST_PP_TUPLE_EAT_2
)(46, sËBOOST_PP_IF’(46, s), 
BOOST_PP_FOR_46
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(46, s),Ö, o, m)

	)

316 
	#BOOST_PP_FOR_46_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(47, s), m, 
BOOST_PP_TUPLE_EAT_2
)(47, sËBOOST_PP_IF’(47, s), 
BOOST_PP_FOR_47
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(47, s),Ö, o, m)

	)

317 
	#BOOST_PP_FOR_47_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(48, s), m, 
BOOST_PP_TUPLE_EAT_2
)(48, sËBOOST_PP_IF’(48, s), 
BOOST_PP_FOR_48
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(48, s),Ö, o, m)

	)

318 
	#BOOST_PP_FOR_48_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(49, s), m, 
BOOST_PP_TUPLE_EAT_2
)(49, sËBOOST_PP_IF’(49, s), 
BOOST_PP_FOR_49
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(49, s),Ö, o, m)

	)

319 
	#BOOST_PP_FOR_49_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(50, s), m, 
BOOST_PP_TUPLE_EAT_2
)(50, sËBOOST_PP_IF’(50, s), 
BOOST_PP_FOR_50
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(50, s),Ö, o, m)

	)

320 
	#BOOST_PP_FOR_50_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(51, s), m, 
BOOST_PP_TUPLE_EAT_2
)(51, sËBOOST_PP_IF’(51, s), 
BOOST_PP_FOR_51
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(51, s),Ö, o, m)

	)

321 
	#BOOST_PP_FOR_51_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(52, s), m, 
BOOST_PP_TUPLE_EAT_2
)(52, sËBOOST_PP_IF’(52, s), 
BOOST_PP_FOR_52
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(52, s),Ö, o, m)

	)

322 
	#BOOST_PP_FOR_52_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(53, s), m, 
BOOST_PP_TUPLE_EAT_2
)(53, sËBOOST_PP_IF’(53, s), 
BOOST_PP_FOR_53
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(53, s),Ö, o, m)

	)

323 
	#BOOST_PP_FOR_53_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(54, s), m, 
BOOST_PP_TUPLE_EAT_2
)(54, sËBOOST_PP_IF’(54, s), 
BOOST_PP_FOR_54
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(54, s),Ö, o, m)

	)

324 
	#BOOST_PP_FOR_54_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(55, s), m, 
BOOST_PP_TUPLE_EAT_2
)(55, sËBOOST_PP_IF’(55, s), 
BOOST_PP_FOR_55
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(55, s),Ö, o, m)

	)

325 
	#BOOST_PP_FOR_55_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(56, s), m, 
BOOST_PP_TUPLE_EAT_2
)(56, sËBOOST_PP_IF’(56, s), 
BOOST_PP_FOR_56
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(56, s),Ö, o, m)

	)

326 
	#BOOST_PP_FOR_56_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(57, s), m, 
BOOST_PP_TUPLE_EAT_2
)(57, sËBOOST_PP_IF’(57, s), 
BOOST_PP_FOR_57
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(57, s),Ö, o, m)

	)

327 
	#BOOST_PP_FOR_57_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(58, s), m, 
BOOST_PP_TUPLE_EAT_2
)(58, sËBOOST_PP_IF’(58, s), 
BOOST_PP_FOR_58
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(58, s),Ö, o, m)

	)

328 
	#BOOST_PP_FOR_58_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(59, s), m, 
BOOST_PP_TUPLE_EAT_2
)(59, sËBOOST_PP_IF’(59, s), 
BOOST_PP_FOR_59
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(59, s),Ö, o, m)

	)

329 
	#BOOST_PP_FOR_59_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(60, s), m, 
BOOST_PP_TUPLE_EAT_2
)(60, sËBOOST_PP_IF’(60, s), 
BOOST_PP_FOR_60
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(60, s),Ö, o, m)

	)

330 
	#BOOST_PP_FOR_60_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(61, s), m, 
BOOST_PP_TUPLE_EAT_2
)(61, sËBOOST_PP_IF’(61, s), 
BOOST_PP_FOR_61
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(61, s),Ö, o, m)

	)

331 
	#BOOST_PP_FOR_61_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(62, s), m, 
BOOST_PP_TUPLE_EAT_2
)(62, sËBOOST_PP_IF’(62, s), 
BOOST_PP_FOR_62
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(62, s),Ö, o, m)

	)

332 
	#BOOST_PP_FOR_62_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(63, s), m, 
BOOST_PP_TUPLE_EAT_2
)(63, sËBOOST_PP_IF’(63, s), 
BOOST_PP_FOR_63
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(63, s),Ö, o, m)

	)

333 
	#BOOST_PP_FOR_63_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(64, s), m, 
BOOST_PP_TUPLE_EAT_2
)(64, sËBOOST_PP_IF’(64, s), 
BOOST_PP_FOR_64
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(64, s),Ö, o, m)

	)

334 
	#BOOST_PP_FOR_64_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(65, s), m, 
BOOST_PP_TUPLE_EAT_2
)(65, sËBOOST_PP_IF’(65, s), 
BOOST_PP_FOR_65
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(65, s),Ö, o, m)

	)

335 
	#BOOST_PP_FOR_65_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(66, s), m, 
BOOST_PP_TUPLE_EAT_2
)(66, sËBOOST_PP_IF’(66, s), 
BOOST_PP_FOR_66
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(66, s),Ö, o, m)

	)

336 
	#BOOST_PP_FOR_66_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(67, s), m, 
BOOST_PP_TUPLE_EAT_2
)(67, sËBOOST_PP_IF’(67, s), 
BOOST_PP_FOR_67
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(67, s),Ö, o, m)

	)

337 
	#BOOST_PP_FOR_67_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(68, s), m, 
BOOST_PP_TUPLE_EAT_2
)(68, sËBOOST_PP_IF’(68, s), 
BOOST_PP_FOR_68
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(68, s),Ö, o, m)

	)

338 
	#BOOST_PP_FOR_68_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(69, s), m, 
BOOST_PP_TUPLE_EAT_2
)(69, sËBOOST_PP_IF’(69, s), 
BOOST_PP_FOR_69
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(69, s),Ö, o, m)

	)

339 
	#BOOST_PP_FOR_69_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(70, s), m, 
BOOST_PP_TUPLE_EAT_2
)(70, sËBOOST_PP_IF’(70, s), 
BOOST_PP_FOR_70
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(70, s),Ö, o, m)

	)

340 
	#BOOST_PP_FOR_70_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(71, s), m, 
BOOST_PP_TUPLE_EAT_2
)(71, sËBOOST_PP_IF’(71, s), 
BOOST_PP_FOR_71
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(71, s),Ö, o, m)

	)

341 
	#BOOST_PP_FOR_71_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(72, s), m, 
BOOST_PP_TUPLE_EAT_2
)(72, sËBOOST_PP_IF’(72, s), 
BOOST_PP_FOR_72
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(72, s),Ö, o, m)

	)

342 
	#BOOST_PP_FOR_72_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(73, s), m, 
BOOST_PP_TUPLE_EAT_2
)(73, sËBOOST_PP_IF’(73, s), 
BOOST_PP_FOR_73
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(73, s),Ö, o, m)

	)

343 
	#BOOST_PP_FOR_73_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(74, s), m, 
BOOST_PP_TUPLE_EAT_2
)(74, sËBOOST_PP_IF’(74, s), 
BOOST_PP_FOR_74
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(74, s),Ö, o, m)

	)

344 
	#BOOST_PP_FOR_74_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(75, s), m, 
BOOST_PP_TUPLE_EAT_2
)(75, sËBOOST_PP_IF’(75, s), 
BOOST_PP_FOR_75
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(75, s),Ö, o, m)

	)

345 
	#BOOST_PP_FOR_75_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(76, s), m, 
BOOST_PP_TUPLE_EAT_2
)(76, sËBOOST_PP_IF’(76, s), 
BOOST_PP_FOR_76
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(76, s),Ö, o, m)

	)

346 
	#BOOST_PP_FOR_76_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(77, s), m, 
BOOST_PP_TUPLE_EAT_2
)(77, sËBOOST_PP_IF’(77, s), 
BOOST_PP_FOR_77
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(77, s),Ö, o, m)

	)

347 
	#BOOST_PP_FOR_77_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(78, s), m, 
BOOST_PP_TUPLE_EAT_2
)(78, sËBOOST_PP_IF’(78, s), 
BOOST_PP_FOR_78
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(78, s),Ö, o, m)

	)

348 
	#BOOST_PP_FOR_78_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(79, s), m, 
BOOST_PP_TUPLE_EAT_2
)(79, sËBOOST_PP_IF’(79, s), 
BOOST_PP_FOR_79
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(79, s),Ö, o, m)

	)

349 
	#BOOST_PP_FOR_79_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(80, s), m, 
BOOST_PP_TUPLE_EAT_2
)(80, sËBOOST_PP_IF’(80, s), 
BOOST_PP_FOR_80
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(80, s),Ö, o, m)

	)

350 
	#BOOST_PP_FOR_80_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(81, s), m, 
BOOST_PP_TUPLE_EAT_2
)(81, sËBOOST_PP_IF’(81, s), 
BOOST_PP_FOR_81
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(81, s),Ö, o, m)

	)

351 
	#BOOST_PP_FOR_81_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(82, s), m, 
BOOST_PP_TUPLE_EAT_2
)(82, sËBOOST_PP_IF’(82, s), 
BOOST_PP_FOR_82
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(82, s),Ö, o, m)

	)

352 
	#BOOST_PP_FOR_82_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(83, s), m, 
BOOST_PP_TUPLE_EAT_2
)(83, sËBOOST_PP_IF’(83, s), 
BOOST_PP_FOR_83
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(83, s),Ö, o, m)

	)

353 
	#BOOST_PP_FOR_83_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(84, s), m, 
BOOST_PP_TUPLE_EAT_2
)(84, sËBOOST_PP_IF’(84, s), 
BOOST_PP_FOR_84
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(84, s),Ö, o, m)

	)

354 
	#BOOST_PP_FOR_84_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(85, s), m, 
BOOST_PP_TUPLE_EAT_2
)(85, sËBOOST_PP_IF’(85, s), 
BOOST_PP_FOR_85
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(85, s),Ö, o, m)

	)

355 
	#BOOST_PP_FOR_85_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(86, s), m, 
BOOST_PP_TUPLE_EAT_2
)(86, sËBOOST_PP_IF’(86, s), 
BOOST_PP_FOR_86
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(86, s),Ö, o, m)

	)

356 
	#BOOST_PP_FOR_86_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(87, s), m, 
BOOST_PP_TUPLE_EAT_2
)(87, sËBOOST_PP_IF’(87, s), 
BOOST_PP_FOR_87
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(87, s),Ö, o, m)

	)

357 
	#BOOST_PP_FOR_87_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(88, s), m, 
BOOST_PP_TUPLE_EAT_2
)(88, sËBOOST_PP_IF’(88, s), 
BOOST_PP_FOR_88
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(88, s),Ö, o, m)

	)

358 
	#BOOST_PP_FOR_88_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(89, s), m, 
BOOST_PP_TUPLE_EAT_2
)(89, sËBOOST_PP_IF’(89, s), 
BOOST_PP_FOR_89
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(89, s),Ö, o, m)

	)

359 
	#BOOST_PP_FOR_89_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(90, s), m, 
BOOST_PP_TUPLE_EAT_2
)(90, sËBOOST_PP_IF’(90, s), 
BOOST_PP_FOR_90
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(90, s),Ö, o, m)

	)

360 
	#BOOST_PP_FOR_90_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(91, s), m, 
BOOST_PP_TUPLE_EAT_2
)(91, sËBOOST_PP_IF’(91, s), 
BOOST_PP_FOR_91
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(91, s),Ö, o, m)

	)

361 
	#BOOST_PP_FOR_91_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(92, s), m, 
BOOST_PP_TUPLE_EAT_2
)(92, sËBOOST_PP_IF’(92, s), 
BOOST_PP_FOR_92
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(92, s),Ö, o, m)

	)

362 
	#BOOST_PP_FOR_92_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(93, s), m, 
BOOST_PP_TUPLE_EAT_2
)(93, sËBOOST_PP_IF’(93, s), 
BOOST_PP_FOR_93
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(93, s),Ö, o, m)

	)

363 
	#BOOST_PP_FOR_93_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(94, s), m, 
BOOST_PP_TUPLE_EAT_2
)(94, sËBOOST_PP_IF’(94, s), 
BOOST_PP_FOR_94
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(94, s),Ö, o, m)

	)

364 
	#BOOST_PP_FOR_94_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(95, s), m, 
BOOST_PP_TUPLE_EAT_2
)(95, sËBOOST_PP_IF’(95, s), 
BOOST_PP_FOR_95
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(95, s),Ö, o, m)

	)

365 
	#BOOST_PP_FOR_95_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(96, s), m, 
BOOST_PP_TUPLE_EAT_2
)(96, sËBOOST_PP_IF’(96, s), 
BOOST_PP_FOR_96
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(96, s),Ö, o, m)

	)

366 
	#BOOST_PP_FOR_96_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(97, s), m, 
BOOST_PP_TUPLE_EAT_2
)(97, sËBOOST_PP_IF’(97, s), 
BOOST_PP_FOR_97
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(97, s),Ö, o, m)

	)

367 
	#BOOST_PP_FOR_97_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(98, s), m, 
BOOST_PP_TUPLE_EAT_2
)(98, sËBOOST_PP_IF’(98, s), 
BOOST_PP_FOR_98
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(98, s),Ö, o, m)

	)

368 
	#BOOST_PP_FOR_98_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(99, s), m, 
BOOST_PP_TUPLE_EAT_2
)(99, sËBOOST_PP_IF’(99, s), 
BOOST_PP_FOR_99
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(99, s),Ö, o, m)

	)

369 
	#BOOST_PP_FOR_99_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(100, s), m, 
BOOST_PP_TUPLE_EAT_2
)(100, sËBOOST_PP_IF’(100, s), 
BOOST_PP_FOR_100
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(100, s),Ö, o, m)

	)

370 
	#BOOST_PP_FOR_100_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(101, s), m, 
BOOST_PP_TUPLE_EAT_2
)(101, sËBOOST_PP_IF’(101, s), 
BOOST_PP_FOR_101
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(101, s),Ö, o, m)

	)

371 
	#BOOST_PP_FOR_101_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(102, s), m, 
BOOST_PP_TUPLE_EAT_2
)(102, sËBOOST_PP_IF’(102, s), 
BOOST_PP_FOR_102
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(102, s),Ö, o, m)

	)

372 
	#BOOST_PP_FOR_102_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(103, s), m, 
BOOST_PP_TUPLE_EAT_2
)(103, sËBOOST_PP_IF’(103, s), 
BOOST_PP_FOR_103
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(103, s),Ö, o, m)

	)

373 
	#BOOST_PP_FOR_103_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(104, s), m, 
BOOST_PP_TUPLE_EAT_2
)(104, sËBOOST_PP_IF’(104, s), 
BOOST_PP_FOR_104
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(104, s),Ö, o, m)

	)

374 
	#BOOST_PP_FOR_104_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(105, s), m, 
BOOST_PP_TUPLE_EAT_2
)(105, sËBOOST_PP_IF’(105, s), 
BOOST_PP_FOR_105
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(105, s),Ö, o, m)

	)

375 
	#BOOST_PP_FOR_105_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(106, s), m, 
BOOST_PP_TUPLE_EAT_2
)(106, sËBOOST_PP_IF’(106, s), 
BOOST_PP_FOR_106
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(106, s),Ö, o, m)

	)

376 
	#BOOST_PP_FOR_106_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(107, s), m, 
BOOST_PP_TUPLE_EAT_2
)(107, sËBOOST_PP_IF’(107, s), 
BOOST_PP_FOR_107
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(107, s),Ö, o, m)

	)

377 
	#BOOST_PP_FOR_107_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(108, s), m, 
BOOST_PP_TUPLE_EAT_2
)(108, sËBOOST_PP_IF’(108, s), 
BOOST_PP_FOR_108
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(108, s),Ö, o, m)

	)

378 
	#BOOST_PP_FOR_108_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(109, s), m, 
BOOST_PP_TUPLE_EAT_2
)(109, sËBOOST_PP_IF’(109, s), 
BOOST_PP_FOR_109
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(109, s),Ö, o, m)

	)

379 
	#BOOST_PP_FOR_109_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(110, s), m, 
BOOST_PP_TUPLE_EAT_2
)(110, sËBOOST_PP_IF’(110, s), 
BOOST_PP_FOR_110
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(110, s),Ö, o, m)

	)

380 
	#BOOST_PP_FOR_110_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(111, s), m, 
BOOST_PP_TUPLE_EAT_2
)(111, sËBOOST_PP_IF’(111, s), 
BOOST_PP_FOR_111
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(111, s),Ö, o, m)

	)

381 
	#BOOST_PP_FOR_111_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(112, s), m, 
BOOST_PP_TUPLE_EAT_2
)(112, sËBOOST_PP_IF’(112, s), 
BOOST_PP_FOR_112
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(112, s),Ö, o, m)

	)

382 
	#BOOST_PP_FOR_112_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(113, s), m, 
BOOST_PP_TUPLE_EAT_2
)(113, sËBOOST_PP_IF’(113, s), 
BOOST_PP_FOR_113
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(113, s),Ö, o, m)

	)

383 
	#BOOST_PP_FOR_113_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(114, s), m, 
BOOST_PP_TUPLE_EAT_2
)(114, sËBOOST_PP_IF’(114, s), 
BOOST_PP_FOR_114
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(114, s),Ö, o, m)

	)

384 
	#BOOST_PP_FOR_114_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(115, s), m, 
BOOST_PP_TUPLE_EAT_2
)(115, sËBOOST_PP_IF’(115, s), 
BOOST_PP_FOR_115
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(115, s),Ö, o, m)

	)

385 
	#BOOST_PP_FOR_115_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(116, s), m, 
BOOST_PP_TUPLE_EAT_2
)(116, sËBOOST_PP_IF’(116, s), 
BOOST_PP_FOR_116
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(116, s),Ö, o, m)

	)

386 
	#BOOST_PP_FOR_116_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(117, s), m, 
BOOST_PP_TUPLE_EAT_2
)(117, sËBOOST_PP_IF’(117, s), 
BOOST_PP_FOR_117
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(117, s),Ö, o, m)

	)

387 
	#BOOST_PP_FOR_117_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(118, s), m, 
BOOST_PP_TUPLE_EAT_2
)(118, sËBOOST_PP_IF’(118, s), 
BOOST_PP_FOR_118
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(118, s),Ö, o, m)

	)

388 
	#BOOST_PP_FOR_118_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(119, s), m, 
BOOST_PP_TUPLE_EAT_2
)(119, sËBOOST_PP_IF’(119, s), 
BOOST_PP_FOR_119
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(119, s),Ö, o, m)

	)

389 
	#BOOST_PP_FOR_119_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(120, s), m, 
BOOST_PP_TUPLE_EAT_2
)(120, sËBOOST_PP_IF’(120, s), 
BOOST_PP_FOR_120
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(120, s),Ö, o, m)

	)

390 
	#BOOST_PP_FOR_120_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(121, s), m, 
BOOST_PP_TUPLE_EAT_2
)(121, sËBOOST_PP_IF’(121, s), 
BOOST_PP_FOR_121
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(121, s),Ö, o, m)

	)

391 
	#BOOST_PP_FOR_121_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(122, s), m, 
BOOST_PP_TUPLE_EAT_2
)(122, sËBOOST_PP_IF’(122, s), 
BOOST_PP_FOR_122
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(122, s),Ö, o, m)

	)

392 
	#BOOST_PP_FOR_122_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(123, s), m, 
BOOST_PP_TUPLE_EAT_2
)(123, sËBOOST_PP_IF’(123, s), 
BOOST_PP_FOR_123
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(123, s),Ö, o, m)

	)

393 
	#BOOST_PP_FOR_123_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(124, s), m, 
BOOST_PP_TUPLE_EAT_2
)(124, sËBOOST_PP_IF’(124, s), 
BOOST_PP_FOR_124
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(124, s),Ö, o, m)

	)

394 
	#BOOST_PP_FOR_124_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(125, s), m, 
BOOST_PP_TUPLE_EAT_2
)(125, sËBOOST_PP_IF’(125, s), 
BOOST_PP_FOR_125
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(125, s),Ö, o, m)

	)

395 
	#BOOST_PP_FOR_125_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(126, s), m, 
BOOST_PP_TUPLE_EAT_2
)(126, sËBOOST_PP_IF’(126, s), 
BOOST_PP_FOR_126
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(126, s),Ö, o, m)

	)

396 
	#BOOST_PP_FOR_126_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(127, s), m, 
BOOST_PP_TUPLE_EAT_2
)(127, sËBOOST_PP_IF’(127, s), 
BOOST_PP_FOR_127
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(127, s),Ö, o, m)

	)

397 
	#BOOST_PP_FOR_127_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(128, s), m, 
BOOST_PP_TUPLE_EAT_2
)(128, sËBOOST_PP_IF’(128, s), 
BOOST_PP_FOR_128
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(128, s),Ö, o, m)

	)

398 
	#BOOST_PP_FOR_128_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(129, s), m, 
BOOST_PP_TUPLE_EAT_2
)(129, sËBOOST_PP_IF’(129, s), 
BOOST_PP_FOR_129
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(129, s),Ö, o, m)

	)

399 
	#BOOST_PP_FOR_129_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(130, s), m, 
BOOST_PP_TUPLE_EAT_2
)(130, sËBOOST_PP_IF’(130, s), 
BOOST_PP_FOR_130
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(130, s),Ö, o, m)

	)

400 
	#BOOST_PP_FOR_130_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(131, s), m, 
BOOST_PP_TUPLE_EAT_2
)(131, sËBOOST_PP_IF’(131, s), 
BOOST_PP_FOR_131
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(131, s),Ö, o, m)

	)

401 
	#BOOST_PP_FOR_131_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(132, s), m, 
BOOST_PP_TUPLE_EAT_2
)(132, sËBOOST_PP_IF’(132, s), 
BOOST_PP_FOR_132
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(132, s),Ö, o, m)

	)

402 
	#BOOST_PP_FOR_132_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(133, s), m, 
BOOST_PP_TUPLE_EAT_2
)(133, sËBOOST_PP_IF’(133, s), 
BOOST_PP_FOR_133
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(133, s),Ö, o, m)

	)

403 
	#BOOST_PP_FOR_133_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(134, s), m, 
BOOST_PP_TUPLE_EAT_2
)(134, sËBOOST_PP_IF’(134, s), 
BOOST_PP_FOR_134
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(134, s),Ö, o, m)

	)

404 
	#BOOST_PP_FOR_134_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(135, s), m, 
BOOST_PP_TUPLE_EAT_2
)(135, sËBOOST_PP_IF’(135, s), 
BOOST_PP_FOR_135
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(135, s),Ö, o, m)

	)

405 
	#BOOST_PP_FOR_135_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(136, s), m, 
BOOST_PP_TUPLE_EAT_2
)(136, sËBOOST_PP_IF’(136, s), 
BOOST_PP_FOR_136
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(136, s),Ö, o, m)

	)

406 
	#BOOST_PP_FOR_136_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(137, s), m, 
BOOST_PP_TUPLE_EAT_2
)(137, sËBOOST_PP_IF’(137, s), 
BOOST_PP_FOR_137
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(137, s),Ö, o, m)

	)

407 
	#BOOST_PP_FOR_137_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(138, s), m, 
BOOST_PP_TUPLE_EAT_2
)(138, sËBOOST_PP_IF’(138, s), 
BOOST_PP_FOR_138
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(138, s),Ö, o, m)

	)

408 
	#BOOST_PP_FOR_138_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(139, s), m, 
BOOST_PP_TUPLE_EAT_2
)(139, sËBOOST_PP_IF’(139, s), 
BOOST_PP_FOR_139
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(139, s),Ö, o, m)

	)

409 
	#BOOST_PP_FOR_139_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(140, s), m, 
BOOST_PP_TUPLE_EAT_2
)(140, sËBOOST_PP_IF’(140, s), 
BOOST_PP_FOR_140
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(140, s),Ö, o, m)

	)

410 
	#BOOST_PP_FOR_140_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(141, s), m, 
BOOST_PP_TUPLE_EAT_2
)(141, sËBOOST_PP_IF’(141, s), 
BOOST_PP_FOR_141
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(141, s),Ö, o, m)

	)

411 
	#BOOST_PP_FOR_141_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(142, s), m, 
BOOST_PP_TUPLE_EAT_2
)(142, sËBOOST_PP_IF’(142, s), 
BOOST_PP_FOR_142
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(142, s),Ö, o, m)

	)

412 
	#BOOST_PP_FOR_142_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(143, s), m, 
BOOST_PP_TUPLE_EAT_2
)(143, sËBOOST_PP_IF’(143, s), 
BOOST_PP_FOR_143
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(143, s),Ö, o, m)

	)

413 
	#BOOST_PP_FOR_143_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(144, s), m, 
BOOST_PP_TUPLE_EAT_2
)(144, sËBOOST_PP_IF’(144, s), 
BOOST_PP_FOR_144
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(144, s),Ö, o, m)

	)

414 
	#BOOST_PP_FOR_144_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(145, s), m, 
BOOST_PP_TUPLE_EAT_2
)(145, sËBOOST_PP_IF’(145, s), 
BOOST_PP_FOR_145
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(145, s),Ö, o, m)

	)

415 
	#BOOST_PP_FOR_145_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(146, s), m, 
BOOST_PP_TUPLE_EAT_2
)(146, sËBOOST_PP_IF’(146, s), 
BOOST_PP_FOR_146
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(146, s),Ö, o, m)

	)

416 
	#BOOST_PP_FOR_146_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(147, s), m, 
BOOST_PP_TUPLE_EAT_2
)(147, sËBOOST_PP_IF’(147, s), 
BOOST_PP_FOR_147
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(147, s),Ö, o, m)

	)

417 
	#BOOST_PP_FOR_147_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(148, s), m, 
BOOST_PP_TUPLE_EAT_2
)(148, sËBOOST_PP_IF’(148, s), 
BOOST_PP_FOR_148
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(148, s),Ö, o, m)

	)

418 
	#BOOST_PP_FOR_148_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(149, s), m, 
BOOST_PP_TUPLE_EAT_2
)(149, sËBOOST_PP_IF’(149, s), 
BOOST_PP_FOR_149
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(149, s),Ö, o, m)

	)

419 
	#BOOST_PP_FOR_149_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(150, s), m, 
BOOST_PP_TUPLE_EAT_2
)(150, sËBOOST_PP_IF’(150, s), 
BOOST_PP_FOR_150
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(150, s),Ö, o, m)

	)

420 
	#BOOST_PP_FOR_150_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(151, s), m, 
BOOST_PP_TUPLE_EAT_2
)(151, sËBOOST_PP_IF’(151, s), 
BOOST_PP_FOR_151
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(151, s),Ö, o, m)

	)

421 
	#BOOST_PP_FOR_151_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(152, s), m, 
BOOST_PP_TUPLE_EAT_2
)(152, sËBOOST_PP_IF’(152, s), 
BOOST_PP_FOR_152
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(152, s),Ö, o, m)

	)

422 
	#BOOST_PP_FOR_152_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(153, s), m, 
BOOST_PP_TUPLE_EAT_2
)(153, sËBOOST_PP_IF’(153, s), 
BOOST_PP_FOR_153
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(153, s),Ö, o, m)

	)

423 
	#BOOST_PP_FOR_153_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(154, s), m, 
BOOST_PP_TUPLE_EAT_2
)(154, sËBOOST_PP_IF’(154, s), 
BOOST_PP_FOR_154
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(154, s),Ö, o, m)

	)

424 
	#BOOST_PP_FOR_154_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(155, s), m, 
BOOST_PP_TUPLE_EAT_2
)(155, sËBOOST_PP_IF’(155, s), 
BOOST_PP_FOR_155
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(155, s),Ö, o, m)

	)

425 
	#BOOST_PP_FOR_155_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(156, s), m, 
BOOST_PP_TUPLE_EAT_2
)(156, sËBOOST_PP_IF’(156, s), 
BOOST_PP_FOR_156
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(156, s),Ö, o, m)

	)

426 
	#BOOST_PP_FOR_156_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(157, s), m, 
BOOST_PP_TUPLE_EAT_2
)(157, sËBOOST_PP_IF’(157, s), 
BOOST_PP_FOR_157
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(157, s),Ö, o, m)

	)

427 
	#BOOST_PP_FOR_157_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(158, s), m, 
BOOST_PP_TUPLE_EAT_2
)(158, sËBOOST_PP_IF’(158, s), 
BOOST_PP_FOR_158
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(158, s),Ö, o, m)

	)

428 
	#BOOST_PP_FOR_158_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(159, s), m, 
BOOST_PP_TUPLE_EAT_2
)(159, sËBOOST_PP_IF’(159, s), 
BOOST_PP_FOR_159
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(159, s),Ö, o, m)

	)

429 
	#BOOST_PP_FOR_159_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(160, s), m, 
BOOST_PP_TUPLE_EAT_2
)(160, sËBOOST_PP_IF’(160, s), 
BOOST_PP_FOR_160
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(160, s),Ö, o, m)

	)

430 
	#BOOST_PP_FOR_160_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(161, s), m, 
BOOST_PP_TUPLE_EAT_2
)(161, sËBOOST_PP_IF’(161, s), 
BOOST_PP_FOR_161
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(161, s),Ö, o, m)

	)

431 
	#BOOST_PP_FOR_161_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(162, s), m, 
BOOST_PP_TUPLE_EAT_2
)(162, sËBOOST_PP_IF’(162, s), 
BOOST_PP_FOR_162
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(162, s),Ö, o, m)

	)

432 
	#BOOST_PP_FOR_162_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(163, s), m, 
BOOST_PP_TUPLE_EAT_2
)(163, sËBOOST_PP_IF’(163, s), 
BOOST_PP_FOR_163
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(163, s),Ö, o, m)

	)

433 
	#BOOST_PP_FOR_163_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(164, s), m, 
BOOST_PP_TUPLE_EAT_2
)(164, sËBOOST_PP_IF’(164, s), 
BOOST_PP_FOR_164
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(164, s),Ö, o, m)

	)

434 
	#BOOST_PP_FOR_164_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(165, s), m, 
BOOST_PP_TUPLE_EAT_2
)(165, sËBOOST_PP_IF’(165, s), 
BOOST_PP_FOR_165
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(165, s),Ö, o, m)

	)

435 
	#BOOST_PP_FOR_165_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(166, s), m, 
BOOST_PP_TUPLE_EAT_2
)(166, sËBOOST_PP_IF’(166, s), 
BOOST_PP_FOR_166
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(166, s),Ö, o, m)

	)

436 
	#BOOST_PP_FOR_166_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(167, s), m, 
BOOST_PP_TUPLE_EAT_2
)(167, sËBOOST_PP_IF’(167, s), 
BOOST_PP_FOR_167
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(167, s),Ö, o, m)

	)

437 
	#BOOST_PP_FOR_167_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(168, s), m, 
BOOST_PP_TUPLE_EAT_2
)(168, sËBOOST_PP_IF’(168, s), 
BOOST_PP_FOR_168
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(168, s),Ö, o, m)

	)

438 
	#BOOST_PP_FOR_168_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(169, s), m, 
BOOST_PP_TUPLE_EAT_2
)(169, sËBOOST_PP_IF’(169, s), 
BOOST_PP_FOR_169
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(169, s),Ö, o, m)

	)

439 
	#BOOST_PP_FOR_169_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(170, s), m, 
BOOST_PP_TUPLE_EAT_2
)(170, sËBOOST_PP_IF’(170, s), 
BOOST_PP_FOR_170
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(170, s),Ö, o, m)

	)

440 
	#BOOST_PP_FOR_170_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(171, s), m, 
BOOST_PP_TUPLE_EAT_2
)(171, sËBOOST_PP_IF’(171, s), 
BOOST_PP_FOR_171
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(171, s),Ö, o, m)

	)

441 
	#BOOST_PP_FOR_171_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(172, s), m, 
BOOST_PP_TUPLE_EAT_2
)(172, sËBOOST_PP_IF’(172, s), 
BOOST_PP_FOR_172
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(172, s),Ö, o, m)

	)

442 
	#BOOST_PP_FOR_172_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(173, s), m, 
BOOST_PP_TUPLE_EAT_2
)(173, sËBOOST_PP_IF’(173, s), 
BOOST_PP_FOR_173
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(173, s),Ö, o, m)

	)

443 
	#BOOST_PP_FOR_173_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(174, s), m, 
BOOST_PP_TUPLE_EAT_2
)(174, sËBOOST_PP_IF’(174, s), 
BOOST_PP_FOR_174
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(174, s),Ö, o, m)

	)

444 
	#BOOST_PP_FOR_174_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(175, s), m, 
BOOST_PP_TUPLE_EAT_2
)(175, sËBOOST_PP_IF’(175, s), 
BOOST_PP_FOR_175
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(175, s),Ö, o, m)

	)

445 
	#BOOST_PP_FOR_175_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(176, s), m, 
BOOST_PP_TUPLE_EAT_2
)(176, sËBOOST_PP_IF’(176, s), 
BOOST_PP_FOR_176
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(176, s),Ö, o, m)

	)

446 
	#BOOST_PP_FOR_176_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(177, s), m, 
BOOST_PP_TUPLE_EAT_2
)(177, sËBOOST_PP_IF’(177, s), 
BOOST_PP_FOR_177
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(177, s),Ö, o, m)

	)

447 
	#BOOST_PP_FOR_177_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(178, s), m, 
BOOST_PP_TUPLE_EAT_2
)(178, sËBOOST_PP_IF’(178, s), 
BOOST_PP_FOR_178
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(178, s),Ö, o, m)

	)

448 
	#BOOST_PP_FOR_178_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(179, s), m, 
BOOST_PP_TUPLE_EAT_2
)(179, sËBOOST_PP_IF’(179, s), 
BOOST_PP_FOR_179
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(179, s),Ö, o, m)

	)

449 
	#BOOST_PP_FOR_179_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(180, s), m, 
BOOST_PP_TUPLE_EAT_2
)(180, sËBOOST_PP_IF’(180, s), 
BOOST_PP_FOR_180
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(180, s),Ö, o, m)

	)

450 
	#BOOST_PP_FOR_180_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(181, s), m, 
BOOST_PP_TUPLE_EAT_2
)(181, sËBOOST_PP_IF’(181, s), 
BOOST_PP_FOR_181
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(181, s),Ö, o, m)

	)

451 
	#BOOST_PP_FOR_181_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(182, s), m, 
BOOST_PP_TUPLE_EAT_2
)(182, sËBOOST_PP_IF’(182, s), 
BOOST_PP_FOR_182
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(182, s),Ö, o, m)

	)

452 
	#BOOST_PP_FOR_182_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(183, s), m, 
BOOST_PP_TUPLE_EAT_2
)(183, sËBOOST_PP_IF’(183, s), 
BOOST_PP_FOR_183
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(183, s),Ö, o, m)

	)

453 
	#BOOST_PP_FOR_183_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(184, s), m, 
BOOST_PP_TUPLE_EAT_2
)(184, sËBOOST_PP_IF’(184, s), 
BOOST_PP_FOR_184
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(184, s),Ö, o, m)

	)

454 
	#BOOST_PP_FOR_184_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(185, s), m, 
BOOST_PP_TUPLE_EAT_2
)(185, sËBOOST_PP_IF’(185, s), 
BOOST_PP_FOR_185
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(185, s),Ö, o, m)

	)

455 
	#BOOST_PP_FOR_185_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(186, s), m, 
BOOST_PP_TUPLE_EAT_2
)(186, sËBOOST_PP_IF’(186, s), 
BOOST_PP_FOR_186
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(186, s),Ö, o, m)

	)

456 
	#BOOST_PP_FOR_186_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(187, s), m, 
BOOST_PP_TUPLE_EAT_2
)(187, sËBOOST_PP_IF’(187, s), 
BOOST_PP_FOR_187
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(187, s),Ö, o, m)

	)

457 
	#BOOST_PP_FOR_187_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(188, s), m, 
BOOST_PP_TUPLE_EAT_2
)(188, sËBOOST_PP_IF’(188, s), 
BOOST_PP_FOR_188
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(188, s),Ö, o, m)

	)

458 
	#BOOST_PP_FOR_188_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(189, s), m, 
BOOST_PP_TUPLE_EAT_2
)(189, sËBOOST_PP_IF’(189, s), 
BOOST_PP_FOR_189
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(189, s),Ö, o, m)

	)

459 
	#BOOST_PP_FOR_189_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(190, s), m, 
BOOST_PP_TUPLE_EAT_2
)(190, sËBOOST_PP_IF’(190, s), 
BOOST_PP_FOR_190
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(190, s),Ö, o, m)

	)

460 
	#BOOST_PP_FOR_190_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(191, s), m, 
BOOST_PP_TUPLE_EAT_2
)(191, sËBOOST_PP_IF’(191, s), 
BOOST_PP_FOR_191
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(191, s),Ö, o, m)

	)

461 
	#BOOST_PP_FOR_191_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(192, s), m, 
BOOST_PP_TUPLE_EAT_2
)(192, sËBOOST_PP_IF’(192, s), 
BOOST_PP_FOR_192
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(192, s),Ö, o, m)

	)

462 
	#BOOST_PP_FOR_192_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(193, s), m, 
BOOST_PP_TUPLE_EAT_2
)(193, sËBOOST_PP_IF’(193, s), 
BOOST_PP_FOR_193
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(193, s),Ö, o, m)

	)

463 
	#BOOST_PP_FOR_193_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(194, s), m, 
BOOST_PP_TUPLE_EAT_2
)(194, sËBOOST_PP_IF’(194, s), 
BOOST_PP_FOR_194
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(194, s),Ö, o, m)

	)

464 
	#BOOST_PP_FOR_194_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(195, s), m, 
BOOST_PP_TUPLE_EAT_2
)(195, sËBOOST_PP_IF’(195, s), 
BOOST_PP_FOR_195
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(195, s),Ö, o, m)

	)

465 
	#BOOST_PP_FOR_195_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(196, s), m, 
BOOST_PP_TUPLE_EAT_2
)(196, sËBOOST_PP_IF’(196, s), 
BOOST_PP_FOR_196
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(196, s),Ö, o, m)

	)

466 
	#BOOST_PP_FOR_196_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(197, s), m, 
BOOST_PP_TUPLE_EAT_2
)(197, sËBOOST_PP_IF’(197, s), 
BOOST_PP_FOR_197
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(197, s),Ö, o, m)

	)

467 
	#BOOST_PP_FOR_197_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(198, s), m, 
BOOST_PP_TUPLE_EAT_2
)(198, sËBOOST_PP_IF’(198, s), 
BOOST_PP_FOR_198
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(198, s),Ö, o, m)

	)

468 
	#BOOST_PP_FOR_198_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(199, s), m, 
BOOST_PP_TUPLE_EAT_2
)(199, sËBOOST_PP_IF’(199, s), 
BOOST_PP_FOR_199
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(199, s),Ö, o, m)

	)

469 
	#BOOST_PP_FOR_199_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(200, s), m, 
BOOST_PP_TUPLE_EAT_2
)(200, sËBOOST_PP_IF’(200, s), 
BOOST_PP_FOR_200
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(200, s),Ö, o, m)

	)

470 
	#BOOST_PP_FOR_200_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(201, s), m, 
BOOST_PP_TUPLE_EAT_2
)(201, sËBOOST_PP_IF’(201, s), 
BOOST_PP_FOR_201
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(201, s),Ö, o, m)

	)

471 
	#BOOST_PP_FOR_201_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(202, s), m, 
BOOST_PP_TUPLE_EAT_2
)(202, sËBOOST_PP_IF’(202, s), 
BOOST_PP_FOR_202
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(202, s),Ö, o, m)

	)

472 
	#BOOST_PP_FOR_202_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(203, s), m, 
BOOST_PP_TUPLE_EAT_2
)(203, sËBOOST_PP_IF’(203, s), 
BOOST_PP_FOR_203
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(203, s),Ö, o, m)

	)

473 
	#BOOST_PP_FOR_203_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(204, s), m, 
BOOST_PP_TUPLE_EAT_2
)(204, sËBOOST_PP_IF’(204, s), 
BOOST_PP_FOR_204
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(204, s),Ö, o, m)

	)

474 
	#BOOST_PP_FOR_204_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(205, s), m, 
BOOST_PP_TUPLE_EAT_2
)(205, sËBOOST_PP_IF’(205, s), 
BOOST_PP_FOR_205
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(205, s),Ö, o, m)

	)

475 
	#BOOST_PP_FOR_205_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(206, s), m, 
BOOST_PP_TUPLE_EAT_2
)(206, sËBOOST_PP_IF’(206, s), 
BOOST_PP_FOR_206
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(206, s),Ö, o, m)

	)

476 
	#BOOST_PP_FOR_206_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(207, s), m, 
BOOST_PP_TUPLE_EAT_2
)(207, sËBOOST_PP_IF’(207, s), 
BOOST_PP_FOR_207
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(207, s),Ö, o, m)

	)

477 
	#BOOST_PP_FOR_207_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(208, s), m, 
BOOST_PP_TUPLE_EAT_2
)(208, sËBOOST_PP_IF’(208, s), 
BOOST_PP_FOR_208
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(208, s),Ö, o, m)

	)

478 
	#BOOST_PP_FOR_208_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(209, s), m, 
BOOST_PP_TUPLE_EAT_2
)(209, sËBOOST_PP_IF’(209, s), 
BOOST_PP_FOR_209
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(209, s),Ö, o, m)

	)

479 
	#BOOST_PP_FOR_209_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(210, s), m, 
BOOST_PP_TUPLE_EAT_2
)(210, sËBOOST_PP_IF’(210, s), 
BOOST_PP_FOR_210
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(210, s),Ö, o, m)

	)

480 
	#BOOST_PP_FOR_210_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(211, s), m, 
BOOST_PP_TUPLE_EAT_2
)(211, sËBOOST_PP_IF’(211, s), 
BOOST_PP_FOR_211
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(211, s),Ö, o, m)

	)

481 
	#BOOST_PP_FOR_211_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(212, s), m, 
BOOST_PP_TUPLE_EAT_2
)(212, sËBOOST_PP_IF’(212, s), 
BOOST_PP_FOR_212
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(212, s),Ö, o, m)

	)

482 
	#BOOST_PP_FOR_212_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(213, s), m, 
BOOST_PP_TUPLE_EAT_2
)(213, sËBOOST_PP_IF’(213, s), 
BOOST_PP_FOR_213
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(213, s),Ö, o, m)

	)

483 
	#BOOST_PP_FOR_213_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(214, s), m, 
BOOST_PP_TUPLE_EAT_2
)(214, sËBOOST_PP_IF’(214, s), 
BOOST_PP_FOR_214
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(214, s),Ö, o, m)

	)

484 
	#BOOST_PP_FOR_214_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(215, s), m, 
BOOST_PP_TUPLE_EAT_2
)(215, sËBOOST_PP_IF’(215, s), 
BOOST_PP_FOR_215
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(215, s),Ö, o, m)

	)

485 
	#BOOST_PP_FOR_215_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(216, s), m, 
BOOST_PP_TUPLE_EAT_2
)(216, sËBOOST_PP_IF’(216, s), 
BOOST_PP_FOR_216
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(216, s),Ö, o, m)

	)

486 
	#BOOST_PP_FOR_216_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(217, s), m, 
BOOST_PP_TUPLE_EAT_2
)(217, sËBOOST_PP_IF’(217, s), 
BOOST_PP_FOR_217
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(217, s),Ö, o, m)

	)

487 
	#BOOST_PP_FOR_217_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(218, s), m, 
BOOST_PP_TUPLE_EAT_2
)(218, sËBOOST_PP_IF’(218, s), 
BOOST_PP_FOR_218
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(218, s),Ö, o, m)

	)

488 
	#BOOST_PP_FOR_218_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(219, s), m, 
BOOST_PP_TUPLE_EAT_2
)(219, sËBOOST_PP_IF’(219, s), 
BOOST_PP_FOR_219
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(219, s),Ö, o, m)

	)

489 
	#BOOST_PP_FOR_219_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(220, s), m, 
BOOST_PP_TUPLE_EAT_2
)(220, sËBOOST_PP_IF’(220, s), 
BOOST_PP_FOR_220
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(220, s),Ö, o, m)

	)

490 
	#BOOST_PP_FOR_220_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(221, s), m, 
BOOST_PP_TUPLE_EAT_2
)(221, sËBOOST_PP_IF’(221, s), 
BOOST_PP_FOR_221
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(221, s),Ö, o, m)

	)

491 
	#BOOST_PP_FOR_221_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(222, s), m, 
BOOST_PP_TUPLE_EAT_2
)(222, sËBOOST_PP_IF’(222, s), 
BOOST_PP_FOR_222
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(222, s),Ö, o, m)

	)

492 
	#BOOST_PP_FOR_222_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(223, s), m, 
BOOST_PP_TUPLE_EAT_2
)(223, sËBOOST_PP_IF’(223, s), 
BOOST_PP_FOR_223
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(223, s),Ö, o, m)

	)

493 
	#BOOST_PP_FOR_223_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(224, s), m, 
BOOST_PP_TUPLE_EAT_2
)(224, sËBOOST_PP_IF’(224, s), 
BOOST_PP_FOR_224
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(224, s),Ö, o, m)

	)

494 
	#BOOST_PP_FOR_224_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(225, s), m, 
BOOST_PP_TUPLE_EAT_2
)(225, sËBOOST_PP_IF’(225, s), 
BOOST_PP_FOR_225
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(225, s),Ö, o, m)

	)

495 
	#BOOST_PP_FOR_225_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(226, s), m, 
BOOST_PP_TUPLE_EAT_2
)(226, sËBOOST_PP_IF’(226, s), 
BOOST_PP_FOR_226
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(226, s),Ö, o, m)

	)

496 
	#BOOST_PP_FOR_226_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(227, s), m, 
BOOST_PP_TUPLE_EAT_2
)(227, sËBOOST_PP_IF’(227, s), 
BOOST_PP_FOR_227
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(227, s),Ö, o, m)

	)

497 
	#BOOST_PP_FOR_227_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(228, s), m, 
BOOST_PP_TUPLE_EAT_2
)(228, sËBOOST_PP_IF’(228, s), 
BOOST_PP_FOR_228
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(228, s),Ö, o, m)

	)

498 
	#BOOST_PP_FOR_228_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(229, s), m, 
BOOST_PP_TUPLE_EAT_2
)(229, sËBOOST_PP_IF’(229, s), 
BOOST_PP_FOR_229
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(229, s),Ö, o, m)

	)

499 
	#BOOST_PP_FOR_229_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(230, s), m, 
BOOST_PP_TUPLE_EAT_2
)(230, sËBOOST_PP_IF’(230, s), 
BOOST_PP_FOR_230
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(230, s),Ö, o, m)

	)

500 
	#BOOST_PP_FOR_230_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(231, s), m, 
BOOST_PP_TUPLE_EAT_2
)(231, sËBOOST_PP_IF’(231, s), 
BOOST_PP_FOR_231
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(231, s),Ö, o, m)

	)

501 
	#BOOST_PP_FOR_231_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(232, s), m, 
BOOST_PP_TUPLE_EAT_2
)(232, sËBOOST_PP_IF’(232, s), 
BOOST_PP_FOR_232
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(232, s),Ö, o, m)

	)

502 
	#BOOST_PP_FOR_232_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(233, s), m, 
BOOST_PP_TUPLE_EAT_2
)(233, sËBOOST_PP_IF’(233, s), 
BOOST_PP_FOR_233
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(233, s),Ö, o, m)

	)

503 
	#BOOST_PP_FOR_233_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(234, s), m, 
BOOST_PP_TUPLE_EAT_2
)(234, sËBOOST_PP_IF’(234, s), 
BOOST_PP_FOR_234
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(234, s),Ö, o, m)

	)

504 
	#BOOST_PP_FOR_234_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(235, s), m, 
BOOST_PP_TUPLE_EAT_2
)(235, sËBOOST_PP_IF’(235, s), 
BOOST_PP_FOR_235
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(235, s),Ö, o, m)

	)

505 
	#BOOST_PP_FOR_235_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(236, s), m, 
BOOST_PP_TUPLE_EAT_2
)(236, sËBOOST_PP_IF’(236, s), 
BOOST_PP_FOR_236
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(236, s),Ö, o, m)

	)

506 
	#BOOST_PP_FOR_236_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(237, s), m, 
BOOST_PP_TUPLE_EAT_2
)(237, sËBOOST_PP_IF’(237, s), 
BOOST_PP_FOR_237
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(237, s),Ö, o, m)

	)

507 
	#BOOST_PP_FOR_237_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(238, s), m, 
BOOST_PP_TUPLE_EAT_2
)(238, sËBOOST_PP_IF’(238, s), 
BOOST_PP_FOR_238
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(238, s),Ö, o, m)

	)

508 
	#BOOST_PP_FOR_238_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(239, s), m, 
BOOST_PP_TUPLE_EAT_2
)(239, sËBOOST_PP_IF’(239, s), 
BOOST_PP_FOR_239
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(239, s),Ö, o, m)

	)

509 
	#BOOST_PP_FOR_239_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(240, s), m, 
BOOST_PP_TUPLE_EAT_2
)(240, sËBOOST_PP_IF’(240, s), 
BOOST_PP_FOR_240
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(240, s),Ö, o, m)

	)

510 
	#BOOST_PP_FOR_240_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(241, s), m, 
BOOST_PP_TUPLE_EAT_2
)(241, sËBOOST_PP_IF’(241, s), 
BOOST_PP_FOR_241
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(241, s),Ö, o, m)

	)

511 
	#BOOST_PP_FOR_241_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(242, s), m, 
BOOST_PP_TUPLE_EAT_2
)(242, sËBOOST_PP_IF’(242, s), 
BOOST_PP_FOR_242
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(242, s),Ö, o, m)

	)

512 
	#BOOST_PP_FOR_242_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(243, s), m, 
BOOST_PP_TUPLE_EAT_2
)(243, sËBOOST_PP_IF’(243, s), 
BOOST_PP_FOR_243
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(243, s),Ö, o, m)

	)

513 
	#BOOST_PP_FOR_243_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(244, s), m, 
BOOST_PP_TUPLE_EAT_2
)(244, sËBOOST_PP_IF’(244, s), 
BOOST_PP_FOR_244
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(244, s),Ö, o, m)

	)

514 
	#BOOST_PP_FOR_244_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(245, s), m, 
BOOST_PP_TUPLE_EAT_2
)(245, sËBOOST_PP_IF’(245, s), 
BOOST_PP_FOR_245
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(245, s),Ö, o, m)

	)

515 
	#BOOST_PP_FOR_245_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(246, s), m, 
BOOST_PP_TUPLE_EAT_2
)(246, sËBOOST_PP_IF’(246, s), 
BOOST_PP_FOR_246
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(246, s),Ö, o, m)

	)

516 
	#BOOST_PP_FOR_246_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(247, s), m, 
BOOST_PP_TUPLE_EAT_2
)(247, sËBOOST_PP_IF’(247, s), 
BOOST_PP_FOR_247
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(247, s),Ö, o, m)

	)

517 
	#BOOST_PP_FOR_247_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(248, s), m, 
BOOST_PP_TUPLE_EAT_2
)(248, sËBOOST_PP_IF’(248, s), 
BOOST_PP_FOR_248
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(248, s),Ö, o, m)

	)

518 
	#BOOST_PP_FOR_248_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(249, s), m, 
BOOST_PP_TUPLE_EAT_2
)(249, sËBOOST_PP_IF’(249, s), 
BOOST_PP_FOR_249
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(249, s),Ö, o, m)

	)

519 
	#BOOST_PP_FOR_249_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(250, s), m, 
BOOST_PP_TUPLE_EAT_2
)(250, sËBOOST_PP_IF’(250, s), 
BOOST_PP_FOR_250
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(250, s),Ö, o, m)

	)

520 
	#BOOST_PP_FOR_250_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(251, s), m, 
BOOST_PP_TUPLE_EAT_2
)(251, sËBOOST_PP_IF’(251, s), 
BOOST_PP_FOR_251
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(251, s),Ö, o, m)

	)

521 
	#BOOST_PP_FOR_251_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(252, s), m, 
BOOST_PP_TUPLE_EAT_2
)(252, sËBOOST_PP_IF’(252, s), 
BOOST_PP_FOR_252
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(252, s),Ö, o, m)

	)

522 
	#BOOST_PP_FOR_252_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(253, s), m, 
BOOST_PP_TUPLE_EAT_2
)(253, sËBOOST_PP_IF’(253, s), 
BOOST_PP_FOR_253
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(253, s),Ö, o, m)

	)

523 
	#BOOST_PP_FOR_253_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(254, s), m, 
BOOST_PP_TUPLE_EAT_2
)(254, sËBOOST_PP_IF’(254, s), 
BOOST_PP_FOR_254
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(254, s),Ö, o, m)

	)

524 
	#BOOST_PP_FOR_254_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(255, s), m, 
BOOST_PP_TUPLE_EAT_2
)(255, sËBOOST_PP_IF’(255, s), 
BOOST_PP_FOR_255
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(255, s),Ö, o, m)

	)

525 
	#BOOST_PP_FOR_255_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(256, s), m, 
BOOST_PP_TUPLE_EAT_2
)(256, sËBOOST_PP_IF’(256, s), 
BOOST_PP_FOR_256
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(256, s),Ö, o, m)

	)

526 
	#BOOST_PP_FOR_256_I
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(257, s), m, 
BOOST_PP_TUPLE_EAT_2
)(257, sËBOOST_PP_IF’(257, s), 
BOOST_PP_FOR_257
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(257, s),Ö, o, m)

	)

	@/usr/include/boost/preprocessor/repetition/detail/for.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_DETAIL_FOR_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_DETAIL_FOR_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/ex¥_iif.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/iif.hµ
>

15 
	~<boo°/¥ïro˚ss‹/logiˇl/boﬁ.hµ
>

16 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

17 
#deföê
	#BOOST_PP_FOR_1
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_1_C
(
	`BOOST_PP_BOOL
(
	`p
(2, s)), s,Ö, o, m)

	)

18 
	#BOOST_PP_FOR_2
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_2_C
(
	`BOOST_PP_BOOL
(
	`p
(3, s)), s,Ö, o, m)

	)

19 
	#BOOST_PP_FOR_3
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_3_C
(
	`BOOST_PP_BOOL
(
	`p
(4, s)), s,Ö, o, m)

	)

20 
	#BOOST_PP_FOR_4
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_4_C
(
	`BOOST_PP_BOOL
(
	`p
(5, s)), s,Ö, o, m)

	)

21 
	#BOOST_PP_FOR_5
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_5_C
(
	`BOOST_PP_BOOL
(
	`p
(6, s)), s,Ö, o, m)

	)

22 
	#BOOST_PP_FOR_6
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_6_C
(
	`BOOST_PP_BOOL
(
	`p
(7, s)), s,Ö, o, m)

	)

23 
	#BOOST_PP_FOR_7
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_7_C
(
	`BOOST_PP_BOOL
(
	`p
(8, s)), s,Ö, o, m)

	)

24 
	#BOOST_PP_FOR_8
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_8_C
(
	`BOOST_PP_BOOL
(
	`p
(9, s)), s,Ö, o, m)

	)

25 
	#BOOST_PP_FOR_9
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_9_C
(
	`BOOST_PP_BOOL
(
	`p
(10, s)), s,Ö, o, m)

	)

26 
	#BOOST_PP_FOR_10
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_10_C
(
	`BOOST_PP_BOOL
(
	`p
(11, s)), s,Ö, o, m)

	)

27 
	#BOOST_PP_FOR_11
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_11_C
(
	`BOOST_PP_BOOL
(
	`p
(12, s)), s,Ö, o, m)

	)

28 
	#BOOST_PP_FOR_12
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_12_C
(
	`BOOST_PP_BOOL
(
	`p
(13, s)), s,Ö, o, m)

	)

29 
	#BOOST_PP_FOR_13
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_13_C
(
	`BOOST_PP_BOOL
(
	`p
(14, s)), s,Ö, o, m)

	)

30 
	#BOOST_PP_FOR_14
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_14_C
(
	`BOOST_PP_BOOL
(
	`p
(15, s)), s,Ö, o, m)

	)

31 
	#BOOST_PP_FOR_15
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_15_C
(
	`BOOST_PP_BOOL
(
	`p
(16, s)), s,Ö, o, m)

	)

32 
	#BOOST_PP_FOR_16
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_16_C
(
	`BOOST_PP_BOOL
(
	`p
(17, s)), s,Ö, o, m)

	)

33 
	#BOOST_PP_FOR_17
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_17_C
(
	`BOOST_PP_BOOL
(
	`p
(18, s)), s,Ö, o, m)

	)

34 
	#BOOST_PP_FOR_18
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_18_C
(
	`BOOST_PP_BOOL
(
	`p
(19, s)), s,Ö, o, m)

	)

35 
	#BOOST_PP_FOR_19
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_19_C
(
	`BOOST_PP_BOOL
(
	`p
(20, s)), s,Ö, o, m)

	)

36 
	#BOOST_PP_FOR_20
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_20_C
(
	`BOOST_PP_BOOL
(
	`p
(21, s)), s,Ö, o, m)

	)

37 
	#BOOST_PP_FOR_21
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_21_C
(
	`BOOST_PP_BOOL
(
	`p
(22, s)), s,Ö, o, m)

	)

38 
	#BOOST_PP_FOR_22
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_22_C
(
	`BOOST_PP_BOOL
(
	`p
(23, s)), s,Ö, o, m)

	)

39 
	#BOOST_PP_FOR_23
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_23_C
(
	`BOOST_PP_BOOL
(
	`p
(24, s)), s,Ö, o, m)

	)

40 
	#BOOST_PP_FOR_24
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_24_C
(
	`BOOST_PP_BOOL
(
	`p
(25, s)), s,Ö, o, m)

	)

41 
	#BOOST_PP_FOR_25
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_25_C
(
	`BOOST_PP_BOOL
(
	`p
(26, s)), s,Ö, o, m)

	)

42 
	#BOOST_PP_FOR_26
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_26_C
(
	`BOOST_PP_BOOL
(
	`p
(27, s)), s,Ö, o, m)

	)

43 
	#BOOST_PP_FOR_27
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_27_C
(
	`BOOST_PP_BOOL
(
	`p
(28, s)), s,Ö, o, m)

	)

44 
	#BOOST_PP_FOR_28
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_28_C
(
	`BOOST_PP_BOOL
(
	`p
(29, s)), s,Ö, o, m)

	)

45 
	#BOOST_PP_FOR_29
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_29_C
(
	`BOOST_PP_BOOL
(
	`p
(30, s)), s,Ö, o, m)

	)

46 
	#BOOST_PP_FOR_30
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_30_C
(
	`BOOST_PP_BOOL
(
	`p
(31, s)), s,Ö, o, m)

	)

47 
	#BOOST_PP_FOR_31
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_31_C
(
	`BOOST_PP_BOOL
(
	`p
(32, s)), s,Ö, o, m)

	)

48 
	#BOOST_PP_FOR_32
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_32_C
(
	`BOOST_PP_BOOL
(
	`p
(33, s)), s,Ö, o, m)

	)

49 
	#BOOST_PP_FOR_33
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_33_C
(
	`BOOST_PP_BOOL
(
	`p
(34, s)), s,Ö, o, m)

	)

50 
	#BOOST_PP_FOR_34
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_34_C
(
	`BOOST_PP_BOOL
(
	`p
(35, s)), s,Ö, o, m)

	)

51 
	#BOOST_PP_FOR_35
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_35_C
(
	`BOOST_PP_BOOL
(
	`p
(36, s)), s,Ö, o, m)

	)

52 
	#BOOST_PP_FOR_36
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_36_C
(
	`BOOST_PP_BOOL
(
	`p
(37, s)), s,Ö, o, m)

	)

53 
	#BOOST_PP_FOR_37
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_37_C
(
	`BOOST_PP_BOOL
(
	`p
(38, s)), s,Ö, o, m)

	)

54 
	#BOOST_PP_FOR_38
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_38_C
(
	`BOOST_PP_BOOL
(
	`p
(39, s)), s,Ö, o, m)

	)

55 
	#BOOST_PP_FOR_39
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_39_C
(
	`BOOST_PP_BOOL
(
	`p
(40, s)), s,Ö, o, m)

	)

56 
	#BOOST_PP_FOR_40
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_40_C
(
	`BOOST_PP_BOOL
(
	`p
(41, s)), s,Ö, o, m)

	)

57 
	#BOOST_PP_FOR_41
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_41_C
(
	`BOOST_PP_BOOL
(
	`p
(42, s)), s,Ö, o, m)

	)

58 
	#BOOST_PP_FOR_42
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_42_C
(
	`BOOST_PP_BOOL
(
	`p
(43, s)), s,Ö, o, m)

	)

59 
	#BOOST_PP_FOR_43
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_43_C
(
	`BOOST_PP_BOOL
(
	`p
(44, s)), s,Ö, o, m)

	)

60 
	#BOOST_PP_FOR_44
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_44_C
(
	`BOOST_PP_BOOL
(
	`p
(45, s)), s,Ö, o, m)

	)

61 
	#BOOST_PP_FOR_45
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_45_C
(
	`BOOST_PP_BOOL
(
	`p
(46, s)), s,Ö, o, m)

	)

62 
	#BOOST_PP_FOR_46
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_46_C
(
	`BOOST_PP_BOOL
(
	`p
(47, s)), s,Ö, o, m)

	)

63 
	#BOOST_PP_FOR_47
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_47_C
(
	`BOOST_PP_BOOL
(
	`p
(48, s)), s,Ö, o, m)

	)

64 
	#BOOST_PP_FOR_48
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_48_C
(
	`BOOST_PP_BOOL
(
	`p
(49, s)), s,Ö, o, m)

	)

65 
	#BOOST_PP_FOR_49
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_49_C
(
	`BOOST_PP_BOOL
(
	`p
(50, s)), s,Ö, o, m)

	)

66 
	#BOOST_PP_FOR_50
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_50_C
(
	`BOOST_PP_BOOL
(
	`p
(51, s)), s,Ö, o, m)

	)

67 
	#BOOST_PP_FOR_51
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_51_C
(
	`BOOST_PP_BOOL
(
	`p
(52, s)), s,Ö, o, m)

	)

68 
	#BOOST_PP_FOR_52
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_52_C
(
	`BOOST_PP_BOOL
(
	`p
(53, s)), s,Ö, o, m)

	)

69 
	#BOOST_PP_FOR_53
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_53_C
(
	`BOOST_PP_BOOL
(
	`p
(54, s)), s,Ö, o, m)

	)

70 
	#BOOST_PP_FOR_54
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_54_C
(
	`BOOST_PP_BOOL
(
	`p
(55, s)), s,Ö, o, m)

	)

71 
	#BOOST_PP_FOR_55
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_55_C
(
	`BOOST_PP_BOOL
(
	`p
(56, s)), s,Ö, o, m)

	)

72 
	#BOOST_PP_FOR_56
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_56_C
(
	`BOOST_PP_BOOL
(
	`p
(57, s)), s,Ö, o, m)

	)

73 
	#BOOST_PP_FOR_57
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_57_C
(
	`BOOST_PP_BOOL
(
	`p
(58, s)), s,Ö, o, m)

	)

74 
	#BOOST_PP_FOR_58
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_58_C
(
	`BOOST_PP_BOOL
(
	`p
(59, s)), s,Ö, o, m)

	)

75 
	#BOOST_PP_FOR_59
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_59_C
(
	`BOOST_PP_BOOL
(
	`p
(60, s)), s,Ö, o, m)

	)

76 
	#BOOST_PP_FOR_60
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_60_C
(
	`BOOST_PP_BOOL
(
	`p
(61, s)), s,Ö, o, m)

	)

77 
	#BOOST_PP_FOR_61
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_61_C
(
	`BOOST_PP_BOOL
(
	`p
(62, s)), s,Ö, o, m)

	)

78 
	#BOOST_PP_FOR_62
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_62_C
(
	`BOOST_PP_BOOL
(
	`p
(63, s)), s,Ö, o, m)

	)

79 
	#BOOST_PP_FOR_63
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_63_C
(
	`BOOST_PP_BOOL
(
	`p
(64, s)), s,Ö, o, m)

	)

80 
	#BOOST_PP_FOR_64
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_64_C
(
	`BOOST_PP_BOOL
(
	`p
(65, s)), s,Ö, o, m)

	)

81 
	#BOOST_PP_FOR_65
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_65_C
(
	`BOOST_PP_BOOL
(
	`p
(66, s)), s,Ö, o, m)

	)

82 
	#BOOST_PP_FOR_66
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_66_C
(
	`BOOST_PP_BOOL
(
	`p
(67, s)), s,Ö, o, m)

	)

83 
	#BOOST_PP_FOR_67
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_67_C
(
	`BOOST_PP_BOOL
(
	`p
(68, s)), s,Ö, o, m)

	)

84 
	#BOOST_PP_FOR_68
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_68_C
(
	`BOOST_PP_BOOL
(
	`p
(69, s)), s,Ö, o, m)

	)

85 
	#BOOST_PP_FOR_69
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_69_C
(
	`BOOST_PP_BOOL
(
	`p
(70, s)), s,Ö, o, m)

	)

86 
	#BOOST_PP_FOR_70
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_70_C
(
	`BOOST_PP_BOOL
(
	`p
(71, s)), s,Ö, o, m)

	)

87 
	#BOOST_PP_FOR_71
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_71_C
(
	`BOOST_PP_BOOL
(
	`p
(72, s)), s,Ö, o, m)

	)

88 
	#BOOST_PP_FOR_72
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_72_C
(
	`BOOST_PP_BOOL
(
	`p
(73, s)), s,Ö, o, m)

	)

89 
	#BOOST_PP_FOR_73
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_73_C
(
	`BOOST_PP_BOOL
(
	`p
(74, s)), s,Ö, o, m)

	)

90 
	#BOOST_PP_FOR_74
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_74_C
(
	`BOOST_PP_BOOL
(
	`p
(75, s)), s,Ö, o, m)

	)

91 
	#BOOST_PP_FOR_75
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_75_C
(
	`BOOST_PP_BOOL
(
	`p
(76, s)), s,Ö, o, m)

	)

92 
	#BOOST_PP_FOR_76
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_76_C
(
	`BOOST_PP_BOOL
(
	`p
(77, s)), s,Ö, o, m)

	)

93 
	#BOOST_PP_FOR_77
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_77_C
(
	`BOOST_PP_BOOL
(
	`p
(78, s)), s,Ö, o, m)

	)

94 
	#BOOST_PP_FOR_78
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_78_C
(
	`BOOST_PP_BOOL
(
	`p
(79, s)), s,Ö, o, m)

	)

95 
	#BOOST_PP_FOR_79
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_79_C
(
	`BOOST_PP_BOOL
(
	`p
(80, s)), s,Ö, o, m)

	)

96 
	#BOOST_PP_FOR_80
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_80_C
(
	`BOOST_PP_BOOL
(
	`p
(81, s)), s,Ö, o, m)

	)

97 
	#BOOST_PP_FOR_81
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_81_C
(
	`BOOST_PP_BOOL
(
	`p
(82, s)), s,Ö, o, m)

	)

98 
	#BOOST_PP_FOR_82
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_82_C
(
	`BOOST_PP_BOOL
(
	`p
(83, s)), s,Ö, o, m)

	)

99 
	#BOOST_PP_FOR_83
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_83_C
(
	`BOOST_PP_BOOL
(
	`p
(84, s)), s,Ö, o, m)

	)

100 
	#BOOST_PP_FOR_84
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_84_C
(
	`BOOST_PP_BOOL
(
	`p
(85, s)), s,Ö, o, m)

	)

101 
	#BOOST_PP_FOR_85
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_85_C
(
	`BOOST_PP_BOOL
(
	`p
(86, s)), s,Ö, o, m)

	)

102 
	#BOOST_PP_FOR_86
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_86_C
(
	`BOOST_PP_BOOL
(
	`p
(87, s)), s,Ö, o, m)

	)

103 
	#BOOST_PP_FOR_87
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_87_C
(
	`BOOST_PP_BOOL
(
	`p
(88, s)), s,Ö, o, m)

	)

104 
	#BOOST_PP_FOR_88
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_88_C
(
	`BOOST_PP_BOOL
(
	`p
(89, s)), s,Ö, o, m)

	)

105 
	#BOOST_PP_FOR_89
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_89_C
(
	`BOOST_PP_BOOL
(
	`p
(90, s)), s,Ö, o, m)

	)

106 
	#BOOST_PP_FOR_90
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_90_C
(
	`BOOST_PP_BOOL
(
	`p
(91, s)), s,Ö, o, m)

	)

107 
	#BOOST_PP_FOR_91
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_91_C
(
	`BOOST_PP_BOOL
(
	`p
(92, s)), s,Ö, o, m)

	)

108 
	#BOOST_PP_FOR_92
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_92_C
(
	`BOOST_PP_BOOL
(
	`p
(93, s)), s,Ö, o, m)

	)

109 
	#BOOST_PP_FOR_93
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_93_C
(
	`BOOST_PP_BOOL
(
	`p
(94, s)), s,Ö, o, m)

	)

110 
	#BOOST_PP_FOR_94
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_94_C
(
	`BOOST_PP_BOOL
(
	`p
(95, s)), s,Ö, o, m)

	)

111 
	#BOOST_PP_FOR_95
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_95_C
(
	`BOOST_PP_BOOL
(
	`p
(96, s)), s,Ö, o, m)

	)

112 
	#BOOST_PP_FOR_96
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_96_C
(
	`BOOST_PP_BOOL
(
	`p
(97, s)), s,Ö, o, m)

	)

113 
	#BOOST_PP_FOR_97
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_97_C
(
	`BOOST_PP_BOOL
(
	`p
(98, s)), s,Ö, o, m)

	)

114 
	#BOOST_PP_FOR_98
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_98_C
(
	`BOOST_PP_BOOL
(
	`p
(99, s)), s,Ö, o, m)

	)

115 
	#BOOST_PP_FOR_99
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_99_C
(
	`BOOST_PP_BOOL
(
	`p
(100, s)), s,Ö, o, m)

	)

116 
	#BOOST_PP_FOR_100
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_100_C
(
	`BOOST_PP_BOOL
(
	`p
(101, s)), s,Ö, o, m)

	)

117 
	#BOOST_PP_FOR_101
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_101_C
(
	`BOOST_PP_BOOL
(
	`p
(102, s)), s,Ö, o, m)

	)

118 
	#BOOST_PP_FOR_102
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_102_C
(
	`BOOST_PP_BOOL
(
	`p
(103, s)), s,Ö, o, m)

	)

119 
	#BOOST_PP_FOR_103
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_103_C
(
	`BOOST_PP_BOOL
(
	`p
(104, s)), s,Ö, o, m)

	)

120 
	#BOOST_PP_FOR_104
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_104_C
(
	`BOOST_PP_BOOL
(
	`p
(105, s)), s,Ö, o, m)

	)

121 
	#BOOST_PP_FOR_105
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_105_C
(
	`BOOST_PP_BOOL
(
	`p
(106, s)), s,Ö, o, m)

	)

122 
	#BOOST_PP_FOR_106
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_106_C
(
	`BOOST_PP_BOOL
(
	`p
(107, s)), s,Ö, o, m)

	)

123 
	#BOOST_PP_FOR_107
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_107_C
(
	`BOOST_PP_BOOL
(
	`p
(108, s)), s,Ö, o, m)

	)

124 
	#BOOST_PP_FOR_108
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_108_C
(
	`BOOST_PP_BOOL
(
	`p
(109, s)), s,Ö, o, m)

	)

125 
	#BOOST_PP_FOR_109
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_109_C
(
	`BOOST_PP_BOOL
(
	`p
(110, s)), s,Ö, o, m)

	)

126 
	#BOOST_PP_FOR_110
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_110_C
(
	`BOOST_PP_BOOL
(
	`p
(111, s)), s,Ö, o, m)

	)

127 
	#BOOST_PP_FOR_111
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_111_C
(
	`BOOST_PP_BOOL
(
	`p
(112, s)), s,Ö, o, m)

	)

128 
	#BOOST_PP_FOR_112
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_112_C
(
	`BOOST_PP_BOOL
(
	`p
(113, s)), s,Ö, o, m)

	)

129 
	#BOOST_PP_FOR_113
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_113_C
(
	`BOOST_PP_BOOL
(
	`p
(114, s)), s,Ö, o, m)

	)

130 
	#BOOST_PP_FOR_114
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_114_C
(
	`BOOST_PP_BOOL
(
	`p
(115, s)), s,Ö, o, m)

	)

131 
	#BOOST_PP_FOR_115
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_115_C
(
	`BOOST_PP_BOOL
(
	`p
(116, s)), s,Ö, o, m)

	)

132 
	#BOOST_PP_FOR_116
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_116_C
(
	`BOOST_PP_BOOL
(
	`p
(117, s)), s,Ö, o, m)

	)

133 
	#BOOST_PP_FOR_117
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_117_C
(
	`BOOST_PP_BOOL
(
	`p
(118, s)), s,Ö, o, m)

	)

134 
	#BOOST_PP_FOR_118
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_118_C
(
	`BOOST_PP_BOOL
(
	`p
(119, s)), s,Ö, o, m)

	)

135 
	#BOOST_PP_FOR_119
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_119_C
(
	`BOOST_PP_BOOL
(
	`p
(120, s)), s,Ö, o, m)

	)

136 
	#BOOST_PP_FOR_120
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_120_C
(
	`BOOST_PP_BOOL
(
	`p
(121, s)), s,Ö, o, m)

	)

137 
	#BOOST_PP_FOR_121
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_121_C
(
	`BOOST_PP_BOOL
(
	`p
(122, s)), s,Ö, o, m)

	)

138 
	#BOOST_PP_FOR_122
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_122_C
(
	`BOOST_PP_BOOL
(
	`p
(123, s)), s,Ö, o, m)

	)

139 
	#BOOST_PP_FOR_123
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_123_C
(
	`BOOST_PP_BOOL
(
	`p
(124, s)), s,Ö, o, m)

	)

140 
	#BOOST_PP_FOR_124
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_124_C
(
	`BOOST_PP_BOOL
(
	`p
(125, s)), s,Ö, o, m)

	)

141 
	#BOOST_PP_FOR_125
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_125_C
(
	`BOOST_PP_BOOL
(
	`p
(126, s)), s,Ö, o, m)

	)

142 
	#BOOST_PP_FOR_126
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_126_C
(
	`BOOST_PP_BOOL
(
	`p
(127, s)), s,Ö, o, m)

	)

143 
	#BOOST_PP_FOR_127
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_127_C
(
	`BOOST_PP_BOOL
(
	`p
(128, s)), s,Ö, o, m)

	)

144 
	#BOOST_PP_FOR_128
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_128_C
(
	`BOOST_PP_BOOL
(
	`p
(129, s)), s,Ö, o, m)

	)

145 
	#BOOST_PP_FOR_129
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_129_C
(
	`BOOST_PP_BOOL
(
	`p
(130, s)), s,Ö, o, m)

	)

146 
	#BOOST_PP_FOR_130
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_130_C
(
	`BOOST_PP_BOOL
(
	`p
(131, s)), s,Ö, o, m)

	)

147 
	#BOOST_PP_FOR_131
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_131_C
(
	`BOOST_PP_BOOL
(
	`p
(132, s)), s,Ö, o, m)

	)

148 
	#BOOST_PP_FOR_132
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_132_C
(
	`BOOST_PP_BOOL
(
	`p
(133, s)), s,Ö, o, m)

	)

149 
	#BOOST_PP_FOR_133
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_133_C
(
	`BOOST_PP_BOOL
(
	`p
(134, s)), s,Ö, o, m)

	)

150 
	#BOOST_PP_FOR_134
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_134_C
(
	`BOOST_PP_BOOL
(
	`p
(135, s)), s,Ö, o, m)

	)

151 
	#BOOST_PP_FOR_135
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_135_C
(
	`BOOST_PP_BOOL
(
	`p
(136, s)), s,Ö, o, m)

	)

152 
	#BOOST_PP_FOR_136
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_136_C
(
	`BOOST_PP_BOOL
(
	`p
(137, s)), s,Ö, o, m)

	)

153 
	#BOOST_PP_FOR_137
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_137_C
(
	`BOOST_PP_BOOL
(
	`p
(138, s)), s,Ö, o, m)

	)

154 
	#BOOST_PP_FOR_138
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_138_C
(
	`BOOST_PP_BOOL
(
	`p
(139, s)), s,Ö, o, m)

	)

155 
	#BOOST_PP_FOR_139
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_139_C
(
	`BOOST_PP_BOOL
(
	`p
(140, s)), s,Ö, o, m)

	)

156 
	#BOOST_PP_FOR_140
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_140_C
(
	`BOOST_PP_BOOL
(
	`p
(141, s)), s,Ö, o, m)

	)

157 
	#BOOST_PP_FOR_141
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_141_C
(
	`BOOST_PP_BOOL
(
	`p
(142, s)), s,Ö, o, m)

	)

158 
	#BOOST_PP_FOR_142
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_142_C
(
	`BOOST_PP_BOOL
(
	`p
(143, s)), s,Ö, o, m)

	)

159 
	#BOOST_PP_FOR_143
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_143_C
(
	`BOOST_PP_BOOL
(
	`p
(144, s)), s,Ö, o, m)

	)

160 
	#BOOST_PP_FOR_144
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_144_C
(
	`BOOST_PP_BOOL
(
	`p
(145, s)), s,Ö, o, m)

	)

161 
	#BOOST_PP_FOR_145
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_145_C
(
	`BOOST_PP_BOOL
(
	`p
(146, s)), s,Ö, o, m)

	)

162 
	#BOOST_PP_FOR_146
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_146_C
(
	`BOOST_PP_BOOL
(
	`p
(147, s)), s,Ö, o, m)

	)

163 
	#BOOST_PP_FOR_147
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_147_C
(
	`BOOST_PP_BOOL
(
	`p
(148, s)), s,Ö, o, m)

	)

164 
	#BOOST_PP_FOR_148
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_148_C
(
	`BOOST_PP_BOOL
(
	`p
(149, s)), s,Ö, o, m)

	)

165 
	#BOOST_PP_FOR_149
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_149_C
(
	`BOOST_PP_BOOL
(
	`p
(150, s)), s,Ö, o, m)

	)

166 
	#BOOST_PP_FOR_150
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_150_C
(
	`BOOST_PP_BOOL
(
	`p
(151, s)), s,Ö, o, m)

	)

167 
	#BOOST_PP_FOR_151
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_151_C
(
	`BOOST_PP_BOOL
(
	`p
(152, s)), s,Ö, o, m)

	)

168 
	#BOOST_PP_FOR_152
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_152_C
(
	`BOOST_PP_BOOL
(
	`p
(153, s)), s,Ö, o, m)

	)

169 
	#BOOST_PP_FOR_153
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_153_C
(
	`BOOST_PP_BOOL
(
	`p
(154, s)), s,Ö, o, m)

	)

170 
	#BOOST_PP_FOR_154
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_154_C
(
	`BOOST_PP_BOOL
(
	`p
(155, s)), s,Ö, o, m)

	)

171 
	#BOOST_PP_FOR_155
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_155_C
(
	`BOOST_PP_BOOL
(
	`p
(156, s)), s,Ö, o, m)

	)

172 
	#BOOST_PP_FOR_156
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_156_C
(
	`BOOST_PP_BOOL
(
	`p
(157, s)), s,Ö, o, m)

	)

173 
	#BOOST_PP_FOR_157
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_157_C
(
	`BOOST_PP_BOOL
(
	`p
(158, s)), s,Ö, o, m)

	)

174 
	#BOOST_PP_FOR_158
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_158_C
(
	`BOOST_PP_BOOL
(
	`p
(159, s)), s,Ö, o, m)

	)

175 
	#BOOST_PP_FOR_159
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_159_C
(
	`BOOST_PP_BOOL
(
	`p
(160, s)), s,Ö, o, m)

	)

176 
	#BOOST_PP_FOR_160
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_160_C
(
	`BOOST_PP_BOOL
(
	`p
(161, s)), s,Ö, o, m)

	)

177 
	#BOOST_PP_FOR_161
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_161_C
(
	`BOOST_PP_BOOL
(
	`p
(162, s)), s,Ö, o, m)

	)

178 
	#BOOST_PP_FOR_162
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_162_C
(
	`BOOST_PP_BOOL
(
	`p
(163, s)), s,Ö, o, m)

	)

179 
	#BOOST_PP_FOR_163
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_163_C
(
	`BOOST_PP_BOOL
(
	`p
(164, s)), s,Ö, o, m)

	)

180 
	#BOOST_PP_FOR_164
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_164_C
(
	`BOOST_PP_BOOL
(
	`p
(165, s)), s,Ö, o, m)

	)

181 
	#BOOST_PP_FOR_165
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_165_C
(
	`BOOST_PP_BOOL
(
	`p
(166, s)), s,Ö, o, m)

	)

182 
	#BOOST_PP_FOR_166
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_166_C
(
	`BOOST_PP_BOOL
(
	`p
(167, s)), s,Ö, o, m)

	)

183 
	#BOOST_PP_FOR_167
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_167_C
(
	`BOOST_PP_BOOL
(
	`p
(168, s)), s,Ö, o, m)

	)

184 
	#BOOST_PP_FOR_168
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_168_C
(
	`BOOST_PP_BOOL
(
	`p
(169, s)), s,Ö, o, m)

	)

185 
	#BOOST_PP_FOR_169
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_169_C
(
	`BOOST_PP_BOOL
(
	`p
(170, s)), s,Ö, o, m)

	)

186 
	#BOOST_PP_FOR_170
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_170_C
(
	`BOOST_PP_BOOL
(
	`p
(171, s)), s,Ö, o, m)

	)

187 
	#BOOST_PP_FOR_171
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_171_C
(
	`BOOST_PP_BOOL
(
	`p
(172, s)), s,Ö, o, m)

	)

188 
	#BOOST_PP_FOR_172
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_172_C
(
	`BOOST_PP_BOOL
(
	`p
(173, s)), s,Ö, o, m)

	)

189 
	#BOOST_PP_FOR_173
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_173_C
(
	`BOOST_PP_BOOL
(
	`p
(174, s)), s,Ö, o, m)

	)

190 
	#BOOST_PP_FOR_174
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_174_C
(
	`BOOST_PP_BOOL
(
	`p
(175, s)), s,Ö, o, m)

	)

191 
	#BOOST_PP_FOR_175
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_175_C
(
	`BOOST_PP_BOOL
(
	`p
(176, s)), s,Ö, o, m)

	)

192 
	#BOOST_PP_FOR_176
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_176_C
(
	`BOOST_PP_BOOL
(
	`p
(177, s)), s,Ö, o, m)

	)

193 
	#BOOST_PP_FOR_177
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_177_C
(
	`BOOST_PP_BOOL
(
	`p
(178, s)), s,Ö, o, m)

	)

194 
	#BOOST_PP_FOR_178
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_178_C
(
	`BOOST_PP_BOOL
(
	`p
(179, s)), s,Ö, o, m)

	)

195 
	#BOOST_PP_FOR_179
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_179_C
(
	`BOOST_PP_BOOL
(
	`p
(180, s)), s,Ö, o, m)

	)

196 
	#BOOST_PP_FOR_180
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_180_C
(
	`BOOST_PP_BOOL
(
	`p
(181, s)), s,Ö, o, m)

	)

197 
	#BOOST_PP_FOR_181
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_181_C
(
	`BOOST_PP_BOOL
(
	`p
(182, s)), s,Ö, o, m)

	)

198 
	#BOOST_PP_FOR_182
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_182_C
(
	`BOOST_PP_BOOL
(
	`p
(183, s)), s,Ö, o, m)

	)

199 
	#BOOST_PP_FOR_183
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_183_C
(
	`BOOST_PP_BOOL
(
	`p
(184, s)), s,Ö, o, m)

	)

200 
	#BOOST_PP_FOR_184
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_184_C
(
	`BOOST_PP_BOOL
(
	`p
(185, s)), s,Ö, o, m)

	)

201 
	#BOOST_PP_FOR_185
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_185_C
(
	`BOOST_PP_BOOL
(
	`p
(186, s)), s,Ö, o, m)

	)

202 
	#BOOST_PP_FOR_186
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_186_C
(
	`BOOST_PP_BOOL
(
	`p
(187, s)), s,Ö, o, m)

	)

203 
	#BOOST_PP_FOR_187
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_187_C
(
	`BOOST_PP_BOOL
(
	`p
(188, s)), s,Ö, o, m)

	)

204 
	#BOOST_PP_FOR_188
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_188_C
(
	`BOOST_PP_BOOL
(
	`p
(189, s)), s,Ö, o, m)

	)

205 
	#BOOST_PP_FOR_189
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_189_C
(
	`BOOST_PP_BOOL
(
	`p
(190, s)), s,Ö, o, m)

	)

206 
	#BOOST_PP_FOR_190
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_190_C
(
	`BOOST_PP_BOOL
(
	`p
(191, s)), s,Ö, o, m)

	)

207 
	#BOOST_PP_FOR_191
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_191_C
(
	`BOOST_PP_BOOL
(
	`p
(192, s)), s,Ö, o, m)

	)

208 
	#BOOST_PP_FOR_192
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_192_C
(
	`BOOST_PP_BOOL
(
	`p
(193, s)), s,Ö, o, m)

	)

209 
	#BOOST_PP_FOR_193
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_193_C
(
	`BOOST_PP_BOOL
(
	`p
(194, s)), s,Ö, o, m)

	)

210 
	#BOOST_PP_FOR_194
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_194_C
(
	`BOOST_PP_BOOL
(
	`p
(195, s)), s,Ö, o, m)

	)

211 
	#BOOST_PP_FOR_195
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_195_C
(
	`BOOST_PP_BOOL
(
	`p
(196, s)), s,Ö, o, m)

	)

212 
	#BOOST_PP_FOR_196
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_196_C
(
	`BOOST_PP_BOOL
(
	`p
(197, s)), s,Ö, o, m)

	)

213 
	#BOOST_PP_FOR_197
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_197_C
(
	`BOOST_PP_BOOL
(
	`p
(198, s)), s,Ö, o, m)

	)

214 
	#BOOST_PP_FOR_198
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_198_C
(
	`BOOST_PP_BOOL
(
	`p
(199, s)), s,Ö, o, m)

	)

215 
	#BOOST_PP_FOR_199
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_199_C
(
	`BOOST_PP_BOOL
(
	`p
(200, s)), s,Ö, o, m)

	)

216 
	#BOOST_PP_FOR_200
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_200_C
(
	`BOOST_PP_BOOL
(
	`p
(201, s)), s,Ö, o, m)

	)

217 
	#BOOST_PP_FOR_201
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_201_C
(
	`BOOST_PP_BOOL
(
	`p
(202, s)), s,Ö, o, m)

	)

218 
	#BOOST_PP_FOR_202
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_202_C
(
	`BOOST_PP_BOOL
(
	`p
(203, s)), s,Ö, o, m)

	)

219 
	#BOOST_PP_FOR_203
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_203_C
(
	`BOOST_PP_BOOL
(
	`p
(204, s)), s,Ö, o, m)

	)

220 
	#BOOST_PP_FOR_204
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_204_C
(
	`BOOST_PP_BOOL
(
	`p
(205, s)), s,Ö, o, m)

	)

221 
	#BOOST_PP_FOR_205
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_205_C
(
	`BOOST_PP_BOOL
(
	`p
(206, s)), s,Ö, o, m)

	)

222 
	#BOOST_PP_FOR_206
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_206_C
(
	`BOOST_PP_BOOL
(
	`p
(207, s)), s,Ö, o, m)

	)

223 
	#BOOST_PP_FOR_207
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_207_C
(
	`BOOST_PP_BOOL
(
	`p
(208, s)), s,Ö, o, m)

	)

224 
	#BOOST_PP_FOR_208
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_208_C
(
	`BOOST_PP_BOOL
(
	`p
(209, s)), s,Ö, o, m)

	)

225 
	#BOOST_PP_FOR_209
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_209_C
(
	`BOOST_PP_BOOL
(
	`p
(210, s)), s,Ö, o, m)

	)

226 
	#BOOST_PP_FOR_210
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_210_C
(
	`BOOST_PP_BOOL
(
	`p
(211, s)), s,Ö, o, m)

	)

227 
	#BOOST_PP_FOR_211
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_211_C
(
	`BOOST_PP_BOOL
(
	`p
(212, s)), s,Ö, o, m)

	)

228 
	#BOOST_PP_FOR_212
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_212_C
(
	`BOOST_PP_BOOL
(
	`p
(213, s)), s,Ö, o, m)

	)

229 
	#BOOST_PP_FOR_213
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_213_C
(
	`BOOST_PP_BOOL
(
	`p
(214, s)), s,Ö, o, m)

	)

230 
	#BOOST_PP_FOR_214
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_214_C
(
	`BOOST_PP_BOOL
(
	`p
(215, s)), s,Ö, o, m)

	)

231 
	#BOOST_PP_FOR_215
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_215_C
(
	`BOOST_PP_BOOL
(
	`p
(216, s)), s,Ö, o, m)

	)

232 
	#BOOST_PP_FOR_216
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_216_C
(
	`BOOST_PP_BOOL
(
	`p
(217, s)), s,Ö, o, m)

	)

233 
	#BOOST_PP_FOR_217
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_217_C
(
	`BOOST_PP_BOOL
(
	`p
(218, s)), s,Ö, o, m)

	)

234 
	#BOOST_PP_FOR_218
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_218_C
(
	`BOOST_PP_BOOL
(
	`p
(219, s)), s,Ö, o, m)

	)

235 
	#BOOST_PP_FOR_219
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_219_C
(
	`BOOST_PP_BOOL
(
	`p
(220, s)), s,Ö, o, m)

	)

236 
	#BOOST_PP_FOR_220
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_220_C
(
	`BOOST_PP_BOOL
(
	`p
(221, s)), s,Ö, o, m)

	)

237 
	#BOOST_PP_FOR_221
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_221_C
(
	`BOOST_PP_BOOL
(
	`p
(222, s)), s,Ö, o, m)

	)

238 
	#BOOST_PP_FOR_222
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_222_C
(
	`BOOST_PP_BOOL
(
	`p
(223, s)), s,Ö, o, m)

	)

239 
	#BOOST_PP_FOR_223
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_223_C
(
	`BOOST_PP_BOOL
(
	`p
(224, s)), s,Ö, o, m)

	)

240 
	#BOOST_PP_FOR_224
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_224_C
(
	`BOOST_PP_BOOL
(
	`p
(225, s)), s,Ö, o, m)

	)

241 
	#BOOST_PP_FOR_225
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_225_C
(
	`BOOST_PP_BOOL
(
	`p
(226, s)), s,Ö, o, m)

	)

242 
	#BOOST_PP_FOR_226
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_226_C
(
	`BOOST_PP_BOOL
(
	`p
(227, s)), s,Ö, o, m)

	)

243 
	#BOOST_PP_FOR_227
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_227_C
(
	`BOOST_PP_BOOL
(
	`p
(228, s)), s,Ö, o, m)

	)

244 
	#BOOST_PP_FOR_228
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_228_C
(
	`BOOST_PP_BOOL
(
	`p
(229, s)), s,Ö, o, m)

	)

245 
	#BOOST_PP_FOR_229
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_229_C
(
	`BOOST_PP_BOOL
(
	`p
(230, s)), s,Ö, o, m)

	)

246 
	#BOOST_PP_FOR_230
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_230_C
(
	`BOOST_PP_BOOL
(
	`p
(231, s)), s,Ö, o, m)

	)

247 
	#BOOST_PP_FOR_231
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_231_C
(
	`BOOST_PP_BOOL
(
	`p
(232, s)), s,Ö, o, m)

	)

248 
	#BOOST_PP_FOR_232
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_232_C
(
	`BOOST_PP_BOOL
(
	`p
(233, s)), s,Ö, o, m)

	)

249 
	#BOOST_PP_FOR_233
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_233_C
(
	`BOOST_PP_BOOL
(
	`p
(234, s)), s,Ö, o, m)

	)

250 
	#BOOST_PP_FOR_234
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_234_C
(
	`BOOST_PP_BOOL
(
	`p
(235, s)), s,Ö, o, m)

	)

251 
	#BOOST_PP_FOR_235
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_235_C
(
	`BOOST_PP_BOOL
(
	`p
(236, s)), s,Ö, o, m)

	)

252 
	#BOOST_PP_FOR_236
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_236_C
(
	`BOOST_PP_BOOL
(
	`p
(237, s)), s,Ö, o, m)

	)

253 
	#BOOST_PP_FOR_237
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_237_C
(
	`BOOST_PP_BOOL
(
	`p
(238, s)), s,Ö, o, m)

	)

254 
	#BOOST_PP_FOR_238
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_238_C
(
	`BOOST_PP_BOOL
(
	`p
(239, s)), s,Ö, o, m)

	)

255 
	#BOOST_PP_FOR_239
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_239_C
(
	`BOOST_PP_BOOL
(
	`p
(240, s)), s,Ö, o, m)

	)

256 
	#BOOST_PP_FOR_240
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_240_C
(
	`BOOST_PP_BOOL
(
	`p
(241, s)), s,Ö, o, m)

	)

257 
	#BOOST_PP_FOR_241
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_241_C
(
	`BOOST_PP_BOOL
(
	`p
(242, s)), s,Ö, o, m)

	)

258 
	#BOOST_PP_FOR_242
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_242_C
(
	`BOOST_PP_BOOL
(
	`p
(243, s)), s,Ö, o, m)

	)

259 
	#BOOST_PP_FOR_243
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_243_C
(
	`BOOST_PP_BOOL
(
	`p
(244, s)), s,Ö, o, m)

	)

260 
	#BOOST_PP_FOR_244
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_244_C
(
	`BOOST_PP_BOOL
(
	`p
(245, s)), s,Ö, o, m)

	)

261 
	#BOOST_PP_FOR_245
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_245_C
(
	`BOOST_PP_BOOL
(
	`p
(246, s)), s,Ö, o, m)

	)

262 
	#BOOST_PP_FOR_246
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_246_C
(
	`BOOST_PP_BOOL
(
	`p
(247, s)), s,Ö, o, m)

	)

263 
	#BOOST_PP_FOR_247
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_247_C
(
	`BOOST_PP_BOOL
(
	`p
(248, s)), s,Ö, o, m)

	)

264 
	#BOOST_PP_FOR_248
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_248_C
(
	`BOOST_PP_BOOL
(
	`p
(249, s)), s,Ö, o, m)

	)

265 
	#BOOST_PP_FOR_249
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_249_C
(
	`BOOST_PP_BOOL
(
	`p
(250, s)), s,Ö, o, m)

	)

266 
	#BOOST_PP_FOR_250
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_250_C
(
	`BOOST_PP_BOOL
(
	`p
(251, s)), s,Ö, o, m)

	)

267 
	#BOOST_PP_FOR_251
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_251_C
(
	`BOOST_PP_BOOL
(
	`p
(252, s)), s,Ö, o, m)

	)

268 
	#BOOST_PP_FOR_252
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_252_C
(
	`BOOST_PP_BOOL
(
	`p
(253, s)), s,Ö, o, m)

	)

269 
	#BOOST_PP_FOR_253
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_253_C
(
	`BOOST_PP_BOOL
(
	`p
(254, s)), s,Ö, o, m)

	)

270 
	#BOOST_PP_FOR_254
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_254_C
(
	`BOOST_PP_BOOL
(
	`p
(255, s)), s,Ö, o, m)

	)

271 
	#BOOST_PP_FOR_255
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_255_C
(
	`BOOST_PP_BOOL
(
	`p
(256, s)), s,Ö, o, m)

	)

272 
	#BOOST_PP_FOR_256
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_FOR_256_C
(
	`BOOST_PP_BOOL
(
	`p
(257, s)), s,Ö, o, m)

	)

273 
#deföê
	#BOOST_PP_FOR_1_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(2, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_2
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(2, s),Ö, o, m)

	)

274 
	#BOOST_PP_FOR_2_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(3, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_3
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(3, s),Ö, o, m)

	)

275 
	#BOOST_PP_FOR_3_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(4, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_4
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(4, s),Ö, o, m)

	)

276 
	#BOOST_PP_FOR_4_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(5, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_5
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(5, s),Ö, o, m)

	)

277 
	#BOOST_PP_FOR_5_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(6, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_6
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(6, s),Ö, o, m)

	)

278 
	#BOOST_PP_FOR_6_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(7, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_7
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(7, s),Ö, o, m)

	)

279 
	#BOOST_PP_FOR_7_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(8, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_8
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(8, s),Ö, o, m)

	)

280 
	#BOOST_PP_FOR_8_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(9, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_9
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(9, s),Ö, o, m)

	)

281 
	#BOOST_PP_FOR_9_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(10, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_10
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(10, s),Ö, o, m)

	)

282 
	#BOOST_PP_FOR_10_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(11, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_11
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(11, s),Ö, o, m)

	)

283 
	#BOOST_PP_FOR_11_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(12, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_12
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(12, s),Ö, o, m)

	)

284 
	#BOOST_PP_FOR_12_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(13, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_13
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(13, s),Ö, o, m)

	)

285 
	#BOOST_PP_FOR_13_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(14, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_14
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(14, s),Ö, o, m)

	)

286 
	#BOOST_PP_FOR_14_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(15, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_15
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(15, s),Ö, o, m)

	)

287 
	#BOOST_PP_FOR_15_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(16, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_16
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(16, s),Ö, o, m)

	)

288 
	#BOOST_PP_FOR_16_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(17, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_17
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(17, s),Ö, o, m)

	)

289 
	#BOOST_PP_FOR_17_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(18, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_18
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(18, s),Ö, o, m)

	)

290 
	#BOOST_PP_FOR_18_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(19, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_19
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(19, s),Ö, o, m)

	)

291 
	#BOOST_PP_FOR_19_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(20, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_20
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(20, s),Ö, o, m)

	)

292 
	#BOOST_PP_FOR_20_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(21, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_21
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(21, s),Ö, o, m)

	)

293 
	#BOOST_PP_FOR_21_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(22, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_22
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(22, s),Ö, o, m)

	)

294 
	#BOOST_PP_FOR_22_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(23, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_23
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(23, s),Ö, o, m)

	)

295 
	#BOOST_PP_FOR_23_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(24, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_24
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(24, s),Ö, o, m)

	)

296 
	#BOOST_PP_FOR_24_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(25, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_25
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(25, s),Ö, o, m)

	)

297 
	#BOOST_PP_FOR_25_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(26, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_26
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(26, s),Ö, o, m)

	)

298 
	#BOOST_PP_FOR_26_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(27, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_27
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(27, s),Ö, o, m)

	)

299 
	#BOOST_PP_FOR_27_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(28, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_28
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(28, s),Ö, o, m)

	)

300 
	#BOOST_PP_FOR_28_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(29, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_29
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(29, s),Ö, o, m)

	)

301 
	#BOOST_PP_FOR_29_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(30, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_30
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(30, s),Ö, o, m)

	)

302 
	#BOOST_PP_FOR_30_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(31, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_31
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(31, s),Ö, o, m)

	)

303 
	#BOOST_PP_FOR_31_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(32, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_32
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(32, s),Ö, o, m)

	)

304 
	#BOOST_PP_FOR_32_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(33, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_33
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(33, s),Ö, o, m)

	)

305 
	#BOOST_PP_FOR_33_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(34, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_34
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(34, s),Ö, o, m)

	)

306 
	#BOOST_PP_FOR_34_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(35, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_35
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(35, s),Ö, o, m)

	)

307 
	#BOOST_PP_FOR_35_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(36, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_36
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(36, s),Ö, o, m)

	)

308 
	#BOOST_PP_FOR_36_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(37, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_37
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(37, s),Ö, o, m)

	)

309 
	#BOOST_PP_FOR_37_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(38, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_38
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(38, s),Ö, o, m)

	)

310 
	#BOOST_PP_FOR_38_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(39, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_39
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(39, s),Ö, o, m)

	)

311 
	#BOOST_PP_FOR_39_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(40, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_40
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(40, s),Ö, o, m)

	)

312 
	#BOOST_PP_FOR_40_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(41, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_41
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(41, s),Ö, o, m)

	)

313 
	#BOOST_PP_FOR_41_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(42, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_42
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(42, s),Ö, o, m)

	)

314 
	#BOOST_PP_FOR_42_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(43, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_43
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(43, s),Ö, o, m)

	)

315 
	#BOOST_PP_FOR_43_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(44, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_44
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(44, s),Ö, o, m)

	)

316 
	#BOOST_PP_FOR_44_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(45, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_45
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(45, s),Ö, o, m)

	)

317 
	#BOOST_PP_FOR_45_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(46, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_46
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(46, s),Ö, o, m)

	)

318 
	#BOOST_PP_FOR_46_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(47, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_47
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(47, s),Ö, o, m)

	)

319 
	#BOOST_PP_FOR_47_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(48, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_48
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(48, s),Ö, o, m)

	)

320 
	#BOOST_PP_FOR_48_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(49, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_49
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(49, s),Ö, o, m)

	)

321 
	#BOOST_PP_FOR_49_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(50, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_50
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(50, s),Ö, o, m)

	)

322 
	#BOOST_PP_FOR_50_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(51, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_51
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(51, s),Ö, o, m)

	)

323 
	#BOOST_PP_FOR_51_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(52, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_52
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(52, s),Ö, o, m)

	)

324 
	#BOOST_PP_FOR_52_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(53, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_53
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(53, s),Ö, o, m)

	)

325 
	#BOOST_PP_FOR_53_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(54, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_54
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(54, s),Ö, o, m)

	)

326 
	#BOOST_PP_FOR_54_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(55, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_55
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(55, s),Ö, o, m)

	)

327 
	#BOOST_PP_FOR_55_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(56, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_56
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(56, s),Ö, o, m)

	)

328 
	#BOOST_PP_FOR_56_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(57, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_57
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(57, s),Ö, o, m)

	)

329 
	#BOOST_PP_FOR_57_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(58, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_58
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(58, s),Ö, o, m)

	)

330 
	#BOOST_PP_FOR_58_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(59, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_59
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(59, s),Ö, o, m)

	)

331 
	#BOOST_PP_FOR_59_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(60, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_60
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(60, s),Ö, o, m)

	)

332 
	#BOOST_PP_FOR_60_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(61, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_61
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(61, s),Ö, o, m)

	)

333 
	#BOOST_PP_FOR_61_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(62, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_62
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(62, s),Ö, o, m)

	)

334 
	#BOOST_PP_FOR_62_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(63, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_63
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(63, s),Ö, o, m)

	)

335 
	#BOOST_PP_FOR_63_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(64, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_64
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(64, s),Ö, o, m)

	)

336 
	#BOOST_PP_FOR_64_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(65, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_65
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(65, s),Ö, o, m)

	)

337 
	#BOOST_PP_FOR_65_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(66, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_66
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(66, s),Ö, o, m)

	)

338 
	#BOOST_PP_FOR_66_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(67, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_67
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(67, s),Ö, o, m)

	)

339 
	#BOOST_PP_FOR_67_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(68, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_68
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(68, s),Ö, o, m)

	)

340 
	#BOOST_PP_FOR_68_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(69, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_69
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(69, s),Ö, o, m)

	)

341 
	#BOOST_PP_FOR_69_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(70, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_70
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(70, s),Ö, o, m)

	)

342 
	#BOOST_PP_FOR_70_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(71, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_71
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(71, s),Ö, o, m)

	)

343 
	#BOOST_PP_FOR_71_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(72, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_72
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(72, s),Ö, o, m)

	)

344 
	#BOOST_PP_FOR_72_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(73, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_73
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(73, s),Ö, o, m)

	)

345 
	#BOOST_PP_FOR_73_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(74, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_74
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(74, s),Ö, o, m)

	)

346 
	#BOOST_PP_FOR_74_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(75, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_75
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(75, s),Ö, o, m)

	)

347 
	#BOOST_PP_FOR_75_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(76, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_76
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(76, s),Ö, o, m)

	)

348 
	#BOOST_PP_FOR_76_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(77, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_77
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(77, s),Ö, o, m)

	)

349 
	#BOOST_PP_FOR_77_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(78, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_78
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(78, s),Ö, o, m)

	)

350 
	#BOOST_PP_FOR_78_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(79, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_79
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(79, s),Ö, o, m)

	)

351 
	#BOOST_PP_FOR_79_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(80, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_80
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(80, s),Ö, o, m)

	)

352 
	#BOOST_PP_FOR_80_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(81, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_81
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(81, s),Ö, o, m)

	)

353 
	#BOOST_PP_FOR_81_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(82, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_82
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(82, s),Ö, o, m)

	)

354 
	#BOOST_PP_FOR_82_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(83, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_83
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(83, s),Ö, o, m)

	)

355 
	#BOOST_PP_FOR_83_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(84, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_84
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(84, s),Ö, o, m)

	)

356 
	#BOOST_PP_FOR_84_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(85, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_85
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(85, s),Ö, o, m)

	)

357 
	#BOOST_PP_FOR_85_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(86, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_86
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(86, s),Ö, o, m)

	)

358 
	#BOOST_PP_FOR_86_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(87, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_87
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(87, s),Ö, o, m)

	)

359 
	#BOOST_PP_FOR_87_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(88, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_88
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(88, s),Ö, o, m)

	)

360 
	#BOOST_PP_FOR_88_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(89, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_89
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(89, s),Ö, o, m)

	)

361 
	#BOOST_PP_FOR_89_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(90, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_90
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(90, s),Ö, o, m)

	)

362 
	#BOOST_PP_FOR_90_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(91, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_91
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(91, s),Ö, o, m)

	)

363 
	#BOOST_PP_FOR_91_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(92, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_92
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(92, s),Ö, o, m)

	)

364 
	#BOOST_PP_FOR_92_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(93, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_93
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(93, s),Ö, o, m)

	)

365 
	#BOOST_PP_FOR_93_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(94, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_94
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(94, s),Ö, o, m)

	)

366 
	#BOOST_PP_FOR_94_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(95, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_95
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(95, s),Ö, o, m)

	)

367 
	#BOOST_PP_FOR_95_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(96, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_96
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(96, s),Ö, o, m)

	)

368 
	#BOOST_PP_FOR_96_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(97, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_97
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(97, s),Ö, o, m)

	)

369 
	#BOOST_PP_FOR_97_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(98, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_98
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(98, s),Ö, o, m)

	)

370 
	#BOOST_PP_FOR_98_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(99, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_99
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(99, s),Ö, o, m)

	)

371 
	#BOOST_PP_FOR_99_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(100, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_100
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(100, s),Ö, o, m)

	)

372 
	#BOOST_PP_FOR_100_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(101, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_101
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(101, s),Ö, o, m)

	)

373 
	#BOOST_PP_FOR_101_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(102, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_102
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(102, s),Ö, o, m)

	)

374 
	#BOOST_PP_FOR_102_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(103, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_103
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(103, s),Ö, o, m)

	)

375 
	#BOOST_PP_FOR_103_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(104, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_104
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(104, s),Ö, o, m)

	)

376 
	#BOOST_PP_FOR_104_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(105, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_105
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(105, s),Ö, o, m)

	)

377 
	#BOOST_PP_FOR_105_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(106, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_106
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(106, s),Ö, o, m)

	)

378 
	#BOOST_PP_FOR_106_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(107, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_107
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(107, s),Ö, o, m)

	)

379 
	#BOOST_PP_FOR_107_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(108, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_108
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(108, s),Ö, o, m)

	)

380 
	#BOOST_PP_FOR_108_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(109, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_109
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(109, s),Ö, o, m)

	)

381 
	#BOOST_PP_FOR_109_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(110, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_110
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(110, s),Ö, o, m)

	)

382 
	#BOOST_PP_FOR_110_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(111, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_111
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(111, s),Ö, o, m)

	)

383 
	#BOOST_PP_FOR_111_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(112, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_112
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(112, s),Ö, o, m)

	)

384 
	#BOOST_PP_FOR_112_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(113, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_113
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(113, s),Ö, o, m)

	)

385 
	#BOOST_PP_FOR_113_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(114, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_114
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(114, s),Ö, o, m)

	)

386 
	#BOOST_PP_FOR_114_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(115, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_115
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(115, s),Ö, o, m)

	)

387 
	#BOOST_PP_FOR_115_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(116, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_116
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(116, s),Ö, o, m)

	)

388 
	#BOOST_PP_FOR_116_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(117, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_117
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(117, s),Ö, o, m)

	)

389 
	#BOOST_PP_FOR_117_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(118, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_118
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(118, s),Ö, o, m)

	)

390 
	#BOOST_PP_FOR_118_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(119, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_119
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(119, s),Ö, o, m)

	)

391 
	#BOOST_PP_FOR_119_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(120, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_120
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(120, s),Ö, o, m)

	)

392 
	#BOOST_PP_FOR_120_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(121, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_121
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(121, s),Ö, o, m)

	)

393 
	#BOOST_PP_FOR_121_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(122, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_122
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(122, s),Ö, o, m)

	)

394 
	#BOOST_PP_FOR_122_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(123, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_123
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(123, s),Ö, o, m)

	)

395 
	#BOOST_PP_FOR_123_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(124, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_124
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(124, s),Ö, o, m)

	)

396 
	#BOOST_PP_FOR_124_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(125, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_125
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(125, s),Ö, o, m)

	)

397 
	#BOOST_PP_FOR_125_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(126, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_126
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(126, s),Ö, o, m)

	)

398 
	#BOOST_PP_FOR_126_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(127, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_127
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(127, s),Ö, o, m)

	)

399 
	#BOOST_PP_FOR_127_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(128, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_128
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(128, s),Ö, o, m)

	)

400 
	#BOOST_PP_FOR_128_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(129, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_129
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(129, s),Ö, o, m)

	)

401 
	#BOOST_PP_FOR_129_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(130, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_130
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(130, s),Ö, o, m)

	)

402 
	#BOOST_PP_FOR_130_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(131, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_131
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(131, s),Ö, o, m)

	)

403 
	#BOOST_PP_FOR_131_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(132, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_132
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(132, s),Ö, o, m)

	)

404 
	#BOOST_PP_FOR_132_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(133, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_133
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(133, s),Ö, o, m)

	)

405 
	#BOOST_PP_FOR_133_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(134, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_134
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(134, s),Ö, o, m)

	)

406 
	#BOOST_PP_FOR_134_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(135, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_135
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(135, s),Ö, o, m)

	)

407 
	#BOOST_PP_FOR_135_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(136, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_136
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(136, s),Ö, o, m)

	)

408 
	#BOOST_PP_FOR_136_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(137, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_137
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(137, s),Ö, o, m)

	)

409 
	#BOOST_PP_FOR_137_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(138, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_138
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(138, s),Ö, o, m)

	)

410 
	#BOOST_PP_FOR_138_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(139, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_139
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(139, s),Ö, o, m)

	)

411 
	#BOOST_PP_FOR_139_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(140, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_140
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(140, s),Ö, o, m)

	)

412 
	#BOOST_PP_FOR_140_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(141, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_141
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(141, s),Ö, o, m)

	)

413 
	#BOOST_PP_FOR_141_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(142, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_142
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(142, s),Ö, o, m)

	)

414 
	#BOOST_PP_FOR_142_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(143, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_143
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(143, s),Ö, o, m)

	)

415 
	#BOOST_PP_FOR_143_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(144, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_144
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(144, s),Ö, o, m)

	)

416 
	#BOOST_PP_FOR_144_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(145, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_145
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(145, s),Ö, o, m)

	)

417 
	#BOOST_PP_FOR_145_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(146, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_146
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(146, s),Ö, o, m)

	)

418 
	#BOOST_PP_FOR_146_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(147, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_147
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(147, s),Ö, o, m)

	)

419 
	#BOOST_PP_FOR_147_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(148, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_148
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(148, s),Ö, o, m)

	)

420 
	#BOOST_PP_FOR_148_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(149, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_149
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(149, s),Ö, o, m)

	)

421 
	#BOOST_PP_FOR_149_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(150, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_150
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(150, s),Ö, o, m)

	)

422 
	#BOOST_PP_FOR_150_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(151, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_151
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(151, s),Ö, o, m)

	)

423 
	#BOOST_PP_FOR_151_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(152, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_152
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(152, s),Ö, o, m)

	)

424 
	#BOOST_PP_FOR_152_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(153, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_153
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(153, s),Ö, o, m)

	)

425 
	#BOOST_PP_FOR_153_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(154, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_154
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(154, s),Ö, o, m)

	)

426 
	#BOOST_PP_FOR_154_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(155, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_155
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(155, s),Ö, o, m)

	)

427 
	#BOOST_PP_FOR_155_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(156, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_156
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(156, s),Ö, o, m)

	)

428 
	#BOOST_PP_FOR_156_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(157, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_157
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(157, s),Ö, o, m)

	)

429 
	#BOOST_PP_FOR_157_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(158, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_158
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(158, s),Ö, o, m)

	)

430 
	#BOOST_PP_FOR_158_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(159, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_159
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(159, s),Ö, o, m)

	)

431 
	#BOOST_PP_FOR_159_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(160, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_160
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(160, s),Ö, o, m)

	)

432 
	#BOOST_PP_FOR_160_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(161, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_161
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(161, s),Ö, o, m)

	)

433 
	#BOOST_PP_FOR_161_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(162, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_162
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(162, s),Ö, o, m)

	)

434 
	#BOOST_PP_FOR_162_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(163, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_163
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(163, s),Ö, o, m)

	)

435 
	#BOOST_PP_FOR_163_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(164, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_164
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(164, s),Ö, o, m)

	)

436 
	#BOOST_PP_FOR_164_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(165, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_165
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(165, s),Ö, o, m)

	)

437 
	#BOOST_PP_FOR_165_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(166, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_166
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(166, s),Ö, o, m)

	)

438 
	#BOOST_PP_FOR_166_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(167, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_167
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(167, s),Ö, o, m)

	)

439 
	#BOOST_PP_FOR_167_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(168, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_168
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(168, s),Ö, o, m)

	)

440 
	#BOOST_PP_FOR_168_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(169, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_169
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(169, s),Ö, o, m)

	)

441 
	#BOOST_PP_FOR_169_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(170, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_170
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(170, s),Ö, o, m)

	)

442 
	#BOOST_PP_FOR_170_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(171, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_171
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(171, s),Ö, o, m)

	)

443 
	#BOOST_PP_FOR_171_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(172, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_172
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(172, s),Ö, o, m)

	)

444 
	#BOOST_PP_FOR_172_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(173, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_173
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(173, s),Ö, o, m)

	)

445 
	#BOOST_PP_FOR_173_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(174, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_174
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(174, s),Ö, o, m)

	)

446 
	#BOOST_PP_FOR_174_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(175, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_175
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(175, s),Ö, o, m)

	)

447 
	#BOOST_PP_FOR_175_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(176, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_176
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(176, s),Ö, o, m)

	)

448 
	#BOOST_PP_FOR_176_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(177, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_177
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(177, s),Ö, o, m)

	)

449 
	#BOOST_PP_FOR_177_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(178, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_178
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(178, s),Ö, o, m)

	)

450 
	#BOOST_PP_FOR_178_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(179, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_179
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(179, s),Ö, o, m)

	)

451 
	#BOOST_PP_FOR_179_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(180, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_180
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(180, s),Ö, o, m)

	)

452 
	#BOOST_PP_FOR_180_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(181, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_181
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(181, s),Ö, o, m)

	)

453 
	#BOOST_PP_FOR_181_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(182, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_182
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(182, s),Ö, o, m)

	)

454 
	#BOOST_PP_FOR_182_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(183, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_183
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(183, s),Ö, o, m)

	)

455 
	#BOOST_PP_FOR_183_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(184, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_184
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(184, s),Ö, o, m)

	)

456 
	#BOOST_PP_FOR_184_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(185, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_185
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(185, s),Ö, o, m)

	)

457 
	#BOOST_PP_FOR_185_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(186, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_186
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(186, s),Ö, o, m)

	)

458 
	#BOOST_PP_FOR_186_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(187, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_187
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(187, s),Ö, o, m)

	)

459 
	#BOOST_PP_FOR_187_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(188, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_188
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(188, s),Ö, o, m)

	)

460 
	#BOOST_PP_FOR_188_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(189, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_189
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(189, s),Ö, o, m)

	)

461 
	#BOOST_PP_FOR_189_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(190, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_190
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(190, s),Ö, o, m)

	)

462 
	#BOOST_PP_FOR_190_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(191, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_191
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(191, s),Ö, o, m)

	)

463 
	#BOOST_PP_FOR_191_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(192, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_192
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(192, s),Ö, o, m)

	)

464 
	#BOOST_PP_FOR_192_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(193, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_193
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(193, s),Ö, o, m)

	)

465 
	#BOOST_PP_FOR_193_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(194, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_194
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(194, s),Ö, o, m)

	)

466 
	#BOOST_PP_FOR_194_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(195, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_195
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(195, s),Ö, o, m)

	)

467 
	#BOOST_PP_FOR_195_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(196, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_196
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(196, s),Ö, o, m)

	)

468 
	#BOOST_PP_FOR_196_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(197, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_197
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(197, s),Ö, o, m)

	)

469 
	#BOOST_PP_FOR_197_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(198, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_198
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(198, s),Ö, o, m)

	)

470 
	#BOOST_PP_FOR_198_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(199, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_199
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(199, s),Ö, o, m)

	)

471 
	#BOOST_PP_FOR_199_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(200, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_200
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(200, s),Ö, o, m)

	)

472 
	#BOOST_PP_FOR_200_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(201, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_201
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(201, s),Ö, o, m)

	)

473 
	#BOOST_PP_FOR_201_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(202, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_202
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(202, s),Ö, o, m)

	)

474 
	#BOOST_PP_FOR_202_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(203, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_203
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(203, s),Ö, o, m)

	)

475 
	#BOOST_PP_FOR_203_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(204, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_204
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(204, s),Ö, o, m)

	)

476 
	#BOOST_PP_FOR_204_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(205, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_205
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(205, s),Ö, o, m)

	)

477 
	#BOOST_PP_FOR_205_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(206, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_206
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(206, s),Ö, o, m)

	)

478 
	#BOOST_PP_FOR_206_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(207, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_207
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(207, s),Ö, o, m)

	)

479 
	#BOOST_PP_FOR_207_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(208, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_208
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(208, s),Ö, o, m)

	)

480 
	#BOOST_PP_FOR_208_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(209, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_209
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(209, s),Ö, o, m)

	)

481 
	#BOOST_PP_FOR_209_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(210, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_210
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(210, s),Ö, o, m)

	)

482 
	#BOOST_PP_FOR_210_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(211, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_211
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(211, s),Ö, o, m)

	)

483 
	#BOOST_PP_FOR_211_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(212, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_212
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(212, s),Ö, o, m)

	)

484 
	#BOOST_PP_FOR_212_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(213, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_213
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(213, s),Ö, o, m)

	)

485 
	#BOOST_PP_FOR_213_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(214, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_214
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(214, s),Ö, o, m)

	)

486 
	#BOOST_PP_FOR_214_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(215, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_215
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(215, s),Ö, o, m)

	)

487 
	#BOOST_PP_FOR_215_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(216, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_216
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(216, s),Ö, o, m)

	)

488 
	#BOOST_PP_FOR_216_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(217, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_217
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(217, s),Ö, o, m)

	)

489 
	#BOOST_PP_FOR_217_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(218, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_218
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(218, s),Ö, o, m)

	)

490 
	#BOOST_PP_FOR_218_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(219, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_219
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(219, s),Ö, o, m)

	)

491 
	#BOOST_PP_FOR_219_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(220, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_220
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(220, s),Ö, o, m)

	)

492 
	#BOOST_PP_FOR_220_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(221, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_221
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(221, s),Ö, o, m)

	)

493 
	#BOOST_PP_FOR_221_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(222, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_222
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(222, s),Ö, o, m)

	)

494 
	#BOOST_PP_FOR_222_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(223, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_223
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(223, s),Ö, o, m)

	)

495 
	#BOOST_PP_FOR_223_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(224, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_224
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(224, s),Ö, o, m)

	)

496 
	#BOOST_PP_FOR_224_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(225, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_225
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(225, s),Ö, o, m)

	)

497 
	#BOOST_PP_FOR_225_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(226, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_226
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(226, s),Ö, o, m)

	)

498 
	#BOOST_PP_FOR_226_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(227, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_227
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(227, s),Ö, o, m)

	)

499 
	#BOOST_PP_FOR_227_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(228, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_228
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(228, s),Ö, o, m)

	)

500 
	#BOOST_PP_FOR_228_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(229, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_229
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(229, s),Ö, o, m)

	)

501 
	#BOOST_PP_FOR_229_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(230, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_230
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(230, s),Ö, o, m)

	)

502 
	#BOOST_PP_FOR_230_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(231, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_231
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(231, s),Ö, o, m)

	)

503 
	#BOOST_PP_FOR_231_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(232, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_232
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(232, s),Ö, o, m)

	)

504 
	#BOOST_PP_FOR_232_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(233, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_233
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(233, s),Ö, o, m)

	)

505 
	#BOOST_PP_FOR_233_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(234, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_234
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(234, s),Ö, o, m)

	)

506 
	#BOOST_PP_FOR_234_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(235, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_235
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(235, s),Ö, o, m)

	)

507 
	#BOOST_PP_FOR_235_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(236, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_236
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(236, s),Ö, o, m)

	)

508 
	#BOOST_PP_FOR_236_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(237, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_237
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(237, s),Ö, o, m)

	)

509 
	#BOOST_PP_FOR_237_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(238, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_238
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(238, s),Ö, o, m)

	)

510 
	#BOOST_PP_FOR_238_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(239, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_239
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(239, s),Ö, o, m)

	)

511 
	#BOOST_PP_FOR_239_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(240, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_240
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(240, s),Ö, o, m)

	)

512 
	#BOOST_PP_FOR_240_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(241, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_241
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(241, s),Ö, o, m)

	)

513 
	#BOOST_PP_FOR_241_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(242, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_242
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(242, s),Ö, o, m)

	)

514 
	#BOOST_PP_FOR_242_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(243, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_243
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(243, s),Ö, o, m)

	)

515 
	#BOOST_PP_FOR_243_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(244, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_244
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(244, s),Ö, o, m)

	)

516 
	#BOOST_PP_FOR_244_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(245, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_245
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(245, s),Ö, o, m)

	)

517 
	#BOOST_PP_FOR_245_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(246, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_246
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(246, s),Ö, o, m)

	)

518 
	#BOOST_PP_FOR_246_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(247, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_247
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(247, s),Ö, o, m)

	)

519 
	#BOOST_PP_FOR_247_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(248, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_248
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(248, s),Ö, o, m)

	)

520 
	#BOOST_PP_FOR_248_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(249, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_249
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(249, s),Ö, o, m)

	)

521 
	#BOOST_PP_FOR_249_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(250, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_250
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(250, s),Ö, o, m)

	)

522 
	#BOOST_PP_FOR_250_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(251, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_251
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(251, s),Ö, o, m)

	)

523 
	#BOOST_PP_FOR_251_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(252, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_252
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(252, s),Ö, o, m)

	)

524 
	#BOOST_PP_FOR_252_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(253, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_253
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(253, s),Ö, o, m)

	)

525 
	#BOOST_PP_FOR_253_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(254, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_254
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(254, s),Ö, o, m)

	)

526 
	#BOOST_PP_FOR_254_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(255, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_255
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(255, s),Ö, o, m)

	)

527 
	#BOOST_PP_FOR_255_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(256, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_256
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(256, s),Ö, o, m)

	)

528 
	#BOOST_PP_FOR_256_C
(
c
, 
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IIF
(c, m, 
BOOST_PP_TUPLE_EAT_2
)(257, sËBOOST_PP_IIF(c, 
BOOST_PP_FOR_257
, 
BOOST_PP_TUPLE_EAT_4
)(
	`BOOST_PP_EXPR_IIF
(c, o)(257, s),Ö, o, m)

	)

	@/usr/include/boost/preprocessor/repetition/detail/msvc/for.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_DETAIL_MSVC_FOR_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_DETAIL_MSVC_FOR_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/if.hµ
>

14 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

15 
#deföê
	#BOOST_PP_FOR_1
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(2, s), m, 
BOOST_PP_TUPLE_EAT_2
)(2, sËBOOST_PP_IF’(2, s), 
BOOST_PP_FOR_2
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(2, s),Ö, o, m)

	)

16 
	#BOOST_PP_FOR_2
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(3, s), m, 
BOOST_PP_TUPLE_EAT_2
)(3, sËBOOST_PP_IF’(3, s), 
BOOST_PP_FOR_3
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(3, s),Ö, o, m)

	)

17 
	#BOOST_PP_FOR_3
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(4, s), m, 
BOOST_PP_TUPLE_EAT_2
)(4, sËBOOST_PP_IF’(4, s), 
BOOST_PP_FOR_4
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(4, s),Ö, o, m)

	)

18 
	#BOOST_PP_FOR_4
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(5, s), m, 
BOOST_PP_TUPLE_EAT_2
)(5, sËBOOST_PP_IF’(5, s), 
BOOST_PP_FOR_5
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(5, s),Ö, o, m)

	)

19 
	#BOOST_PP_FOR_5
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(6, s), m, 
BOOST_PP_TUPLE_EAT_2
)(6, sËBOOST_PP_IF’(6, s), 
BOOST_PP_FOR_6
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(6, s),Ö, o, m)

	)

20 
	#BOOST_PP_FOR_6
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(7, s), m, 
BOOST_PP_TUPLE_EAT_2
)(7, sËBOOST_PP_IF’(7, s), 
BOOST_PP_FOR_7
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(7, s),Ö, o, m)

	)

21 
	#BOOST_PP_FOR_7
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(8, s), m, 
BOOST_PP_TUPLE_EAT_2
)(8, sËBOOST_PP_IF’(8, s), 
BOOST_PP_FOR_8
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(8, s),Ö, o, m)

	)

22 
	#BOOST_PP_FOR_8
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(9, s), m, 
BOOST_PP_TUPLE_EAT_2
)(9, sËBOOST_PP_IF’(9, s), 
BOOST_PP_FOR_9
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(9, s),Ö, o, m)

	)

23 
	#BOOST_PP_FOR_9
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(10, s), m, 
BOOST_PP_TUPLE_EAT_2
)(10, sËBOOST_PP_IF’(10, s), 
BOOST_PP_FOR_10
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(10, s),Ö, o, m)

	)

24 
	#BOOST_PP_FOR_10
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(11, s), m, 
BOOST_PP_TUPLE_EAT_2
)(11, sËBOOST_PP_IF’(11, s), 
BOOST_PP_FOR_11
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(11, s),Ö, o, m)

	)

25 
	#BOOST_PP_FOR_11
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(12, s), m, 
BOOST_PP_TUPLE_EAT_2
)(12, sËBOOST_PP_IF’(12, s), 
BOOST_PP_FOR_12
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(12, s),Ö, o, m)

	)

26 
	#BOOST_PP_FOR_12
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(13, s), m, 
BOOST_PP_TUPLE_EAT_2
)(13, sËBOOST_PP_IF’(13, s), 
BOOST_PP_FOR_13
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(13, s),Ö, o, m)

	)

27 
	#BOOST_PP_FOR_13
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(14, s), m, 
BOOST_PP_TUPLE_EAT_2
)(14, sËBOOST_PP_IF’(14, s), 
BOOST_PP_FOR_14
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(14, s),Ö, o, m)

	)

28 
	#BOOST_PP_FOR_14
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(15, s), m, 
BOOST_PP_TUPLE_EAT_2
)(15, sËBOOST_PP_IF’(15, s), 
BOOST_PP_FOR_15
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(15, s),Ö, o, m)

	)

29 
	#BOOST_PP_FOR_15
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(16, s), m, 
BOOST_PP_TUPLE_EAT_2
)(16, sËBOOST_PP_IF’(16, s), 
BOOST_PP_FOR_16
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(16, s),Ö, o, m)

	)

30 
	#BOOST_PP_FOR_16
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(17, s), m, 
BOOST_PP_TUPLE_EAT_2
)(17, sËBOOST_PP_IF’(17, s), 
BOOST_PP_FOR_17
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(17, s),Ö, o, m)

	)

31 
	#BOOST_PP_FOR_17
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(18, s), m, 
BOOST_PP_TUPLE_EAT_2
)(18, sËBOOST_PP_IF’(18, s), 
BOOST_PP_FOR_18
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(18, s),Ö, o, m)

	)

32 
	#BOOST_PP_FOR_18
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(19, s), m, 
BOOST_PP_TUPLE_EAT_2
)(19, sËBOOST_PP_IF’(19, s), 
BOOST_PP_FOR_19
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(19, s),Ö, o, m)

	)

33 
	#BOOST_PP_FOR_19
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(20, s), m, 
BOOST_PP_TUPLE_EAT_2
)(20, sËBOOST_PP_IF’(20, s), 
BOOST_PP_FOR_20
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(20, s),Ö, o, m)

	)

34 
	#BOOST_PP_FOR_20
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(21, s), m, 
BOOST_PP_TUPLE_EAT_2
)(21, sËBOOST_PP_IF’(21, s), 
BOOST_PP_FOR_21
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(21, s),Ö, o, m)

	)

35 
	#BOOST_PP_FOR_21
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(22, s), m, 
BOOST_PP_TUPLE_EAT_2
)(22, sËBOOST_PP_IF’(22, s), 
BOOST_PP_FOR_22
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(22, s),Ö, o, m)

	)

36 
	#BOOST_PP_FOR_22
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(23, s), m, 
BOOST_PP_TUPLE_EAT_2
)(23, sËBOOST_PP_IF’(23, s), 
BOOST_PP_FOR_23
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(23, s),Ö, o, m)

	)

37 
	#BOOST_PP_FOR_23
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(24, s), m, 
BOOST_PP_TUPLE_EAT_2
)(24, sËBOOST_PP_IF’(24, s), 
BOOST_PP_FOR_24
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(24, s),Ö, o, m)

	)

38 
	#BOOST_PP_FOR_24
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(25, s), m, 
BOOST_PP_TUPLE_EAT_2
)(25, sËBOOST_PP_IF’(25, s), 
BOOST_PP_FOR_25
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(25, s),Ö, o, m)

	)

39 
	#BOOST_PP_FOR_25
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(26, s), m, 
BOOST_PP_TUPLE_EAT_2
)(26, sËBOOST_PP_IF’(26, s), 
BOOST_PP_FOR_26
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(26, s),Ö, o, m)

	)

40 
	#BOOST_PP_FOR_26
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(27, s), m, 
BOOST_PP_TUPLE_EAT_2
)(27, sËBOOST_PP_IF’(27, s), 
BOOST_PP_FOR_27
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(27, s),Ö, o, m)

	)

41 
	#BOOST_PP_FOR_27
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(28, s), m, 
BOOST_PP_TUPLE_EAT_2
)(28, sËBOOST_PP_IF’(28, s), 
BOOST_PP_FOR_28
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(28, s),Ö, o, m)

	)

42 
	#BOOST_PP_FOR_28
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(29, s), m, 
BOOST_PP_TUPLE_EAT_2
)(29, sËBOOST_PP_IF’(29, s), 
BOOST_PP_FOR_29
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(29, s),Ö, o, m)

	)

43 
	#BOOST_PP_FOR_29
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(30, s), m, 
BOOST_PP_TUPLE_EAT_2
)(30, sËBOOST_PP_IF’(30, s), 
BOOST_PP_FOR_30
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(30, s),Ö, o, m)

	)

44 
	#BOOST_PP_FOR_30
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(31, s), m, 
BOOST_PP_TUPLE_EAT_2
)(31, sËBOOST_PP_IF’(31, s), 
BOOST_PP_FOR_31
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(31, s),Ö, o, m)

	)

45 
	#BOOST_PP_FOR_31
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(32, s), m, 
BOOST_PP_TUPLE_EAT_2
)(32, sËBOOST_PP_IF’(32, s), 
BOOST_PP_FOR_32
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(32, s),Ö, o, m)

	)

46 
	#BOOST_PP_FOR_32
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(33, s), m, 
BOOST_PP_TUPLE_EAT_2
)(33, sËBOOST_PP_IF’(33, s), 
BOOST_PP_FOR_33
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(33, s),Ö, o, m)

	)

47 
	#BOOST_PP_FOR_33
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(34, s), m, 
BOOST_PP_TUPLE_EAT_2
)(34, sËBOOST_PP_IF’(34, s), 
BOOST_PP_FOR_34
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(34, s),Ö, o, m)

	)

48 
	#BOOST_PP_FOR_34
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(35, s), m, 
BOOST_PP_TUPLE_EAT_2
)(35, sËBOOST_PP_IF’(35, s), 
BOOST_PP_FOR_35
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(35, s),Ö, o, m)

	)

49 
	#BOOST_PP_FOR_35
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(36, s), m, 
BOOST_PP_TUPLE_EAT_2
)(36, sËBOOST_PP_IF’(36, s), 
BOOST_PP_FOR_36
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(36, s),Ö, o, m)

	)

50 
	#BOOST_PP_FOR_36
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(37, s), m, 
BOOST_PP_TUPLE_EAT_2
)(37, sËBOOST_PP_IF’(37, s), 
BOOST_PP_FOR_37
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(37, s),Ö, o, m)

	)

51 
	#BOOST_PP_FOR_37
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(38, s), m, 
BOOST_PP_TUPLE_EAT_2
)(38, sËBOOST_PP_IF’(38, s), 
BOOST_PP_FOR_38
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(38, s),Ö, o, m)

	)

52 
	#BOOST_PP_FOR_38
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(39, s), m, 
BOOST_PP_TUPLE_EAT_2
)(39, sËBOOST_PP_IF’(39, s), 
BOOST_PP_FOR_39
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(39, s),Ö, o, m)

	)

53 
	#BOOST_PP_FOR_39
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(40, s), m, 
BOOST_PP_TUPLE_EAT_2
)(40, sËBOOST_PP_IF’(40, s), 
BOOST_PP_FOR_40
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(40, s),Ö, o, m)

	)

54 
	#BOOST_PP_FOR_40
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(41, s), m, 
BOOST_PP_TUPLE_EAT_2
)(41, sËBOOST_PP_IF’(41, s), 
BOOST_PP_FOR_41
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(41, s),Ö, o, m)

	)

55 
	#BOOST_PP_FOR_41
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(42, s), m, 
BOOST_PP_TUPLE_EAT_2
)(42, sËBOOST_PP_IF’(42, s), 
BOOST_PP_FOR_42
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(42, s),Ö, o, m)

	)

56 
	#BOOST_PP_FOR_42
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(43, s), m, 
BOOST_PP_TUPLE_EAT_2
)(43, sËBOOST_PP_IF’(43, s), 
BOOST_PP_FOR_43
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(43, s),Ö, o, m)

	)

57 
	#BOOST_PP_FOR_43
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(44, s), m, 
BOOST_PP_TUPLE_EAT_2
)(44, sËBOOST_PP_IF’(44, s), 
BOOST_PP_FOR_44
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(44, s),Ö, o, m)

	)

58 
	#BOOST_PP_FOR_44
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(45, s), m, 
BOOST_PP_TUPLE_EAT_2
)(45, sËBOOST_PP_IF’(45, s), 
BOOST_PP_FOR_45
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(45, s),Ö, o, m)

	)

59 
	#BOOST_PP_FOR_45
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(46, s), m, 
BOOST_PP_TUPLE_EAT_2
)(46, sËBOOST_PP_IF’(46, s), 
BOOST_PP_FOR_46
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(46, s),Ö, o, m)

	)

60 
	#BOOST_PP_FOR_46
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(47, s), m, 
BOOST_PP_TUPLE_EAT_2
)(47, sËBOOST_PP_IF’(47, s), 
BOOST_PP_FOR_47
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(47, s),Ö, o, m)

	)

61 
	#BOOST_PP_FOR_47
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(48, s), m, 
BOOST_PP_TUPLE_EAT_2
)(48, sËBOOST_PP_IF’(48, s), 
BOOST_PP_FOR_48
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(48, s),Ö, o, m)

	)

62 
	#BOOST_PP_FOR_48
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(49, s), m, 
BOOST_PP_TUPLE_EAT_2
)(49, sËBOOST_PP_IF’(49, s), 
BOOST_PP_FOR_49
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(49, s),Ö, o, m)

	)

63 
	#BOOST_PP_FOR_49
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(50, s), m, 
BOOST_PP_TUPLE_EAT_2
)(50, sËBOOST_PP_IF’(50, s), 
BOOST_PP_FOR_50
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(50, s),Ö, o, m)

	)

64 
	#BOOST_PP_FOR_50
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(51, s), m, 
BOOST_PP_TUPLE_EAT_2
)(51, sËBOOST_PP_IF’(51, s), 
BOOST_PP_FOR_51
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(51, s),Ö, o, m)

	)

65 
	#BOOST_PP_FOR_51
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(52, s), m, 
BOOST_PP_TUPLE_EAT_2
)(52, sËBOOST_PP_IF’(52, s), 
BOOST_PP_FOR_52
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(52, s),Ö, o, m)

	)

66 
	#BOOST_PP_FOR_52
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(53, s), m, 
BOOST_PP_TUPLE_EAT_2
)(53, sËBOOST_PP_IF’(53, s), 
BOOST_PP_FOR_53
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(53, s),Ö, o, m)

	)

67 
	#BOOST_PP_FOR_53
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(54, s), m, 
BOOST_PP_TUPLE_EAT_2
)(54, sËBOOST_PP_IF’(54, s), 
BOOST_PP_FOR_54
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(54, s),Ö, o, m)

	)

68 
	#BOOST_PP_FOR_54
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(55, s), m, 
BOOST_PP_TUPLE_EAT_2
)(55, sËBOOST_PP_IF’(55, s), 
BOOST_PP_FOR_55
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(55, s),Ö, o, m)

	)

69 
	#BOOST_PP_FOR_55
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(56, s), m, 
BOOST_PP_TUPLE_EAT_2
)(56, sËBOOST_PP_IF’(56, s), 
BOOST_PP_FOR_56
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(56, s),Ö, o, m)

	)

70 
	#BOOST_PP_FOR_56
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(57, s), m, 
BOOST_PP_TUPLE_EAT_2
)(57, sËBOOST_PP_IF’(57, s), 
BOOST_PP_FOR_57
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(57, s),Ö, o, m)

	)

71 
	#BOOST_PP_FOR_57
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(58, s), m, 
BOOST_PP_TUPLE_EAT_2
)(58, sËBOOST_PP_IF’(58, s), 
BOOST_PP_FOR_58
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(58, s),Ö, o, m)

	)

72 
	#BOOST_PP_FOR_58
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(59, s), m, 
BOOST_PP_TUPLE_EAT_2
)(59, sËBOOST_PP_IF’(59, s), 
BOOST_PP_FOR_59
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(59, s),Ö, o, m)

	)

73 
	#BOOST_PP_FOR_59
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(60, s), m, 
BOOST_PP_TUPLE_EAT_2
)(60, sËBOOST_PP_IF’(60, s), 
BOOST_PP_FOR_60
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(60, s),Ö, o, m)

	)

74 
	#BOOST_PP_FOR_60
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(61, s), m, 
BOOST_PP_TUPLE_EAT_2
)(61, sËBOOST_PP_IF’(61, s), 
BOOST_PP_FOR_61
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(61, s),Ö, o, m)

	)

75 
	#BOOST_PP_FOR_61
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(62, s), m, 
BOOST_PP_TUPLE_EAT_2
)(62, sËBOOST_PP_IF’(62, s), 
BOOST_PP_FOR_62
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(62, s),Ö, o, m)

	)

76 
	#BOOST_PP_FOR_62
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(63, s), m, 
BOOST_PP_TUPLE_EAT_2
)(63, sËBOOST_PP_IF’(63, s), 
BOOST_PP_FOR_63
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(63, s),Ö, o, m)

	)

77 
	#BOOST_PP_FOR_63
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(64, s), m, 
BOOST_PP_TUPLE_EAT_2
)(64, sËBOOST_PP_IF’(64, s), 
BOOST_PP_FOR_64
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(64, s),Ö, o, m)

	)

78 
	#BOOST_PP_FOR_64
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(65, s), m, 
BOOST_PP_TUPLE_EAT_2
)(65, sËBOOST_PP_IF’(65, s), 
BOOST_PP_FOR_65
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(65, s),Ö, o, m)

	)

79 
	#BOOST_PP_FOR_65
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(66, s), m, 
BOOST_PP_TUPLE_EAT_2
)(66, sËBOOST_PP_IF’(66, s), 
BOOST_PP_FOR_66
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(66, s),Ö, o, m)

	)

80 
	#BOOST_PP_FOR_66
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(67, s), m, 
BOOST_PP_TUPLE_EAT_2
)(67, sËBOOST_PP_IF’(67, s), 
BOOST_PP_FOR_67
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(67, s),Ö, o, m)

	)

81 
	#BOOST_PP_FOR_67
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(68, s), m, 
BOOST_PP_TUPLE_EAT_2
)(68, sËBOOST_PP_IF’(68, s), 
BOOST_PP_FOR_68
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(68, s),Ö, o, m)

	)

82 
	#BOOST_PP_FOR_68
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(69, s), m, 
BOOST_PP_TUPLE_EAT_2
)(69, sËBOOST_PP_IF’(69, s), 
BOOST_PP_FOR_69
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(69, s),Ö, o, m)

	)

83 
	#BOOST_PP_FOR_69
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(70, s), m, 
BOOST_PP_TUPLE_EAT_2
)(70, sËBOOST_PP_IF’(70, s), 
BOOST_PP_FOR_70
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(70, s),Ö, o, m)

	)

84 
	#BOOST_PP_FOR_70
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(71, s), m, 
BOOST_PP_TUPLE_EAT_2
)(71, sËBOOST_PP_IF’(71, s), 
BOOST_PP_FOR_71
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(71, s),Ö, o, m)

	)

85 
	#BOOST_PP_FOR_71
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(72, s), m, 
BOOST_PP_TUPLE_EAT_2
)(72, sËBOOST_PP_IF’(72, s), 
BOOST_PP_FOR_72
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(72, s),Ö, o, m)

	)

86 
	#BOOST_PP_FOR_72
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(73, s), m, 
BOOST_PP_TUPLE_EAT_2
)(73, sËBOOST_PP_IF’(73, s), 
BOOST_PP_FOR_73
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(73, s),Ö, o, m)

	)

87 
	#BOOST_PP_FOR_73
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(74, s), m, 
BOOST_PP_TUPLE_EAT_2
)(74, sËBOOST_PP_IF’(74, s), 
BOOST_PP_FOR_74
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(74, s),Ö, o, m)

	)

88 
	#BOOST_PP_FOR_74
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(75, s), m, 
BOOST_PP_TUPLE_EAT_2
)(75, sËBOOST_PP_IF’(75, s), 
BOOST_PP_FOR_75
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(75, s),Ö, o, m)

	)

89 
	#BOOST_PP_FOR_75
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(76, s), m, 
BOOST_PP_TUPLE_EAT_2
)(76, sËBOOST_PP_IF’(76, s), 
BOOST_PP_FOR_76
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(76, s),Ö, o, m)

	)

90 
	#BOOST_PP_FOR_76
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(77, s), m, 
BOOST_PP_TUPLE_EAT_2
)(77, sËBOOST_PP_IF’(77, s), 
BOOST_PP_FOR_77
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(77, s),Ö, o, m)

	)

91 
	#BOOST_PP_FOR_77
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(78, s), m, 
BOOST_PP_TUPLE_EAT_2
)(78, sËBOOST_PP_IF’(78, s), 
BOOST_PP_FOR_78
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(78, s),Ö, o, m)

	)

92 
	#BOOST_PP_FOR_78
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(79, s), m, 
BOOST_PP_TUPLE_EAT_2
)(79, sËBOOST_PP_IF’(79, s), 
BOOST_PP_FOR_79
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(79, s),Ö, o, m)

	)

93 
	#BOOST_PP_FOR_79
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(80, s), m, 
BOOST_PP_TUPLE_EAT_2
)(80, sËBOOST_PP_IF’(80, s), 
BOOST_PP_FOR_80
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(80, s),Ö, o, m)

	)

94 
	#BOOST_PP_FOR_80
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(81, s), m, 
BOOST_PP_TUPLE_EAT_2
)(81, sËBOOST_PP_IF’(81, s), 
BOOST_PP_FOR_81
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(81, s),Ö, o, m)

	)

95 
	#BOOST_PP_FOR_81
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(82, s), m, 
BOOST_PP_TUPLE_EAT_2
)(82, sËBOOST_PP_IF’(82, s), 
BOOST_PP_FOR_82
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(82, s),Ö, o, m)

	)

96 
	#BOOST_PP_FOR_82
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(83, s), m, 
BOOST_PP_TUPLE_EAT_2
)(83, sËBOOST_PP_IF’(83, s), 
BOOST_PP_FOR_83
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(83, s),Ö, o, m)

	)

97 
	#BOOST_PP_FOR_83
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(84, s), m, 
BOOST_PP_TUPLE_EAT_2
)(84, sËBOOST_PP_IF’(84, s), 
BOOST_PP_FOR_84
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(84, s),Ö, o, m)

	)

98 
	#BOOST_PP_FOR_84
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(85, s), m, 
BOOST_PP_TUPLE_EAT_2
)(85, sËBOOST_PP_IF’(85, s), 
BOOST_PP_FOR_85
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(85, s),Ö, o, m)

	)

99 
	#BOOST_PP_FOR_85
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(86, s), m, 
BOOST_PP_TUPLE_EAT_2
)(86, sËBOOST_PP_IF’(86, s), 
BOOST_PP_FOR_86
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(86, s),Ö, o, m)

	)

100 
	#BOOST_PP_FOR_86
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(87, s), m, 
BOOST_PP_TUPLE_EAT_2
)(87, sËBOOST_PP_IF’(87, s), 
BOOST_PP_FOR_87
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(87, s),Ö, o, m)

	)

101 
	#BOOST_PP_FOR_87
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(88, s), m, 
BOOST_PP_TUPLE_EAT_2
)(88, sËBOOST_PP_IF’(88, s), 
BOOST_PP_FOR_88
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(88, s),Ö, o, m)

	)

102 
	#BOOST_PP_FOR_88
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(89, s), m, 
BOOST_PP_TUPLE_EAT_2
)(89, sËBOOST_PP_IF’(89, s), 
BOOST_PP_FOR_89
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(89, s),Ö, o, m)

	)

103 
	#BOOST_PP_FOR_89
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(90, s), m, 
BOOST_PP_TUPLE_EAT_2
)(90, sËBOOST_PP_IF’(90, s), 
BOOST_PP_FOR_90
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(90, s),Ö, o, m)

	)

104 
	#BOOST_PP_FOR_90
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(91, s), m, 
BOOST_PP_TUPLE_EAT_2
)(91, sËBOOST_PP_IF’(91, s), 
BOOST_PP_FOR_91
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(91, s),Ö, o, m)

	)

105 
	#BOOST_PP_FOR_91
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(92, s), m, 
BOOST_PP_TUPLE_EAT_2
)(92, sËBOOST_PP_IF’(92, s), 
BOOST_PP_FOR_92
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(92, s),Ö, o, m)

	)

106 
	#BOOST_PP_FOR_92
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(93, s), m, 
BOOST_PP_TUPLE_EAT_2
)(93, sËBOOST_PP_IF’(93, s), 
BOOST_PP_FOR_93
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(93, s),Ö, o, m)

	)

107 
	#BOOST_PP_FOR_93
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(94, s), m, 
BOOST_PP_TUPLE_EAT_2
)(94, sËBOOST_PP_IF’(94, s), 
BOOST_PP_FOR_94
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(94, s),Ö, o, m)

	)

108 
	#BOOST_PP_FOR_94
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(95, s), m, 
BOOST_PP_TUPLE_EAT_2
)(95, sËBOOST_PP_IF’(95, s), 
BOOST_PP_FOR_95
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(95, s),Ö, o, m)

	)

109 
	#BOOST_PP_FOR_95
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(96, s), m, 
BOOST_PP_TUPLE_EAT_2
)(96, sËBOOST_PP_IF’(96, s), 
BOOST_PP_FOR_96
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(96, s),Ö, o, m)

	)

110 
	#BOOST_PP_FOR_96
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(97, s), m, 
BOOST_PP_TUPLE_EAT_2
)(97, sËBOOST_PP_IF’(97, s), 
BOOST_PP_FOR_97
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(97, s),Ö, o, m)

	)

111 
	#BOOST_PP_FOR_97
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(98, s), m, 
BOOST_PP_TUPLE_EAT_2
)(98, sËBOOST_PP_IF’(98, s), 
BOOST_PP_FOR_98
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(98, s),Ö, o, m)

	)

112 
	#BOOST_PP_FOR_98
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(99, s), m, 
BOOST_PP_TUPLE_EAT_2
)(99, sËBOOST_PP_IF’(99, s), 
BOOST_PP_FOR_99
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(99, s),Ö, o, m)

	)

113 
	#BOOST_PP_FOR_99
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(100, s), m, 
BOOST_PP_TUPLE_EAT_2
)(100, sËBOOST_PP_IF’(100, s), 
BOOST_PP_FOR_100
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(100, s),Ö, o, m)

	)

114 
	#BOOST_PP_FOR_100
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(101, s), m, 
BOOST_PP_TUPLE_EAT_2
)(101, sËBOOST_PP_IF’(101, s), 
BOOST_PP_FOR_101
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(101, s),Ö, o, m)

	)

115 
	#BOOST_PP_FOR_101
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(102, s), m, 
BOOST_PP_TUPLE_EAT_2
)(102, sËBOOST_PP_IF’(102, s), 
BOOST_PP_FOR_102
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(102, s),Ö, o, m)

	)

116 
	#BOOST_PP_FOR_102
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(103, s), m, 
BOOST_PP_TUPLE_EAT_2
)(103, sËBOOST_PP_IF’(103, s), 
BOOST_PP_FOR_103
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(103, s),Ö, o, m)

	)

117 
	#BOOST_PP_FOR_103
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(104, s), m, 
BOOST_PP_TUPLE_EAT_2
)(104, sËBOOST_PP_IF’(104, s), 
BOOST_PP_FOR_104
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(104, s),Ö, o, m)

	)

118 
	#BOOST_PP_FOR_104
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(105, s), m, 
BOOST_PP_TUPLE_EAT_2
)(105, sËBOOST_PP_IF’(105, s), 
BOOST_PP_FOR_105
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(105, s),Ö, o, m)

	)

119 
	#BOOST_PP_FOR_105
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(106, s), m, 
BOOST_PP_TUPLE_EAT_2
)(106, sËBOOST_PP_IF’(106, s), 
BOOST_PP_FOR_106
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(106, s),Ö, o, m)

	)

120 
	#BOOST_PP_FOR_106
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(107, s), m, 
BOOST_PP_TUPLE_EAT_2
)(107, sËBOOST_PP_IF’(107, s), 
BOOST_PP_FOR_107
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(107, s),Ö, o, m)

	)

121 
	#BOOST_PP_FOR_107
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(108, s), m, 
BOOST_PP_TUPLE_EAT_2
)(108, sËBOOST_PP_IF’(108, s), 
BOOST_PP_FOR_108
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(108, s),Ö, o, m)

	)

122 
	#BOOST_PP_FOR_108
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(109, s), m, 
BOOST_PP_TUPLE_EAT_2
)(109, sËBOOST_PP_IF’(109, s), 
BOOST_PP_FOR_109
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(109, s),Ö, o, m)

	)

123 
	#BOOST_PP_FOR_109
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(110, s), m, 
BOOST_PP_TUPLE_EAT_2
)(110, sËBOOST_PP_IF’(110, s), 
BOOST_PP_FOR_110
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(110, s),Ö, o, m)

	)

124 
	#BOOST_PP_FOR_110
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(111, s), m, 
BOOST_PP_TUPLE_EAT_2
)(111, sËBOOST_PP_IF’(111, s), 
BOOST_PP_FOR_111
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(111, s),Ö, o, m)

	)

125 
	#BOOST_PP_FOR_111
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(112, s), m, 
BOOST_PP_TUPLE_EAT_2
)(112, sËBOOST_PP_IF’(112, s), 
BOOST_PP_FOR_112
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(112, s),Ö, o, m)

	)

126 
	#BOOST_PP_FOR_112
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(113, s), m, 
BOOST_PP_TUPLE_EAT_2
)(113, sËBOOST_PP_IF’(113, s), 
BOOST_PP_FOR_113
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(113, s),Ö, o, m)

	)

127 
	#BOOST_PP_FOR_113
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(114, s), m, 
BOOST_PP_TUPLE_EAT_2
)(114, sËBOOST_PP_IF’(114, s), 
BOOST_PP_FOR_114
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(114, s),Ö, o, m)

	)

128 
	#BOOST_PP_FOR_114
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(115, s), m, 
BOOST_PP_TUPLE_EAT_2
)(115, sËBOOST_PP_IF’(115, s), 
BOOST_PP_FOR_115
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(115, s),Ö, o, m)

	)

129 
	#BOOST_PP_FOR_115
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(116, s), m, 
BOOST_PP_TUPLE_EAT_2
)(116, sËBOOST_PP_IF’(116, s), 
BOOST_PP_FOR_116
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(116, s),Ö, o, m)

	)

130 
	#BOOST_PP_FOR_116
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(117, s), m, 
BOOST_PP_TUPLE_EAT_2
)(117, sËBOOST_PP_IF’(117, s), 
BOOST_PP_FOR_117
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(117, s),Ö, o, m)

	)

131 
	#BOOST_PP_FOR_117
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(118, s), m, 
BOOST_PP_TUPLE_EAT_2
)(118, sËBOOST_PP_IF’(118, s), 
BOOST_PP_FOR_118
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(118, s),Ö, o, m)

	)

132 
	#BOOST_PP_FOR_118
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(119, s), m, 
BOOST_PP_TUPLE_EAT_2
)(119, sËBOOST_PP_IF’(119, s), 
BOOST_PP_FOR_119
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(119, s),Ö, o, m)

	)

133 
	#BOOST_PP_FOR_119
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(120, s), m, 
BOOST_PP_TUPLE_EAT_2
)(120, sËBOOST_PP_IF’(120, s), 
BOOST_PP_FOR_120
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(120, s),Ö, o, m)

	)

134 
	#BOOST_PP_FOR_120
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(121, s), m, 
BOOST_PP_TUPLE_EAT_2
)(121, sËBOOST_PP_IF’(121, s), 
BOOST_PP_FOR_121
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(121, s),Ö, o, m)

	)

135 
	#BOOST_PP_FOR_121
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(122, s), m, 
BOOST_PP_TUPLE_EAT_2
)(122, sËBOOST_PP_IF’(122, s), 
BOOST_PP_FOR_122
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(122, s),Ö, o, m)

	)

136 
	#BOOST_PP_FOR_122
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(123, s), m, 
BOOST_PP_TUPLE_EAT_2
)(123, sËBOOST_PP_IF’(123, s), 
BOOST_PP_FOR_123
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(123, s),Ö, o, m)

	)

137 
	#BOOST_PP_FOR_123
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(124, s), m, 
BOOST_PP_TUPLE_EAT_2
)(124, sËBOOST_PP_IF’(124, s), 
BOOST_PP_FOR_124
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(124, s),Ö, o, m)

	)

138 
	#BOOST_PP_FOR_124
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(125, s), m, 
BOOST_PP_TUPLE_EAT_2
)(125, sËBOOST_PP_IF’(125, s), 
BOOST_PP_FOR_125
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(125, s),Ö, o, m)

	)

139 
	#BOOST_PP_FOR_125
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(126, s), m, 
BOOST_PP_TUPLE_EAT_2
)(126, sËBOOST_PP_IF’(126, s), 
BOOST_PP_FOR_126
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(126, s),Ö, o, m)

	)

140 
	#BOOST_PP_FOR_126
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(127, s), m, 
BOOST_PP_TUPLE_EAT_2
)(127, sËBOOST_PP_IF’(127, s), 
BOOST_PP_FOR_127
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(127, s),Ö, o, m)

	)

141 
	#BOOST_PP_FOR_127
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(128, s), m, 
BOOST_PP_TUPLE_EAT_2
)(128, sËBOOST_PP_IF’(128, s), 
BOOST_PP_FOR_128
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(128, s),Ö, o, m)

	)

142 
	#BOOST_PP_FOR_128
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(129, s), m, 
BOOST_PP_TUPLE_EAT_2
)(129, sËBOOST_PP_IF’(129, s), 
BOOST_PP_FOR_129
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(129, s),Ö, o, m)

	)

143 
	#BOOST_PP_FOR_129
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(130, s), m, 
BOOST_PP_TUPLE_EAT_2
)(130, sËBOOST_PP_IF’(130, s), 
BOOST_PP_FOR_130
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(130, s),Ö, o, m)

	)

144 
	#BOOST_PP_FOR_130
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(131, s), m, 
BOOST_PP_TUPLE_EAT_2
)(131, sËBOOST_PP_IF’(131, s), 
BOOST_PP_FOR_131
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(131, s),Ö, o, m)

	)

145 
	#BOOST_PP_FOR_131
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(132, s), m, 
BOOST_PP_TUPLE_EAT_2
)(132, sËBOOST_PP_IF’(132, s), 
BOOST_PP_FOR_132
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(132, s),Ö, o, m)

	)

146 
	#BOOST_PP_FOR_132
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(133, s), m, 
BOOST_PP_TUPLE_EAT_2
)(133, sËBOOST_PP_IF’(133, s), 
BOOST_PP_FOR_133
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(133, s),Ö, o, m)

	)

147 
	#BOOST_PP_FOR_133
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(134, s), m, 
BOOST_PP_TUPLE_EAT_2
)(134, sËBOOST_PP_IF’(134, s), 
BOOST_PP_FOR_134
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(134, s),Ö, o, m)

	)

148 
	#BOOST_PP_FOR_134
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(135, s), m, 
BOOST_PP_TUPLE_EAT_2
)(135, sËBOOST_PP_IF’(135, s), 
BOOST_PP_FOR_135
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(135, s),Ö, o, m)

	)

149 
	#BOOST_PP_FOR_135
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(136, s), m, 
BOOST_PP_TUPLE_EAT_2
)(136, sËBOOST_PP_IF’(136, s), 
BOOST_PP_FOR_136
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(136, s),Ö, o, m)

	)

150 
	#BOOST_PP_FOR_136
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(137, s), m, 
BOOST_PP_TUPLE_EAT_2
)(137, sËBOOST_PP_IF’(137, s), 
BOOST_PP_FOR_137
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(137, s),Ö, o, m)

	)

151 
	#BOOST_PP_FOR_137
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(138, s), m, 
BOOST_PP_TUPLE_EAT_2
)(138, sËBOOST_PP_IF’(138, s), 
BOOST_PP_FOR_138
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(138, s),Ö, o, m)

	)

152 
	#BOOST_PP_FOR_138
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(139, s), m, 
BOOST_PP_TUPLE_EAT_2
)(139, sËBOOST_PP_IF’(139, s), 
BOOST_PP_FOR_139
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(139, s),Ö, o, m)

	)

153 
	#BOOST_PP_FOR_139
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(140, s), m, 
BOOST_PP_TUPLE_EAT_2
)(140, sËBOOST_PP_IF’(140, s), 
BOOST_PP_FOR_140
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(140, s),Ö, o, m)

	)

154 
	#BOOST_PP_FOR_140
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(141, s), m, 
BOOST_PP_TUPLE_EAT_2
)(141, sËBOOST_PP_IF’(141, s), 
BOOST_PP_FOR_141
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(141, s),Ö, o, m)

	)

155 
	#BOOST_PP_FOR_141
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(142, s), m, 
BOOST_PP_TUPLE_EAT_2
)(142, sËBOOST_PP_IF’(142, s), 
BOOST_PP_FOR_142
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(142, s),Ö, o, m)

	)

156 
	#BOOST_PP_FOR_142
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(143, s), m, 
BOOST_PP_TUPLE_EAT_2
)(143, sËBOOST_PP_IF’(143, s), 
BOOST_PP_FOR_143
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(143, s),Ö, o, m)

	)

157 
	#BOOST_PP_FOR_143
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(144, s), m, 
BOOST_PP_TUPLE_EAT_2
)(144, sËBOOST_PP_IF’(144, s), 
BOOST_PP_FOR_144
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(144, s),Ö, o, m)

	)

158 
	#BOOST_PP_FOR_144
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(145, s), m, 
BOOST_PP_TUPLE_EAT_2
)(145, sËBOOST_PP_IF’(145, s), 
BOOST_PP_FOR_145
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(145, s),Ö, o, m)

	)

159 
	#BOOST_PP_FOR_145
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(146, s), m, 
BOOST_PP_TUPLE_EAT_2
)(146, sËBOOST_PP_IF’(146, s), 
BOOST_PP_FOR_146
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(146, s),Ö, o, m)

	)

160 
	#BOOST_PP_FOR_146
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(147, s), m, 
BOOST_PP_TUPLE_EAT_2
)(147, sËBOOST_PP_IF’(147, s), 
BOOST_PP_FOR_147
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(147, s),Ö, o, m)

	)

161 
	#BOOST_PP_FOR_147
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(148, s), m, 
BOOST_PP_TUPLE_EAT_2
)(148, sËBOOST_PP_IF’(148, s), 
BOOST_PP_FOR_148
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(148, s),Ö, o, m)

	)

162 
	#BOOST_PP_FOR_148
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(149, s), m, 
BOOST_PP_TUPLE_EAT_2
)(149, sËBOOST_PP_IF’(149, s), 
BOOST_PP_FOR_149
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(149, s),Ö, o, m)

	)

163 
	#BOOST_PP_FOR_149
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(150, s), m, 
BOOST_PP_TUPLE_EAT_2
)(150, sËBOOST_PP_IF’(150, s), 
BOOST_PP_FOR_150
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(150, s),Ö, o, m)

	)

164 
	#BOOST_PP_FOR_150
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(151, s), m, 
BOOST_PP_TUPLE_EAT_2
)(151, sËBOOST_PP_IF’(151, s), 
BOOST_PP_FOR_151
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(151, s),Ö, o, m)

	)

165 
	#BOOST_PP_FOR_151
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(152, s), m, 
BOOST_PP_TUPLE_EAT_2
)(152, sËBOOST_PP_IF’(152, s), 
BOOST_PP_FOR_152
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(152, s),Ö, o, m)

	)

166 
	#BOOST_PP_FOR_152
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(153, s), m, 
BOOST_PP_TUPLE_EAT_2
)(153, sËBOOST_PP_IF’(153, s), 
BOOST_PP_FOR_153
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(153, s),Ö, o, m)

	)

167 
	#BOOST_PP_FOR_153
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(154, s), m, 
BOOST_PP_TUPLE_EAT_2
)(154, sËBOOST_PP_IF’(154, s), 
BOOST_PP_FOR_154
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(154, s),Ö, o, m)

	)

168 
	#BOOST_PP_FOR_154
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(155, s), m, 
BOOST_PP_TUPLE_EAT_2
)(155, sËBOOST_PP_IF’(155, s), 
BOOST_PP_FOR_155
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(155, s),Ö, o, m)

	)

169 
	#BOOST_PP_FOR_155
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(156, s), m, 
BOOST_PP_TUPLE_EAT_2
)(156, sËBOOST_PP_IF’(156, s), 
BOOST_PP_FOR_156
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(156, s),Ö, o, m)

	)

170 
	#BOOST_PP_FOR_156
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(157, s), m, 
BOOST_PP_TUPLE_EAT_2
)(157, sËBOOST_PP_IF’(157, s), 
BOOST_PP_FOR_157
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(157, s),Ö, o, m)

	)

171 
	#BOOST_PP_FOR_157
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(158, s), m, 
BOOST_PP_TUPLE_EAT_2
)(158, sËBOOST_PP_IF’(158, s), 
BOOST_PP_FOR_158
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(158, s),Ö, o, m)

	)

172 
	#BOOST_PP_FOR_158
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(159, s), m, 
BOOST_PP_TUPLE_EAT_2
)(159, sËBOOST_PP_IF’(159, s), 
BOOST_PP_FOR_159
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(159, s),Ö, o, m)

	)

173 
	#BOOST_PP_FOR_159
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(160, s), m, 
BOOST_PP_TUPLE_EAT_2
)(160, sËBOOST_PP_IF’(160, s), 
BOOST_PP_FOR_160
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(160, s),Ö, o, m)

	)

174 
	#BOOST_PP_FOR_160
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(161, s), m, 
BOOST_PP_TUPLE_EAT_2
)(161, sËBOOST_PP_IF’(161, s), 
BOOST_PP_FOR_161
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(161, s),Ö, o, m)

	)

175 
	#BOOST_PP_FOR_161
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(162, s), m, 
BOOST_PP_TUPLE_EAT_2
)(162, sËBOOST_PP_IF’(162, s), 
BOOST_PP_FOR_162
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(162, s),Ö, o, m)

	)

176 
	#BOOST_PP_FOR_162
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(163, s), m, 
BOOST_PP_TUPLE_EAT_2
)(163, sËBOOST_PP_IF’(163, s), 
BOOST_PP_FOR_163
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(163, s),Ö, o, m)

	)

177 
	#BOOST_PP_FOR_163
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(164, s), m, 
BOOST_PP_TUPLE_EAT_2
)(164, sËBOOST_PP_IF’(164, s), 
BOOST_PP_FOR_164
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(164, s),Ö, o, m)

	)

178 
	#BOOST_PP_FOR_164
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(165, s), m, 
BOOST_PP_TUPLE_EAT_2
)(165, sËBOOST_PP_IF’(165, s), 
BOOST_PP_FOR_165
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(165, s),Ö, o, m)

	)

179 
	#BOOST_PP_FOR_165
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(166, s), m, 
BOOST_PP_TUPLE_EAT_2
)(166, sËBOOST_PP_IF’(166, s), 
BOOST_PP_FOR_166
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(166, s),Ö, o, m)

	)

180 
	#BOOST_PP_FOR_166
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(167, s), m, 
BOOST_PP_TUPLE_EAT_2
)(167, sËBOOST_PP_IF’(167, s), 
BOOST_PP_FOR_167
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(167, s),Ö, o, m)

	)

181 
	#BOOST_PP_FOR_167
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(168, s), m, 
BOOST_PP_TUPLE_EAT_2
)(168, sËBOOST_PP_IF’(168, s), 
BOOST_PP_FOR_168
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(168, s),Ö, o, m)

	)

182 
	#BOOST_PP_FOR_168
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(169, s), m, 
BOOST_PP_TUPLE_EAT_2
)(169, sËBOOST_PP_IF’(169, s), 
BOOST_PP_FOR_169
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(169, s),Ö, o, m)

	)

183 
	#BOOST_PP_FOR_169
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(170, s), m, 
BOOST_PP_TUPLE_EAT_2
)(170, sËBOOST_PP_IF’(170, s), 
BOOST_PP_FOR_170
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(170, s),Ö, o, m)

	)

184 
	#BOOST_PP_FOR_170
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(171, s), m, 
BOOST_PP_TUPLE_EAT_2
)(171, sËBOOST_PP_IF’(171, s), 
BOOST_PP_FOR_171
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(171, s),Ö, o, m)

	)

185 
	#BOOST_PP_FOR_171
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(172, s), m, 
BOOST_PP_TUPLE_EAT_2
)(172, sËBOOST_PP_IF’(172, s), 
BOOST_PP_FOR_172
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(172, s),Ö, o, m)

	)

186 
	#BOOST_PP_FOR_172
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(173, s), m, 
BOOST_PP_TUPLE_EAT_2
)(173, sËBOOST_PP_IF’(173, s), 
BOOST_PP_FOR_173
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(173, s),Ö, o, m)

	)

187 
	#BOOST_PP_FOR_173
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(174, s), m, 
BOOST_PP_TUPLE_EAT_2
)(174, sËBOOST_PP_IF’(174, s), 
BOOST_PP_FOR_174
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(174, s),Ö, o, m)

	)

188 
	#BOOST_PP_FOR_174
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(175, s), m, 
BOOST_PP_TUPLE_EAT_2
)(175, sËBOOST_PP_IF’(175, s), 
BOOST_PP_FOR_175
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(175, s),Ö, o, m)

	)

189 
	#BOOST_PP_FOR_175
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(176, s), m, 
BOOST_PP_TUPLE_EAT_2
)(176, sËBOOST_PP_IF’(176, s), 
BOOST_PP_FOR_176
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(176, s),Ö, o, m)

	)

190 
	#BOOST_PP_FOR_176
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(177, s), m, 
BOOST_PP_TUPLE_EAT_2
)(177, sËBOOST_PP_IF’(177, s), 
BOOST_PP_FOR_177
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(177, s),Ö, o, m)

	)

191 
	#BOOST_PP_FOR_177
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(178, s), m, 
BOOST_PP_TUPLE_EAT_2
)(178, sËBOOST_PP_IF’(178, s), 
BOOST_PP_FOR_178
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(178, s),Ö, o, m)

	)

192 
	#BOOST_PP_FOR_178
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(179, s), m, 
BOOST_PP_TUPLE_EAT_2
)(179, sËBOOST_PP_IF’(179, s), 
BOOST_PP_FOR_179
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(179, s),Ö, o, m)

	)

193 
	#BOOST_PP_FOR_179
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(180, s), m, 
BOOST_PP_TUPLE_EAT_2
)(180, sËBOOST_PP_IF’(180, s), 
BOOST_PP_FOR_180
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(180, s),Ö, o, m)

	)

194 
	#BOOST_PP_FOR_180
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(181, s), m, 
BOOST_PP_TUPLE_EAT_2
)(181, sËBOOST_PP_IF’(181, s), 
BOOST_PP_FOR_181
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(181, s),Ö, o, m)

	)

195 
	#BOOST_PP_FOR_181
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(182, s), m, 
BOOST_PP_TUPLE_EAT_2
)(182, sËBOOST_PP_IF’(182, s), 
BOOST_PP_FOR_182
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(182, s),Ö, o, m)

	)

196 
	#BOOST_PP_FOR_182
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(183, s), m, 
BOOST_PP_TUPLE_EAT_2
)(183, sËBOOST_PP_IF’(183, s), 
BOOST_PP_FOR_183
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(183, s),Ö, o, m)

	)

197 
	#BOOST_PP_FOR_183
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(184, s), m, 
BOOST_PP_TUPLE_EAT_2
)(184, sËBOOST_PP_IF’(184, s), 
BOOST_PP_FOR_184
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(184, s),Ö, o, m)

	)

198 
	#BOOST_PP_FOR_184
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(185, s), m, 
BOOST_PP_TUPLE_EAT_2
)(185, sËBOOST_PP_IF’(185, s), 
BOOST_PP_FOR_185
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(185, s),Ö, o, m)

	)

199 
	#BOOST_PP_FOR_185
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(186, s), m, 
BOOST_PP_TUPLE_EAT_2
)(186, sËBOOST_PP_IF’(186, s), 
BOOST_PP_FOR_186
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(186, s),Ö, o, m)

	)

200 
	#BOOST_PP_FOR_186
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(187, s), m, 
BOOST_PP_TUPLE_EAT_2
)(187, sËBOOST_PP_IF’(187, s), 
BOOST_PP_FOR_187
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(187, s),Ö, o, m)

	)

201 
	#BOOST_PP_FOR_187
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(188, s), m, 
BOOST_PP_TUPLE_EAT_2
)(188, sËBOOST_PP_IF’(188, s), 
BOOST_PP_FOR_188
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(188, s),Ö, o, m)

	)

202 
	#BOOST_PP_FOR_188
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(189, s), m, 
BOOST_PP_TUPLE_EAT_2
)(189, sËBOOST_PP_IF’(189, s), 
BOOST_PP_FOR_189
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(189, s),Ö, o, m)

	)

203 
	#BOOST_PP_FOR_189
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(190, s), m, 
BOOST_PP_TUPLE_EAT_2
)(190, sËBOOST_PP_IF’(190, s), 
BOOST_PP_FOR_190
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(190, s),Ö, o, m)

	)

204 
	#BOOST_PP_FOR_190
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(191, s), m, 
BOOST_PP_TUPLE_EAT_2
)(191, sËBOOST_PP_IF’(191, s), 
BOOST_PP_FOR_191
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(191, s),Ö, o, m)

	)

205 
	#BOOST_PP_FOR_191
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(192, s), m, 
BOOST_PP_TUPLE_EAT_2
)(192, sËBOOST_PP_IF’(192, s), 
BOOST_PP_FOR_192
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(192, s),Ö, o, m)

	)

206 
	#BOOST_PP_FOR_192
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(193, s), m, 
BOOST_PP_TUPLE_EAT_2
)(193, sËBOOST_PP_IF’(193, s), 
BOOST_PP_FOR_193
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(193, s),Ö, o, m)

	)

207 
	#BOOST_PP_FOR_193
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(194, s), m, 
BOOST_PP_TUPLE_EAT_2
)(194, sËBOOST_PP_IF’(194, s), 
BOOST_PP_FOR_194
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(194, s),Ö, o, m)

	)

208 
	#BOOST_PP_FOR_194
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(195, s), m, 
BOOST_PP_TUPLE_EAT_2
)(195, sËBOOST_PP_IF’(195, s), 
BOOST_PP_FOR_195
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(195, s),Ö, o, m)

	)

209 
	#BOOST_PP_FOR_195
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(196, s), m, 
BOOST_PP_TUPLE_EAT_2
)(196, sËBOOST_PP_IF’(196, s), 
BOOST_PP_FOR_196
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(196, s),Ö, o, m)

	)

210 
	#BOOST_PP_FOR_196
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(197, s), m, 
BOOST_PP_TUPLE_EAT_2
)(197, sËBOOST_PP_IF’(197, s), 
BOOST_PP_FOR_197
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(197, s),Ö, o, m)

	)

211 
	#BOOST_PP_FOR_197
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(198, s), m, 
BOOST_PP_TUPLE_EAT_2
)(198, sËBOOST_PP_IF’(198, s), 
BOOST_PP_FOR_198
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(198, s),Ö, o, m)

	)

212 
	#BOOST_PP_FOR_198
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(199, s), m, 
BOOST_PP_TUPLE_EAT_2
)(199, sËBOOST_PP_IF’(199, s), 
BOOST_PP_FOR_199
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(199, s),Ö, o, m)

	)

213 
	#BOOST_PP_FOR_199
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(200, s), m, 
BOOST_PP_TUPLE_EAT_2
)(200, sËBOOST_PP_IF’(200, s), 
BOOST_PP_FOR_200
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(200, s),Ö, o, m)

	)

214 
	#BOOST_PP_FOR_200
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(201, s), m, 
BOOST_PP_TUPLE_EAT_2
)(201, sËBOOST_PP_IF’(201, s), 
BOOST_PP_FOR_201
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(201, s),Ö, o, m)

	)

215 
	#BOOST_PP_FOR_201
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(202, s), m, 
BOOST_PP_TUPLE_EAT_2
)(202, sËBOOST_PP_IF’(202, s), 
BOOST_PP_FOR_202
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(202, s),Ö, o, m)

	)

216 
	#BOOST_PP_FOR_202
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(203, s), m, 
BOOST_PP_TUPLE_EAT_2
)(203, sËBOOST_PP_IF’(203, s), 
BOOST_PP_FOR_203
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(203, s),Ö, o, m)

	)

217 
	#BOOST_PP_FOR_203
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(204, s), m, 
BOOST_PP_TUPLE_EAT_2
)(204, sËBOOST_PP_IF’(204, s), 
BOOST_PP_FOR_204
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(204, s),Ö, o, m)

	)

218 
	#BOOST_PP_FOR_204
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(205, s), m, 
BOOST_PP_TUPLE_EAT_2
)(205, sËBOOST_PP_IF’(205, s), 
BOOST_PP_FOR_205
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(205, s),Ö, o, m)

	)

219 
	#BOOST_PP_FOR_205
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(206, s), m, 
BOOST_PP_TUPLE_EAT_2
)(206, sËBOOST_PP_IF’(206, s), 
BOOST_PP_FOR_206
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(206, s),Ö, o, m)

	)

220 
	#BOOST_PP_FOR_206
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(207, s), m, 
BOOST_PP_TUPLE_EAT_2
)(207, sËBOOST_PP_IF’(207, s), 
BOOST_PP_FOR_207
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(207, s),Ö, o, m)

	)

221 
	#BOOST_PP_FOR_207
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(208, s), m, 
BOOST_PP_TUPLE_EAT_2
)(208, sËBOOST_PP_IF’(208, s), 
BOOST_PP_FOR_208
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(208, s),Ö, o, m)

	)

222 
	#BOOST_PP_FOR_208
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(209, s), m, 
BOOST_PP_TUPLE_EAT_2
)(209, sËBOOST_PP_IF’(209, s), 
BOOST_PP_FOR_209
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(209, s),Ö, o, m)

	)

223 
	#BOOST_PP_FOR_209
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(210, s), m, 
BOOST_PP_TUPLE_EAT_2
)(210, sËBOOST_PP_IF’(210, s), 
BOOST_PP_FOR_210
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(210, s),Ö, o, m)

	)

224 
	#BOOST_PP_FOR_210
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(211, s), m, 
BOOST_PP_TUPLE_EAT_2
)(211, sËBOOST_PP_IF’(211, s), 
BOOST_PP_FOR_211
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(211, s),Ö, o, m)

	)

225 
	#BOOST_PP_FOR_211
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(212, s), m, 
BOOST_PP_TUPLE_EAT_2
)(212, sËBOOST_PP_IF’(212, s), 
BOOST_PP_FOR_212
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(212, s),Ö, o, m)

	)

226 
	#BOOST_PP_FOR_212
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(213, s), m, 
BOOST_PP_TUPLE_EAT_2
)(213, sËBOOST_PP_IF’(213, s), 
BOOST_PP_FOR_213
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(213, s),Ö, o, m)

	)

227 
	#BOOST_PP_FOR_213
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(214, s), m, 
BOOST_PP_TUPLE_EAT_2
)(214, sËBOOST_PP_IF’(214, s), 
BOOST_PP_FOR_214
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(214, s),Ö, o, m)

	)

228 
	#BOOST_PP_FOR_214
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(215, s), m, 
BOOST_PP_TUPLE_EAT_2
)(215, sËBOOST_PP_IF’(215, s), 
BOOST_PP_FOR_215
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(215, s),Ö, o, m)

	)

229 
	#BOOST_PP_FOR_215
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(216, s), m, 
BOOST_PP_TUPLE_EAT_2
)(216, sËBOOST_PP_IF’(216, s), 
BOOST_PP_FOR_216
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(216, s),Ö, o, m)

	)

230 
	#BOOST_PP_FOR_216
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(217, s), m, 
BOOST_PP_TUPLE_EAT_2
)(217, sËBOOST_PP_IF’(217, s), 
BOOST_PP_FOR_217
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(217, s),Ö, o, m)

	)

231 
	#BOOST_PP_FOR_217
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(218, s), m, 
BOOST_PP_TUPLE_EAT_2
)(218, sËBOOST_PP_IF’(218, s), 
BOOST_PP_FOR_218
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(218, s),Ö, o, m)

	)

232 
	#BOOST_PP_FOR_218
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(219, s), m, 
BOOST_PP_TUPLE_EAT_2
)(219, sËBOOST_PP_IF’(219, s), 
BOOST_PP_FOR_219
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(219, s),Ö, o, m)

	)

233 
	#BOOST_PP_FOR_219
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(220, s), m, 
BOOST_PP_TUPLE_EAT_2
)(220, sËBOOST_PP_IF’(220, s), 
BOOST_PP_FOR_220
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(220, s),Ö, o, m)

	)

234 
	#BOOST_PP_FOR_220
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(221, s), m, 
BOOST_PP_TUPLE_EAT_2
)(221, sËBOOST_PP_IF’(221, s), 
BOOST_PP_FOR_221
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(221, s),Ö, o, m)

	)

235 
	#BOOST_PP_FOR_221
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(222, s), m, 
BOOST_PP_TUPLE_EAT_2
)(222, sËBOOST_PP_IF’(222, s), 
BOOST_PP_FOR_222
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(222, s),Ö, o, m)

	)

236 
	#BOOST_PP_FOR_222
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(223, s), m, 
BOOST_PP_TUPLE_EAT_2
)(223, sËBOOST_PP_IF’(223, s), 
BOOST_PP_FOR_223
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(223, s),Ö, o, m)

	)

237 
	#BOOST_PP_FOR_223
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(224, s), m, 
BOOST_PP_TUPLE_EAT_2
)(224, sËBOOST_PP_IF’(224, s), 
BOOST_PP_FOR_224
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(224, s),Ö, o, m)

	)

238 
	#BOOST_PP_FOR_224
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(225, s), m, 
BOOST_PP_TUPLE_EAT_2
)(225, sËBOOST_PP_IF’(225, s), 
BOOST_PP_FOR_225
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(225, s),Ö, o, m)

	)

239 
	#BOOST_PP_FOR_225
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(226, s), m, 
BOOST_PP_TUPLE_EAT_2
)(226, sËBOOST_PP_IF’(226, s), 
BOOST_PP_FOR_226
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(226, s),Ö, o, m)

	)

240 
	#BOOST_PP_FOR_226
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(227, s), m, 
BOOST_PP_TUPLE_EAT_2
)(227, sËBOOST_PP_IF’(227, s), 
BOOST_PP_FOR_227
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(227, s),Ö, o, m)

	)

241 
	#BOOST_PP_FOR_227
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(228, s), m, 
BOOST_PP_TUPLE_EAT_2
)(228, sËBOOST_PP_IF’(228, s), 
BOOST_PP_FOR_228
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(228, s),Ö, o, m)

	)

242 
	#BOOST_PP_FOR_228
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(229, s), m, 
BOOST_PP_TUPLE_EAT_2
)(229, sËBOOST_PP_IF’(229, s), 
BOOST_PP_FOR_229
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(229, s),Ö, o, m)

	)

243 
	#BOOST_PP_FOR_229
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(230, s), m, 
BOOST_PP_TUPLE_EAT_2
)(230, sËBOOST_PP_IF’(230, s), 
BOOST_PP_FOR_230
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(230, s),Ö, o, m)

	)

244 
	#BOOST_PP_FOR_230
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(231, s), m, 
BOOST_PP_TUPLE_EAT_2
)(231, sËBOOST_PP_IF’(231, s), 
BOOST_PP_FOR_231
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(231, s),Ö, o, m)

	)

245 
	#BOOST_PP_FOR_231
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(232, s), m, 
BOOST_PP_TUPLE_EAT_2
)(232, sËBOOST_PP_IF’(232, s), 
BOOST_PP_FOR_232
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(232, s),Ö, o, m)

	)

246 
	#BOOST_PP_FOR_232
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(233, s), m, 
BOOST_PP_TUPLE_EAT_2
)(233, sËBOOST_PP_IF’(233, s), 
BOOST_PP_FOR_233
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(233, s),Ö, o, m)

	)

247 
	#BOOST_PP_FOR_233
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(234, s), m, 
BOOST_PP_TUPLE_EAT_2
)(234, sËBOOST_PP_IF’(234, s), 
BOOST_PP_FOR_234
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(234, s),Ö, o, m)

	)

248 
	#BOOST_PP_FOR_234
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(235, s), m, 
BOOST_PP_TUPLE_EAT_2
)(235, sËBOOST_PP_IF’(235, s), 
BOOST_PP_FOR_235
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(235, s),Ö, o, m)

	)

249 
	#BOOST_PP_FOR_235
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(236, s), m, 
BOOST_PP_TUPLE_EAT_2
)(236, sËBOOST_PP_IF’(236, s), 
BOOST_PP_FOR_236
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(236, s),Ö, o, m)

	)

250 
	#BOOST_PP_FOR_236
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(237, s), m, 
BOOST_PP_TUPLE_EAT_2
)(237, sËBOOST_PP_IF’(237, s), 
BOOST_PP_FOR_237
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(237, s),Ö, o, m)

	)

251 
	#BOOST_PP_FOR_237
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(238, s), m, 
BOOST_PP_TUPLE_EAT_2
)(238, sËBOOST_PP_IF’(238, s), 
BOOST_PP_FOR_238
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(238, s),Ö, o, m)

	)

252 
	#BOOST_PP_FOR_238
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(239, s), m, 
BOOST_PP_TUPLE_EAT_2
)(239, sËBOOST_PP_IF’(239, s), 
BOOST_PP_FOR_239
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(239, s),Ö, o, m)

	)

253 
	#BOOST_PP_FOR_239
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(240, s), m, 
BOOST_PP_TUPLE_EAT_2
)(240, sËBOOST_PP_IF’(240, s), 
BOOST_PP_FOR_240
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(240, s),Ö, o, m)

	)

254 
	#BOOST_PP_FOR_240
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(241, s), m, 
BOOST_PP_TUPLE_EAT_2
)(241, sËBOOST_PP_IF’(241, s), 
BOOST_PP_FOR_241
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(241, s),Ö, o, m)

	)

255 
	#BOOST_PP_FOR_241
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(242, s), m, 
BOOST_PP_TUPLE_EAT_2
)(242, sËBOOST_PP_IF’(242, s), 
BOOST_PP_FOR_242
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(242, s),Ö, o, m)

	)

256 
	#BOOST_PP_FOR_242
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(243, s), m, 
BOOST_PP_TUPLE_EAT_2
)(243, sËBOOST_PP_IF’(243, s), 
BOOST_PP_FOR_243
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(243, s),Ö, o, m)

	)

257 
	#BOOST_PP_FOR_243
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(244, s), m, 
BOOST_PP_TUPLE_EAT_2
)(244, sËBOOST_PP_IF’(244, s), 
BOOST_PP_FOR_244
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(244, s),Ö, o, m)

	)

258 
	#BOOST_PP_FOR_244
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(245, s), m, 
BOOST_PP_TUPLE_EAT_2
)(245, sËBOOST_PP_IF’(245, s), 
BOOST_PP_FOR_245
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(245, s),Ö, o, m)

	)

259 
	#BOOST_PP_FOR_245
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(246, s), m, 
BOOST_PP_TUPLE_EAT_2
)(246, sËBOOST_PP_IF’(246, s), 
BOOST_PP_FOR_246
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(246, s),Ö, o, m)

	)

260 
	#BOOST_PP_FOR_246
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(247, s), m, 
BOOST_PP_TUPLE_EAT_2
)(247, sËBOOST_PP_IF’(247, s), 
BOOST_PP_FOR_247
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(247, s),Ö, o, m)

	)

261 
	#BOOST_PP_FOR_247
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(248, s), m, 
BOOST_PP_TUPLE_EAT_2
)(248, sËBOOST_PP_IF’(248, s), 
BOOST_PP_FOR_248
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(248, s),Ö, o, m)

	)

262 
	#BOOST_PP_FOR_248
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(249, s), m, 
BOOST_PP_TUPLE_EAT_2
)(249, sËBOOST_PP_IF’(249, s), 
BOOST_PP_FOR_249
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(249, s),Ö, o, m)

	)

263 
	#BOOST_PP_FOR_249
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(250, s), m, 
BOOST_PP_TUPLE_EAT_2
)(250, sËBOOST_PP_IF’(250, s), 
BOOST_PP_FOR_250
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(250, s),Ö, o, m)

	)

264 
	#BOOST_PP_FOR_250
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(251, s), m, 
BOOST_PP_TUPLE_EAT_2
)(251, sËBOOST_PP_IF’(251, s), 
BOOST_PP_FOR_251
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(251, s),Ö, o, m)

	)

265 
	#BOOST_PP_FOR_251
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(252, s), m, 
BOOST_PP_TUPLE_EAT_2
)(252, sËBOOST_PP_IF’(252, s), 
BOOST_PP_FOR_252
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(252, s),Ö, o, m)

	)

266 
	#BOOST_PP_FOR_252
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(253, s), m, 
BOOST_PP_TUPLE_EAT_2
)(253, sËBOOST_PP_IF’(253, s), 
BOOST_PP_FOR_253
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(253, s),Ö, o, m)

	)

267 
	#BOOST_PP_FOR_253
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(254, s), m, 
BOOST_PP_TUPLE_EAT_2
)(254, sËBOOST_PP_IF’(254, s), 
BOOST_PP_FOR_254
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(254, s),Ö, o, m)

	)

268 
	#BOOST_PP_FOR_254
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(255, s), m, 
BOOST_PP_TUPLE_EAT_2
)(255, sËBOOST_PP_IF’(255, s), 
BOOST_PP_FOR_255
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(255, s),Ö, o, m)

	)

269 
	#BOOST_PP_FOR_255
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(256, s), m, 
BOOST_PP_TUPLE_EAT_2
)(256, sËBOOST_PP_IF’(256, s), 
BOOST_PP_FOR_256
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(256, s),Ö, o, m)

	)

270 
	#BOOST_PP_FOR_256
(
s
, 
p
, 
o
, 
m
Ë
	`BOOST_PP_IF
(
	`p
(257, s), m, 
BOOST_PP_TUPLE_EAT_2
)(257, sËBOOST_PP_IF’(257, s), 
BOOST_PP_FOR_257
, 
BOOST_PP_TUPLE_EAT_4
)(
	`o
(257, s),Ö, o, m)

	)

	@/usr/include/boost/preprocessor/repetition/repeat.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_REPETITION_REPEAT_HPP


12 
	#BOOST_PREPROCESSOR_REPETITION_REPEAT_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

15 
	~<boo°/¥ïro˚ss‹/debug/îr‹.hµ
>

16 
	~<boo°/¥ïro˚ss‹/dëaû/auto_ªc.hµ
>

17 
	~<boo°/¥ïro˚ss‹/tu∂e/ót.hµ
>

18 #
#/* 
BOOST_PP_REPEAT
 */

20 
	#BOOST_PP_REPEAT
(
cou¡
, 
ma¸o
, 
d©a
)

	)

22 
#deföê
	#BOOST_PP_REPEAT
 
	`BOOST_PP_CAT
(
BOOST_PP_REPEAT_
, 
	`BOOST_PP_AUTO_REC
(
BOOST_PP_REPEAT_P
, 4))

	)

23 
#deföê
	#BOOST_PP_REPEAT_P
(
n
Ë
	`BOOST_PP_CAT
(
BOOST_PP_REPEAT_CHECK_
, 
BOOST_PP_REPEAT_
 ## 
	`n
(1, 
BOOST_PP_NIL
 
BOOST_PP_TUPLE_EAT_3
, BOOST_PP_NIL))

	)

24 
#deföê
	#BOOST_PP_REPEAT_CHECK_BOOST_PP_NIL
 1

	)

25 
	#BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_1
(
c
, 
m
, 
d
Ë0

	)

26 
	#BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_2
(
c
, 
m
, 
d
Ë0

	)

27 
	#BOOST_PP_REPEAT_CHECK_BOOST_PP_REPEAT_3
(
c
, 
m
, 
d
Ë0

	)

28 
#deföê
	#BOOST_PP_REPEAT_1
(
c
, 
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_I
(c, m, d)

	)

29 
	#BOOST_PP_REPEAT_2
(
c
, 
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_I
(c, m, d)

	)

30 
	#BOOST_PP_REPEAT_3
(
c
, 
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_I
(c, m, d)

	)

31 
	#BOOST_PP_REPEAT_4
(
c
, 
m
, 
d
Ë
	`BOOST_PP_ERROR
(0x0003)

	)

32 
#deföê
	#BOOST_PP_REPEAT_1_I
(
c
, 
m
, 
d
Ë
BOOST_PP_REPEAT_1_
 ## 
	`c
(m, d)

	)

33 
	#BOOST_PP_REPEAT_2_I
(
c
, 
m
, 
d
Ë
BOOST_PP_REPEAT_2_
 ## 
	`c
(m, d)

	)

34 
	#BOOST_PP_REPEAT_3_I
(
c
, 
m
, 
d
Ë
BOOST_PP_REPEAT_3_
 ## 
	`c
(m, d)

	)

35 
#deföê
	#BOOST_PP_REPEAT_1ST
 
BOOST_PP_REPEAT_1


	)

36 
	#BOOST_PP_REPEAT_2ND
 
BOOST_PP_REPEAT_2


	)

37 
	#BOOST_PP_REPEAT_3RD
 
BOOST_PP_REPEAT_3


	)

38 
#deföê
	#BOOST_PP_REPEAT_1_0
(
m
, 
d
)

	)

39 
	#BOOST_PP_REPEAT_1_1
(
m
, 
d
Ë
	`m
(2, 0, d)

	)

40 
	#BOOST_PP_REPEAT_1_2
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_1
(m, dË
	`m
(2, 1, d)

	)

41 
	#BOOST_PP_REPEAT_1_3
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_2
(m, dË
	`m
(2, 2, d)

	)

42 
	#BOOST_PP_REPEAT_1_4
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_3
(m, dË
	`m
(2, 3, d)

	)

43 
	#BOOST_PP_REPEAT_1_5
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_4
(m, dË
	`m
(2, 4, d)

	)

44 
	#BOOST_PP_REPEAT_1_6
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_5
(m, dË
	`m
(2, 5, d)

	)

45 
	#BOOST_PP_REPEAT_1_7
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_6
(m, dË
	`m
(2, 6, d)

	)

46 
	#BOOST_PP_REPEAT_1_8
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_7
(m, dË
	`m
(2, 7, d)

	)

47 
	#BOOST_PP_REPEAT_1_9
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_8
(m, dË
	`m
(2, 8, d)

	)

48 
	#BOOST_PP_REPEAT_1_10
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_9
(m, dË
	`m
(2, 9, d)

	)

49 
	#BOOST_PP_REPEAT_1_11
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_10
(m, dË
	`m
(2, 10, d)

	)

50 
	#BOOST_PP_REPEAT_1_12
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_11
(m, dË
	`m
(2, 11, d)

	)

51 
	#BOOST_PP_REPEAT_1_13
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_12
(m, dË
	`m
(2, 12, d)

	)

52 
	#BOOST_PP_REPEAT_1_14
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_13
(m, dË
	`m
(2, 13, d)

	)

53 
	#BOOST_PP_REPEAT_1_15
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_14
(m, dË
	`m
(2, 14, d)

	)

54 
	#BOOST_PP_REPEAT_1_16
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_15
(m, dË
	`m
(2, 15, d)

	)

55 
	#BOOST_PP_REPEAT_1_17
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_16
(m, dË
	`m
(2, 16, d)

	)

56 
	#BOOST_PP_REPEAT_1_18
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_17
(m, dË
	`m
(2, 17, d)

	)

57 
	#BOOST_PP_REPEAT_1_19
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_18
(m, dË
	`m
(2, 18, d)

	)

58 
	#BOOST_PP_REPEAT_1_20
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_19
(m, dË
	`m
(2, 19, d)

	)

59 
	#BOOST_PP_REPEAT_1_21
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_20
(m, dË
	`m
(2, 20, d)

	)

60 
	#BOOST_PP_REPEAT_1_22
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_21
(m, dË
	`m
(2, 21, d)

	)

61 
	#BOOST_PP_REPEAT_1_23
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_22
(m, dË
	`m
(2, 22, d)

	)

62 
	#BOOST_PP_REPEAT_1_24
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_23
(m, dË
	`m
(2, 23, d)

	)

63 
	#BOOST_PP_REPEAT_1_25
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_24
(m, dË
	`m
(2, 24, d)

	)

64 
	#BOOST_PP_REPEAT_1_26
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_25
(m, dË
	`m
(2, 25, d)

	)

65 
	#BOOST_PP_REPEAT_1_27
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_26
(m, dË
	`m
(2, 26, d)

	)

66 
	#BOOST_PP_REPEAT_1_28
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_27
(m, dË
	`m
(2, 27, d)

	)

67 
	#BOOST_PP_REPEAT_1_29
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_28
(m, dË
	`m
(2, 28, d)

	)

68 
	#BOOST_PP_REPEAT_1_30
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_29
(m, dË
	`m
(2, 29, d)

	)

69 
	#BOOST_PP_REPEAT_1_31
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_30
(m, dË
	`m
(2, 30, d)

	)

70 
	#BOOST_PP_REPEAT_1_32
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_31
(m, dË
	`m
(2, 31, d)

	)

71 
	#BOOST_PP_REPEAT_1_33
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_32
(m, dË
	`m
(2, 32, d)

	)

72 
	#BOOST_PP_REPEAT_1_34
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_33
(m, dË
	`m
(2, 33, d)

	)

73 
	#BOOST_PP_REPEAT_1_35
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_34
(m, dË
	`m
(2, 34, d)

	)

74 
	#BOOST_PP_REPEAT_1_36
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_35
(m, dË
	`m
(2, 35, d)

	)

75 
	#BOOST_PP_REPEAT_1_37
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_36
(m, dË
	`m
(2, 36, d)

	)

76 
	#BOOST_PP_REPEAT_1_38
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_37
(m, dË
	`m
(2, 37, d)

	)

77 
	#BOOST_PP_REPEAT_1_39
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_38
(m, dË
	`m
(2, 38, d)

	)

78 
	#BOOST_PP_REPEAT_1_40
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_39
(m, dË
	`m
(2, 39, d)

	)

79 
	#BOOST_PP_REPEAT_1_41
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_40
(m, dË
	`m
(2, 40, d)

	)

80 
	#BOOST_PP_REPEAT_1_42
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_41
(m, dË
	`m
(2, 41, d)

	)

81 
	#BOOST_PP_REPEAT_1_43
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_42
(m, dË
	`m
(2, 42, d)

	)

82 
	#BOOST_PP_REPEAT_1_44
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_43
(m, dË
	`m
(2, 43, d)

	)

83 
	#BOOST_PP_REPEAT_1_45
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_44
(m, dË
	`m
(2, 44, d)

	)

84 
	#BOOST_PP_REPEAT_1_46
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_45
(m, dË
	`m
(2, 45, d)

	)

85 
	#BOOST_PP_REPEAT_1_47
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_46
(m, dË
	`m
(2, 46, d)

	)

86 
	#BOOST_PP_REPEAT_1_48
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_47
(m, dË
	`m
(2, 47, d)

	)

87 
	#BOOST_PP_REPEAT_1_49
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_48
(m, dË
	`m
(2, 48, d)

	)

88 
	#BOOST_PP_REPEAT_1_50
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_49
(m, dË
	`m
(2, 49, d)

	)

89 
	#BOOST_PP_REPEAT_1_51
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_50
(m, dË
	`m
(2, 50, d)

	)

90 
	#BOOST_PP_REPEAT_1_52
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_51
(m, dË
	`m
(2, 51, d)

	)

91 
	#BOOST_PP_REPEAT_1_53
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_52
(m, dË
	`m
(2, 52, d)

	)

92 
	#BOOST_PP_REPEAT_1_54
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_53
(m, dË
	`m
(2, 53, d)

	)

93 
	#BOOST_PP_REPEAT_1_55
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_54
(m, dË
	`m
(2, 54, d)

	)

94 
	#BOOST_PP_REPEAT_1_56
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_55
(m, dË
	`m
(2, 55, d)

	)

95 
	#BOOST_PP_REPEAT_1_57
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_56
(m, dË
	`m
(2, 56, d)

	)

96 
	#BOOST_PP_REPEAT_1_58
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_57
(m, dË
	`m
(2, 57, d)

	)

97 
	#BOOST_PP_REPEAT_1_59
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_58
(m, dË
	`m
(2, 58, d)

	)

98 
	#BOOST_PP_REPEAT_1_60
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_59
(m, dË
	`m
(2, 59, d)

	)

99 
	#BOOST_PP_REPEAT_1_61
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_60
(m, dË
	`m
(2, 60, d)

	)

100 
	#BOOST_PP_REPEAT_1_62
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_61
(m, dË
	`m
(2, 61, d)

	)

101 
	#BOOST_PP_REPEAT_1_63
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_62
(m, dË
	`m
(2, 62, d)

	)

102 
	#BOOST_PP_REPEAT_1_64
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_63
(m, dË
	`m
(2, 63, d)

	)

103 
	#BOOST_PP_REPEAT_1_65
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_64
(m, dË
	`m
(2, 64, d)

	)

104 
	#BOOST_PP_REPEAT_1_66
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_65
(m, dË
	`m
(2, 65, d)

	)

105 
	#BOOST_PP_REPEAT_1_67
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_66
(m, dË
	`m
(2, 66, d)

	)

106 
	#BOOST_PP_REPEAT_1_68
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_67
(m, dË
	`m
(2, 67, d)

	)

107 
	#BOOST_PP_REPEAT_1_69
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_68
(m, dË
	`m
(2, 68, d)

	)

108 
	#BOOST_PP_REPEAT_1_70
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_69
(m, dË
	`m
(2, 69, d)

	)

109 
	#BOOST_PP_REPEAT_1_71
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_70
(m, dË
	`m
(2, 70, d)

	)

110 
	#BOOST_PP_REPEAT_1_72
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_71
(m, dË
	`m
(2, 71, d)

	)

111 
	#BOOST_PP_REPEAT_1_73
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_72
(m, dË
	`m
(2, 72, d)

	)

112 
	#BOOST_PP_REPEAT_1_74
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_73
(m, dË
	`m
(2, 73, d)

	)

113 
	#BOOST_PP_REPEAT_1_75
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_74
(m, dË
	`m
(2, 74, d)

	)

114 
	#BOOST_PP_REPEAT_1_76
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_75
(m, dË
	`m
(2, 75, d)

	)

115 
	#BOOST_PP_REPEAT_1_77
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_76
(m, dË
	`m
(2, 76, d)

	)

116 
	#BOOST_PP_REPEAT_1_78
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_77
(m, dË
	`m
(2, 77, d)

	)

117 
	#BOOST_PP_REPEAT_1_79
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_78
(m, dË
	`m
(2, 78, d)

	)

118 
	#BOOST_PP_REPEAT_1_80
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_79
(m, dË
	`m
(2, 79, d)

	)

119 
	#BOOST_PP_REPEAT_1_81
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_80
(m, dË
	`m
(2, 80, d)

	)

120 
	#BOOST_PP_REPEAT_1_82
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_81
(m, dË
	`m
(2, 81, d)

	)

121 
	#BOOST_PP_REPEAT_1_83
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_82
(m, dË
	`m
(2, 82, d)

	)

122 
	#BOOST_PP_REPEAT_1_84
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_83
(m, dË
	`m
(2, 83, d)

	)

123 
	#BOOST_PP_REPEAT_1_85
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_84
(m, dË
	`m
(2, 84, d)

	)

124 
	#BOOST_PP_REPEAT_1_86
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_85
(m, dË
	`m
(2, 85, d)

	)

125 
	#BOOST_PP_REPEAT_1_87
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_86
(m, dË
	`m
(2, 86, d)

	)

126 
	#BOOST_PP_REPEAT_1_88
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_87
(m, dË
	`m
(2, 87, d)

	)

127 
	#BOOST_PP_REPEAT_1_89
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_88
(m, dË
	`m
(2, 88, d)

	)

128 
	#BOOST_PP_REPEAT_1_90
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_89
(m, dË
	`m
(2, 89, d)

	)

129 
	#BOOST_PP_REPEAT_1_91
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_90
(m, dË
	`m
(2, 90, d)

	)

130 
	#BOOST_PP_REPEAT_1_92
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_91
(m, dË
	`m
(2, 91, d)

	)

131 
	#BOOST_PP_REPEAT_1_93
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_92
(m, dË
	`m
(2, 92, d)

	)

132 
	#BOOST_PP_REPEAT_1_94
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_93
(m, dË
	`m
(2, 93, d)

	)

133 
	#BOOST_PP_REPEAT_1_95
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_94
(m, dË
	`m
(2, 94, d)

	)

134 
	#BOOST_PP_REPEAT_1_96
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_95
(m, dË
	`m
(2, 95, d)

	)

135 
	#BOOST_PP_REPEAT_1_97
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_96
(m, dË
	`m
(2, 96, d)

	)

136 
	#BOOST_PP_REPEAT_1_98
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_97
(m, dË
	`m
(2, 97, d)

	)

137 
	#BOOST_PP_REPEAT_1_99
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_98
(m, dË
	`m
(2, 98, d)

	)

138 
	#BOOST_PP_REPEAT_1_100
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_99
(m, dË
	`m
(2, 99, d)

	)

139 
	#BOOST_PP_REPEAT_1_101
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_100
(m, dË
	`m
(2, 100, d)

	)

140 
	#BOOST_PP_REPEAT_1_102
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_101
(m, dË
	`m
(2, 101, d)

	)

141 
	#BOOST_PP_REPEAT_1_103
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_102
(m, dË
	`m
(2, 102, d)

	)

142 
	#BOOST_PP_REPEAT_1_104
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_103
(m, dË
	`m
(2, 103, d)

	)

143 
	#BOOST_PP_REPEAT_1_105
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_104
(m, dË
	`m
(2, 104, d)

	)

144 
	#BOOST_PP_REPEAT_1_106
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_105
(m, dË
	`m
(2, 105, d)

	)

145 
	#BOOST_PP_REPEAT_1_107
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_106
(m, dË
	`m
(2, 106, d)

	)

146 
	#BOOST_PP_REPEAT_1_108
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_107
(m, dË
	`m
(2, 107, d)

	)

147 
	#BOOST_PP_REPEAT_1_109
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_108
(m, dË
	`m
(2, 108, d)

	)

148 
	#BOOST_PP_REPEAT_1_110
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_109
(m, dË
	`m
(2, 109, d)

	)

149 
	#BOOST_PP_REPEAT_1_111
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_110
(m, dË
	`m
(2, 110, d)

	)

150 
	#BOOST_PP_REPEAT_1_112
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_111
(m, dË
	`m
(2, 111, d)

	)

151 
	#BOOST_PP_REPEAT_1_113
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_112
(m, dË
	`m
(2, 112, d)

	)

152 
	#BOOST_PP_REPEAT_1_114
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_113
(m, dË
	`m
(2, 113, d)

	)

153 
	#BOOST_PP_REPEAT_1_115
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_114
(m, dË
	`m
(2, 114, d)

	)

154 
	#BOOST_PP_REPEAT_1_116
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_115
(m, dË
	`m
(2, 115, d)

	)

155 
	#BOOST_PP_REPEAT_1_117
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_116
(m, dË
	`m
(2, 116, d)

	)

156 
	#BOOST_PP_REPEAT_1_118
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_117
(m, dË
	`m
(2, 117, d)

	)

157 
	#BOOST_PP_REPEAT_1_119
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_118
(m, dË
	`m
(2, 118, d)

	)

158 
	#BOOST_PP_REPEAT_1_120
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_119
(m, dË
	`m
(2, 119, d)

	)

159 
	#BOOST_PP_REPEAT_1_121
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_120
(m, dË
	`m
(2, 120, d)

	)

160 
	#BOOST_PP_REPEAT_1_122
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_121
(m, dË
	`m
(2, 121, d)

	)

161 
	#BOOST_PP_REPEAT_1_123
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_122
(m, dË
	`m
(2, 122, d)

	)

162 
	#BOOST_PP_REPEAT_1_124
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_123
(m, dË
	`m
(2, 123, d)

	)

163 
	#BOOST_PP_REPEAT_1_125
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_124
(m, dË
	`m
(2, 124, d)

	)

164 
	#BOOST_PP_REPEAT_1_126
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_125
(m, dË
	`m
(2, 125, d)

	)

165 
	#BOOST_PP_REPEAT_1_127
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_126
(m, dË
	`m
(2, 126, d)

	)

166 
	#BOOST_PP_REPEAT_1_128
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_127
(m, dË
	`m
(2, 127, d)

	)

167 
	#BOOST_PP_REPEAT_1_129
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_128
(m, dË
	`m
(2, 128, d)

	)

168 
	#BOOST_PP_REPEAT_1_130
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_129
(m, dË
	`m
(2, 129, d)

	)

169 
	#BOOST_PP_REPEAT_1_131
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_130
(m, dË
	`m
(2, 130, d)

	)

170 
	#BOOST_PP_REPEAT_1_132
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_131
(m, dË
	`m
(2, 131, d)

	)

171 
	#BOOST_PP_REPEAT_1_133
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_132
(m, dË
	`m
(2, 132, d)

	)

172 
	#BOOST_PP_REPEAT_1_134
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_133
(m, dË
	`m
(2, 133, d)

	)

173 
	#BOOST_PP_REPEAT_1_135
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_134
(m, dË
	`m
(2, 134, d)

	)

174 
	#BOOST_PP_REPEAT_1_136
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_135
(m, dË
	`m
(2, 135, d)

	)

175 
	#BOOST_PP_REPEAT_1_137
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_136
(m, dË
	`m
(2, 136, d)

	)

176 
	#BOOST_PP_REPEAT_1_138
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_137
(m, dË
	`m
(2, 137, d)

	)

177 
	#BOOST_PP_REPEAT_1_139
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_138
(m, dË
	`m
(2, 138, d)

	)

178 
	#BOOST_PP_REPEAT_1_140
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_139
(m, dË
	`m
(2, 139, d)

	)

179 
	#BOOST_PP_REPEAT_1_141
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_140
(m, dË
	`m
(2, 140, d)

	)

180 
	#BOOST_PP_REPEAT_1_142
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_141
(m, dË
	`m
(2, 141, d)

	)

181 
	#BOOST_PP_REPEAT_1_143
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_142
(m, dË
	`m
(2, 142, d)

	)

182 
	#BOOST_PP_REPEAT_1_144
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_143
(m, dË
	`m
(2, 143, d)

	)

183 
	#BOOST_PP_REPEAT_1_145
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_144
(m, dË
	`m
(2, 144, d)

	)

184 
	#BOOST_PP_REPEAT_1_146
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_145
(m, dË
	`m
(2, 145, d)

	)

185 
	#BOOST_PP_REPEAT_1_147
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_146
(m, dË
	`m
(2, 146, d)

	)

186 
	#BOOST_PP_REPEAT_1_148
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_147
(m, dË
	`m
(2, 147, d)

	)

187 
	#BOOST_PP_REPEAT_1_149
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_148
(m, dË
	`m
(2, 148, d)

	)

188 
	#BOOST_PP_REPEAT_1_150
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_149
(m, dË
	`m
(2, 149, d)

	)

189 
	#BOOST_PP_REPEAT_1_151
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_150
(m, dË
	`m
(2, 150, d)

	)

190 
	#BOOST_PP_REPEAT_1_152
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_151
(m, dË
	`m
(2, 151, d)

	)

191 
	#BOOST_PP_REPEAT_1_153
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_152
(m, dË
	`m
(2, 152, d)

	)

192 
	#BOOST_PP_REPEAT_1_154
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_153
(m, dË
	`m
(2, 153, d)

	)

193 
	#BOOST_PP_REPEAT_1_155
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_154
(m, dË
	`m
(2, 154, d)

	)

194 
	#BOOST_PP_REPEAT_1_156
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_155
(m, dË
	`m
(2, 155, d)

	)

195 
	#BOOST_PP_REPEAT_1_157
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_156
(m, dË
	`m
(2, 156, d)

	)

196 
	#BOOST_PP_REPEAT_1_158
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_157
(m, dË
	`m
(2, 157, d)

	)

197 
	#BOOST_PP_REPEAT_1_159
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_158
(m, dË
	`m
(2, 158, d)

	)

198 
	#BOOST_PP_REPEAT_1_160
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_159
(m, dË
	`m
(2, 159, d)

	)

199 
	#BOOST_PP_REPEAT_1_161
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_160
(m, dË
	`m
(2, 160, d)

	)

200 
	#BOOST_PP_REPEAT_1_162
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_161
(m, dË
	`m
(2, 161, d)

	)

201 
	#BOOST_PP_REPEAT_1_163
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_162
(m, dË
	`m
(2, 162, d)

	)

202 
	#BOOST_PP_REPEAT_1_164
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_163
(m, dË
	`m
(2, 163, d)

	)

203 
	#BOOST_PP_REPEAT_1_165
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_164
(m, dË
	`m
(2, 164, d)

	)

204 
	#BOOST_PP_REPEAT_1_166
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_165
(m, dË
	`m
(2, 165, d)

	)

205 
	#BOOST_PP_REPEAT_1_167
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_166
(m, dË
	`m
(2, 166, d)

	)

206 
	#BOOST_PP_REPEAT_1_168
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_167
(m, dË
	`m
(2, 167, d)

	)

207 
	#BOOST_PP_REPEAT_1_169
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_168
(m, dË
	`m
(2, 168, d)

	)

208 
	#BOOST_PP_REPEAT_1_170
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_169
(m, dË
	`m
(2, 169, d)

	)

209 
	#BOOST_PP_REPEAT_1_171
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_170
(m, dË
	`m
(2, 170, d)

	)

210 
	#BOOST_PP_REPEAT_1_172
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_171
(m, dË
	`m
(2, 171, d)

	)

211 
	#BOOST_PP_REPEAT_1_173
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_172
(m, dË
	`m
(2, 172, d)

	)

212 
	#BOOST_PP_REPEAT_1_174
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_173
(m, dË
	`m
(2, 173, d)

	)

213 
	#BOOST_PP_REPEAT_1_175
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_174
(m, dË
	`m
(2, 174, d)

	)

214 
	#BOOST_PP_REPEAT_1_176
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_175
(m, dË
	`m
(2, 175, d)

	)

215 
	#BOOST_PP_REPEAT_1_177
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_176
(m, dË
	`m
(2, 176, d)

	)

216 
	#BOOST_PP_REPEAT_1_178
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_177
(m, dË
	`m
(2, 177, d)

	)

217 
	#BOOST_PP_REPEAT_1_179
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_178
(m, dË
	`m
(2, 178, d)

	)

218 
	#BOOST_PP_REPEAT_1_180
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_179
(m, dË
	`m
(2, 179, d)

	)

219 
	#BOOST_PP_REPEAT_1_181
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_180
(m, dË
	`m
(2, 180, d)

	)

220 
	#BOOST_PP_REPEAT_1_182
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_181
(m, dË
	`m
(2, 181, d)

	)

221 
	#BOOST_PP_REPEAT_1_183
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_182
(m, dË
	`m
(2, 182, d)

	)

222 
	#BOOST_PP_REPEAT_1_184
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_183
(m, dË
	`m
(2, 183, d)

	)

223 
	#BOOST_PP_REPEAT_1_185
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_184
(m, dË
	`m
(2, 184, d)

	)

224 
	#BOOST_PP_REPEAT_1_186
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_185
(m, dË
	`m
(2, 185, d)

	)

225 
	#BOOST_PP_REPEAT_1_187
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_186
(m, dË
	`m
(2, 186, d)

	)

226 
	#BOOST_PP_REPEAT_1_188
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_187
(m, dË
	`m
(2, 187, d)

	)

227 
	#BOOST_PP_REPEAT_1_189
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_188
(m, dË
	`m
(2, 188, d)

	)

228 
	#BOOST_PP_REPEAT_1_190
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_189
(m, dË
	`m
(2, 189, d)

	)

229 
	#BOOST_PP_REPEAT_1_191
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_190
(m, dË
	`m
(2, 190, d)

	)

230 
	#BOOST_PP_REPEAT_1_192
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_191
(m, dË
	`m
(2, 191, d)

	)

231 
	#BOOST_PP_REPEAT_1_193
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_192
(m, dË
	`m
(2, 192, d)

	)

232 
	#BOOST_PP_REPEAT_1_194
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_193
(m, dË
	`m
(2, 193, d)

	)

233 
	#BOOST_PP_REPEAT_1_195
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_194
(m, dË
	`m
(2, 194, d)

	)

234 
	#BOOST_PP_REPEAT_1_196
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_195
(m, dË
	`m
(2, 195, d)

	)

235 
	#BOOST_PP_REPEAT_1_197
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_196
(m, dË
	`m
(2, 196, d)

	)

236 
	#BOOST_PP_REPEAT_1_198
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_197
(m, dË
	`m
(2, 197, d)

	)

237 
	#BOOST_PP_REPEAT_1_199
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_198
(m, dË
	`m
(2, 198, d)

	)

238 
	#BOOST_PP_REPEAT_1_200
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_199
(m, dË
	`m
(2, 199, d)

	)

239 
	#BOOST_PP_REPEAT_1_201
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_200
(m, dË
	`m
(2, 200, d)

	)

240 
	#BOOST_PP_REPEAT_1_202
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_201
(m, dË
	`m
(2, 201, d)

	)

241 
	#BOOST_PP_REPEAT_1_203
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_202
(m, dË
	`m
(2, 202, d)

	)

242 
	#BOOST_PP_REPEAT_1_204
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_203
(m, dË
	`m
(2, 203, d)

	)

243 
	#BOOST_PP_REPEAT_1_205
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_204
(m, dË
	`m
(2, 204, d)

	)

244 
	#BOOST_PP_REPEAT_1_206
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_205
(m, dË
	`m
(2, 205, d)

	)

245 
	#BOOST_PP_REPEAT_1_207
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_206
(m, dË
	`m
(2, 206, d)

	)

246 
	#BOOST_PP_REPEAT_1_208
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_207
(m, dË
	`m
(2, 207, d)

	)

247 
	#BOOST_PP_REPEAT_1_209
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_208
(m, dË
	`m
(2, 208, d)

	)

248 
	#BOOST_PP_REPEAT_1_210
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_209
(m, dË
	`m
(2, 209, d)

	)

249 
	#BOOST_PP_REPEAT_1_211
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_210
(m, dË
	`m
(2, 210, d)

	)

250 
	#BOOST_PP_REPEAT_1_212
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_211
(m, dË
	`m
(2, 211, d)

	)

251 
	#BOOST_PP_REPEAT_1_213
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_212
(m, dË
	`m
(2, 212, d)

	)

252 
	#BOOST_PP_REPEAT_1_214
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_213
(m, dË
	`m
(2, 213, d)

	)

253 
	#BOOST_PP_REPEAT_1_215
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_214
(m, dË
	`m
(2, 214, d)

	)

254 
	#BOOST_PP_REPEAT_1_216
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_215
(m, dË
	`m
(2, 215, d)

	)

255 
	#BOOST_PP_REPEAT_1_217
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_216
(m, dË
	`m
(2, 216, d)

	)

256 
	#BOOST_PP_REPEAT_1_218
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_217
(m, dË
	`m
(2, 217, d)

	)

257 
	#BOOST_PP_REPEAT_1_219
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_218
(m, dË
	`m
(2, 218, d)

	)

258 
	#BOOST_PP_REPEAT_1_220
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_219
(m, dË
	`m
(2, 219, d)

	)

259 
	#BOOST_PP_REPEAT_1_221
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_220
(m, dË
	`m
(2, 220, d)

	)

260 
	#BOOST_PP_REPEAT_1_222
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_221
(m, dË
	`m
(2, 221, d)

	)

261 
	#BOOST_PP_REPEAT_1_223
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_222
(m, dË
	`m
(2, 222, d)

	)

262 
	#BOOST_PP_REPEAT_1_224
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_223
(m, dË
	`m
(2, 223, d)

	)

263 
	#BOOST_PP_REPEAT_1_225
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_224
(m, dË
	`m
(2, 224, d)

	)

264 
	#BOOST_PP_REPEAT_1_226
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_225
(m, dË
	`m
(2, 225, d)

	)

265 
	#BOOST_PP_REPEAT_1_227
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_226
(m, dË
	`m
(2, 226, d)

	)

266 
	#BOOST_PP_REPEAT_1_228
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_227
(m, dË
	`m
(2, 227, d)

	)

267 
	#BOOST_PP_REPEAT_1_229
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_228
(m, dË
	`m
(2, 228, d)

	)

268 
	#BOOST_PP_REPEAT_1_230
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_229
(m, dË
	`m
(2, 229, d)

	)

269 
	#BOOST_PP_REPEAT_1_231
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_230
(m, dË
	`m
(2, 230, d)

	)

270 
	#BOOST_PP_REPEAT_1_232
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_231
(m, dË
	`m
(2, 231, d)

	)

271 
	#BOOST_PP_REPEAT_1_233
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_232
(m, dË
	`m
(2, 232, d)

	)

272 
	#BOOST_PP_REPEAT_1_234
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_233
(m, dË
	`m
(2, 233, d)

	)

273 
	#BOOST_PP_REPEAT_1_235
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_234
(m, dË
	`m
(2, 234, d)

	)

274 
	#BOOST_PP_REPEAT_1_236
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_235
(m, dË
	`m
(2, 235, d)

	)

275 
	#BOOST_PP_REPEAT_1_237
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_236
(m, dË
	`m
(2, 236, d)

	)

276 
	#BOOST_PP_REPEAT_1_238
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_237
(m, dË
	`m
(2, 237, d)

	)

277 
	#BOOST_PP_REPEAT_1_239
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_238
(m, dË
	`m
(2, 238, d)

	)

278 
	#BOOST_PP_REPEAT_1_240
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_239
(m, dË
	`m
(2, 239, d)

	)

279 
	#BOOST_PP_REPEAT_1_241
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_240
(m, dË
	`m
(2, 240, d)

	)

280 
	#BOOST_PP_REPEAT_1_242
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_241
(m, dË
	`m
(2, 241, d)

	)

281 
	#BOOST_PP_REPEAT_1_243
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_242
(m, dË
	`m
(2, 242, d)

	)

282 
	#BOOST_PP_REPEAT_1_244
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_243
(m, dË
	`m
(2, 243, d)

	)

283 
	#BOOST_PP_REPEAT_1_245
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_244
(m, dË
	`m
(2, 244, d)

	)

284 
	#BOOST_PP_REPEAT_1_246
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_245
(m, dË
	`m
(2, 245, d)

	)

285 
	#BOOST_PP_REPEAT_1_247
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_246
(m, dË
	`m
(2, 246, d)

	)

286 
	#BOOST_PP_REPEAT_1_248
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_247
(m, dË
	`m
(2, 247, d)

	)

287 
	#BOOST_PP_REPEAT_1_249
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_248
(m, dË
	`m
(2, 248, d)

	)

288 
	#BOOST_PP_REPEAT_1_250
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_249
(m, dË
	`m
(2, 249, d)

	)

289 
	#BOOST_PP_REPEAT_1_251
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_250
(m, dË
	`m
(2, 250, d)

	)

290 
	#BOOST_PP_REPEAT_1_252
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_251
(m, dË
	`m
(2, 251, d)

	)

291 
	#BOOST_PP_REPEAT_1_253
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_252
(m, dË
	`m
(2, 252, d)

	)

292 
	#BOOST_PP_REPEAT_1_254
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_253
(m, dË
	`m
(2, 253, d)

	)

293 
	#BOOST_PP_REPEAT_1_255
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_254
(m, dË
	`m
(2, 254, d)

	)

294 
	#BOOST_PP_REPEAT_1_256
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_1_255
(m, dË
	`m
(2, 255, d)

	)

295 
#deföê
	#BOOST_PP_REPEAT_2_0
(
m
, 
d
)

	)

296 
	#BOOST_PP_REPEAT_2_1
(
m
, 
d
Ë
	`m
(3, 0, d)

	)

297 
	#BOOST_PP_REPEAT_2_2
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_1
(m, dË
	`m
(3, 1, d)

	)

298 
	#BOOST_PP_REPEAT_2_3
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_2
(m, dË
	`m
(3, 2, d)

	)

299 
	#BOOST_PP_REPEAT_2_4
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_3
(m, dË
	`m
(3, 3, d)

	)

300 
	#BOOST_PP_REPEAT_2_5
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_4
(m, dË
	`m
(3, 4, d)

	)

301 
	#BOOST_PP_REPEAT_2_6
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_5
(m, dË
	`m
(3, 5, d)

	)

302 
	#BOOST_PP_REPEAT_2_7
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_6
(m, dË
	`m
(3, 6, d)

	)

303 
	#BOOST_PP_REPEAT_2_8
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_7
(m, dË
	`m
(3, 7, d)

	)

304 
	#BOOST_PP_REPEAT_2_9
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_8
(m, dË
	`m
(3, 8, d)

	)

305 
	#BOOST_PP_REPEAT_2_10
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_9
(m, dË
	`m
(3, 9, d)

	)

306 
	#BOOST_PP_REPEAT_2_11
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_10
(m, dË
	`m
(3, 10, d)

	)

307 
	#BOOST_PP_REPEAT_2_12
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_11
(m, dË
	`m
(3, 11, d)

	)

308 
	#BOOST_PP_REPEAT_2_13
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_12
(m, dË
	`m
(3, 12, d)

	)

309 
	#BOOST_PP_REPEAT_2_14
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_13
(m, dË
	`m
(3, 13, d)

	)

310 
	#BOOST_PP_REPEAT_2_15
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_14
(m, dË
	`m
(3, 14, d)

	)

311 
	#BOOST_PP_REPEAT_2_16
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_15
(m, dË
	`m
(3, 15, d)

	)

312 
	#BOOST_PP_REPEAT_2_17
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_16
(m, dË
	`m
(3, 16, d)

	)

313 
	#BOOST_PP_REPEAT_2_18
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_17
(m, dË
	`m
(3, 17, d)

	)

314 
	#BOOST_PP_REPEAT_2_19
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_18
(m, dË
	`m
(3, 18, d)

	)

315 
	#BOOST_PP_REPEAT_2_20
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_19
(m, dË
	`m
(3, 19, d)

	)

316 
	#BOOST_PP_REPEAT_2_21
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_20
(m, dË
	`m
(3, 20, d)

	)

317 
	#BOOST_PP_REPEAT_2_22
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_21
(m, dË
	`m
(3, 21, d)

	)

318 
	#BOOST_PP_REPEAT_2_23
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_22
(m, dË
	`m
(3, 22, d)

	)

319 
	#BOOST_PP_REPEAT_2_24
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_23
(m, dË
	`m
(3, 23, d)

	)

320 
	#BOOST_PP_REPEAT_2_25
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_24
(m, dË
	`m
(3, 24, d)

	)

321 
	#BOOST_PP_REPEAT_2_26
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_25
(m, dË
	`m
(3, 25, d)

	)

322 
	#BOOST_PP_REPEAT_2_27
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_26
(m, dË
	`m
(3, 26, d)

	)

323 
	#BOOST_PP_REPEAT_2_28
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_27
(m, dË
	`m
(3, 27, d)

	)

324 
	#BOOST_PP_REPEAT_2_29
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_28
(m, dË
	`m
(3, 28, d)

	)

325 
	#BOOST_PP_REPEAT_2_30
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_29
(m, dË
	`m
(3, 29, d)

	)

326 
	#BOOST_PP_REPEAT_2_31
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_30
(m, dË
	`m
(3, 30, d)

	)

327 
	#BOOST_PP_REPEAT_2_32
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_31
(m, dË
	`m
(3, 31, d)

	)

328 
	#BOOST_PP_REPEAT_2_33
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_32
(m, dË
	`m
(3, 32, d)

	)

329 
	#BOOST_PP_REPEAT_2_34
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_33
(m, dË
	`m
(3, 33, d)

	)

330 
	#BOOST_PP_REPEAT_2_35
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_34
(m, dË
	`m
(3, 34, d)

	)

331 
	#BOOST_PP_REPEAT_2_36
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_35
(m, dË
	`m
(3, 35, d)

	)

332 
	#BOOST_PP_REPEAT_2_37
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_36
(m, dË
	`m
(3, 36, d)

	)

333 
	#BOOST_PP_REPEAT_2_38
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_37
(m, dË
	`m
(3, 37, d)

	)

334 
	#BOOST_PP_REPEAT_2_39
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_38
(m, dË
	`m
(3, 38, d)

	)

335 
	#BOOST_PP_REPEAT_2_40
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_39
(m, dË
	`m
(3, 39, d)

	)

336 
	#BOOST_PP_REPEAT_2_41
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_40
(m, dË
	`m
(3, 40, d)

	)

337 
	#BOOST_PP_REPEAT_2_42
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_41
(m, dË
	`m
(3, 41, d)

	)

338 
	#BOOST_PP_REPEAT_2_43
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_42
(m, dË
	`m
(3, 42, d)

	)

339 
	#BOOST_PP_REPEAT_2_44
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_43
(m, dË
	`m
(3, 43, d)

	)

340 
	#BOOST_PP_REPEAT_2_45
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_44
(m, dË
	`m
(3, 44, d)

	)

341 
	#BOOST_PP_REPEAT_2_46
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_45
(m, dË
	`m
(3, 45, d)

	)

342 
	#BOOST_PP_REPEAT_2_47
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_46
(m, dË
	`m
(3, 46, d)

	)

343 
	#BOOST_PP_REPEAT_2_48
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_47
(m, dË
	`m
(3, 47, d)

	)

344 
	#BOOST_PP_REPEAT_2_49
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_48
(m, dË
	`m
(3, 48, d)

	)

345 
	#BOOST_PP_REPEAT_2_50
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_49
(m, dË
	`m
(3, 49, d)

	)

346 
	#BOOST_PP_REPEAT_2_51
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_50
(m, dË
	`m
(3, 50, d)

	)

347 
	#BOOST_PP_REPEAT_2_52
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_51
(m, dË
	`m
(3, 51, d)

	)

348 
	#BOOST_PP_REPEAT_2_53
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_52
(m, dË
	`m
(3, 52, d)

	)

349 
	#BOOST_PP_REPEAT_2_54
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_53
(m, dË
	`m
(3, 53, d)

	)

350 
	#BOOST_PP_REPEAT_2_55
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_54
(m, dË
	`m
(3, 54, d)

	)

351 
	#BOOST_PP_REPEAT_2_56
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_55
(m, dË
	`m
(3, 55, d)

	)

352 
	#BOOST_PP_REPEAT_2_57
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_56
(m, dË
	`m
(3, 56, d)

	)

353 
	#BOOST_PP_REPEAT_2_58
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_57
(m, dË
	`m
(3, 57, d)

	)

354 
	#BOOST_PP_REPEAT_2_59
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_58
(m, dË
	`m
(3, 58, d)

	)

355 
	#BOOST_PP_REPEAT_2_60
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_59
(m, dË
	`m
(3, 59, d)

	)

356 
	#BOOST_PP_REPEAT_2_61
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_60
(m, dË
	`m
(3, 60, d)

	)

357 
	#BOOST_PP_REPEAT_2_62
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_61
(m, dË
	`m
(3, 61, d)

	)

358 
	#BOOST_PP_REPEAT_2_63
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_62
(m, dË
	`m
(3, 62, d)

	)

359 
	#BOOST_PP_REPEAT_2_64
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_63
(m, dË
	`m
(3, 63, d)

	)

360 
	#BOOST_PP_REPEAT_2_65
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_64
(m, dË
	`m
(3, 64, d)

	)

361 
	#BOOST_PP_REPEAT_2_66
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_65
(m, dË
	`m
(3, 65, d)

	)

362 
	#BOOST_PP_REPEAT_2_67
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_66
(m, dË
	`m
(3, 66, d)

	)

363 
	#BOOST_PP_REPEAT_2_68
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_67
(m, dË
	`m
(3, 67, d)

	)

364 
	#BOOST_PP_REPEAT_2_69
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_68
(m, dË
	`m
(3, 68, d)

	)

365 
	#BOOST_PP_REPEAT_2_70
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_69
(m, dË
	`m
(3, 69, d)

	)

366 
	#BOOST_PP_REPEAT_2_71
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_70
(m, dË
	`m
(3, 70, d)

	)

367 
	#BOOST_PP_REPEAT_2_72
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_71
(m, dË
	`m
(3, 71, d)

	)

368 
	#BOOST_PP_REPEAT_2_73
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_72
(m, dË
	`m
(3, 72, d)

	)

369 
	#BOOST_PP_REPEAT_2_74
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_73
(m, dË
	`m
(3, 73, d)

	)

370 
	#BOOST_PP_REPEAT_2_75
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_74
(m, dË
	`m
(3, 74, d)

	)

371 
	#BOOST_PP_REPEAT_2_76
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_75
(m, dË
	`m
(3, 75, d)

	)

372 
	#BOOST_PP_REPEAT_2_77
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_76
(m, dË
	`m
(3, 76, d)

	)

373 
	#BOOST_PP_REPEAT_2_78
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_77
(m, dË
	`m
(3, 77, d)

	)

374 
	#BOOST_PP_REPEAT_2_79
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_78
(m, dË
	`m
(3, 78, d)

	)

375 
	#BOOST_PP_REPEAT_2_80
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_79
(m, dË
	`m
(3, 79, d)

	)

376 
	#BOOST_PP_REPEAT_2_81
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_80
(m, dË
	`m
(3, 80, d)

	)

377 
	#BOOST_PP_REPEAT_2_82
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_81
(m, dË
	`m
(3, 81, d)

	)

378 
	#BOOST_PP_REPEAT_2_83
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_82
(m, dË
	`m
(3, 82, d)

	)

379 
	#BOOST_PP_REPEAT_2_84
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_83
(m, dË
	`m
(3, 83, d)

	)

380 
	#BOOST_PP_REPEAT_2_85
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_84
(m, dË
	`m
(3, 84, d)

	)

381 
	#BOOST_PP_REPEAT_2_86
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_85
(m, dË
	`m
(3, 85, d)

	)

382 
	#BOOST_PP_REPEAT_2_87
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_86
(m, dË
	`m
(3, 86, d)

	)

383 
	#BOOST_PP_REPEAT_2_88
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_87
(m, dË
	`m
(3, 87, d)

	)

384 
	#BOOST_PP_REPEAT_2_89
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_88
(m, dË
	`m
(3, 88, d)

	)

385 
	#BOOST_PP_REPEAT_2_90
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_89
(m, dË
	`m
(3, 89, d)

	)

386 
	#BOOST_PP_REPEAT_2_91
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_90
(m, dË
	`m
(3, 90, d)

	)

387 
	#BOOST_PP_REPEAT_2_92
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_91
(m, dË
	`m
(3, 91, d)

	)

388 
	#BOOST_PP_REPEAT_2_93
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_92
(m, dË
	`m
(3, 92, d)

	)

389 
	#BOOST_PP_REPEAT_2_94
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_93
(m, dË
	`m
(3, 93, d)

	)

390 
	#BOOST_PP_REPEAT_2_95
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_94
(m, dË
	`m
(3, 94, d)

	)

391 
	#BOOST_PP_REPEAT_2_96
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_95
(m, dË
	`m
(3, 95, d)

	)

392 
	#BOOST_PP_REPEAT_2_97
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_96
(m, dË
	`m
(3, 96, d)

	)

393 
	#BOOST_PP_REPEAT_2_98
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_97
(m, dË
	`m
(3, 97, d)

	)

394 
	#BOOST_PP_REPEAT_2_99
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_98
(m, dË
	`m
(3, 98, d)

	)

395 
	#BOOST_PP_REPEAT_2_100
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_99
(m, dË
	`m
(3, 99, d)

	)

396 
	#BOOST_PP_REPEAT_2_101
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_100
(m, dË
	`m
(3, 100, d)

	)

397 
	#BOOST_PP_REPEAT_2_102
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_101
(m, dË
	`m
(3, 101, d)

	)

398 
	#BOOST_PP_REPEAT_2_103
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_102
(m, dË
	`m
(3, 102, d)

	)

399 
	#BOOST_PP_REPEAT_2_104
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_103
(m, dË
	`m
(3, 103, d)

	)

400 
	#BOOST_PP_REPEAT_2_105
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_104
(m, dË
	`m
(3, 104, d)

	)

401 
	#BOOST_PP_REPEAT_2_106
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_105
(m, dË
	`m
(3, 105, d)

	)

402 
	#BOOST_PP_REPEAT_2_107
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_106
(m, dË
	`m
(3, 106, d)

	)

403 
	#BOOST_PP_REPEAT_2_108
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_107
(m, dË
	`m
(3, 107, d)

	)

404 
	#BOOST_PP_REPEAT_2_109
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_108
(m, dË
	`m
(3, 108, d)

	)

405 
	#BOOST_PP_REPEAT_2_110
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_109
(m, dË
	`m
(3, 109, d)

	)

406 
	#BOOST_PP_REPEAT_2_111
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_110
(m, dË
	`m
(3, 110, d)

	)

407 
	#BOOST_PP_REPEAT_2_112
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_111
(m, dË
	`m
(3, 111, d)

	)

408 
	#BOOST_PP_REPEAT_2_113
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_112
(m, dË
	`m
(3, 112, d)

	)

409 
	#BOOST_PP_REPEAT_2_114
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_113
(m, dË
	`m
(3, 113, d)

	)

410 
	#BOOST_PP_REPEAT_2_115
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_114
(m, dË
	`m
(3, 114, d)

	)

411 
	#BOOST_PP_REPEAT_2_116
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_115
(m, dË
	`m
(3, 115, d)

	)

412 
	#BOOST_PP_REPEAT_2_117
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_116
(m, dË
	`m
(3, 116, d)

	)

413 
	#BOOST_PP_REPEAT_2_118
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_117
(m, dË
	`m
(3, 117, d)

	)

414 
	#BOOST_PP_REPEAT_2_119
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_118
(m, dË
	`m
(3, 118, d)

	)

415 
	#BOOST_PP_REPEAT_2_120
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_119
(m, dË
	`m
(3, 119, d)

	)

416 
	#BOOST_PP_REPEAT_2_121
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_120
(m, dË
	`m
(3, 120, d)

	)

417 
	#BOOST_PP_REPEAT_2_122
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_121
(m, dË
	`m
(3, 121, d)

	)

418 
	#BOOST_PP_REPEAT_2_123
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_122
(m, dË
	`m
(3, 122, d)

	)

419 
	#BOOST_PP_REPEAT_2_124
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_123
(m, dË
	`m
(3, 123, d)

	)

420 
	#BOOST_PP_REPEAT_2_125
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_124
(m, dË
	`m
(3, 124, d)

	)

421 
	#BOOST_PP_REPEAT_2_126
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_125
(m, dË
	`m
(3, 125, d)

	)

422 
	#BOOST_PP_REPEAT_2_127
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_126
(m, dË
	`m
(3, 126, d)

	)

423 
	#BOOST_PP_REPEAT_2_128
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_127
(m, dË
	`m
(3, 127, d)

	)

424 
	#BOOST_PP_REPEAT_2_129
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_128
(m, dË
	`m
(3, 128, d)

	)

425 
	#BOOST_PP_REPEAT_2_130
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_129
(m, dË
	`m
(3, 129, d)

	)

426 
	#BOOST_PP_REPEAT_2_131
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_130
(m, dË
	`m
(3, 130, d)

	)

427 
	#BOOST_PP_REPEAT_2_132
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_131
(m, dË
	`m
(3, 131, d)

	)

428 
	#BOOST_PP_REPEAT_2_133
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_132
(m, dË
	`m
(3, 132, d)

	)

429 
	#BOOST_PP_REPEAT_2_134
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_133
(m, dË
	`m
(3, 133, d)

	)

430 
	#BOOST_PP_REPEAT_2_135
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_134
(m, dË
	`m
(3, 134, d)

	)

431 
	#BOOST_PP_REPEAT_2_136
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_135
(m, dË
	`m
(3, 135, d)

	)

432 
	#BOOST_PP_REPEAT_2_137
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_136
(m, dË
	`m
(3, 136, d)

	)

433 
	#BOOST_PP_REPEAT_2_138
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_137
(m, dË
	`m
(3, 137, d)

	)

434 
	#BOOST_PP_REPEAT_2_139
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_138
(m, dË
	`m
(3, 138, d)

	)

435 
	#BOOST_PP_REPEAT_2_140
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_139
(m, dË
	`m
(3, 139, d)

	)

436 
	#BOOST_PP_REPEAT_2_141
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_140
(m, dË
	`m
(3, 140, d)

	)

437 
	#BOOST_PP_REPEAT_2_142
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_141
(m, dË
	`m
(3, 141, d)

	)

438 
	#BOOST_PP_REPEAT_2_143
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_142
(m, dË
	`m
(3, 142, d)

	)

439 
	#BOOST_PP_REPEAT_2_144
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_143
(m, dË
	`m
(3, 143, d)

	)

440 
	#BOOST_PP_REPEAT_2_145
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_144
(m, dË
	`m
(3, 144, d)

	)

441 
	#BOOST_PP_REPEAT_2_146
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_145
(m, dË
	`m
(3, 145, d)

	)

442 
	#BOOST_PP_REPEAT_2_147
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_146
(m, dË
	`m
(3, 146, d)

	)

443 
	#BOOST_PP_REPEAT_2_148
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_147
(m, dË
	`m
(3, 147, d)

	)

444 
	#BOOST_PP_REPEAT_2_149
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_148
(m, dË
	`m
(3, 148, d)

	)

445 
	#BOOST_PP_REPEAT_2_150
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_149
(m, dË
	`m
(3, 149, d)

	)

446 
	#BOOST_PP_REPEAT_2_151
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_150
(m, dË
	`m
(3, 150, d)

	)

447 
	#BOOST_PP_REPEAT_2_152
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_151
(m, dË
	`m
(3, 151, d)

	)

448 
	#BOOST_PP_REPEAT_2_153
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_152
(m, dË
	`m
(3, 152, d)

	)

449 
	#BOOST_PP_REPEAT_2_154
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_153
(m, dË
	`m
(3, 153, d)

	)

450 
	#BOOST_PP_REPEAT_2_155
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_154
(m, dË
	`m
(3, 154, d)

	)

451 
	#BOOST_PP_REPEAT_2_156
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_155
(m, dË
	`m
(3, 155, d)

	)

452 
	#BOOST_PP_REPEAT_2_157
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_156
(m, dË
	`m
(3, 156, d)

	)

453 
	#BOOST_PP_REPEAT_2_158
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_157
(m, dË
	`m
(3, 157, d)

	)

454 
	#BOOST_PP_REPEAT_2_159
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_158
(m, dË
	`m
(3, 158, d)

	)

455 
	#BOOST_PP_REPEAT_2_160
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_159
(m, dË
	`m
(3, 159, d)

	)

456 
	#BOOST_PP_REPEAT_2_161
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_160
(m, dË
	`m
(3, 160, d)

	)

457 
	#BOOST_PP_REPEAT_2_162
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_161
(m, dË
	`m
(3, 161, d)

	)

458 
	#BOOST_PP_REPEAT_2_163
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_162
(m, dË
	`m
(3, 162, d)

	)

459 
	#BOOST_PP_REPEAT_2_164
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_163
(m, dË
	`m
(3, 163, d)

	)

460 
	#BOOST_PP_REPEAT_2_165
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_164
(m, dË
	`m
(3, 164, d)

	)

461 
	#BOOST_PP_REPEAT_2_166
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_165
(m, dË
	`m
(3, 165, d)

	)

462 
	#BOOST_PP_REPEAT_2_167
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_166
(m, dË
	`m
(3, 166, d)

	)

463 
	#BOOST_PP_REPEAT_2_168
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_167
(m, dË
	`m
(3, 167, d)

	)

464 
	#BOOST_PP_REPEAT_2_169
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_168
(m, dË
	`m
(3, 168, d)

	)

465 
	#BOOST_PP_REPEAT_2_170
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_169
(m, dË
	`m
(3, 169, d)

	)

466 
	#BOOST_PP_REPEAT_2_171
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_170
(m, dË
	`m
(3, 170, d)

	)

467 
	#BOOST_PP_REPEAT_2_172
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_171
(m, dË
	`m
(3, 171, d)

	)

468 
	#BOOST_PP_REPEAT_2_173
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_172
(m, dË
	`m
(3, 172, d)

	)

469 
	#BOOST_PP_REPEAT_2_174
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_173
(m, dË
	`m
(3, 173, d)

	)

470 
	#BOOST_PP_REPEAT_2_175
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_174
(m, dË
	`m
(3, 174, d)

	)

471 
	#BOOST_PP_REPEAT_2_176
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_175
(m, dË
	`m
(3, 175, d)

	)

472 
	#BOOST_PP_REPEAT_2_177
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_176
(m, dË
	`m
(3, 176, d)

	)

473 
	#BOOST_PP_REPEAT_2_178
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_177
(m, dË
	`m
(3, 177, d)

	)

474 
	#BOOST_PP_REPEAT_2_179
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_178
(m, dË
	`m
(3, 178, d)

	)

475 
	#BOOST_PP_REPEAT_2_180
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_179
(m, dË
	`m
(3, 179, d)

	)

476 
	#BOOST_PP_REPEAT_2_181
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_180
(m, dË
	`m
(3, 180, d)

	)

477 
	#BOOST_PP_REPEAT_2_182
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_181
(m, dË
	`m
(3, 181, d)

	)

478 
	#BOOST_PP_REPEAT_2_183
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_182
(m, dË
	`m
(3, 182, d)

	)

479 
	#BOOST_PP_REPEAT_2_184
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_183
(m, dË
	`m
(3, 183, d)

	)

480 
	#BOOST_PP_REPEAT_2_185
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_184
(m, dË
	`m
(3, 184, d)

	)

481 
	#BOOST_PP_REPEAT_2_186
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_185
(m, dË
	`m
(3, 185, d)

	)

482 
	#BOOST_PP_REPEAT_2_187
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_186
(m, dË
	`m
(3, 186, d)

	)

483 
	#BOOST_PP_REPEAT_2_188
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_187
(m, dË
	`m
(3, 187, d)

	)

484 
	#BOOST_PP_REPEAT_2_189
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_188
(m, dË
	`m
(3, 188, d)

	)

485 
	#BOOST_PP_REPEAT_2_190
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_189
(m, dË
	`m
(3, 189, d)

	)

486 
	#BOOST_PP_REPEAT_2_191
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_190
(m, dË
	`m
(3, 190, d)

	)

487 
	#BOOST_PP_REPEAT_2_192
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_191
(m, dË
	`m
(3, 191, d)

	)

488 
	#BOOST_PP_REPEAT_2_193
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_192
(m, dË
	`m
(3, 192, d)

	)

489 
	#BOOST_PP_REPEAT_2_194
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_193
(m, dË
	`m
(3, 193, d)

	)

490 
	#BOOST_PP_REPEAT_2_195
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_194
(m, dË
	`m
(3, 194, d)

	)

491 
	#BOOST_PP_REPEAT_2_196
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_195
(m, dË
	`m
(3, 195, d)

	)

492 
	#BOOST_PP_REPEAT_2_197
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_196
(m, dË
	`m
(3, 196, d)

	)

493 
	#BOOST_PP_REPEAT_2_198
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_197
(m, dË
	`m
(3, 197, d)

	)

494 
	#BOOST_PP_REPEAT_2_199
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_198
(m, dË
	`m
(3, 198, d)

	)

495 
	#BOOST_PP_REPEAT_2_200
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_199
(m, dË
	`m
(3, 199, d)

	)

496 
	#BOOST_PP_REPEAT_2_201
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_200
(m, dË
	`m
(3, 200, d)

	)

497 
	#BOOST_PP_REPEAT_2_202
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_201
(m, dË
	`m
(3, 201, d)

	)

498 
	#BOOST_PP_REPEAT_2_203
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_202
(m, dË
	`m
(3, 202, d)

	)

499 
	#BOOST_PP_REPEAT_2_204
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_203
(m, dË
	`m
(3, 203, d)

	)

500 
	#BOOST_PP_REPEAT_2_205
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_204
(m, dË
	`m
(3, 204, d)

	)

501 
	#BOOST_PP_REPEAT_2_206
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_205
(m, dË
	`m
(3, 205, d)

	)

502 
	#BOOST_PP_REPEAT_2_207
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_206
(m, dË
	`m
(3, 206, d)

	)

503 
	#BOOST_PP_REPEAT_2_208
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_207
(m, dË
	`m
(3, 207, d)

	)

504 
	#BOOST_PP_REPEAT_2_209
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_208
(m, dË
	`m
(3, 208, d)

	)

505 
	#BOOST_PP_REPEAT_2_210
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_209
(m, dË
	`m
(3, 209, d)

	)

506 
	#BOOST_PP_REPEAT_2_211
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_210
(m, dË
	`m
(3, 210, d)

	)

507 
	#BOOST_PP_REPEAT_2_212
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_211
(m, dË
	`m
(3, 211, d)

	)

508 
	#BOOST_PP_REPEAT_2_213
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_212
(m, dË
	`m
(3, 212, d)

	)

509 
	#BOOST_PP_REPEAT_2_214
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_213
(m, dË
	`m
(3, 213, d)

	)

510 
	#BOOST_PP_REPEAT_2_215
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_214
(m, dË
	`m
(3, 214, d)

	)

511 
	#BOOST_PP_REPEAT_2_216
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_215
(m, dË
	`m
(3, 215, d)

	)

512 
	#BOOST_PP_REPEAT_2_217
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_216
(m, dË
	`m
(3, 216, d)

	)

513 
	#BOOST_PP_REPEAT_2_218
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_217
(m, dË
	`m
(3, 217, d)

	)

514 
	#BOOST_PP_REPEAT_2_219
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_218
(m, dË
	`m
(3, 218, d)

	)

515 
	#BOOST_PP_REPEAT_2_220
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_219
(m, dË
	`m
(3, 219, d)

	)

516 
	#BOOST_PP_REPEAT_2_221
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_220
(m, dË
	`m
(3, 220, d)

	)

517 
	#BOOST_PP_REPEAT_2_222
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_221
(m, dË
	`m
(3, 221, d)

	)

518 
	#BOOST_PP_REPEAT_2_223
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_222
(m, dË
	`m
(3, 222, d)

	)

519 
	#BOOST_PP_REPEAT_2_224
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_223
(m, dË
	`m
(3, 223, d)

	)

520 
	#BOOST_PP_REPEAT_2_225
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_224
(m, dË
	`m
(3, 224, d)

	)

521 
	#BOOST_PP_REPEAT_2_226
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_225
(m, dË
	`m
(3, 225, d)

	)

522 
	#BOOST_PP_REPEAT_2_227
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_226
(m, dË
	`m
(3, 226, d)

	)

523 
	#BOOST_PP_REPEAT_2_228
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_227
(m, dË
	`m
(3, 227, d)

	)

524 
	#BOOST_PP_REPEAT_2_229
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_228
(m, dË
	`m
(3, 228, d)

	)

525 
	#BOOST_PP_REPEAT_2_230
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_229
(m, dË
	`m
(3, 229, d)

	)

526 
	#BOOST_PP_REPEAT_2_231
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_230
(m, dË
	`m
(3, 230, d)

	)

527 
	#BOOST_PP_REPEAT_2_232
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_231
(m, dË
	`m
(3, 231, d)

	)

528 
	#BOOST_PP_REPEAT_2_233
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_232
(m, dË
	`m
(3, 232, d)

	)

529 
	#BOOST_PP_REPEAT_2_234
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_233
(m, dË
	`m
(3, 233, d)

	)

530 
	#BOOST_PP_REPEAT_2_235
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_234
(m, dË
	`m
(3, 234, d)

	)

531 
	#BOOST_PP_REPEAT_2_236
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_235
(m, dË
	`m
(3, 235, d)

	)

532 
	#BOOST_PP_REPEAT_2_237
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_236
(m, dË
	`m
(3, 236, d)

	)

533 
	#BOOST_PP_REPEAT_2_238
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_237
(m, dË
	`m
(3, 237, d)

	)

534 
	#BOOST_PP_REPEAT_2_239
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_238
(m, dË
	`m
(3, 238, d)

	)

535 
	#BOOST_PP_REPEAT_2_240
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_239
(m, dË
	`m
(3, 239, d)

	)

536 
	#BOOST_PP_REPEAT_2_241
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_240
(m, dË
	`m
(3, 240, d)

	)

537 
	#BOOST_PP_REPEAT_2_242
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_241
(m, dË
	`m
(3, 241, d)

	)

538 
	#BOOST_PP_REPEAT_2_243
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_242
(m, dË
	`m
(3, 242, d)

	)

539 
	#BOOST_PP_REPEAT_2_244
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_243
(m, dË
	`m
(3, 243, d)

	)

540 
	#BOOST_PP_REPEAT_2_245
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_244
(m, dË
	`m
(3, 244, d)

	)

541 
	#BOOST_PP_REPEAT_2_246
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_245
(m, dË
	`m
(3, 245, d)

	)

542 
	#BOOST_PP_REPEAT_2_247
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_246
(m, dË
	`m
(3, 246, d)

	)

543 
	#BOOST_PP_REPEAT_2_248
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_247
(m, dË
	`m
(3, 247, d)

	)

544 
	#BOOST_PP_REPEAT_2_249
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_248
(m, dË
	`m
(3, 248, d)

	)

545 
	#BOOST_PP_REPEAT_2_250
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_249
(m, dË
	`m
(3, 249, d)

	)

546 
	#BOOST_PP_REPEAT_2_251
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_250
(m, dË
	`m
(3, 250, d)

	)

547 
	#BOOST_PP_REPEAT_2_252
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_251
(m, dË
	`m
(3, 251, d)

	)

548 
	#BOOST_PP_REPEAT_2_253
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_252
(m, dË
	`m
(3, 252, d)

	)

549 
	#BOOST_PP_REPEAT_2_254
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_253
(m, dË
	`m
(3, 253, d)

	)

550 
	#BOOST_PP_REPEAT_2_255
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_254
(m, dË
	`m
(3, 254, d)

	)

551 
	#BOOST_PP_REPEAT_2_256
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_2_255
(m, dË
	`m
(3, 255, d)

	)

552 
#deföê
	#BOOST_PP_REPEAT_3_0
(
m
, 
d
)

	)

553 
	#BOOST_PP_REPEAT_3_1
(
m
, 
d
Ë
	`m
(4, 0, d)

	)

554 
	#BOOST_PP_REPEAT_3_2
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_1
(m, dË
	`m
(4, 1, d)

	)

555 
	#BOOST_PP_REPEAT_3_3
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_2
(m, dË
	`m
(4, 2, d)

	)

556 
	#BOOST_PP_REPEAT_3_4
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_3
(m, dË
	`m
(4, 3, d)

	)

557 
	#BOOST_PP_REPEAT_3_5
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_4
(m, dË
	`m
(4, 4, d)

	)

558 
	#BOOST_PP_REPEAT_3_6
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_5
(m, dË
	`m
(4, 5, d)

	)

559 
	#BOOST_PP_REPEAT_3_7
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_6
(m, dË
	`m
(4, 6, d)

	)

560 
	#BOOST_PP_REPEAT_3_8
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_7
(m, dË
	`m
(4, 7, d)

	)

561 
	#BOOST_PP_REPEAT_3_9
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_8
(m, dË
	`m
(4, 8, d)

	)

562 
	#BOOST_PP_REPEAT_3_10
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_9
(m, dË
	`m
(4, 9, d)

	)

563 
	#BOOST_PP_REPEAT_3_11
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_10
(m, dË
	`m
(4, 10, d)

	)

564 
	#BOOST_PP_REPEAT_3_12
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_11
(m, dË
	`m
(4, 11, d)

	)

565 
	#BOOST_PP_REPEAT_3_13
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_12
(m, dË
	`m
(4, 12, d)

	)

566 
	#BOOST_PP_REPEAT_3_14
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_13
(m, dË
	`m
(4, 13, d)

	)

567 
	#BOOST_PP_REPEAT_3_15
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_14
(m, dË
	`m
(4, 14, d)

	)

568 
	#BOOST_PP_REPEAT_3_16
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_15
(m, dË
	`m
(4, 15, d)

	)

569 
	#BOOST_PP_REPEAT_3_17
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_16
(m, dË
	`m
(4, 16, d)

	)

570 
	#BOOST_PP_REPEAT_3_18
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_17
(m, dË
	`m
(4, 17, d)

	)

571 
	#BOOST_PP_REPEAT_3_19
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_18
(m, dË
	`m
(4, 18, d)

	)

572 
	#BOOST_PP_REPEAT_3_20
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_19
(m, dË
	`m
(4, 19, d)

	)

573 
	#BOOST_PP_REPEAT_3_21
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_20
(m, dË
	`m
(4, 20, d)

	)

574 
	#BOOST_PP_REPEAT_3_22
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_21
(m, dË
	`m
(4, 21, d)

	)

575 
	#BOOST_PP_REPEAT_3_23
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_22
(m, dË
	`m
(4, 22, d)

	)

576 
	#BOOST_PP_REPEAT_3_24
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_23
(m, dË
	`m
(4, 23, d)

	)

577 
	#BOOST_PP_REPEAT_3_25
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_24
(m, dË
	`m
(4, 24, d)

	)

578 
	#BOOST_PP_REPEAT_3_26
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_25
(m, dË
	`m
(4, 25, d)

	)

579 
	#BOOST_PP_REPEAT_3_27
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_26
(m, dË
	`m
(4, 26, d)

	)

580 
	#BOOST_PP_REPEAT_3_28
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_27
(m, dË
	`m
(4, 27, d)

	)

581 
	#BOOST_PP_REPEAT_3_29
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_28
(m, dË
	`m
(4, 28, d)

	)

582 
	#BOOST_PP_REPEAT_3_30
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_29
(m, dË
	`m
(4, 29, d)

	)

583 
	#BOOST_PP_REPEAT_3_31
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_30
(m, dË
	`m
(4, 30, d)

	)

584 
	#BOOST_PP_REPEAT_3_32
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_31
(m, dË
	`m
(4, 31, d)

	)

585 
	#BOOST_PP_REPEAT_3_33
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_32
(m, dË
	`m
(4, 32, d)

	)

586 
	#BOOST_PP_REPEAT_3_34
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_33
(m, dË
	`m
(4, 33, d)

	)

587 
	#BOOST_PP_REPEAT_3_35
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_34
(m, dË
	`m
(4, 34, d)

	)

588 
	#BOOST_PP_REPEAT_3_36
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_35
(m, dË
	`m
(4, 35, d)

	)

589 
	#BOOST_PP_REPEAT_3_37
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_36
(m, dË
	`m
(4, 36, d)

	)

590 
	#BOOST_PP_REPEAT_3_38
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_37
(m, dË
	`m
(4, 37, d)

	)

591 
	#BOOST_PP_REPEAT_3_39
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_38
(m, dË
	`m
(4, 38, d)

	)

592 
	#BOOST_PP_REPEAT_3_40
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_39
(m, dË
	`m
(4, 39, d)

	)

593 
	#BOOST_PP_REPEAT_3_41
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_40
(m, dË
	`m
(4, 40, d)

	)

594 
	#BOOST_PP_REPEAT_3_42
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_41
(m, dË
	`m
(4, 41, d)

	)

595 
	#BOOST_PP_REPEAT_3_43
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_42
(m, dË
	`m
(4, 42, d)

	)

596 
	#BOOST_PP_REPEAT_3_44
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_43
(m, dË
	`m
(4, 43, d)

	)

597 
	#BOOST_PP_REPEAT_3_45
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_44
(m, dË
	`m
(4, 44, d)

	)

598 
	#BOOST_PP_REPEAT_3_46
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_45
(m, dË
	`m
(4, 45, d)

	)

599 
	#BOOST_PP_REPEAT_3_47
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_46
(m, dË
	`m
(4, 46, d)

	)

600 
	#BOOST_PP_REPEAT_3_48
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_47
(m, dË
	`m
(4, 47, d)

	)

601 
	#BOOST_PP_REPEAT_3_49
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_48
(m, dË
	`m
(4, 48, d)

	)

602 
	#BOOST_PP_REPEAT_3_50
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_49
(m, dË
	`m
(4, 49, d)

	)

603 
	#BOOST_PP_REPEAT_3_51
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_50
(m, dË
	`m
(4, 50, d)

	)

604 
	#BOOST_PP_REPEAT_3_52
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_51
(m, dË
	`m
(4, 51, d)

	)

605 
	#BOOST_PP_REPEAT_3_53
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_52
(m, dË
	`m
(4, 52, d)

	)

606 
	#BOOST_PP_REPEAT_3_54
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_53
(m, dË
	`m
(4, 53, d)

	)

607 
	#BOOST_PP_REPEAT_3_55
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_54
(m, dË
	`m
(4, 54, d)

	)

608 
	#BOOST_PP_REPEAT_3_56
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_55
(m, dË
	`m
(4, 55, d)

	)

609 
	#BOOST_PP_REPEAT_3_57
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_56
(m, dË
	`m
(4, 56, d)

	)

610 
	#BOOST_PP_REPEAT_3_58
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_57
(m, dË
	`m
(4, 57, d)

	)

611 
	#BOOST_PP_REPEAT_3_59
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_58
(m, dË
	`m
(4, 58, d)

	)

612 
	#BOOST_PP_REPEAT_3_60
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_59
(m, dË
	`m
(4, 59, d)

	)

613 
	#BOOST_PP_REPEAT_3_61
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_60
(m, dË
	`m
(4, 60, d)

	)

614 
	#BOOST_PP_REPEAT_3_62
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_61
(m, dË
	`m
(4, 61, d)

	)

615 
	#BOOST_PP_REPEAT_3_63
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_62
(m, dË
	`m
(4, 62, d)

	)

616 
	#BOOST_PP_REPEAT_3_64
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_63
(m, dË
	`m
(4, 63, d)

	)

617 
	#BOOST_PP_REPEAT_3_65
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_64
(m, dË
	`m
(4, 64, d)

	)

618 
	#BOOST_PP_REPEAT_3_66
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_65
(m, dË
	`m
(4, 65, d)

	)

619 
	#BOOST_PP_REPEAT_3_67
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_66
(m, dË
	`m
(4, 66, d)

	)

620 
	#BOOST_PP_REPEAT_3_68
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_67
(m, dË
	`m
(4, 67, d)

	)

621 
	#BOOST_PP_REPEAT_3_69
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_68
(m, dË
	`m
(4, 68, d)

	)

622 
	#BOOST_PP_REPEAT_3_70
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_69
(m, dË
	`m
(4, 69, d)

	)

623 
	#BOOST_PP_REPEAT_3_71
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_70
(m, dË
	`m
(4, 70, d)

	)

624 
	#BOOST_PP_REPEAT_3_72
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_71
(m, dË
	`m
(4, 71, d)

	)

625 
	#BOOST_PP_REPEAT_3_73
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_72
(m, dË
	`m
(4, 72, d)

	)

626 
	#BOOST_PP_REPEAT_3_74
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_73
(m, dË
	`m
(4, 73, d)

	)

627 
	#BOOST_PP_REPEAT_3_75
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_74
(m, dË
	`m
(4, 74, d)

	)

628 
	#BOOST_PP_REPEAT_3_76
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_75
(m, dË
	`m
(4, 75, d)

	)

629 
	#BOOST_PP_REPEAT_3_77
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_76
(m, dË
	`m
(4, 76, d)

	)

630 
	#BOOST_PP_REPEAT_3_78
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_77
(m, dË
	`m
(4, 77, d)

	)

631 
	#BOOST_PP_REPEAT_3_79
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_78
(m, dË
	`m
(4, 78, d)

	)

632 
	#BOOST_PP_REPEAT_3_80
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_79
(m, dË
	`m
(4, 79, d)

	)

633 
	#BOOST_PP_REPEAT_3_81
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_80
(m, dË
	`m
(4, 80, d)

	)

634 
	#BOOST_PP_REPEAT_3_82
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_81
(m, dË
	`m
(4, 81, d)

	)

635 
	#BOOST_PP_REPEAT_3_83
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_82
(m, dË
	`m
(4, 82, d)

	)

636 
	#BOOST_PP_REPEAT_3_84
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_83
(m, dË
	`m
(4, 83, d)

	)

637 
	#BOOST_PP_REPEAT_3_85
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_84
(m, dË
	`m
(4, 84, d)

	)

638 
	#BOOST_PP_REPEAT_3_86
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_85
(m, dË
	`m
(4, 85, d)

	)

639 
	#BOOST_PP_REPEAT_3_87
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_86
(m, dË
	`m
(4, 86, d)

	)

640 
	#BOOST_PP_REPEAT_3_88
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_87
(m, dË
	`m
(4, 87, d)

	)

641 
	#BOOST_PP_REPEAT_3_89
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_88
(m, dË
	`m
(4, 88, d)

	)

642 
	#BOOST_PP_REPEAT_3_90
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_89
(m, dË
	`m
(4, 89, d)

	)

643 
	#BOOST_PP_REPEAT_3_91
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_90
(m, dË
	`m
(4, 90, d)

	)

644 
	#BOOST_PP_REPEAT_3_92
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_91
(m, dË
	`m
(4, 91, d)

	)

645 
	#BOOST_PP_REPEAT_3_93
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_92
(m, dË
	`m
(4, 92, d)

	)

646 
	#BOOST_PP_REPEAT_3_94
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_93
(m, dË
	`m
(4, 93, d)

	)

647 
	#BOOST_PP_REPEAT_3_95
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_94
(m, dË
	`m
(4, 94, d)

	)

648 
	#BOOST_PP_REPEAT_3_96
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_95
(m, dË
	`m
(4, 95, d)

	)

649 
	#BOOST_PP_REPEAT_3_97
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_96
(m, dË
	`m
(4, 96, d)

	)

650 
	#BOOST_PP_REPEAT_3_98
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_97
(m, dË
	`m
(4, 97, d)

	)

651 
	#BOOST_PP_REPEAT_3_99
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_98
(m, dË
	`m
(4, 98, d)

	)

652 
	#BOOST_PP_REPEAT_3_100
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_99
(m, dË
	`m
(4, 99, d)

	)

653 
	#BOOST_PP_REPEAT_3_101
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_100
(m, dË
	`m
(4, 100, d)

	)

654 
	#BOOST_PP_REPEAT_3_102
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_101
(m, dË
	`m
(4, 101, d)

	)

655 
	#BOOST_PP_REPEAT_3_103
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_102
(m, dË
	`m
(4, 102, d)

	)

656 
	#BOOST_PP_REPEAT_3_104
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_103
(m, dË
	`m
(4, 103, d)

	)

657 
	#BOOST_PP_REPEAT_3_105
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_104
(m, dË
	`m
(4, 104, d)

	)

658 
	#BOOST_PP_REPEAT_3_106
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_105
(m, dË
	`m
(4, 105, d)

	)

659 
	#BOOST_PP_REPEAT_3_107
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_106
(m, dË
	`m
(4, 106, d)

	)

660 
	#BOOST_PP_REPEAT_3_108
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_107
(m, dË
	`m
(4, 107, d)

	)

661 
	#BOOST_PP_REPEAT_3_109
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_108
(m, dË
	`m
(4, 108, d)

	)

662 
	#BOOST_PP_REPEAT_3_110
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_109
(m, dË
	`m
(4, 109, d)

	)

663 
	#BOOST_PP_REPEAT_3_111
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_110
(m, dË
	`m
(4, 110, d)

	)

664 
	#BOOST_PP_REPEAT_3_112
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_111
(m, dË
	`m
(4, 111, d)

	)

665 
	#BOOST_PP_REPEAT_3_113
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_112
(m, dË
	`m
(4, 112, d)

	)

666 
	#BOOST_PP_REPEAT_3_114
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_113
(m, dË
	`m
(4, 113, d)

	)

667 
	#BOOST_PP_REPEAT_3_115
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_114
(m, dË
	`m
(4, 114, d)

	)

668 
	#BOOST_PP_REPEAT_3_116
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_115
(m, dË
	`m
(4, 115, d)

	)

669 
	#BOOST_PP_REPEAT_3_117
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_116
(m, dË
	`m
(4, 116, d)

	)

670 
	#BOOST_PP_REPEAT_3_118
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_117
(m, dË
	`m
(4, 117, d)

	)

671 
	#BOOST_PP_REPEAT_3_119
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_118
(m, dË
	`m
(4, 118, d)

	)

672 
	#BOOST_PP_REPEAT_3_120
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_119
(m, dË
	`m
(4, 119, d)

	)

673 
	#BOOST_PP_REPEAT_3_121
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_120
(m, dË
	`m
(4, 120, d)

	)

674 
	#BOOST_PP_REPEAT_3_122
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_121
(m, dË
	`m
(4, 121, d)

	)

675 
	#BOOST_PP_REPEAT_3_123
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_122
(m, dË
	`m
(4, 122, d)

	)

676 
	#BOOST_PP_REPEAT_3_124
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_123
(m, dË
	`m
(4, 123, d)

	)

677 
	#BOOST_PP_REPEAT_3_125
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_124
(m, dË
	`m
(4, 124, d)

	)

678 
	#BOOST_PP_REPEAT_3_126
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_125
(m, dË
	`m
(4, 125, d)

	)

679 
	#BOOST_PP_REPEAT_3_127
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_126
(m, dË
	`m
(4, 126, d)

	)

680 
	#BOOST_PP_REPEAT_3_128
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_127
(m, dË
	`m
(4, 127, d)

	)

681 
	#BOOST_PP_REPEAT_3_129
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_128
(m, dË
	`m
(4, 128, d)

	)

682 
	#BOOST_PP_REPEAT_3_130
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_129
(m, dË
	`m
(4, 129, d)

	)

683 
	#BOOST_PP_REPEAT_3_131
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_130
(m, dË
	`m
(4, 130, d)

	)

684 
	#BOOST_PP_REPEAT_3_132
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_131
(m, dË
	`m
(4, 131, d)

	)

685 
	#BOOST_PP_REPEAT_3_133
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_132
(m, dË
	`m
(4, 132, d)

	)

686 
	#BOOST_PP_REPEAT_3_134
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_133
(m, dË
	`m
(4, 133, d)

	)

687 
	#BOOST_PP_REPEAT_3_135
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_134
(m, dË
	`m
(4, 134, d)

	)

688 
	#BOOST_PP_REPEAT_3_136
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_135
(m, dË
	`m
(4, 135, d)

	)

689 
	#BOOST_PP_REPEAT_3_137
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_136
(m, dË
	`m
(4, 136, d)

	)

690 
	#BOOST_PP_REPEAT_3_138
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_137
(m, dË
	`m
(4, 137, d)

	)

691 
	#BOOST_PP_REPEAT_3_139
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_138
(m, dË
	`m
(4, 138, d)

	)

692 
	#BOOST_PP_REPEAT_3_140
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_139
(m, dË
	`m
(4, 139, d)

	)

693 
	#BOOST_PP_REPEAT_3_141
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_140
(m, dË
	`m
(4, 140, d)

	)

694 
	#BOOST_PP_REPEAT_3_142
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_141
(m, dË
	`m
(4, 141, d)

	)

695 
	#BOOST_PP_REPEAT_3_143
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_142
(m, dË
	`m
(4, 142, d)

	)

696 
	#BOOST_PP_REPEAT_3_144
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_143
(m, dË
	`m
(4, 143, d)

	)

697 
	#BOOST_PP_REPEAT_3_145
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_144
(m, dË
	`m
(4, 144, d)

	)

698 
	#BOOST_PP_REPEAT_3_146
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_145
(m, dË
	`m
(4, 145, d)

	)

699 
	#BOOST_PP_REPEAT_3_147
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_146
(m, dË
	`m
(4, 146, d)

	)

700 
	#BOOST_PP_REPEAT_3_148
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_147
(m, dË
	`m
(4, 147, d)

	)

701 
	#BOOST_PP_REPEAT_3_149
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_148
(m, dË
	`m
(4, 148, d)

	)

702 
	#BOOST_PP_REPEAT_3_150
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_149
(m, dË
	`m
(4, 149, d)

	)

703 
	#BOOST_PP_REPEAT_3_151
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_150
(m, dË
	`m
(4, 150, d)

	)

704 
	#BOOST_PP_REPEAT_3_152
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_151
(m, dË
	`m
(4, 151, d)

	)

705 
	#BOOST_PP_REPEAT_3_153
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_152
(m, dË
	`m
(4, 152, d)

	)

706 
	#BOOST_PP_REPEAT_3_154
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_153
(m, dË
	`m
(4, 153, d)

	)

707 
	#BOOST_PP_REPEAT_3_155
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_154
(m, dË
	`m
(4, 154, d)

	)

708 
	#BOOST_PP_REPEAT_3_156
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_155
(m, dË
	`m
(4, 155, d)

	)

709 
	#BOOST_PP_REPEAT_3_157
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_156
(m, dË
	`m
(4, 156, d)

	)

710 
	#BOOST_PP_REPEAT_3_158
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_157
(m, dË
	`m
(4, 157, d)

	)

711 
	#BOOST_PP_REPEAT_3_159
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_158
(m, dË
	`m
(4, 158, d)

	)

712 
	#BOOST_PP_REPEAT_3_160
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_159
(m, dË
	`m
(4, 159, d)

	)

713 
	#BOOST_PP_REPEAT_3_161
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_160
(m, dË
	`m
(4, 160, d)

	)

714 
	#BOOST_PP_REPEAT_3_162
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_161
(m, dË
	`m
(4, 161, d)

	)

715 
	#BOOST_PP_REPEAT_3_163
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_162
(m, dË
	`m
(4, 162, d)

	)

716 
	#BOOST_PP_REPEAT_3_164
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_163
(m, dË
	`m
(4, 163, d)

	)

717 
	#BOOST_PP_REPEAT_3_165
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_164
(m, dË
	`m
(4, 164, d)

	)

718 
	#BOOST_PP_REPEAT_3_166
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_165
(m, dË
	`m
(4, 165, d)

	)

719 
	#BOOST_PP_REPEAT_3_167
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_166
(m, dË
	`m
(4, 166, d)

	)

720 
	#BOOST_PP_REPEAT_3_168
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_167
(m, dË
	`m
(4, 167, d)

	)

721 
	#BOOST_PP_REPEAT_3_169
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_168
(m, dË
	`m
(4, 168, d)

	)

722 
	#BOOST_PP_REPEAT_3_170
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_169
(m, dË
	`m
(4, 169, d)

	)

723 
	#BOOST_PP_REPEAT_3_171
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_170
(m, dË
	`m
(4, 170, d)

	)

724 
	#BOOST_PP_REPEAT_3_172
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_171
(m, dË
	`m
(4, 171, d)

	)

725 
	#BOOST_PP_REPEAT_3_173
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_172
(m, dË
	`m
(4, 172, d)

	)

726 
	#BOOST_PP_REPEAT_3_174
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_173
(m, dË
	`m
(4, 173, d)

	)

727 
	#BOOST_PP_REPEAT_3_175
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_174
(m, dË
	`m
(4, 174, d)

	)

728 
	#BOOST_PP_REPEAT_3_176
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_175
(m, dË
	`m
(4, 175, d)

	)

729 
	#BOOST_PP_REPEAT_3_177
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_176
(m, dË
	`m
(4, 176, d)

	)

730 
	#BOOST_PP_REPEAT_3_178
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_177
(m, dË
	`m
(4, 177, d)

	)

731 
	#BOOST_PP_REPEAT_3_179
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_178
(m, dË
	`m
(4, 178, d)

	)

732 
	#BOOST_PP_REPEAT_3_180
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_179
(m, dË
	`m
(4, 179, d)

	)

733 
	#BOOST_PP_REPEAT_3_181
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_180
(m, dË
	`m
(4, 180, d)

	)

734 
	#BOOST_PP_REPEAT_3_182
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_181
(m, dË
	`m
(4, 181, d)

	)

735 
	#BOOST_PP_REPEAT_3_183
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_182
(m, dË
	`m
(4, 182, d)

	)

736 
	#BOOST_PP_REPEAT_3_184
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_183
(m, dË
	`m
(4, 183, d)

	)

737 
	#BOOST_PP_REPEAT_3_185
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_184
(m, dË
	`m
(4, 184, d)

	)

738 
	#BOOST_PP_REPEAT_3_186
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_185
(m, dË
	`m
(4, 185, d)

	)

739 
	#BOOST_PP_REPEAT_3_187
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_186
(m, dË
	`m
(4, 186, d)

	)

740 
	#BOOST_PP_REPEAT_3_188
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_187
(m, dË
	`m
(4, 187, d)

	)

741 
	#BOOST_PP_REPEAT_3_189
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_188
(m, dË
	`m
(4, 188, d)

	)

742 
	#BOOST_PP_REPEAT_3_190
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_189
(m, dË
	`m
(4, 189, d)

	)

743 
	#BOOST_PP_REPEAT_3_191
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_190
(m, dË
	`m
(4, 190, d)

	)

744 
	#BOOST_PP_REPEAT_3_192
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_191
(m, dË
	`m
(4, 191, d)

	)

745 
	#BOOST_PP_REPEAT_3_193
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_192
(m, dË
	`m
(4, 192, d)

	)

746 
	#BOOST_PP_REPEAT_3_194
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_193
(m, dË
	`m
(4, 193, d)

	)

747 
	#BOOST_PP_REPEAT_3_195
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_194
(m, dË
	`m
(4, 194, d)

	)

748 
	#BOOST_PP_REPEAT_3_196
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_195
(m, dË
	`m
(4, 195, d)

	)

749 
	#BOOST_PP_REPEAT_3_197
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_196
(m, dË
	`m
(4, 196, d)

	)

750 
	#BOOST_PP_REPEAT_3_198
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_197
(m, dË
	`m
(4, 197, d)

	)

751 
	#BOOST_PP_REPEAT_3_199
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_198
(m, dË
	`m
(4, 198, d)

	)

752 
	#BOOST_PP_REPEAT_3_200
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_199
(m, dË
	`m
(4, 199, d)

	)

753 
	#BOOST_PP_REPEAT_3_201
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_200
(m, dË
	`m
(4, 200, d)

	)

754 
	#BOOST_PP_REPEAT_3_202
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_201
(m, dË
	`m
(4, 201, d)

	)

755 
	#BOOST_PP_REPEAT_3_203
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_202
(m, dË
	`m
(4, 202, d)

	)

756 
	#BOOST_PP_REPEAT_3_204
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_203
(m, dË
	`m
(4, 203, d)

	)

757 
	#BOOST_PP_REPEAT_3_205
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_204
(m, dË
	`m
(4, 204, d)

	)

758 
	#BOOST_PP_REPEAT_3_206
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_205
(m, dË
	`m
(4, 205, d)

	)

759 
	#BOOST_PP_REPEAT_3_207
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_206
(m, dË
	`m
(4, 206, d)

	)

760 
	#BOOST_PP_REPEAT_3_208
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_207
(m, dË
	`m
(4, 207, d)

	)

761 
	#BOOST_PP_REPEAT_3_209
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_208
(m, dË
	`m
(4, 208, d)

	)

762 
	#BOOST_PP_REPEAT_3_210
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_209
(m, dË
	`m
(4, 209, d)

	)

763 
	#BOOST_PP_REPEAT_3_211
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_210
(m, dË
	`m
(4, 210, d)

	)

764 
	#BOOST_PP_REPEAT_3_212
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_211
(m, dË
	`m
(4, 211, d)

	)

765 
	#BOOST_PP_REPEAT_3_213
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_212
(m, dË
	`m
(4, 212, d)

	)

766 
	#BOOST_PP_REPEAT_3_214
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_213
(m, dË
	`m
(4, 213, d)

	)

767 
	#BOOST_PP_REPEAT_3_215
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_214
(m, dË
	`m
(4, 214, d)

	)

768 
	#BOOST_PP_REPEAT_3_216
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_215
(m, dË
	`m
(4, 215, d)

	)

769 
	#BOOST_PP_REPEAT_3_217
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_216
(m, dË
	`m
(4, 216, d)

	)

770 
	#BOOST_PP_REPEAT_3_218
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_217
(m, dË
	`m
(4, 217, d)

	)

771 
	#BOOST_PP_REPEAT_3_219
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_218
(m, dË
	`m
(4, 218, d)

	)

772 
	#BOOST_PP_REPEAT_3_220
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_219
(m, dË
	`m
(4, 219, d)

	)

773 
	#BOOST_PP_REPEAT_3_221
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_220
(m, dË
	`m
(4, 220, d)

	)

774 
	#BOOST_PP_REPEAT_3_222
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_221
(m, dË
	`m
(4, 221, d)

	)

775 
	#BOOST_PP_REPEAT_3_223
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_222
(m, dË
	`m
(4, 222, d)

	)

776 
	#BOOST_PP_REPEAT_3_224
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_223
(m, dË
	`m
(4, 223, d)

	)

777 
	#BOOST_PP_REPEAT_3_225
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_224
(m, dË
	`m
(4, 224, d)

	)

778 
	#BOOST_PP_REPEAT_3_226
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_225
(m, dË
	`m
(4, 225, d)

	)

779 
	#BOOST_PP_REPEAT_3_227
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_226
(m, dË
	`m
(4, 226, d)

	)

780 
	#BOOST_PP_REPEAT_3_228
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_227
(m, dË
	`m
(4, 227, d)

	)

781 
	#BOOST_PP_REPEAT_3_229
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_228
(m, dË
	`m
(4, 228, d)

	)

782 
	#BOOST_PP_REPEAT_3_230
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_229
(m, dË
	`m
(4, 229, d)

	)

783 
	#BOOST_PP_REPEAT_3_231
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_230
(m, dË
	`m
(4, 230, d)

	)

784 
	#BOOST_PP_REPEAT_3_232
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_231
(m, dË
	`m
(4, 231, d)

	)

785 
	#BOOST_PP_REPEAT_3_233
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_232
(m, dË
	`m
(4, 232, d)

	)

786 
	#BOOST_PP_REPEAT_3_234
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_233
(m, dË
	`m
(4, 233, d)

	)

787 
	#BOOST_PP_REPEAT_3_235
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_234
(m, dË
	`m
(4, 234, d)

	)

788 
	#BOOST_PP_REPEAT_3_236
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_235
(m, dË
	`m
(4, 235, d)

	)

789 
	#BOOST_PP_REPEAT_3_237
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_236
(m, dË
	`m
(4, 236, d)

	)

790 
	#BOOST_PP_REPEAT_3_238
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_237
(m, dË
	`m
(4, 237, d)

	)

791 
	#BOOST_PP_REPEAT_3_239
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_238
(m, dË
	`m
(4, 238, d)

	)

792 
	#BOOST_PP_REPEAT_3_240
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_239
(m, dË
	`m
(4, 239, d)

	)

793 
	#BOOST_PP_REPEAT_3_241
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_240
(m, dË
	`m
(4, 240, d)

	)

794 
	#BOOST_PP_REPEAT_3_242
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_241
(m, dË
	`m
(4, 241, d)

	)

795 
	#BOOST_PP_REPEAT_3_243
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_242
(m, dË
	`m
(4, 242, d)

	)

796 
	#BOOST_PP_REPEAT_3_244
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_243
(m, dË
	`m
(4, 243, d)

	)

797 
	#BOOST_PP_REPEAT_3_245
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_244
(m, dË
	`m
(4, 244, d)

	)

798 
	#BOOST_PP_REPEAT_3_246
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_245
(m, dË
	`m
(4, 245, d)

	)

799 
	#BOOST_PP_REPEAT_3_247
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_246
(m, dË
	`m
(4, 246, d)

	)

800 
	#BOOST_PP_REPEAT_3_248
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_247
(m, dË
	`m
(4, 247, d)

	)

801 
	#BOOST_PP_REPEAT_3_249
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_248
(m, dË
	`m
(4, 248, d)

	)

802 
	#BOOST_PP_REPEAT_3_250
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_249
(m, dË
	`m
(4, 249, d)

	)

803 
	#BOOST_PP_REPEAT_3_251
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_250
(m, dË
	`m
(4, 250, d)

	)

804 
	#BOOST_PP_REPEAT_3_252
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_251
(m, dË
	`m
(4, 251, d)

	)

805 
	#BOOST_PP_REPEAT_3_253
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_252
(m, dË
	`m
(4, 252, d)

	)

806 
	#BOOST_PP_REPEAT_3_254
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_253
(m, dË
	`m
(4, 253, d)

	)

807 
	#BOOST_PP_REPEAT_3_255
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_254
(m, dË
	`m
(4, 254, d)

	)

808 
	#BOOST_PP_REPEAT_3_256
(
m
, 
d
Ë
	`BOOST_PP_REPEAT_3_255
(m, dË
	`m
(4, 255, d)

	)

	@/usr/include/boost/preprocessor/tuple/eat.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_TUPLE_EAT_HPP


12 
	#BOOST_PREPROCESSOR_TUPLE_EAT_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_TUPLE_EAT
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_TUPLE_EAT
(
size
Ë
	`BOOST_PP_TUPLE_EAT_I
(size)

	)

18 
	#BOOST_PP_TUPLE_EAT
(
size
Ë
	`BOOST_PP_TUPLE_EAT_OO
((size))

	)

19 
	#BOOST_PP_TUPLE_EAT_OO
(
∑r
Ë
BOOST_PP_TUPLE_EAT_I
 ## 
	)
par

21 
#deföê
	#BOOST_PP_TUPLE_EAT_I
(
size
Ë
BOOST_PP_TUPLE_EAT_
 ## 
	)
size

22 
#deföê
	#BOOST_PP_TUPLE_EAT_0
()

	)

23 
	#BOOST_PP_TUPLE_EAT_1
(
a
)

	)

24 
	#BOOST_PP_TUPLE_EAT_2
(
a
, 
b
)

	)

25 
	#BOOST_PP_TUPLE_EAT_3
(
a
, 
b
, 
c
)

	)

26 
	#BOOST_PP_TUPLE_EAT_4
(
a
, 
b
, 
c
, 
d
)

	)

27 
	#BOOST_PP_TUPLE_EAT_5
(
a
, 
b
, 
c
, 
d
, 
e
)

	)

28 
	#BOOST_PP_TUPLE_EAT_6
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
)

	)

29 
	#BOOST_PP_TUPLE_EAT_7
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
)

	)

30 
	#BOOST_PP_TUPLE_EAT_8
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
)

	)

31 
	#BOOST_PP_TUPLE_EAT_9
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
)

	)

32 
	#BOOST_PP_TUPLE_EAT_10
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
)

	)

33 
	#BOOST_PP_TUPLE_EAT_11
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
)

	)

34 
	#BOOST_PP_TUPLE_EAT_12
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
)

	)

35 
	#BOOST_PP_TUPLE_EAT_13
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
)

	)

36 
	#BOOST_PP_TUPLE_EAT_14
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
)

	)

37 
	#BOOST_PP_TUPLE_EAT_15
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
)

	)

38 
	#BOOST_PP_TUPLE_EAT_16
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
)

	)

39 
	#BOOST_PP_TUPLE_EAT_17
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
)

	)

40 
	#BOOST_PP_TUPLE_EAT_18
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
)

	)

41 
	#BOOST_PP_TUPLE_EAT_19
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
)

	)

42 
	#BOOST_PP_TUPLE_EAT_20
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
)

	)

43 
	#BOOST_PP_TUPLE_EAT_21
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
)

	)

44 
	#BOOST_PP_TUPLE_EAT_22
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
)

	)

45 
	#BOOST_PP_TUPLE_EAT_23
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
)

	)

46 
	#BOOST_PP_TUPLE_EAT_24
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
)

	)

47 
	#BOOST_PP_TUPLE_EAT_25
(
a
, 
b
, 
c
, 
d
, 
e
, 
f
, 
g
, 
h
, 
i
, 
j
, 
k
, 
l
, 
m
, 
n
, 
o
, 
p
, 
q
, 
r
, 
s
, 
t
, 
u
, 
v
, 
w
, 
x
, 
y
)

	)

	@/usr/include/boost/mpl/aux_/config/intel.hpp

2 #i‚de‡
BOOST_MPL_AUX_CONFIG_INTEL_HPP_INCLUDED


3 
	#BOOST_MPL_AUX_CONFIG_INTEL_HPP_INCLUDED


	)

19 
	~<boo°/c⁄fig.hµ
>

	@/usr/include/boost/preprocessor/control/expr_iif.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_CONTROL_EXPR_IIF_HPP


11 
	#BOOST_PREPROCESSOR_CONTROL_EXPR_IIF_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

13 #
#/* 
BOOST_PP_EXPR_IIF
 */

14 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

15 
	#BOOST_PP_EXPR_IIF
(
bô
, 
ex¥
Ë
	`BOOST_PP_EXPR_IIF_I
(bô,Éx¥)

	)

17 
	#BOOST_PP_EXPR_IIF
(
bô
, 
ex¥
Ë
	`BOOST_PP_EXPR_IIF_OO
((bô,Éx¥))

	)

18 
	#BOOST_PP_EXPR_IIF_OO
(
∑r
Ë
BOOST_PP_EXPR_IIF_I
 ## 
	)
par

20 
#deföê
	#BOOST_PP_EXPR_IIF_I
(
bô
, 
ex¥
Ë
BOOST_PP_EXPR_IIF_
 ## 
	`bô
”x¥)

	)

21 
#deföê
	#BOOST_PP_EXPR_IIF_0
(
ex¥
)

	)

22 
	#BOOST_PP_EXPR_IIF_1
(
ex¥
Ë
	)
expr

	@/usr/include/boost/preprocessor/control/if.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_CONTROL_IF_HPP


12 
	#BOOST_PREPROCESSOR_CONTROL_IF_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/iif.hµ
>

15 
	~<boo°/¥ïro˚ss‹/logiˇl/boﬁ.hµ
>

16 #
#/* 
BOOST_PP_IF
 */

17 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_EDG
()

18 
	#BOOST_PP_IF
(
c⁄d
, 
t
, 
f
Ë
	`BOOST_PP_IIF
(
	`BOOST_PP_BOOL
(c⁄d),Å, f)

	)

20 
	#BOOST_PP_IF
(
c⁄d
, 
t
, 
f
Ë
	`BOOST_PP_IF_I
(c⁄d,Å, f)

	)

21 
	#BOOST_PP_IF_I
(
c⁄d
, 
t
, 
f
Ë
	`BOOST_PP_IIF
(
	`BOOST_PP_BOOL
(c⁄d),Å, f)

	)

	@/usr/include/boost/preprocessor/control/iif.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_CONTROL_IIF_HPP


11 
	#BOOST_PREPROCESSOR_CONTROL_IIF_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

13 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

14 
	#BOOST_PP_IIF
(
bô
, 
t
, 
f
Ë
	`BOOST_PP_IIF_I
(bô,Å, f)

	)

16 
	#BOOST_PP_IIF
(
bô
, 
t
, 
f
Ë
	`BOOST_PP_IIF_OO
((bô,Å, f))

	)

17 
	#BOOST_PP_IIF_OO
(
∑r
Ë
BOOST_PP_IIF_I
 ## 
	)
par

19 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

20 
	#BOOST_PP_IIF_I
(
bô
, 
t
, 
f
Ë
BOOST_PP_IIF_
 ## 
	`bô
—, f)

	)

22 
	#BOOST_PP_IIF_I
(
bô
, 
t
, 
f
Ë
	`BOOST_PP_IIF_II
(
BOOST_PP_IIF_
 ## 
	`bô
—, f))

	)

23 
	#BOOST_PP_IIF_II
(
id
Ë
	)
id

25 
#deföê
	#BOOST_PP_IIF_0
(
t
, 
f
Ë
	)
f

26 
	#BOOST_PP_IIF_1
(
t
, 
f
Ë
	)
t

	@/usr/include/boost/preprocessor/detail/check.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_DETAIL_CHECK_HPP


11 
	#BOOST_PREPROCESSOR_DETAIL_CHECK_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/ˇt.hµ
>

13 
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_CHECK
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_CHECK
(
x
, 
ty≥
Ë
	`BOOST_PP_CHECK_D
(x,Åy≥)

	)

18 
	#BOOST_PP_CHECK
(
x
, 
ty≥
Ë
	`BOOST_PP_CHECK_OO
((x,Åy≥))

	)

19 
	#BOOST_PP_CHECK_OO
(
∑r
Ë
BOOST_PP_CHECK_D
 ## 
	)
par

21 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
(Ë&& ~BOOST_PP_CONFIG_FLAGS(Ë& 
BOOST_PP_CONFIG_DMC
()

22 
	#BOOST_PP_CHECK_D
(
x
, 
ty≥
Ë
	`BOOST_PP_CHECK_1
(
	`BOOST_PP_CAT
(
BOOST_PP_CHECK_RESULT_
,Åy≥ x))

	)

23 
	#BOOST_PP_CHECK_1
(
chk
Ë
	`BOOST_PP_CHECK_2
(chk)

	)

24 
	#BOOST_PP_CHECK_2
(
ªs
, 
_
Ë
	)
res

25 #ñi‡
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MSVC
()

26 
	#BOOST_PP_CHECK_D
(
x
, 
ty≥
Ë
	`BOOST_PP_CHECK_1
—y≥ x)

	)

27 
	#BOOST_PP_CHECK_1
(
chk
Ë
	`BOOST_PP_CHECK_2
(chk)

	)

28 
	#BOOST_PP_CHECK_2
(
chk
Ë
	`BOOST_PP_CHECK_3
((
BOOST_PP_CHECK_RESULT_
 ## chk))

	)

29 
	#BOOST_PP_CHECK_3
(
im
Ë
	`BOOST_PP_CHECK_5
(
BOOST_PP_CHECK_4
 im)

	)

30 
	#BOOST_PP_CHECK_4
(
ªs
, 
_
Ë
	)
res

31 
	#BOOST_PP_CHECK_5
(
ªs
Ë
	)
res

33 
	#BOOST_PP_CHECK_D
(
x
, 
ty≥
Ë
	`BOOST_PP_CHECK_OO
(—y≥ x))

	)

34 
	#BOOST_PP_CHECK_OO
(
∑r
Ë
BOOST_PP_CHECK_0
 ## 
	)
par

35 
	#BOOST_PP_CHECK_0
(
chk
Ë
	`BOOST_PP_CHECK_1
(
	`BOOST_PP_CAT
(
BOOST_PP_CHECK_RESULT_
, chk))

	)

36 
	#BOOST_PP_CHECK_1
(
chk
Ë
	`BOOST_PP_CHECK_2
(chk)

	)

37 
	#BOOST_PP_CHECK_2
(
ªs
, 
_
Ë
	)
res

39 
#deföê
	#BOOST_PP_CHECK_RESULT_1
 1, 
BOOST_PP_NIL


	)

	@/usr/include/boost/preprocessor/detail/dmc/auto_rec.hpp

3 #* (
C
Ë
C›yright
 
Paul
 
Mís⁄ides
 2002.

4 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


5 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


6 #* 
hâp
:

9 #
#/* 
Sì
 
hâp
:

10 #
#i‚de‡
BOOST_PREPROCESSOR_DETAIL_AUTO_REC_HPP


11 
	#BOOST_PREPROCESSOR_DETAIL_AUTO_REC_HPP


	)

12 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄åﬁ/iif.hµ
>

13 #
#/* 
BOOST_PP_AUTO_REC
 */

14 
#deföê
	#BOOST_PP_AUTO_REC
(
¥ed
, 
n
Ë
BOOST_PP_NODE_ENTRY_
 ## 
	`n
’ªd)

	)

15 
#deföê
	#BOOST_PP_NODE_ENTRY_256
(
p
Ë
	`BOOST_PP_NODE_128
’)’)’)’)’)’)’)’)

	)

16 
	#BOOST_PP_NODE_ENTRY_128
(
p
Ë
	`BOOST_PP_NODE_64
’)’)’)’)’)’)’)

	)

17 
	#BOOST_PP_NODE_ENTRY_64
(
p
Ë
	`BOOST_PP_NODE_32
’)’)’)’)’)’)

	)

18 
	#BOOST_PP_NODE_ENTRY_32
(
p
Ë
	`BOOST_PP_NODE_16
’)’)’)’)’)

	)

19 
	#BOOST_PP_NODE_ENTRY_16
(
p
Ë
	`BOOST_PP_NODE_8
’)’)’)’)

	)

20 
	#BOOST_PP_NODE_ENTRY_8
(
p
Ë
	`BOOST_PP_NODE_4
’)’)’)

	)

21 
	#BOOST_PP_NODE_ENTRY_4
(
p
Ë
	`BOOST_PP_NODE_2
’)’)

	)

22 
	#BOOST_PP_NODE_ENTRY_2
(
p
Ë
	`BOOST_PP_NODE_1
’)

	)

23 
#deföê
	#BOOST_PP_NODE_128
(
p
Ë
	`BOOST_PP_IIF
’##(128), 
BOOST_PP_NODE_64
, 
BOOST_PP_NODE_192
)

	)

24 
	#BOOST_PP_NODE_64
(
p
Ë
	`BOOST_PP_IIF
’##(64), 
BOOST_PP_NODE_32
, 
BOOST_PP_NODE_96
)

	)

25 
	#BOOST_PP_NODE_32
(
p
Ë
	`BOOST_PP_IIF
’##(32), 
BOOST_PP_NODE_16
, 
BOOST_PP_NODE_48
)

	)

26 
	#BOOST_PP_NODE_16
(
p
Ë
	`BOOST_PP_IIF
’##(16), 
BOOST_PP_NODE_8
, 
BOOST_PP_NODE_24
)

	)

27 
	#BOOST_PP_NODE_8
(
p
Ë
	`BOOST_PP_IIF
’##(8), 
BOOST_PP_NODE_4
, 
BOOST_PP_NODE_12
)

	)

28 
	#BOOST_PP_NODE_4
(
p
Ë
	`BOOST_PP_IIF
’##(4), 
BOOST_PP_NODE_2
, 
BOOST_PP_NODE_6
)

	)

29 
	#BOOST_PP_NODE_2
(
p
Ë
	`BOOST_PP_IIF
’##(2), 
BOOST_PP_NODE_1
, 
BOOST_PP_NODE_3
)

	)

30 
	#BOOST_PP_NODE_1
(
p
Ë
	`BOOST_PP_IIF
’##(1), 1, 2)

	)

31 
	#BOOST_PP_NODE_3
(
p
Ë
	`BOOST_PP_IIF
’##(3), 3, 4)

	)

32 
	#BOOST_PP_NODE_6
(
p
Ë
	`BOOST_PP_IIF
’##(6), 
BOOST_PP_NODE_5
, 
BOOST_PP_NODE_7
)

	)

33 
	#BOOST_PP_NODE_5
(
p
Ë
	`BOOST_PP_IIF
’##(5), 5, 6)

	)

34 
	#BOOST_PP_NODE_7
(
p
Ë
	`BOOST_PP_IIF
’##(7), 7, 8)

	)

35 
	#BOOST_PP_NODE_12
(
p
Ë
	`BOOST_PP_IIF
’##(12), 
BOOST_PP_NODE_10
, 
BOOST_PP_NODE_14
)

	)

36 
	#BOOST_PP_NODE_10
(
p
Ë
	`BOOST_PP_IIF
’##(10), 
BOOST_PP_NODE_9
, 
BOOST_PP_NODE_11
)

	)

37 
	#BOOST_PP_NODE_9
(
p
Ë
	`BOOST_PP_IIF
’##(9), 9, 10)

	)

38 
	#BOOST_PP_NODE_11
(
p
Ë
	`BOOST_PP_IIF
’##(11), 11, 12)

	)

39 
	#BOOST_PP_NODE_14
(
p
Ë
	`BOOST_PP_IIF
’##(14), 
BOOST_PP_NODE_13
, 
BOOST_PP_NODE_15
)

	)

40 
	#BOOST_PP_NODE_13
(
p
Ë
	`BOOST_PP_IIF
’##(13), 13, 14)

	)

41 
	#BOOST_PP_NODE_15
(
p
Ë
	`BOOST_PP_IIF
’##(15), 15, 16)

	)

42 
	#BOOST_PP_NODE_24
(
p
Ë
	`BOOST_PP_IIF
’##(24), 
BOOST_PP_NODE_20
, 
BOOST_PP_NODE_28
)

	)

43 
	#BOOST_PP_NODE_20
(
p
Ë
	`BOOST_PP_IIF
’##(20), 
BOOST_PP_NODE_18
, 
BOOST_PP_NODE_22
)

	)

44 
	#BOOST_PP_NODE_18
(
p
Ë
	`BOOST_PP_IIF
’##(18), 
BOOST_PP_NODE_17
, 
BOOST_PP_NODE_19
)

	)

45 
	#BOOST_PP_NODE_17
(
p
Ë
	`BOOST_PP_IIF
’##(17), 17, 18)

	)

46 
	#BOOST_PP_NODE_19
(
p
Ë
	`BOOST_PP_IIF
’##(19), 19, 20)

	)

47 
	#BOOST_PP_NODE_22
(
p
Ë
	`BOOST_PP_IIF
’##(22), 
BOOST_PP_NODE_21
, 
BOOST_PP_NODE_23
)

	)

48 
	#BOOST_PP_NODE_21
(
p
Ë
	`BOOST_PP_IIF
’##(21), 21, 22)

	)

49 
	#BOOST_PP_NODE_23
(
p
Ë
	`BOOST_PP_IIF
’##(23), 23, 24)

	)

50 
	#BOOST_PP_NODE_28
(
p
Ë
	`BOOST_PP_IIF
’##(28), 
BOOST_PP_NODE_26
, 
BOOST_PP_NODE_30
)

	)

51 
	#BOOST_PP_NODE_26
(
p
Ë
	`BOOST_PP_IIF
’##(26), 
BOOST_PP_NODE_25
, 
BOOST_PP_NODE_27
)

	)

52 
	#BOOST_PP_NODE_25
(
p
Ë
	`BOOST_PP_IIF
’##(25), 25, 26)

	)

53 
	#BOOST_PP_NODE_27
(
p
Ë
	`BOOST_PP_IIF
’##(27), 27, 28)

	)

54 
	#BOOST_PP_NODE_30
(
p
Ë
	`BOOST_PP_IIF
’##(30), 
BOOST_PP_NODE_29
, 
BOOST_PP_NODE_31
)

	)

55 
	#BOOST_PP_NODE_29
(
p
Ë
	`BOOST_PP_IIF
’##(29), 29, 30)

	)

56 
	#BOOST_PP_NODE_31
(
p
Ë
	`BOOST_PP_IIF
’##(31), 31, 32)

	)

57 
	#BOOST_PP_NODE_48
(
p
Ë
	`BOOST_PP_IIF
’##(48), 
BOOST_PP_NODE_40
, 
BOOST_PP_NODE_56
)

	)

58 
	#BOOST_PP_NODE_40
(
p
Ë
	`BOOST_PP_IIF
’##(40), 
BOOST_PP_NODE_36
, 
BOOST_PP_NODE_44
)

	)

59 
	#BOOST_PP_NODE_36
(
p
Ë
	`BOOST_PP_IIF
’##(36), 
BOOST_PP_NODE_34
, 
BOOST_PP_NODE_38
)

	)

60 
	#BOOST_PP_NODE_34
(
p
Ë
	`BOOST_PP_IIF
’##(34), 
BOOST_PP_NODE_33
, 
BOOST_PP_NODE_35
)

	)

61 
	#BOOST_PP_NODE_33
(
p
Ë
	`BOOST_PP_IIF
’##(33), 33, 34)

	)

62 
	#BOOST_PP_NODE_35
(
p
Ë
	`BOOST_PP_IIF
’##(35), 35, 36)

	)

63 
	#BOOST_PP_NODE_38
(
p
Ë
	`BOOST_PP_IIF
’##(38), 
BOOST_PP_NODE_37
, 
BOOST_PP_NODE_39
)

	)

64 
	#BOOST_PP_NODE_37
(
p
Ë
	`BOOST_PP_IIF
’##(37), 37, 38)

	)

65 
	#BOOST_PP_NODE_39
(
p
Ë
	`BOOST_PP_IIF
’##(39), 39, 40)

	)

66 
	#BOOST_PP_NODE_44
(
p
Ë
	`BOOST_PP_IIF
’##(44), 
BOOST_PP_NODE_42
, 
BOOST_PP_NODE_46
)

	)

67 
	#BOOST_PP_NODE_42
(
p
Ë
	`BOOST_PP_IIF
’##(42), 
BOOST_PP_NODE_41
, 
BOOST_PP_NODE_43
)

	)

68 
	#BOOST_PP_NODE_41
(
p
Ë
	`BOOST_PP_IIF
’##(41), 41, 42)

	)

69 
	#BOOST_PP_NODE_43
(
p
Ë
	`BOOST_PP_IIF
’##(43), 43, 44)

	)

70 
	#BOOST_PP_NODE_46
(
p
Ë
	`BOOST_PP_IIF
’##(46), 
BOOST_PP_NODE_45
, 
BOOST_PP_NODE_47
)

	)

71 
	#BOOST_PP_NODE_45
(
p
Ë
	`BOOST_PP_IIF
’##(45), 45, 46)

	)

72 
	#BOOST_PP_NODE_47
(
p
Ë
	`BOOST_PP_IIF
’##(47), 47, 48)

	)

73 
	#BOOST_PP_NODE_56
(
p
Ë
	`BOOST_PP_IIF
’##(56), 
BOOST_PP_NODE_52
, 
BOOST_PP_NODE_60
)

	)

74 
	#BOOST_PP_NODE_52
(
p
Ë
	`BOOST_PP_IIF
’##(52), 
BOOST_PP_NODE_50
, 
BOOST_PP_NODE_54
)

	)

75 
	#BOOST_PP_NODE_50
(
p
Ë
	`BOOST_PP_IIF
’##(50), 
BOOST_PP_NODE_49
, 
BOOST_PP_NODE_51
)

	)

76 
	#BOOST_PP_NODE_49
(
p
Ë
	`BOOST_PP_IIF
’##(49), 49, 50)

	)

77 
	#BOOST_PP_NODE_51
(
p
Ë
	`BOOST_PP_IIF
’##(51), 51, 52)

	)

78 
	#BOOST_PP_NODE_54
(
p
Ë
	`BOOST_PP_IIF
’##(54), 
BOOST_PP_NODE_53
, 
BOOST_PP_NODE_55
)

	)

79 
	#BOOST_PP_NODE_53
(
p
Ë
	`BOOST_PP_IIF
’##(53), 53, 54)

	)

80 
	#BOOST_PP_NODE_55
(
p
Ë
	`BOOST_PP_IIF
’##(55), 55, 56)

	)

81 
	#BOOST_PP_NODE_60
(
p
Ë
	`BOOST_PP_IIF
’##(60), 
BOOST_PP_NODE_58
, 
BOOST_PP_NODE_62
)

	)

82 
	#BOOST_PP_NODE_58
(
p
Ë
	`BOOST_PP_IIF
’##(58), 
BOOST_PP_NODE_57
, 
BOOST_PP_NODE_59
)

	)

83 
	#BOOST_PP_NODE_57
(
p
Ë
	`BOOST_PP_IIF
’##(57), 57, 58)

	)

84 
	#BOOST_PP_NODE_59
(
p
Ë
	`BOOST_PP_IIF
’##(59), 59, 60)

	)

85 
	#BOOST_PP_NODE_62
(
p
Ë
	`BOOST_PP_IIF
’##(62), 
BOOST_PP_NODE_61
, 
BOOST_PP_NODE_63
)

	)

86 
	#BOOST_PP_NODE_61
(
p
Ë
	`BOOST_PP_IIF
’##(61), 61, 62)

	)

87 
	#BOOST_PP_NODE_63
(
p
Ë
	`BOOST_PP_IIF
’##(63), 63, 64)

	)

88 
	#BOOST_PP_NODE_96
(
p
Ë
	`BOOST_PP_IIF
’##(96), 
BOOST_PP_NODE_80
, 
BOOST_PP_NODE_112
)

	)

89 
	#BOOST_PP_NODE_80
(
p
Ë
	`BOOST_PP_IIF
’##(80), 
BOOST_PP_NODE_72
, 
BOOST_PP_NODE_88
)

	)

90 
	#BOOST_PP_NODE_72
(
p
Ë
	`BOOST_PP_IIF
’##(72), 
BOOST_PP_NODE_68
, 
BOOST_PP_NODE_76
)

	)

91 
	#BOOST_PP_NODE_68
(
p
Ë
	`BOOST_PP_IIF
’##(68), 
BOOST_PP_NODE_66
, 
BOOST_PP_NODE_70
)

	)

92 
	#BOOST_PP_NODE_66
(
p
Ë
	`BOOST_PP_IIF
’##(66), 
BOOST_PP_NODE_65
, 
BOOST_PP_NODE_67
)

	)

93 
	#BOOST_PP_NODE_65
(
p
Ë
	`BOOST_PP_IIF
’##(65), 65, 66)

	)

94 
	#BOOST_PP_NODE_67
(
p
Ë
	`BOOST_PP_IIF
’##(67), 67, 68)

	)

95 
	#BOOST_PP_NODE_70
(
p
Ë
	`BOOST_PP_IIF
’##(70), 
BOOST_PP_NODE_69
, 
BOOST_PP_NODE_71
)

	)

96 
	#BOOST_PP_NODE_69
(
p
Ë
	`BOOST_PP_IIF
’##(69), 69, 70)

	)

97 
	#BOOST_PP_NODE_71
(
p
Ë
	`BOOST_PP_IIF
’##(71), 71, 72)

	)

98 
	#BOOST_PP_NODE_76
(
p
Ë
	`BOOST_PP_IIF
’##(76), 
BOOST_PP_NODE_74
, 
BOOST_PP_NODE_78
)

	)

99 
	#BOOST_PP_NODE_74
(
p
Ë
	`BOOST_PP_IIF
’##(74), 
BOOST_PP_NODE_73
, 
BOOST_PP_NODE_75
)

	)

100 
	#BOOST_PP_NODE_73
(
p
Ë
	`BOOST_PP_IIF
’##(73), 73, 74)

	)

101 
	#BOOST_PP_NODE_75
(
p
Ë
	`BOOST_PP_IIF
’##(75), 75, 76)

	)

102 
	#BOOST_PP_NODE_78
(
p
Ë
	`BOOST_PP_IIF
’##(78), 
BOOST_PP_NODE_77
, 
BOOST_PP_NODE_79
)

	)

103 
	#BOOST_PP_NODE_77
(
p
Ë
	`BOOST_PP_IIF
’##(77), 77, 78)

	)

104 
	#BOOST_PP_NODE_79
(
p
Ë
	`BOOST_PP_IIF
’##(79), 79, 80)

	)

105 
	#BOOST_PP_NODE_88
(
p
Ë
	`BOOST_PP_IIF
’##(88), 
BOOST_PP_NODE_84
, 
BOOST_PP_NODE_92
)

	)

106 
	#BOOST_PP_NODE_84
(
p
Ë
	`BOOST_PP_IIF
’##(84), 
BOOST_PP_NODE_82
, 
BOOST_PP_NODE_86
)

	)

107 
	#BOOST_PP_NODE_82
(
p
Ë
	`BOOST_PP_IIF
’##(82), 
BOOST_PP_NODE_81
, 
BOOST_PP_NODE_83
)

	)

108 
	#BOOST_PP_NODE_81
(
p
Ë
	`BOOST_PP_IIF
’##(81), 81, 82)

	)

109 
	#BOOST_PP_NODE_83
(
p
Ë
	`BOOST_PP_IIF
’##(83), 83, 84)

	)

110 
	#BOOST_PP_NODE_86
(
p
Ë
	`BOOST_PP_IIF
’##(86), 
BOOST_PP_NODE_85
, 
BOOST_PP_NODE_87
)

	)

111 
	#BOOST_PP_NODE_85
(
p
Ë
	`BOOST_PP_IIF
’##(85), 85, 86)

	)

112 
	#BOOST_PP_NODE_87
(
p
Ë
	`BOOST_PP_IIF
’##(87), 87, 88)

	)

113 
	#BOOST_PP_NODE_92
(
p
Ë
	`BOOST_PP_IIF
’##(92), 
BOOST_PP_NODE_90
, 
BOOST_PP_NODE_94
)

	)

114 
	#BOOST_PP_NODE_90
(
p
Ë
	`BOOST_PP_IIF
’##(90), 
BOOST_PP_NODE_89
, 
BOOST_PP_NODE_91
)

	)

115 
	#BOOST_PP_NODE_89
(
p
Ë
	`BOOST_PP_IIF
’##(89), 89, 90)

	)

116 
	#BOOST_PP_NODE_91
(
p
Ë
	`BOOST_PP_IIF
’##(91), 91, 92)

	)

117 
	#BOOST_PP_NODE_94
(
p
Ë
	`BOOST_PP_IIF
’##(94), 
BOOST_PP_NODE_93
, 
BOOST_PP_NODE_95
)

	)

118 
	#BOOST_PP_NODE_93
(
p
Ë
	`BOOST_PP_IIF
’##(93), 93, 94)

	)

119 
	#BOOST_PP_NODE_95
(
p
Ë
	`BOOST_PP_IIF
’##(95), 95, 96)

	)

120 
	#BOOST_PP_NODE_112
(
p
Ë
	`BOOST_PP_IIF
’##(112), 
BOOST_PP_NODE_104
, 
BOOST_PP_NODE_120
)

	)

121 
	#BOOST_PP_NODE_104
(
p
Ë
	`BOOST_PP_IIF
’##(104), 
BOOST_PP_NODE_100
, 
BOOST_PP_NODE_108
)

	)

122 
	#BOOST_PP_NODE_100
(
p
Ë
	`BOOST_PP_IIF
’##(100), 
BOOST_PP_NODE_98
, 
BOOST_PP_NODE_102
)

	)

123 
	#BOOST_PP_NODE_98
(
p
Ë
	`BOOST_PP_IIF
’##(98), 
BOOST_PP_NODE_97
, 
BOOST_PP_NODE_99
)

	)

124 
	#BOOST_PP_NODE_97
(
p
Ë
	`BOOST_PP_IIF
’##(97), 97, 98)

	)

125 
	#BOOST_PP_NODE_99
(
p
Ë
	`BOOST_PP_IIF
’##(99), 99, 100)

	)

126 
	#BOOST_PP_NODE_102
(
p
Ë
	`BOOST_PP_IIF
’##(102), 
BOOST_PP_NODE_101
, 
BOOST_PP_NODE_103
)

	)

127 
	#BOOST_PP_NODE_101
(
p
Ë
	`BOOST_PP_IIF
’##(101), 101, 102)

	)

128 
	#BOOST_PP_NODE_103
(
p
Ë
	`BOOST_PP_IIF
’##(103), 103, 104)

	)

129 
	#BOOST_PP_NODE_108
(
p
Ë
	`BOOST_PP_IIF
’##(108), 
BOOST_PP_NODE_106
, 
BOOST_PP_NODE_110
)

	)

130 
	#BOOST_PP_NODE_106
(
p
Ë
	`BOOST_PP_IIF
’##(106), 
BOOST_PP_NODE_105
, 
BOOST_PP_NODE_107
)

	)

131 
	#BOOST_PP_NODE_105
(
p
Ë
	`BOOST_PP_IIF
’##(105), 105, 106)

	)

132 
	#BOOST_PP_NODE_107
(
p
Ë
	`BOOST_PP_IIF
’##(107), 107, 108)

	)

133 
	#BOOST_PP_NODE_110
(
p
Ë
	`BOOST_PP_IIF
’##(110), 
BOOST_PP_NODE_109
, 
BOOST_PP_NODE_111
)

	)

134 
	#BOOST_PP_NODE_109
(
p
Ë
	`BOOST_PP_IIF
’##(109), 109, 110)

	)

135 
	#BOOST_PP_NODE_111
(
p
Ë
	`BOOST_PP_IIF
’##(111), 111, 112)

	)

136 
	#BOOST_PP_NODE_120
(
p
Ë
	`BOOST_PP_IIF
’##(120), 
BOOST_PP_NODE_116
, 
BOOST_PP_NODE_124
)

	)

137 
	#BOOST_PP_NODE_116
(
p
Ë
	`BOOST_PP_IIF
’##(116), 
BOOST_PP_NODE_114
, 
BOOST_PP_NODE_118
)

	)

138 
	#BOOST_PP_NODE_114
(
p
Ë
	`BOOST_PP_IIF
’##(114), 
BOOST_PP_NODE_113
, 
BOOST_PP_NODE_115
)

	)

139 
	#BOOST_PP_NODE_113
(
p
Ë
	`BOOST_PP_IIF
’##(113), 113, 114)

	)

140 
	#BOOST_PP_NODE_115
(
p
Ë
	`BOOST_PP_IIF
’##(115), 115, 116)

	)

141 
	#BOOST_PP_NODE_118
(
p
Ë
	`BOOST_PP_IIF
’##(118), 
BOOST_PP_NODE_117
, 
BOOST_PP_NODE_119
)

	)

142 
	#BOOST_PP_NODE_117
(
p
Ë
	`BOOST_PP_IIF
’##(117), 117, 118)

	)

143 
	#BOOST_PP_NODE_119
(
p
Ë
	`BOOST_PP_IIF
’##(119), 119, 120)

	)

144 
	#BOOST_PP_NODE_124
(
p
Ë
	`BOOST_PP_IIF
’##(124), 
BOOST_PP_NODE_122
, 
BOOST_PP_NODE_126
)

	)

145 
	#BOOST_PP_NODE_122
(
p
Ë
	`BOOST_PP_IIF
’##(122), 
BOOST_PP_NODE_121
, 
BOOST_PP_NODE_123
)

	)

146 
	#BOOST_PP_NODE_121
(
p
Ë
	`BOOST_PP_IIF
’##(121), 121, 122)

	)

147 
	#BOOST_PP_NODE_123
(
p
Ë
	`BOOST_PP_IIF
’##(123), 123, 124)

	)

148 
	#BOOST_PP_NODE_126
(
p
Ë
	`BOOST_PP_IIF
’##(126), 
BOOST_PP_NODE_125
, 
BOOST_PP_NODE_127
)

	)

149 
	#BOOST_PP_NODE_125
(
p
Ë
	`BOOST_PP_IIF
’##(125), 125, 126)

	)

150 
	#BOOST_PP_NODE_127
(
p
Ë
	`BOOST_PP_IIF
’##(127), 127, 128)

	)

151 
	#BOOST_PP_NODE_192
(
p
Ë
	`BOOST_PP_IIF
’##(192), 
BOOST_PP_NODE_160
, 
BOOST_PP_NODE_224
)

	)

152 
	#BOOST_PP_NODE_160
(
p
Ë
	`BOOST_PP_IIF
’##(160), 
BOOST_PP_NODE_144
, 
BOOST_PP_NODE_176
)

	)

153 
	#BOOST_PP_NODE_144
(
p
Ë
	`BOOST_PP_IIF
’##(144), 
BOOST_PP_NODE_136
, 
BOOST_PP_NODE_152
)

	)

154 
	#BOOST_PP_NODE_136
(
p
Ë
	`BOOST_PP_IIF
’##(136), 
BOOST_PP_NODE_132
, 
BOOST_PP_NODE_140
)

	)

155 
	#BOOST_PP_NODE_132
(
p
Ë
	`BOOST_PP_IIF
’##(132), 
BOOST_PP_NODE_130
, 
BOOST_PP_NODE_134
)

	)

156 
	#BOOST_PP_NODE_130
(
p
Ë
	`BOOST_PP_IIF
’##(130), 
BOOST_PP_NODE_129
, 
BOOST_PP_NODE_131
)

	)

157 
	#BOOST_PP_NODE_129
(
p
Ë
	`BOOST_PP_IIF
’##(129), 129, 130)

	)

158 
	#BOOST_PP_NODE_131
(
p
Ë
	`BOOST_PP_IIF
’##(131), 131, 132)

	)

159 
	#BOOST_PP_NODE_134
(
p
Ë
	`BOOST_PP_IIF
’##(134), 
BOOST_PP_NODE_133
, 
BOOST_PP_NODE_135
)

	)

160 
	#BOOST_PP_NODE_133
(
p
Ë
	`BOOST_PP_IIF
’##(133), 133, 134)

	)

161 
	#BOOST_PP_NODE_135
(
p
Ë
	`BOOST_PP_IIF
’##(135), 135, 136)

	)

162 
	#BOOST_PP_NODE_140
(
p
Ë
	`BOOST_PP_IIF
’##(140), 
BOOST_PP_NODE_138
, 
BOOST_PP_NODE_142
)

	)

163 
	#BOOST_PP_NODE_138
(
p
Ë
	`BOOST_PP_IIF
’##(138), 
BOOST_PP_NODE_137
, 
BOOST_PP_NODE_139
)

	)

164 
	#BOOST_PP_NODE_137
(
p
Ë
	`BOOST_PP_IIF
’##(137), 137, 138)

	)

165 
	#BOOST_PP_NODE_139
(
p
Ë
	`BOOST_PP_IIF
’##(139), 139, 140)

	)

166 
	#BOOST_PP_NODE_142
(
p
Ë
	`BOOST_PP_IIF
’##(142), 
BOOST_PP_NODE_141
, 
BOOST_PP_NODE_143
)

	)

167 
	#BOOST_PP_NODE_141
(
p
Ë
	`BOOST_PP_IIF
’##(141), 141, 142)

	)

168 
	#BOOST_PP_NODE_143
(
p
Ë
	`BOOST_PP_IIF
’##(143), 143, 144)

	)

169 
	#BOOST_PP_NODE_152
(
p
Ë
	`BOOST_PP_IIF
’##(152), 
BOOST_PP_NODE_148
, 
BOOST_PP_NODE_156
)

	)

170 
	#BOOST_PP_NODE_148
(
p
Ë
	`BOOST_PP_IIF
’##(148), 
BOOST_PP_NODE_146
, 
BOOST_PP_NODE_150
)

	)

171 
	#BOOST_PP_NODE_146
(
p
Ë
	`BOOST_PP_IIF
’##(146), 
BOOST_PP_NODE_145
, 
BOOST_PP_NODE_147
)

	)

172 
	#BOOST_PP_NODE_145
(
p
Ë
	`BOOST_PP_IIF
’##(145), 145, 146)

	)

173 
	#BOOST_PP_NODE_147
(
p
Ë
	`BOOST_PP_IIF
’##(147), 147, 148)

	)

174 
	#BOOST_PP_NODE_150
(
p
Ë
	`BOOST_PP_IIF
’##(150), 
BOOST_PP_NODE_149
, 
BOOST_PP_NODE_151
)

	)

175 
	#BOOST_PP_NODE_149
(
p
Ë
	`BOOST_PP_IIF
’##(149), 149, 150)

	)

176 
	#BOOST_PP_NODE_151
(
p
Ë
	`BOOST_PP_IIF
’##(151), 151, 152)

	)

177 
	#BOOST_PP_NODE_156
(
p
Ë
	`BOOST_PP_IIF
’##(156), 
BOOST_PP_NODE_154
, 
BOOST_PP_NODE_158
)

	)

178 
	#BOOST_PP_NODE_154
(
p
Ë
	`BOOST_PP_IIF
’##(154), 
BOOST_PP_NODE_153
, 
BOOST_PP_NODE_155
)

	)

179 
	#BOOST_PP_NODE_153
(
p
Ë
	`BOOST_PP_IIF
’##(153), 153, 154)

	)

180 
	#BOOST_PP_NODE_155
(
p
Ë
	`BOOST_PP_IIF
’##(155), 155, 156)

	)

181 
	#BOOST_PP_NODE_158
(
p
Ë
	`BOOST_PP_IIF
’##(158), 
BOOST_PP_NODE_157
, 
BOOST_PP_NODE_159
)

	)

182 
	#BOOST_PP_NODE_157
(
p
Ë
	`BOOST_PP_IIF
’##(157), 157, 158)

	)

183 
	#BOOST_PP_NODE_159
(
p
Ë
	`BOOST_PP_IIF
’##(159), 159, 160)

	)

184 
	#BOOST_PP_NODE_176
(
p
Ë
	`BOOST_PP_IIF
’##(176), 
BOOST_PP_NODE_168
, 
BOOST_PP_NODE_184
)

	)

185 
	#BOOST_PP_NODE_168
(
p
Ë
	`BOOST_PP_IIF
’##(168), 
BOOST_PP_NODE_164
, 
BOOST_PP_NODE_172
)

	)

186 
	#BOOST_PP_NODE_164
(
p
Ë
	`BOOST_PP_IIF
’##(164), 
BOOST_PP_NODE_162
, 
BOOST_PP_NODE_166
)

	)

187 
	#BOOST_PP_NODE_162
(
p
Ë
	`BOOST_PP_IIF
’##(162), 
BOOST_PP_NODE_161
, 
BOOST_PP_NODE_163
)

	)

188 
	#BOOST_PP_NODE_161
(
p
Ë
	`BOOST_PP_IIF
’##(161), 161, 162)

	)

189 
	#BOOST_PP_NODE_163
(
p
Ë
	`BOOST_PP_IIF
’##(163), 163, 164)

	)

190 
	#BOOST_PP_NODE_166
(
p
Ë
	`BOOST_PP_IIF
’##(166), 
BOOST_PP_NODE_165
, 
BOOST_PP_NODE_167
)

	)

191 
	#BOOST_PP_NODE_165
(
p
Ë
	`BOOST_PP_IIF
’##(165), 165, 166)

	)

192 
	#BOOST_PP_NODE_167
(
p
Ë
	`BOOST_PP_IIF
’##(167), 167, 168)

	)

193 
	#BOOST_PP_NODE_172
(
p
Ë
	`BOOST_PP_IIF
’##(172), 
BOOST_PP_NODE_170
, 
BOOST_PP_NODE_174
)

	)

194 
	#BOOST_PP_NODE_170
(
p
Ë
	`BOOST_PP_IIF
’##(170), 
BOOST_PP_NODE_169
, 
BOOST_PP_NODE_171
)

	)

195 
	#BOOST_PP_NODE_169
(
p
Ë
	`BOOST_PP_IIF
’##(169), 169, 170)

	)

196 
	#BOOST_PP_NODE_171
(
p
Ë
	`BOOST_PP_IIF
’##(171), 171, 172)

	)

197 
	#BOOST_PP_NODE_174
(
p
Ë
	`BOOST_PP_IIF
’##(174), 
BOOST_PP_NODE_173
, 
BOOST_PP_NODE_175
)

	)

198 
	#BOOST_PP_NODE_173
(
p
Ë
	`BOOST_PP_IIF
’##(173), 173, 174)

	)

199 
	#BOOST_PP_NODE_175
(
p
Ë
	`BOOST_PP_IIF
’##(175), 175, 176)

	)

200 
	#BOOST_PP_NODE_184
(
p
Ë
	`BOOST_PP_IIF
’##(184), 
BOOST_PP_NODE_180
, 
BOOST_PP_NODE_188
)

	)

201 
	#BOOST_PP_NODE_180
(
p
Ë
	`BOOST_PP_IIF
’##(180), 
BOOST_PP_NODE_178
, 
BOOST_PP_NODE_182
)

	)

202 
	#BOOST_PP_NODE_178
(
p
Ë
	`BOOST_PP_IIF
’##(178), 
BOOST_PP_NODE_177
, 
BOOST_PP_NODE_179
)

	)

203 
	#BOOST_PP_NODE_177
(
p
Ë
	`BOOST_PP_IIF
’##(177), 177, 178)

	)

204 
	#BOOST_PP_NODE_179
(
p
Ë
	`BOOST_PP_IIF
’##(179), 179, 180)

	)

205 
	#BOOST_PP_NODE_182
(
p
Ë
	`BOOST_PP_IIF
’##(182), 
BOOST_PP_NODE_181
, 
BOOST_PP_NODE_183
)

	)

206 
	#BOOST_PP_NODE_181
(
p
Ë
	`BOOST_PP_IIF
’##(181), 181, 182)

	)

207 
	#BOOST_PP_NODE_183
(
p
Ë
	`BOOST_PP_IIF
’##(183), 183, 184)

	)

208 
	#BOOST_PP_NODE_188
(
p
Ë
	`BOOST_PP_IIF
’##(188), 
BOOST_PP_NODE_186
, 
BOOST_PP_NODE_190
)

	)

209 
	#BOOST_PP_NODE_186
(
p
Ë
	`BOOST_PP_IIF
’##(186), 
BOOST_PP_NODE_185
, 
BOOST_PP_NODE_187
)

	)

210 
	#BOOST_PP_NODE_185
(
p
Ë
	`BOOST_PP_IIF
’##(185), 185, 186)

	)

211 
	#BOOST_PP_NODE_187
(
p
Ë
	`BOOST_PP_IIF
’##(187), 187, 188)

	)

212 
	#BOOST_PP_NODE_190
(
p
Ë
	`BOOST_PP_IIF
’##(190), 
BOOST_PP_NODE_189
, 
BOOST_PP_NODE_191
)

	)

213 
	#BOOST_PP_NODE_189
(
p
Ë
	`BOOST_PP_IIF
’##(189), 189, 190)

	)

214 
	#BOOST_PP_NODE_191
(
p
Ë
	`BOOST_PP_IIF
’##(191), 191, 192)

	)

215 
	#BOOST_PP_NODE_224
(
p
Ë
	`BOOST_PP_IIF
’##(224), 
BOOST_PP_NODE_208
, 
BOOST_PP_NODE_240
)

	)

216 
	#BOOST_PP_NODE_208
(
p
Ë
	`BOOST_PP_IIF
’##(208), 
BOOST_PP_NODE_200
, 
BOOST_PP_NODE_216
)

	)

217 
	#BOOST_PP_NODE_200
(
p
Ë
	`BOOST_PP_IIF
’##(200), 
BOOST_PP_NODE_196
, 
BOOST_PP_NODE_204
)

	)

218 
	#BOOST_PP_NODE_196
(
p
Ë
	`BOOST_PP_IIF
’##(196), 
BOOST_PP_NODE_194
, 
BOOST_PP_NODE_198
)

	)

219 
	#BOOST_PP_NODE_194
(
p
Ë
	`BOOST_PP_IIF
’##(194), 
BOOST_PP_NODE_193
, 
BOOST_PP_NODE_195
)

	)

220 
	#BOOST_PP_NODE_193
(
p
Ë
	`BOOST_PP_IIF
’##(193), 193, 194)

	)

221 
	#BOOST_PP_NODE_195
(
p
Ë
	`BOOST_PP_IIF
’##(195), 195, 196)

	)

222 
	#BOOST_PP_NODE_198
(
p
Ë
	`BOOST_PP_IIF
’##(198), 
BOOST_PP_NODE_197
, 
BOOST_PP_NODE_199
)

	)

223 
	#BOOST_PP_NODE_197
(
p
Ë
	`BOOST_PP_IIF
’##(197), 197, 198)

	)

224 
	#BOOST_PP_NODE_199
(
p
Ë
	`BOOST_PP_IIF
’##(199), 199, 200)

	)

225 
	#BOOST_PP_NODE_204
(
p
Ë
	`BOOST_PP_IIF
’##(204), 
BOOST_PP_NODE_202
, 
BOOST_PP_NODE_206
)

	)

226 
	#BOOST_PP_NODE_202
(
p
Ë
	`BOOST_PP_IIF
’##(202), 
BOOST_PP_NODE_201
, 
BOOST_PP_NODE_203
)

	)

227 
	#BOOST_PP_NODE_201
(
p
Ë
	`BOOST_PP_IIF
’##(201), 201, 202)

	)

228 
	#BOOST_PP_NODE_203
(
p
Ë
	`BOOST_PP_IIF
’##(203), 203, 204)

	)

229 
	#BOOST_PP_NODE_206
(
p
Ë
	`BOOST_PP_IIF
’##(206), 
BOOST_PP_NODE_205
, 
BOOST_PP_NODE_207
)

	)

230 
	#BOOST_PP_NODE_205
(
p
Ë
	`BOOST_PP_IIF
’##(205), 205, 206)

	)

231 
	#BOOST_PP_NODE_207
(
p
Ë
	`BOOST_PP_IIF
’##(207), 207, 208)

	)

232 
	#BOOST_PP_NODE_216
(
p
Ë
	`BOOST_PP_IIF
’##(216), 
BOOST_PP_NODE_212
, 
BOOST_PP_NODE_220
)

	)

233 
	#BOOST_PP_NODE_212
(
p
Ë
	`BOOST_PP_IIF
’##(212), 
BOOST_PP_NODE_210
, 
BOOST_PP_NODE_214
)

	)

234 
	#BOOST_PP_NODE_210
(
p
Ë
	`BOOST_PP_IIF
’##(210), 
BOOST_PP_NODE_209
, 
BOOST_PP_NODE_211
)

	)

235 
	#BOOST_PP_NODE_209
(
p
Ë
	`BOOST_PP_IIF
’##(209), 209, 210)

	)

236 
	#BOOST_PP_NODE_211
(
p
Ë
	`BOOST_PP_IIF
’##(211), 211, 212)

	)

237 
	#BOOST_PP_NODE_214
(
p
Ë
	`BOOST_PP_IIF
’##(214), 
BOOST_PP_NODE_213
, 
BOOST_PP_NODE_215
)

	)

238 
	#BOOST_PP_NODE_213
(
p
Ë
	`BOOST_PP_IIF
’##(213), 213, 214)

	)

239 
	#BOOST_PP_NODE_215
(
p
Ë
	`BOOST_PP_IIF
’##(215), 215, 216)

	)

240 
	#BOOST_PP_NODE_220
(
p
Ë
	`BOOST_PP_IIF
’##(220), 
BOOST_PP_NODE_218
, 
BOOST_PP_NODE_222
)

	)

241 
	#BOOST_PP_NODE_218
(
p
Ë
	`BOOST_PP_IIF
’##(218), 
BOOST_PP_NODE_217
, 
BOOST_PP_NODE_219
)

	)

242 
	#BOOST_PP_NODE_217
(
p
Ë
	`BOOST_PP_IIF
’##(217), 217, 218)

	)

243 
	#BOOST_PP_NODE_219
(
p
Ë
	`BOOST_PP_IIF
’##(219), 219, 220)

	)

244 
	#BOOST_PP_NODE_222
(
p
Ë
	`BOOST_PP_IIF
’##(222), 
BOOST_PP_NODE_221
, 
BOOST_PP_NODE_223
)

	)

245 
	#BOOST_PP_NODE_221
(
p
Ë
	`BOOST_PP_IIF
’##(221), 221, 222)

	)

246 
	#BOOST_PP_NODE_223
(
p
Ë
	`BOOST_PP_IIF
’##(223), 223, 224)

	)

247 
	#BOOST_PP_NODE_240
(
p
Ë
	`BOOST_PP_IIF
’##(240), 
BOOST_PP_NODE_232
, 
BOOST_PP_NODE_248
)

	)

248 
	#BOOST_PP_NODE_232
(
p
Ë
	`BOOST_PP_IIF
’##(232), 
BOOST_PP_NODE_228
, 
BOOST_PP_NODE_236
)

	)

249 
	#BOOST_PP_NODE_228
(
p
Ë
	`BOOST_PP_IIF
’##(228), 
BOOST_PP_NODE_226
, 
BOOST_PP_NODE_230
)

	)

250 
	#BOOST_PP_NODE_226
(
p
Ë
	`BOOST_PP_IIF
’##(226), 
BOOST_PP_NODE_225
, 
BOOST_PP_NODE_227
)

	)

251 
	#BOOST_PP_NODE_225
(
p
Ë
	`BOOST_PP_IIF
’##(225), 225, 226)

	)

252 
	#BOOST_PP_NODE_227
(
p
Ë
	`BOOST_PP_IIF
’##(227), 227, 228)

	)

253 
	#BOOST_PP_NODE_230
(
p
Ë
	`BOOST_PP_IIF
’##(230), 
BOOST_PP_NODE_229
, 
BOOST_PP_NODE_231
)

	)

254 
	#BOOST_PP_NODE_229
(
p
Ë
	`BOOST_PP_IIF
’##(229), 229, 230)

	)

255 
	#BOOST_PP_NODE_231
(
p
Ë
	`BOOST_PP_IIF
’##(231), 231, 232)

	)

256 
	#BOOST_PP_NODE_236
(
p
Ë
	`BOOST_PP_IIF
’##(236), 
BOOST_PP_NODE_234
, 
BOOST_PP_NODE_238
)

	)

257 
	#BOOST_PP_NODE_234
(
p
Ë
	`BOOST_PP_IIF
’##(234), 
BOOST_PP_NODE_233
, 
BOOST_PP_NODE_235
)

	)

258 
	#BOOST_PP_NODE_233
(
p
Ë
	`BOOST_PP_IIF
’##(233), 233, 234)

	)

259 
	#BOOST_PP_NODE_235
(
p
Ë
	`BOOST_PP_IIF
’##(235), 235, 236)

	)

260 
	#BOOST_PP_NODE_238
(
p
Ë
	`BOOST_PP_IIF
’##(238), 
BOOST_PP_NODE_237
, 
BOOST_PP_NODE_239
)

	)

261 
	#BOOST_PP_NODE_237
(
p
Ë
	`BOOST_PP_IIF
’##(237), 237, 238)

	)

262 
	#BOOST_PP_NODE_239
(
p
Ë
	`BOOST_PP_IIF
’##(239), 239, 240)

	)

263 
	#BOOST_PP_NODE_248
(
p
Ë
	`BOOST_PP_IIF
’##(248), 
BOOST_PP_NODE_244
, 
BOOST_PP_NODE_252
)

	)

264 
	#BOOST_PP_NODE_244
(
p
Ë
	`BOOST_PP_IIF
’##(244), 
BOOST_PP_NODE_242
, 
BOOST_PP_NODE_246
)

	)

265 
	#BOOST_PP_NODE_242
(
p
Ë
	`BOOST_PP_IIF
’##(242), 
BOOST_PP_NODE_241
, 
BOOST_PP_NODE_243
)

	)

266 
	#BOOST_PP_NODE_241
(
p
Ë
	`BOOST_PP_IIF
’##(241), 241, 242)

	)

267 
	#BOOST_PP_NODE_243
(
p
Ë
	`BOOST_PP_IIF
’##(243), 243, 244)

	)

268 
	#BOOST_PP_NODE_246
(
p
Ë
	`BOOST_PP_IIF
’##(246), 
BOOST_PP_NODE_245
, 
BOOST_PP_NODE_247
)

	)

269 
	#BOOST_PP_NODE_245
(
p
Ë
	`BOOST_PP_IIF
’##(245), 245, 246)

	)

270 
	#BOOST_PP_NODE_247
(
p
Ë
	`BOOST_PP_IIF
’##(247), 247, 248)

	)

271 
	#BOOST_PP_NODE_252
(
p
Ë
	`BOOST_PP_IIF
’##(252), 
BOOST_PP_NODE_250
, 
BOOST_PP_NODE_254
)

	)

272 
	#BOOST_PP_NODE_250
(
p
Ë
	`BOOST_PP_IIF
’##(250), 
BOOST_PP_NODE_249
, 
BOOST_PP_NODE_251
)

	)

273 
	#BOOST_PP_NODE_249
(
p
Ë
	`BOOST_PP_IIF
’##(249), 249, 250)

	)

274 
	#BOOST_PP_NODE_251
(
p
Ë
	`BOOST_PP_IIF
’##(251), 251, 252)

	)

275 
	#BOOST_PP_NODE_254
(
p
Ë
	`BOOST_PP_IIF
’##(254), 
BOOST_PP_NODE_253
, 
BOOST_PP_NODE_255
)

	)

276 
	#BOOST_PP_NODE_253
(
p
Ë
	`BOOST_PP_IIF
’##(253), 253, 254)

	)

277 
	#BOOST_PP_NODE_255
(
p
Ë
	`BOOST_PP_IIF
’##(255), 255, 256)

	)

	@/usr/include/boost/preprocessor/facilities/empty.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_FACILITIES_EMPTY_HPP


12 
	#BOOST_PREPROCESSOR_FACILITIES_EMPTY_HPP


	)

13 #
#/* 
BOOST_PP_EMPTY
 */

14 
#deföê
	#BOOST_PP_EMPTY
()

	)

	@/usr/include/boost/preprocessor/logical/bool.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_LOGICAL_BOOL_HPP


12 
	#BOOST_PREPROCESSOR_LOGICAL_BOOL_HPP


	)

13 
#ö˛udê
	~<boo°/¥ïro˚ss‹/c⁄fig/c⁄fig.hµ
>

14 #
#/* 
BOOST_PP_BOOL
 */

15 #
#i‡~
BOOST_PP_CONFIG_FLAGS
(Ë& 
BOOST_PP_CONFIG_MWCC
()

16 
	#BOOST_PP_BOOL
(
x
Ë
	`BOOST_PP_BOOL_I
(x)

	)

18 
	#BOOST_PP_BOOL
(
x
Ë
	`BOOST_PP_BOOL_OO
((x))

	)

19 
	#BOOST_PP_BOOL_OO
(
∑r
Ë
BOOST_PP_BOOL_I
 ## 
	)
par

21 
#deföê
	#BOOST_PP_BOOL_I
(
x
Ë
BOOST_PP_BOOL_
 ## 
	)
x

22 
#deföê
	#BOOST_PP_BOOL_0
 0

	)

23 
	#BOOST_PP_BOOL_1
 1

	)

24 
	#BOOST_PP_BOOL_2
 1

	)

25 
	#BOOST_PP_BOOL_3
 1

	)

26 
	#BOOST_PP_BOOL_4
 1

	)

27 
	#BOOST_PP_BOOL_5
 1

	)

28 
	#BOOST_PP_BOOL_6
 1

	)

29 
	#BOOST_PP_BOOL_7
 1

	)

30 
	#BOOST_PP_BOOL_8
 1

	)

31 
	#BOOST_PP_BOOL_9
 1

	)

32 
	#BOOST_PP_BOOL_10
 1

	)

33 
	#BOOST_PP_BOOL_11
 1

	)

34 
	#BOOST_PP_BOOL_12
 1

	)

35 
	#BOOST_PP_BOOL_13
 1

	)

36 
	#BOOST_PP_BOOL_14
 1

	)

37 
	#BOOST_PP_BOOL_15
 1

	)

38 
	#BOOST_PP_BOOL_16
 1

	)

39 
	#BOOST_PP_BOOL_17
 1

	)

40 
	#BOOST_PP_BOOL_18
 1

	)

41 
	#BOOST_PP_BOOL_19
 1

	)

42 
	#BOOST_PP_BOOL_20
 1

	)

43 
	#BOOST_PP_BOOL_21
 1

	)

44 
	#BOOST_PP_BOOL_22
 1

	)

45 
	#BOOST_PP_BOOL_23
 1

	)

46 
	#BOOST_PP_BOOL_24
 1

	)

47 
	#BOOST_PP_BOOL_25
 1

	)

48 
	#BOOST_PP_BOOL_26
 1

	)

49 
	#BOOST_PP_BOOL_27
 1

	)

50 
	#BOOST_PP_BOOL_28
 1

	)

51 
	#BOOST_PP_BOOL_29
 1

	)

52 
	#BOOST_PP_BOOL_30
 1

	)

53 
	#BOOST_PP_BOOL_31
 1

	)

54 
	#BOOST_PP_BOOL_32
 1

	)

55 
	#BOOST_PP_BOOL_33
 1

	)

56 
	#BOOST_PP_BOOL_34
 1

	)

57 
	#BOOST_PP_BOOL_35
 1

	)

58 
	#BOOST_PP_BOOL_36
 1

	)

59 
	#BOOST_PP_BOOL_37
 1

	)

60 
	#BOOST_PP_BOOL_38
 1

	)

61 
	#BOOST_PP_BOOL_39
 1

	)

62 
	#BOOST_PP_BOOL_40
 1

	)

63 
	#BOOST_PP_BOOL_41
 1

	)

64 
	#BOOST_PP_BOOL_42
 1

	)

65 
	#BOOST_PP_BOOL_43
 1

	)

66 
	#BOOST_PP_BOOL_44
 1

	)

67 
	#BOOST_PP_BOOL_45
 1

	)

68 
	#BOOST_PP_BOOL_46
 1

	)

69 
	#BOOST_PP_BOOL_47
 1

	)

70 
	#BOOST_PP_BOOL_48
 1

	)

71 
	#BOOST_PP_BOOL_49
 1

	)

72 
	#BOOST_PP_BOOL_50
 1

	)

73 
	#BOOST_PP_BOOL_51
 1

	)

74 
	#BOOST_PP_BOOL_52
 1

	)

75 
	#BOOST_PP_BOOL_53
 1

	)

76 
	#BOOST_PP_BOOL_54
 1

	)

77 
	#BOOST_PP_BOOL_55
 1

	)

78 
	#BOOST_PP_BOOL_56
 1

	)

79 
	#BOOST_PP_BOOL_57
 1

	)

80 
	#BOOST_PP_BOOL_58
 1

	)

81 
	#BOOST_PP_BOOL_59
 1

	)

82 
	#BOOST_PP_BOOL_60
 1

	)

83 
	#BOOST_PP_BOOL_61
 1

	)

84 
	#BOOST_PP_BOOL_62
 1

	)

85 
	#BOOST_PP_BOOL_63
 1

	)

86 
	#BOOST_PP_BOOL_64
 1

	)

87 
	#BOOST_PP_BOOL_65
 1

	)

88 
	#BOOST_PP_BOOL_66
 1

	)

89 
	#BOOST_PP_BOOL_67
 1

	)

90 
	#BOOST_PP_BOOL_68
 1

	)

91 
	#BOOST_PP_BOOL_69
 1

	)

92 
	#BOOST_PP_BOOL_70
 1

	)

93 
	#BOOST_PP_BOOL_71
 1

	)

94 
	#BOOST_PP_BOOL_72
 1

	)

95 
	#BOOST_PP_BOOL_73
 1

	)

96 
	#BOOST_PP_BOOL_74
 1

	)

97 
	#BOOST_PP_BOOL_75
 1

	)

98 
	#BOOST_PP_BOOL_76
 1

	)

99 
	#BOOST_PP_BOOL_77
 1

	)

100 
	#BOOST_PP_BOOL_78
 1

	)

101 
	#BOOST_PP_BOOL_79
 1

	)

102 
	#BOOST_PP_BOOL_80
 1

	)

103 
	#BOOST_PP_BOOL_81
 1

	)

104 
	#BOOST_PP_BOOL_82
 1

	)

105 
	#BOOST_PP_BOOL_83
 1

	)

106 
	#BOOST_PP_BOOL_84
 1

	)

107 
	#BOOST_PP_BOOL_85
 1

	)

108 
	#BOOST_PP_BOOL_86
 1

	)

109 
	#BOOST_PP_BOOL_87
 1

	)

110 
	#BOOST_PP_BOOL_88
 1

	)

111 
	#BOOST_PP_BOOL_89
 1

	)

112 
	#BOOST_PP_BOOL_90
 1

	)

113 
	#BOOST_PP_BOOL_91
 1

	)

114 
	#BOOST_PP_BOOL_92
 1

	)

115 
	#BOOST_PP_BOOL_93
 1

	)

116 
	#BOOST_PP_BOOL_94
 1

	)

117 
	#BOOST_PP_BOOL_95
 1

	)

118 
	#BOOST_PP_BOOL_96
 1

	)

119 
	#BOOST_PP_BOOL_97
 1

	)

120 
	#BOOST_PP_BOOL_98
 1

	)

121 
	#BOOST_PP_BOOL_99
 1

	)

122 
	#BOOST_PP_BOOL_100
 1

	)

123 
	#BOOST_PP_BOOL_101
 1

	)

124 
	#BOOST_PP_BOOL_102
 1

	)

125 
	#BOOST_PP_BOOL_103
 1

	)

126 
	#BOOST_PP_BOOL_104
 1

	)

127 
	#BOOST_PP_BOOL_105
 1

	)

128 
	#BOOST_PP_BOOL_106
 1

	)

129 
	#BOOST_PP_BOOL_107
 1

	)

130 
	#BOOST_PP_BOOL_108
 1

	)

131 
	#BOOST_PP_BOOL_109
 1

	)

132 
	#BOOST_PP_BOOL_110
 1

	)

133 
	#BOOST_PP_BOOL_111
 1

	)

134 
	#BOOST_PP_BOOL_112
 1

	)

135 
	#BOOST_PP_BOOL_113
 1

	)

136 
	#BOOST_PP_BOOL_114
 1

	)

137 
	#BOOST_PP_BOOL_115
 1

	)

138 
	#BOOST_PP_BOOL_116
 1

	)

139 
	#BOOST_PP_BOOL_117
 1

	)

140 
	#BOOST_PP_BOOL_118
 1

	)

141 
	#BOOST_PP_BOOL_119
 1

	)

142 
	#BOOST_PP_BOOL_120
 1

	)

143 
	#BOOST_PP_BOOL_121
 1

	)

144 
	#BOOST_PP_BOOL_122
 1

	)

145 
	#BOOST_PP_BOOL_123
 1

	)

146 
	#BOOST_PP_BOOL_124
 1

	)

147 
	#BOOST_PP_BOOL_125
 1

	)

148 
	#BOOST_PP_BOOL_126
 1

	)

149 
	#BOOST_PP_BOOL_127
 1

	)

150 
	#BOOST_PP_BOOL_128
 1

	)

151 
	#BOOST_PP_BOOL_129
 1

	)

152 
	#BOOST_PP_BOOL_130
 1

	)

153 
	#BOOST_PP_BOOL_131
 1

	)

154 
	#BOOST_PP_BOOL_132
 1

	)

155 
	#BOOST_PP_BOOL_133
 1

	)

156 
	#BOOST_PP_BOOL_134
 1

	)

157 
	#BOOST_PP_BOOL_135
 1

	)

158 
	#BOOST_PP_BOOL_136
 1

	)

159 
	#BOOST_PP_BOOL_137
 1

	)

160 
	#BOOST_PP_BOOL_138
 1

	)

161 
	#BOOST_PP_BOOL_139
 1

	)

162 
	#BOOST_PP_BOOL_140
 1

	)

163 
	#BOOST_PP_BOOL_141
 1

	)

164 
	#BOOST_PP_BOOL_142
 1

	)

165 
	#BOOST_PP_BOOL_143
 1

	)

166 
	#BOOST_PP_BOOL_144
 1

	)

167 
	#BOOST_PP_BOOL_145
 1

	)

168 
	#BOOST_PP_BOOL_146
 1

	)

169 
	#BOOST_PP_BOOL_147
 1

	)

170 
	#BOOST_PP_BOOL_148
 1

	)

171 
	#BOOST_PP_BOOL_149
 1

	)

172 
	#BOOST_PP_BOOL_150
 1

	)

173 
	#BOOST_PP_BOOL_151
 1

	)

174 
	#BOOST_PP_BOOL_152
 1

	)

175 
	#BOOST_PP_BOOL_153
 1

	)

176 
	#BOOST_PP_BOOL_154
 1

	)

177 
	#BOOST_PP_BOOL_155
 1

	)

178 
	#BOOST_PP_BOOL_156
 1

	)

179 
	#BOOST_PP_BOOL_157
 1

	)

180 
	#BOOST_PP_BOOL_158
 1

	)

181 
	#BOOST_PP_BOOL_159
 1

	)

182 
	#BOOST_PP_BOOL_160
 1

	)

183 
	#BOOST_PP_BOOL_161
 1

	)

184 
	#BOOST_PP_BOOL_162
 1

	)

185 
	#BOOST_PP_BOOL_163
 1

	)

186 
	#BOOST_PP_BOOL_164
 1

	)

187 
	#BOOST_PP_BOOL_165
 1

	)

188 
	#BOOST_PP_BOOL_166
 1

	)

189 
	#BOOST_PP_BOOL_167
 1

	)

190 
	#BOOST_PP_BOOL_168
 1

	)

191 
	#BOOST_PP_BOOL_169
 1

	)

192 
	#BOOST_PP_BOOL_170
 1

	)

193 
	#BOOST_PP_BOOL_171
 1

	)

194 
	#BOOST_PP_BOOL_172
 1

	)

195 
	#BOOST_PP_BOOL_173
 1

	)

196 
	#BOOST_PP_BOOL_174
 1

	)

197 
	#BOOST_PP_BOOL_175
 1

	)

198 
	#BOOST_PP_BOOL_176
 1

	)

199 
	#BOOST_PP_BOOL_177
 1

	)

200 
	#BOOST_PP_BOOL_178
 1

	)

201 
	#BOOST_PP_BOOL_179
 1

	)

202 
	#BOOST_PP_BOOL_180
 1

	)

203 
	#BOOST_PP_BOOL_181
 1

	)

204 
	#BOOST_PP_BOOL_182
 1

	)

205 
	#BOOST_PP_BOOL_183
 1

	)

206 
	#BOOST_PP_BOOL_184
 1

	)

207 
	#BOOST_PP_BOOL_185
 1

	)

208 
	#BOOST_PP_BOOL_186
 1

	)

209 
	#BOOST_PP_BOOL_187
 1

	)

210 
	#BOOST_PP_BOOL_188
 1

	)

211 
	#BOOST_PP_BOOL_189
 1

	)

212 
	#BOOST_PP_BOOL_190
 1

	)

213 
	#BOOST_PP_BOOL_191
 1

	)

214 
	#BOOST_PP_BOOL_192
 1

	)

215 
	#BOOST_PP_BOOL_193
 1

	)

216 
	#BOOST_PP_BOOL_194
 1

	)

217 
	#BOOST_PP_BOOL_195
 1

	)

218 
	#BOOST_PP_BOOL_196
 1

	)

219 
	#BOOST_PP_BOOL_197
 1

	)

220 
	#BOOST_PP_BOOL_198
 1

	)

221 
	#BOOST_PP_BOOL_199
 1

	)

222 
	#BOOST_PP_BOOL_200
 1

	)

223 
	#BOOST_PP_BOOL_201
 1

	)

224 
	#BOOST_PP_BOOL_202
 1

	)

225 
	#BOOST_PP_BOOL_203
 1

	)

226 
	#BOOST_PP_BOOL_204
 1

	)

227 
	#BOOST_PP_BOOL_205
 1

	)

228 
	#BOOST_PP_BOOL_206
 1

	)

229 
	#BOOST_PP_BOOL_207
 1

	)

230 
	#BOOST_PP_BOOL_208
 1

	)

231 
	#BOOST_PP_BOOL_209
 1

	)

232 
	#BOOST_PP_BOOL_210
 1

	)

233 
	#BOOST_PP_BOOL_211
 1

	)

234 
	#BOOST_PP_BOOL_212
 1

	)

235 
	#BOOST_PP_BOOL_213
 1

	)

236 
	#BOOST_PP_BOOL_214
 1

	)

237 
	#BOOST_PP_BOOL_215
 1

	)

238 
	#BOOST_PP_BOOL_216
 1

	)

239 
	#BOOST_PP_BOOL_217
 1

	)

240 
	#BOOST_PP_BOOL_218
 1

	)

241 
	#BOOST_PP_BOOL_219
 1

	)

242 
	#BOOST_PP_BOOL_220
 1

	)

243 
	#BOOST_PP_BOOL_221
 1

	)

244 
	#BOOST_PP_BOOL_222
 1

	)

245 
	#BOOST_PP_BOOL_223
 1

	)

246 
	#BOOST_PP_BOOL_224
 1

	)

247 
	#BOOST_PP_BOOL_225
 1

	)

248 
	#BOOST_PP_BOOL_226
 1

	)

249 
	#BOOST_PP_BOOL_227
 1

	)

250 
	#BOOST_PP_BOOL_228
 1

	)

251 
	#BOOST_PP_BOOL_229
 1

	)

252 
	#BOOST_PP_BOOL_230
 1

	)

253 
	#BOOST_PP_BOOL_231
 1

	)

254 
	#BOOST_PP_BOOL_232
 1

	)

255 
	#BOOST_PP_BOOL_233
 1

	)

256 
	#BOOST_PP_BOOL_234
 1

	)

257 
	#BOOST_PP_BOOL_235
 1

	)

258 
	#BOOST_PP_BOOL_236
 1

	)

259 
	#BOOST_PP_BOOL_237
 1

	)

260 
	#BOOST_PP_BOOL_238
 1

	)

261 
	#BOOST_PP_BOOL_239
 1

	)

262 
	#BOOST_PP_BOOL_240
 1

	)

263 
	#BOOST_PP_BOOL_241
 1

	)

264 
	#BOOST_PP_BOOL_242
 1

	)

265 
	#BOOST_PP_BOOL_243
 1

	)

266 
	#BOOST_PP_BOOL_244
 1

	)

267 
	#BOOST_PP_BOOL_245
 1

	)

268 
	#BOOST_PP_BOOL_246
 1

	)

269 
	#BOOST_PP_BOOL_247
 1

	)

270 
	#BOOST_PP_BOOL_248
 1

	)

271 
	#BOOST_PP_BOOL_249
 1

	)

272 
	#BOOST_PP_BOOL_250
 1

	)

273 
	#BOOST_PP_BOOL_251
 1

	)

274 
	#BOOST_PP_BOOL_252
 1

	)

275 
	#BOOST_PP_BOOL_253
 1

	)

276 
	#BOOST_PP_BOOL_254
 1

	)

277 
	#BOOST_PP_BOOL_255
 1

	)

278 
	#BOOST_PP_BOOL_256
 1

	)

	@/usr/include/boost/preprocessor/punctuation/comma.hpp

1 #/* 
C›yright
 (
C
) 2001

2 #* 
Hou£m¨que
 
Oy


3 #* 
hâp
:

5 #* 
Di°ribuãd
 
undî
 
the
 
Boo°
 
So·w¨e
 
Li˚n£
, 
Vîsi⁄
 1.0. (
Sì


6 #* 
accom∑nyög
 
fûe
 
LICENSE_1_0
.
txt
 
‹
 
c›y
 
©


7 #* 
hâp
:

9 #
#/* 
Revi£d
 
by
 
Paul
 
Mís⁄ides
 (2002) */

10 #
#/* 
Sì
 
hâp
:

11 #
#i‚de‡
BOOST_PREPROCESSOR_PUNCTUATION_COMMA_HPP


12 
	#BOOST_PREPROCESSOR_PUNCTUATION_COMMA_HPP


	)

13 #
#/* 
BOOST_PP_COMMA
 */

14 
#deföê
	#BOOST_PP_COMMA
(Ë,

	)

	@
1
.
1
/usr/include
348
12971
/usr/include/dbser/Cbig_cache.h
/usr/include/dbser/Ccmdmap_private_checklen.h
/usr/include/dbser/Ccmdmaplist.h
/usr/include/dbser/Cfunc_route_base.h
/usr/include/dbser/Cfunc_route_cmd.h
/usr/include/dbser/Cfunc_route_cmd_v2.h
/usr/include/dbser/Cfunc_route_db_v2.h
/usr/include/dbser/Citem_change_log.h
/usr/include/dbser/Croute_func_pb.h
/usr/include/dbser/Croute_func_pb_db.h
/usr/include/dbser/Csync_user_data.h
/usr/include/dbser/Ctable.h
/usr/include/dbser/CtableDate.h
/usr/include/dbser/CtableDate_100.h
/usr/include/dbser/CtableMonth.h
/usr/include/dbser/CtableRoute.h
/usr/include/dbser/CtableRoute10.h
/usr/include/dbser/CtableRoute100.h
/usr/include/dbser/CtableRoute100x1.h
/usr/include/dbser/CtableRoute100x10.h
/usr/include/dbser/CtableRoute10x10.h
/usr/include/dbser/CtableRoute1x1.h
/usr/include/dbser/CtableString.h
/usr/include/dbser/CtableWithKey.h
/usr/include/dbser/benchapi.h
/usr/include/dbser/db_base.pb.h
/usr/include/dbser/db_error_base.h
/usr/include/dbser/db_macro.h
/usr/include/dbser/mysql_iface.h
/usr/include/dbser/proto_base.pb.h
/usr/include/dbser/proto_header.h
/usr/include/dbser/proxy_dll_interface.h
/usr/include/dbser/proxy_route.h
/usr/include/libtaomee++/bitmanip/bitmanip.hpp
/usr/include/libtaomee++/conf_parser/ini_parser.hpp
/usr/include/libtaomee++/conf_parser/item_manager.hpp
/usr/include/libtaomee++/conf_parser/xmlparser.hpp
/usr/include/libtaomee++/ev/eventpoll.hpp
/usr/include/libtaomee++/event/event_mgr.hpp
/usr/include/libtaomee++/event/eventable_obj.hpp
/usr/include/libtaomee++/factory/factory.hpp
/usr/include/libtaomee++/inet/byteswap.hpp
/usr/include/libtaomee++/inet/pdumanip.hpp
/usr/include/libtaomee++/inet/udp_pool/udp_pool.hpp
/usr/include/libtaomee++/memory/mempool.hpp
/usr/include/libtaomee++/pathfinder/astar/astar.hpp
/usr/include/libtaomee++/pathfinder/astar/def_grid_data.hpp
/usr/include/libtaomee++/proto/Ccmd_map.h
/usr/include/libtaomee++/proto/Cnew_timer_base.hpp
/usr/include/libtaomee++/proto/Creload_cmsg.h
/usr/include/libtaomee++/proto/proto_base.h
/usr/include/libtaomee++/proto/proto_client.h
/usr/include/libtaomee++/proto/proto_util.h
/usr/include/libtaomee++/proto/proto_xml.h
/usr/include/libtaomee++/random/random.hpp
/usr/include/libtaomee++/thread/barrier.hpp
/usr/include/libtaomee++/thread/mutex.hpp
/usr/include/libtaomee++/thread/rwlock.hpp
/usr/include/libtaomee++/thread/spinlock.hpp
/usr/include/libtaomee++/thread/thread.hpp
/usr/include/libtaomee++/thread/threadcondition.hpp
/usr/include/libtaomee++/thread/threadlock.hpp
/usr/include/libtaomee++/thread/threadpool.hpp
/usr/include/libtaomee++/time/time.hpp
/usr/include/libtaomee++/time/timeval.hpp
/usr/include/libtaomee++/utils/config.hpp
/usr/include/libtaomee++/utils/md5.h
/usr/include/libtaomee++/utils/noncopyable.hpp
/usr/include/libtaomee++/utils/obj_registry.hpp
/usr/include/libtaomee++/utils/strings.hpp
/usr/include/libtaomee++/utils/tcpip.h
/usr/include/libtaomee++/utils/utilities.hpp
/usr/include/libtaomee++/verification_image/verification_image.hpp
/usr/include/libtaomee/atomic.h
/usr/include/libtaomee/attr_api/attr_api.h
/usr/include/libtaomee/bitmanip/bitmanip.h
/usr/include/libtaomee/conf_parser/config.h
/usr/include/libtaomee/crypt/qdes.h
/usr/include/libtaomee/dataformatter/bin_str.h
/usr/include/libtaomee/hash_algo.h
/usr/include/libtaomee/inet/inet_utils.h
/usr/include/libtaomee/inet/ipaddr_cat.h
/usr/include/libtaomee/inet/mcast.h
/usr/include/libtaomee/inet/tcp.h
/usr/include/libtaomee/interprocess/filelock.h
/usr/include/libtaomee/interprocess/lock.h
/usr/include/libtaomee/interprocess/shmq.h
/usr/include/libtaomee/list.h
/usr/include/libtaomee/log.h
/usr/include/libtaomee/log_old.h
/usr/include/libtaomee/lua/lauxlib.h
/usr/include/libtaomee/lua/lua.h
/usr/include/libtaomee/lua/luaconf.h
/usr/include/libtaomee/lua/lualib.h
/usr/include/libtaomee/project/constants.h
/usr/include/libtaomee/project/stat_agent/msglog.h
/usr/include/libtaomee/project/types.h
/usr/include/libtaomee/project/utilities.h
/usr/include/libtaomee/random/random.h
/usr/include/libtaomee/time/time.h
/usr/include/libtaomee/timer.h
/usr/include/libtaomee/tlog/fileutils.h
/usr/include/libtaomee/tlog/netutils.h
/usr/include/libtaomee/tlog/tlog.h
/usr/include/libtaomee/tlog/tlog_decl.h
/usr/include/libtaomee/tlog/tlog_macros.h
/usr/include/libtaomee/tm_dirty/acsm.h
/usr/include/libtaomee/tm_dirty/tm_dirty.h
/usr/include/libtaomee/tm_dirty/utf8_punc.h
/usr/include/libtaomee/tm_shm/tm_shm.h
/usr/include/libtaomee/utils.h
/usr/local/include/async_serv/bindconf.h
/usr/local/include/async_serv/daemon.h
/usr/local/include/async_serv/dll.h
/usr/local/include/async_serv/mcast.h
/usr/local/include/async_serv/net.h
/usr/local/include/async_serv/net_if.h
/usr/local/include/async_serv/service.h
/usr/local/include/async_serv/shmq.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/boost/any.hpp
/usr/include/byteswap.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/error.h
/usr/include/fcntl.h
/usr/include/google/protobuf/descriptor.h
/usr/include/google/protobuf/extension_set.h
/usr/include/google/protobuf/generated_message_reflection.h
/usr/include/google/protobuf/generated_message_util.h
/usr/include/google/protobuf/repeated_field.h
/usr/include/google/protobuf/stubs/common.h
/usr/include/iconv.h
/usr/include/inttypes.h
/usr/include/libxml2/libxml/parser.h
/usr/include/limits.h
/usr/include/math.h
/usr/include/mysql/mysql.h
/usr/include/net/if.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/pthread.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/cdefs.h
/usr/include/sys/epoll.h
/usr/include/sys/ioctl.h
/usr/include/sys/ipc.h
/usr/include/sys/sem.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/error.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/in.h
/usr/include/bits/inf.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sem.h
/usr/include/bits/setjmp.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/boost/config.hpp
/usr/include/boost/static_assert.hpp
/usr/include/boost/throw_exception.hpp
/usr/include/boost/type_traits/is_reference.hpp
/usr/include/boost/type_traits/remove_reference.hpp
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/google/protobuf/generated_enum_reflection.h
/usr/include/google/protobuf/message.h
/usr/include/google/protobuf/message_lite.h
/usr/include/google/protobuf/stubs/type_traits.h
/usr/include/google/protobuf/unknown_field_set.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/sys/uio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/local_lim.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/boost/config/select_compiler_config.hpp
/usr/include/boost/config/select_platform_config.hpp
/usr/include/boost/config/select_stdlib_config.hpp
/usr/include/boost/config/suffix.hpp
/usr/include/boost/detail/workaround.hpp
/usr/include/boost/type_traits/broken_compiler_spec.hpp
/usr/include/boost/type_traits/config.hpp
/usr/include/boost/type_traits/detail/bool_trait_def.hpp
/usr/include/boost/type_traits/detail/bool_trait_undef.hpp
/usr/include/boost/type_traits/detail/type_trait_def.hpp
/usr/include/boost/type_traits/detail/type_trait_undef.hpp
/usr/include/boost/type_traits/detail/wrap.hpp
/usr/include/boost/type_traits/detail/yes_no_type.hpp
/usr/include/boost/type_traits/msvc/remove_reference.hpp
/usr/include/gnu/stubs.h
/usr/include/google/protobuf/stubs/template_util.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/boost/config/no_tr1/utility.hpp
/usr/include/boost/config/posix_features.hpp
/usr/include/boost/mpl/aux_/lambda_support.hpp
/usr/include/boost/mpl/bool.hpp
/usr/include/boost/non_type.hpp
/usr/include/boost/type.hpp
/usr/include/boost/type_traits/detail/template_arity_spec.hpp
/usr/include/boost/type_traits/integral_constant.hpp
/usr/include/boost/type_traits/msvc/typeof.hpp
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/limits.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar2.h
/usr/include/boost/mpl/aux_/config/lambda.hpp
/usr/include/boost/mpl/aux_/config/msvc.hpp
/usr/include/boost/mpl/aux_/config/overload_resolution.hpp
/usr/include/boost/mpl/aux_/config/static_constant.hpp
/usr/include/boost/mpl/aux_/config/workaround.hpp
/usr/include/boost/mpl/aux_/na_fwd.hpp
/usr/include/boost/mpl/aux_/preprocessor/enum.hpp
/usr/include/boost/mpl/aux_/preprocessor/params.hpp
/usr/include/boost/mpl/aux_/template_arity_fwd.hpp
/usr/include/boost/mpl/aux_/yes_no.hpp
/usr/include/boost/mpl/bool_fwd.hpp
/usr/include/boost/mpl/int.hpp
/usr/include/boost/mpl/int_fwd.hpp
/usr/include/boost/mpl/integral_c.hpp
/usr/include/boost/mpl/integral_c_tag.hpp
/usr/include/boost/preprocessor/cat.hpp
/usr/include/boost/preprocessor/inc.hpp
/usr/include/boost/preprocessor/list/for_each_i.hpp
/usr/include/boost/preprocessor/tuple/to_list.hpp
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/boost/mpl/aux_/adl_barrier.hpp
/usr/include/boost/mpl/aux_/config/arrays.hpp
/usr/include/boost/mpl/aux_/config/ctps.hpp
/usr/include/boost/mpl/aux_/config/preprocessor.hpp
/usr/include/boost/mpl/aux_/config/ttp.hpp
/usr/include/boost/mpl/aux_/integral_wrapper.hpp
/usr/include/boost/mpl/aux_/nttp_decl.hpp
/usr/include/boost/mpl/integral_c_fwd.hpp
/usr/include/boost/preprocessor/arithmetic/inc.hpp
/usr/include/boost/preprocessor/comma_if.hpp
/usr/include/boost/preprocessor/config/config.hpp
/usr/include/boost/preprocessor/list/adt.hpp
/usr/include/boost/preprocessor/repeat.hpp
/usr/include/boost/preprocessor/repetition/for.hpp
/usr/include/boost/preprocessor/tuple/elem.hpp
/usr/include/boost/preprocessor/tuple/rem.hpp
/usr/include/boost/mpl/aux_/config/adl.hpp
/usr/include/boost/mpl/aux_/config/gcc.hpp
/usr/include/boost/mpl/aux_/config/nttp.hpp
/usr/include/boost/mpl/aux_/static_cast.hpp
/usr/include/boost/preprocessor/debug/error.hpp
/usr/include/boost/preprocessor/detail/auto_rec.hpp
/usr/include/boost/preprocessor/detail/is_binary.hpp
/usr/include/boost/preprocessor/logical/compl.hpp
/usr/include/boost/preprocessor/punctuation/comma_if.hpp
/usr/include/boost/preprocessor/repetition/detail/dmc/for.hpp
/usr/include/boost/preprocessor/repetition/detail/edg/for.hpp
/usr/include/boost/preprocessor/repetition/detail/for.hpp
/usr/include/boost/preprocessor/repetition/detail/msvc/for.hpp
/usr/include/boost/preprocessor/repetition/repeat.hpp
/usr/include/boost/preprocessor/tuple/eat.hpp
/usr/include/boost/mpl/aux_/config/intel.hpp
/usr/include/boost/preprocessor/control/expr_iif.hpp
/usr/include/boost/preprocessor/control/if.hpp
/usr/include/boost/preprocessor/control/iif.hpp
/usr/include/boost/preprocessor/detail/check.hpp
/usr/include/boost/preprocessor/detail/dmc/auto_rec.hpp
/usr/include/boost/preprocessor/facilities/empty.hpp
/usr/include/boost/preprocessor/logical/bool.hpp
/usr/include/boost/preprocessor/punctuation/comma.hpp
